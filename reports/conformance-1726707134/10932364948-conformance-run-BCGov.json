{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a947e4d3-4563-41e2-80c5-73bd4956ccae",
        "name": "Clear Cache",
        "item": [
          {
            "id": "32eb2d4c-5ed4-4ecf-96bc-f63cb694d34e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6283b110-56c2-47d1-938c-5b953d4017b7",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "80b299ef-1092-4c71-99d1-b6c760af3556"
                }
              }
            ]
          },
          {
            "id": "ad3aecd7-751e-41e9-b377-84c60b86e5a3",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1add3aa7-432b-45f5-82e9-fb229559e442",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "ffcbcdf9-1927-4e0e-ab9f-be72de7719f4"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "36238dc2-69cc-4a67-89f9-46db27328ade",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "ed1d9838-9e13-437a-9e9a-b9c7c8966430",
            "name": "Positive Testing",
            "item": [
              {
                "id": "efc6fcb0-6923-4d08-9876-28e8b7ef4e94",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "84451466-2672-40cf-8dc4-ba335622dcd8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a1158f2b-3950-48a8-adf6-64df2f979ce4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "e6e6ea40-7547-401c-8548-2a3263b109e3",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9d1b497d-8c5f-45f8-b643-23c64cdde76b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8c21b24d-2bc5-481a-8717-3a1ae495f345",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9e88f072-e5a8-4f36-87d5-e83c07cb3cd2"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d9db621-6414-41a6-8dbf-e3c4f4d26a8d",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1ef9b08f-63fc-4518-8bc5-ff03cefe9dff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4b959a71-cea6-46ba-b838-18c61f06c162",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3aef1efd-146d-4033-8c5f-698d65566e42"
            }
          }
        ]
      },
      {
        "id": "be557db5-bdd6-4a6c-b74f-c87045c9ac3b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1e79ca6b-33d4-4d37-b6f1-438240060b15",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5b69a0b5-48bd-4e74-8f25-61a222290bc6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "9b36b803-7554-4d81-a3e2-33fcc09c9930",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56421df8-e612-4379-aab8-cebb267a295d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a057b998-51d0-490f-a4c9-f75aad0e9e65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f23a841-07d6-4c82-912a-fd6b6c8331a2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d42d4a-c47a-403c-9291-1b1116c4496e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "11654354-26b0-4438-a7ac-33fbb837bdd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46434ce8-72fa-4c33-88cb-4b86e8fe38e2",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a355f34d-ed23-4c74-9354-a2d7e77f51b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31ff6a4e-312b-4c55-baac-74ad3127b26c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b87267eb-bd2f-41e6-9f59-867102f5c977",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a1107b09-fc00-433d-b2ec-dbe65896e921",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd28b924-03bf-44d3-aa8e-dbd7f9973f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0218013b-b492-4f56-a86b-eaf1dad6a7b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8617d2b0-aafc-496a-a9ce-de2e236c6952",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20c1f30-e6e7-497e-87a8-3fc47ab5995c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "1376fea0-ebcc-40d6-bd06-e94dfae0217b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "04ba29e5-3e3c-4651-940a-879c5fe0956b",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d6bf89c1-ee83-4b88-8d56-b91081164d37",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "ecd67d72-b1bb-4c8e-970f-2c7f680da146"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "73fc5386-96f3-4c63-9dc4-94a300ecf41d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "ce98e3ae-43af-48e5-a171-afa8de876f7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3db28853-2c84-4447-b19d-4010d5f23063",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b716d488-c05d-472c-9bfc-a8ab34f0911c"
            }
          }
        ]
      },
      {
        "id": "a9426ace-3fe6-4ced-b95f-f4dc0d6ff7ed",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e53b7e53-c8cc-416a-aa6e-72384180101b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "78153679-4c79-4dc2-9c4b-1ea9284d8fc6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5c6129b6-1ebb-4ec8-99b4-d5409aa450dd",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be74b56a-af1c-43fb-adbd-a951f4075b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ecbd6c2-f3fe-4e99-a654-1968e2417e7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5779b96e-00a3-4e69-b4bc-b89adc46fef3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6378ec58-234d-4260-81ce-d9f601a3c29d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab05341-cb99-48a8-baab-4df22e6ff905",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e75922ab-5ff7-439f-a0d1-5c151c46b5fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86d0a25a-e49c-4596-8b25-9e098ffdff08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9808e86e-8d29-46aa-94d5-93589dbb672b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5ccf5d7-9793-4f04-8cd5-ff410879ae99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3ad63c5-87ae-4d66-b6d9-91efb43cd55c",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10e653fc-7db6-4c66-bb71-43d950ac5952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03562f08-f259-4ffa-bdb6-e6d3a182f0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38f624cf-cd99-4641-8795-0913a8d7c528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "54b24233-f797-407c-a585-9e0dc27dbbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6154bf83-9756-44fe-94b5-7ea9a7c68890",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a9c49ce-ca9d-4667-9f6b-07342b09bdd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e404bda1-d43f-4bf1-aaed-f1bbd5ea4ce7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7793f9d-d64e-46d9-ac15-de6481c0380e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "752f2b17-c6ea-4fa7-80cb-9db62a3720fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cc45e09-c09f-4cf8-b918-abd5033d1041",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac936ec-8d6f-4279-ac5c-ad5e9e8be5a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dbbd263-17d0-4574-88ea-a6bb465f0245"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0243b0e2-88f4-410a-a71b-3525533c9bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eb662408-cea1-4cc6-80af-627593a497fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd0778eb-679f-4697-afea-998bb0774205",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd10770a-c70c-4940-8fb7-5a52e6a0d649",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4b4168-8b21-466f-b0aa-8ae0e6e3f8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7544d047-c7e9-4742-8868-f4ffcde5d707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4a80431d-9f53-479b-b529-fa69ffbd17ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e095059a-0f11-491d-b156-bee4a18fb43f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf4569c-0116-4cb5-aa7d-e53f1fb4defb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46baf114-5f7d-420a-8ae0-e3a142dfa44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a02e0da-fa3a-41a6-a1d3-3d9619fee8ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "030fbf64-187c-4a2d-b030-39e2c67e1a8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ca1db8-71f0-4462-a2e6-8540e7aeb694",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a88cfa1-c3f4-4c5a-acb6-38ac14692b8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f161ec91-7984-4d49-8be3-a2ca911e12d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362cdffa-c41e-4367-9d78-01bd9ab66a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b62a04c6-358f-497e-9684-5d12439a9675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3476f1b3-5597-44d7-9894-a13986b25e86",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8763d26-c628-4fb0-8eff-75346ee867a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5272158-f048-4800-b117-d2bd05e35016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22fb86c5-5118-4ce2-9e09-db654071ab91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "46ef6f33-df2f-4a0b-bc4f-ccada30698c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cc3835-757e-4fa7-a257-9893d826e2a6",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3afc5c2-386b-4a6f-aeb1-23ff57a5016d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d351596e-80e9-4d06-afc6-eb48ce913fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c32313a3-4ad8-488a-b333-2393cc06aeb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35cf4e4d-b111-4dc6-bd44-6e615c8fc7a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab655b93-ce0c-4865-b8df-47cdf542b5e5",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c8ce9e5-3105-4c89-93aa-c3d8d1f8958d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9942681a-f9d2-493c-8880-15f687cf1ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1aeb1ad-3be7-4642-adad-15f9ce2ed570",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaefd1e2-3b11-47ea-ae82-b300eeba5298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cafe6233-98ab-4e7a-8526-20638ad5d651",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d53abac-eb1f-4a64-8c06-0ef86bd7b511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be02c692-25ef-470b-b365-12fa1839f325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f2f510-0518-404a-8309-2be38a842258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c44d47e-0ee8-40cb-8c23-5f0ce8582648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d462e06-56fa-4bf0-8fe4-de9e8e9075a0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b032d49c-d6c9-4e2d-b615-3945dce50a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36be0fe8-b141-466f-aa18-ef8568e52d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551cd08a-6c09-4faa-893b-3bcd48a83716",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fa187b7a-de91-455d-97a9-3c74718dca33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e8c189-cf07-4ca7-88a5-c8c979da10cd",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4edb2d49-672b-4701-9ece-23a895c8dd86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d2cfcb5-ae24-4dc1-b952-be298fbe6c72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "538701e8-326f-43cf-b964-11e42c0b0d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e8a26a1-71a8-4ba7-b691-5900752441b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2efca4e-03b5-4ce3-8af3-92b1b1e73e5c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e35ef00f-54bc-422e-8b89-c249ea10db2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "385e5dd0-2fcc-421c-a216-5f5b6025c3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37ffe775-baea-4017-8432-5555ba30c7a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19a5ff83-6fca-458d-835c-867c3d8b2aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "269a32fa-ed05-4940-9525-5bcd4dbe43e9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b7c97b1-b948-4c23-97b6-75c58a8a09d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "971f7c59-19d7-4b5e-a580-80f007739fff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7cb902f-d216-4c82-928f-a6df3e825dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ea36ac9-905a-44ca-805a-7b35506786a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd63528a-d8b0-420f-b027-65353caecad8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d216fd8e-d9fd-4db0-abdd-83dcd1a32994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b951ea6-6ccd-4a36-8b0e-99bf5ef2d5b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a4a16f-c9a0-4af1-99b7-cd437f0e4ffe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fbd6d06a-e674-407e-af4c-6c4e083192c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e7dd80-dd2d-4f1d-9119-a5323b66588a",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4de7886-ff43-49c8-83cf-e0370ed725c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f8a6a2a-fbdb-4c66-b885-173de1d2f8eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e221dde-5577-4769-ad0f-beaa23ec0b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb66a8db-c1fb-4e7f-bd46-c9db289c1cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99ba29a7-c40b-41cd-a296-810847e09577",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0484d2b7-f15d-4cd1-8c34-e158b5a413ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "206ae8c9-2d30-4442-9026-bef4470e6124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dad3cb6-0c99-4451-a0aa-44693007d6f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e553c069-eeda-4f65-86cd-81eacfd3ab42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ca5c165-11a3-405c-8a6b-71c2564ef1a4",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b2e2e6-e125-47ee-b11b-6eb42dfe7a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81105e71-29e3-40ae-8de2-5489785d7e1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65eec2a6-edfe-4bf0-a7e3-eb985aaece4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2355410-82a7-41e6-af1d-2456148dfb6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2a3fe8f-d885-422d-ab6a-0d3da2a53c2a",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47b725de-2f56-43ed-b77b-97cdda892d3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d910872-b537-4ba1-a9c0-d91d276fd977"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45c5d86b-fc8b-4886-b7bd-8844689d465a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9a62e7f-d149-44eb-8190-f87df6e06601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765ac79c-c9c5-47f9-8756-0a1a9698cd90",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ebff755-7571-4f99-9ae7-26b41f21bc8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8166772c-c19a-430f-baa0-31987f3657db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2570c2a4-6602-428b-87d6-19c8f04e8350",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a369b6c-d7cc-437b-b4a8-de2ce53f4d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6183afc5-2826-4c4a-8bfc-25127d2c8fcf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "654adc38-6c13-46a9-b565-e22ff3ab5dcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4348b8a0-bd44-4ff0-a7da-b3ec9988108d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4653143c-7909-41cb-a816-7d1e49341e27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1fa12868-2266-448b-b93d-339185050833"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0ba702-d0cd-4b3c-acaf-83ae2f3d565d",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c521fa58-b5e5-40e2-8083-c9e24bb980e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a55e92-2176-40d9-9821-9a4228fdfc3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66dab187-b9a7-4fb2-9f37-040a1fbf4238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "a598ef1e-9ad5-4a60-bb97-4d8429e0c5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62901308-9352-4e3a-9d3f-c91cf0cb9b37",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0416ed04-9d4a-41a1-920b-e6046cac4a57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c7f464-bdb2-41d8-b687-2d5a3e62f566"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "010198ac-20bc-433f-a6a1-4e4cbebe72ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "95d669ce-f214-4af3-b008-1a77cd69c273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1942cb-7e72-457d-9c88-305b9ce61a43",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7971b7bc-f93c-4db9-bb25-1c033a827eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94b1b611-bdad-406c-b2b1-f1062e56ba99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ed40b1-169c-4f3f-8aa7-724061951dc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ca5d18a-c610-4ea1-afbb-a447ea21fdb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b435e11b-8a32-4df7-9ce1-bc5138dd6558",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a83e8f5-c2c3-4814-ac91-fde3e4d2938f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c6d0fe-2e92-4f89-85a1-1b3dde92ff90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24348f25-8491-4774-a4b5-2cde5d885f24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7e79be-3d82-4840-9732-fc7eeb4cf782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a55a4228-51f0-4c49-a94d-fd6dc69abacc",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51852d4-e816-4510-a1eb-cd6382403d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81903f32-4297-4293-8ad2-46f10e0c5941"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8af2b337-715c-4e8d-8252-97b93767aefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87b05d4f-46e1-442b-8680-de862c53ca38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97c1f842-b231-4b2a-b95f-1e5a49c6f253",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4da7b68-a65c-41b3-84ee-8d7026b39085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574ce221-867f-4504-8047-8adfb4e12b27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93c9c7d5-e839-4ea6-a94e-a108cf4730c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7bb1a5c3-3e64-4810-8a6d-0ace2e52670f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dabdd9d-4298-4743-978a-777f77d380c7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be58590-9583-4553-b8c3-473f571b6c0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7586a53c-60cb-44e0-b1db-18164eddd61d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76c011aa-5a70-4b4b-8c3d-3f7a38b7cb67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3d3b599-1754-426c-b10f-862043e2c8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce302e87-b669-4ea4-b654-7383f8ee2978",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e244aa5-fdae-4ecc-924e-53b5830c9f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d50bed6-d4ad-4f50-a5b7-2b2d1813891b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "771d9e86-19ba-48e8-8e99-cca382536135",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bfb52392-c214-40a2-8cdd-5d129df13f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc4029c-5ae3-4c2a-a146-af8d05b28d9a",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0696f029-0b64-42ea-a192-86e4ae3e5fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5a65e4e-ee40-4ece-9bd1-dd4fb90afc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43fb7f16-178c-4c09-ba3b-6e66cecf6a3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "327803c2-faae-475e-9336-b9af8449462c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32dccdde-834c-4e01-885f-3061682943b2",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e2bd82c-1a42-42de-b910-ce23387e4d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01296f-a142-4d37-9430-1e000fb472b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eba4b35-7333-4f7f-aa2b-b142b542793c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ceef0e20-e22c-4464-9574-943112253e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28250e04-ccd0-489b-bd18-f33a0be9e77b",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad7b0274-83e5-4314-9c61-91992cad5d4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ace0cdd0-6c03-4e40-8c1b-07347d4b77ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ce12f04-a96b-458c-85c0-83eadcf1c7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e02274df-785d-4903-91df-9ed979fa846a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c403aeb4-be76-43b6-b428-c2e53e718c71",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee92e35-27a9-4e9f-9f57-1cb9c468c819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b34b5ac8-1781-4fc6-935c-2d02d56b9618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff041a1f-083e-4137-be40-287d4cec63ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "1787249b-1a34-478d-bc3a-4efffb300b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c03ff4f-9ae1-4415-9eb1-c3e96de796bb",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a178872-62db-4f3f-b3da-899d6d7a9340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ace64513-8308-4428-8c92-b557df26f0b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c04ab59-b2c1-4795-9106-c00b67bc59bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "220f9d0f-f236-43e9-9590-63d4c9bd94c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bf5bd7c-abff-4928-96b7-76433fe98060",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8dc6e084-4632-4e74-9563-824ac76d6a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "522a4c23-8acc-4247-a9c6-e9151ae263a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be9c88f-d27f-47b9-9ed5-ccc14db1ed23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "87dc0afa-84e7-45c4-96f9-096d53c604d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6d48320-2593-41d2-91a7-4caf3d1e18e0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc6f547-fa3f-4cf8-99d4-594b348978fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc8adcd9-e5f5-4be4-b999-b9ff3f92f306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39c2cd17-72d5-4d6c-b729-0e52ee2ea9fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "fa51a8dd-50c7-4f74-8883-a030e1687571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa81123-17e3-485b-9757-c66ffe7d0bdf",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636045ea-4c90-43dd-8c61-2aa90e7cb144",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a8e0dd-e382-4a7f-ab2d-b589152f2138"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c02c0330-758f-4952-bd38-43b50c5adfc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f04af81e-e823-4f01-9456-c231a92bd15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d73621b-5cff-4e2b-a53d-826f4a1a3893",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "536a85f3-3b50-4001-be62-363ecf6de943",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f4a06b-1716-4e8e-979c-3dd92fac44bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5505a905-0c3f-42a3-988c-5cb795595ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcba014-d02a-4ae5-8eb4-8e6bed7e508a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a846a0-8298-4ba2-970a-3003eecf0285",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaa6fb49-888b-44de-92dd-d0db83b643c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ad92ef9-eb83-43d1-bb0e-b26e71aa52b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1786293-a339-4676-9f32-7ba0bdad44ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "313d7e05-fb06-4958-a3b5-561d2dc2379d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3a9759-a820-4de8-befb-4a81431742cc",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb01c1f-eb1c-4eca-bc1e-664382c93d41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10483f24-f93e-4358-aa29-a89226308d6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb66cc3b-31a6-4583-9710-8a3a79cb4d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "16e8e345-8236-4368-8819-40ba5c3fa0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5454a1-cd2c-4205-8e77-c3f7964a56f0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40324c56-6a33-41e2-91e1-f3f4e84c2d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fabb32fd-6860-4f4b-a637-cd1447540876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "187bdf36-b349-43ee-9f07-1663a49e1677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "39c3edff-4179-43ea-b81f-2d38c27cc157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98335b4c-fcb5-4312-8347-5fa559825294",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00c5735-eda4-495b-b5e2-75bf7e58c8cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "529a514d-8c88-4b51-94f7-c45cb898bc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abf08bc4-acc3-4149-a6fc-a552a4ee3867",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "95af9829-3638-4767-b54d-2d3927399fa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe3d7495-50f0-4879-8aec-9e91f47626d5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83186c8a-b379-467d-89ad-480f50cb679e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e3cd27e-c6b8-41a6-a473-7e384293ed23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a449b772-42c1-42b1-a768-e1cbfae1b7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4510d5f9-5ef2-4394-963a-75ccdbd230f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f624f315-0010-4e3e-b9cd-bf104870c3f9",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db80ebc2-917c-4fb3-94d3-79bc45874911",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "788cce57-1632-4baf-b758-456f8f8d4d33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eed34b1-323f-457e-848f-5da5e4247983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33b95600-be46-493d-b46e-ee51514d3974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "745a85dd-f4df-4a8d-9970-f8f28059924f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70d6bbc-c42e-4686-b3d2-9e0efa63f62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a21e1bd8-ba97-46e1-a8e3-4d5eb8c2f73f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4c0b86-0fae-41a8-862d-d684ef3181a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "68508d53-631f-4541-8e51-d594bd31259d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb04f59-9c69-437b-80eb-09e9f498d507",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1d1590c-a56a-4b94-a6ea-684eca5a03a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82236fd0-3719-44bd-b695-22726fc1d948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a591d6e5-942b-4c95-abb4-fd464fec5425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "88908084-c436-42c4-810e-ffd740cfcfbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158f0343-f384-42ad-8576-fda61d3bbf4f",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611e6a3d-e3b7-4618-abac-4eff2d9c4550",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4c78934-cdf8-40ce-a9dd-fe689a9a544a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eab2ae1-3bb3-4afb-a4ac-4669425d3860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9616f791-e81d-4767-b7f4-530296f7c72d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f84cbab-5b57-4090-8c75-4fb6eda0e649",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc28c2c9-2942-4328-9dbb-4c8c18772791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85289f8-266a-45c8-9b82-ec0406094898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e076ac9-592d-4d32-905a-a38f6caaa6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b6963e7b-783e-43d7-b0ae-46809a69b772"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b3adb2f-4b7e-4f6d-b45e-943b87999796",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0842e7b0-4345-43cf-9ba1-890bb0e9de7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fb3204e-ddbb-498c-baf3-6877770ccb22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5df4f68a-db14-49dc-b8e2-ec55843a0e14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d34da9e-8bab-47fa-996b-5f531b12f03c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271c00e2-ce49-49d3-985a-fe7b2ffbd618",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50af0339-3f6d-4ccf-a71d-84a6503d9f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a4a42d5-4d33-4cd7-9ac4-8841a86ceb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa84f519-80df-41de-8455-64d31fc6ecdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5cf1a11c-b1b7-4885-8aba-00188b331a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd55242-41ba-48bb-adfb-784070a7c86d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d82b9f-b4d4-453c-8cdc-57e73edb9e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ecd957-89aa-4f5a-8474-01053cc6f2df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3efc4775-a0a2-4388-b095-46bbceb34122",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56a7c1d9-1483-4c95-a5d2-f26b5df3088a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f2c7f4f-9560-4611-9719-0912abc45ff9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a81cb17b-789f-47b7-8d71-ec2fbe94306a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e01dd1cc-1f34-47d0-9282-cc0aceb7d186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94fc2c6a-73c4-4d5f-987f-3fc397981695",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e442a7c4-1f9f-4639-8f1c-6f6d828b44ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d38943f2-ab8f-4e9d-bdf5-e1195433bc65",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49aa1d5-4ff7-4736-a308-b09a4c011a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84fcc23f-72cc-4fe9-8d3b-462fbe72f4d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43db5792-3c18-4567-8096-1cf9820709be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8fa6be69-db12-4486-a303-33be43302733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7f8d07-d5ed-41ee-a638-560d906392a7",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4434c56-986f-4dfa-a5c9-bfa229425502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6309fab5-b4f7-4224-9db5-d096e50bb898"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3995d86-8dcb-493c-a8ba-00c83eb8d569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "e2818501-b9b1-4888-a4cc-93d300434ae3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d484340-f93e-4cf7-9bf5-208b4908608c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd3e63c-3f09-4c5a-aebd-b254d2a7de5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c533061a-1b2f-4bb9-901b-234db4cfcd13"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd44dd3-cf29-458b-89ac-84f3f8295fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc60c72-f887-4ce1-8f88-88f03f8c913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85482113-aa0f-489b-b85e-aec10030bdd3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c433f2a-a133-46c3-9a9d-0a1621d3c13b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b9eb359-1f47-4ce3-8641-5e28880129eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e348047a-99f6-48ec-8346-ff0dcd0111f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd46146a-32b7-4057-96ca-73b3ea79deca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23da8e5-fbdf-4bda-9b62-4d6118207d77",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e41de9ad-4e61-4663-8673-096ae77fccbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a874e3c-cc71-45d5-9b5f-3f096dd9ea92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "470148a6-065a-4af7-96f5-cb9ffb94647c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "11ff6445-2189-4dc4-befe-9877f9a3bd65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "058e1029-fa1e-41ed-8619-7736d41b7556",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27904b48-aed7-45db-a3fe-04afeb13bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8b6e82d-aa09-4265-bc8a-128691086097"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ae9fbee-a9c0-4b57-b5eb-979d30d45982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "84288a0d-241f-4b8a-bcbc-1da7ddab61bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b24d86b-e426-4a40-9ab5-2d33eb9f827f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8c6fbc-0f6e-4fa5-9d4b-7cc7d6a9057d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2891f6f-116f-49f3-b6d5-289f84ee4368"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10299593-f07f-4196-94b6-bfe936b3f5fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "41db8032-4cd7-4c09-92e8-49afe0d0fcfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87635d20-a0ab-436a-bdc1-bcc57d62f05b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a11e39-b295-47a9-90ce-1be7bc52c340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f974ab-abf2-4b96-9792-c5ad2b45a82a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af84ec6d-64b0-41d3-b1b1-c199139ff636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee2fbe72-5dbe-4313-9aee-eeffa11063c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eed33ab8-ee70-431f-9fae-9f2f4be05875",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29c62982-e812-405b-8ca8-bf25e83f6f16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f746edc-a849-460e-9095-679aa41477f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0d90751-a16f-4aca-a890-fcc11d914fcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "dac81654-2afc-4e9c-b517-3bc272ca6e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f750bd-c2d7-4da0-a665-7061ccf62530",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a784263f-2387-45e2-9046-b70afaaf259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4adeb6e-930a-4ec2-beb2-5a395940642f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe8e8987-41fd-4c27-9b42-ed8e050f8921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c79bc006-a168-44a9-a204-91d474b3a7c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7153fa2a-6b02-49cf-9def-6f3e100d3060",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af75300-2a9a-4377-b14f-e7580ac9ef14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e98664a3-678b-44b1-ad67-2a96cd27d2d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d27c1457-2e84-435b-ab92-8f7fe5efb81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "83eb35ef-cb82-4362-9513-a7c4b5df6274"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a011feaa-dd19-4483-be1f-5d6ac5279e7d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "088162a5-25c6-472a-974e-6a0cb1509678",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7261f2e3-c030-4c3b-8caa-527da922257b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a7ada6b-ecb0-4943-bc48-331789b2d790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c70a543-ff80-4204-b225-f67da6e582e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a369b20-dc0b-449a-8e17-cc681af6fd22",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f1623f5-df1d-42c5-8fca-701a8e37b7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0548c71-79a5-45a6-971e-f595305b331e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1225a77-3056-49fe-a0d0-6838e84f1f2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f54e1151-154f-47c9-90ba-f7e5fa63e107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3b8a38-0284-4a59-8da5-d55d6c533d94",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f02087-9a79-4fdc-ade3-c530ec8c06c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310e6c91-7e72-49d6-b6b0-61098d3ab222"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e1689e6-e5e8-4d80-8ff7-3bfce39d62df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3cc88b4-4da2-4d26-baf0-4ae046bd44f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "204e89d4-c2c3-47e2-9a9e-e690d95d8a97",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ced2bf-7851-4329-819b-2c7dd66632d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a7457e0-9836-4532-9cc2-514aa7b8b352"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bb6ce2c-3e02-493d-ac8e-9bfcdb94f3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8813c28a-2a7a-4157-827a-be863e56c23c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "463f7b68-2c93-4c17-9a9f-7855356ec740",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01a5c911-c6c1-4b29-b620-ccbe726a79be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a57c892-da6c-41ff-ba4e-6b308175fa91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccca6abc-5777-4b76-8300-17e61f36e0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3661b9ea-c79a-4d09-ba05-e14021ec5fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caf72000-ffe3-4561-a12f-0416767cc142",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10d5abbf-8eb0-4160-bb2f-8c6e6ec2d52d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a88bb63-95ce-4df9-a78e-f6c445e5bcfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ade7f250-9138-4bf1-bcae-5d73deae9b83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f644403c-b0dd-4746-8488-75d385f96b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251a5f66-b09c-4383-8806-73b1ee6aefa6",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf082808-8b10-40b3-9175-04d47c0abb15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9516fdad-8520-417f-97cd-24dd7bbe1af7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a582699e-2f1a-4619-ba36-7cd3852b7894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fcb0e837-7a1f-41b3-8db1-3d504aeb8540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5169bbc0-1910-47c2-b6ff-06c53a0ab113",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "454091fb-43ba-4875-bf93-7f392102a663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85371046-d87b-410a-8647-929e6b6fda95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3c1589f-25cd-494b-8b88-b18167db23a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "345fea2b-5444-42f5-bfd9-3fc00fdf4ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "468803fa-1ae6-487b-8dbd-c2aaf673a1d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b15277d-1107-40a5-ad89-88c9952cc64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3221064-b4fe-4d32-bdcd-6f0b6f641e94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319fb02f-cf55-4bdc-bdfb-ec10dc83c99c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ce6ac8ce-fcdd-4d61-b2ec-43bff8ebb8b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dbd9155-5943-456f-a37a-899273902974",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c64725-026c-4b5d-a4cc-dcdc32ffad34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a359ad86-cbca-46e2-a3ab-5a39b194b8fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c79f0d2-81cd-4b83-ba3d-c2dfb88457fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cece26d6-071c-426c-b37a-4763af83a227"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ca70b5-6427-4517-8be9-1c3f8721a789",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e1fce3a-34f8-4164-b28c-7ec0d84e779d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad67e152-9ae2-438c-b63f-61a9a534469a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67151264-eac5-402b-b909-e370b1c3506d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa460e87-559d-4224-b70a-9003b5c7d87a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "632a2828-9d36-4bac-a138-a9a59ab3a8cd",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cca2fca-8d98-4833-9e9b-f253090d40ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4efdcc8-2ca7-4382-ac90-022bf062c65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa682806-2f13-4ee6-9413-975c870fa259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "21e6c03e-7d32-478a-a5f8-d575d0a7918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef6f4dd-da64-4b73-81a6-c1465b402dce",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff88383e-72b9-48d4-af53-6768cb22f770",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d9630e-da03-4756-bb98-967cfbea1881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbbe8417-feef-4b1d-bb01-db391a7b64f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9302b432-599c-4824-a23d-b6b6092f7fd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c602b50-0603-45f2-8e27-18b403bbc922",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02e639c2-7692-480b-a7c1-f782d0340e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cdd8b95-184a-4e01-84fc-ca12caabd524"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27dac49c-d6ae-4e3d-88a3-9505c9b81860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "22a5cd0f-5f17-458c-a244-978a0bab2c12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9842b7f-5f14-4ade-944e-0c4feeaad040",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d73d6a7-447a-47ae-9734-937cd821de87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f78c0355-c0ca-4c3c-9566-e183f1fc0b46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29dddf95-961c-468b-9f12-905e09ddcf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40c9314b-df05-47e0-a0f0-6ed38f6eb326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b6258c1-95e6-46e9-8685-b1db93e2fac1",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f465b52a-e0b9-414e-849c-77a9a8648730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350427c1-0003-41c5-8a80-37d281ae7eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6382778-8c23-4e59-aee9-0f311956448f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5fdaab-1cb0-46e7-851d-401ab8cab419"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d291b7f6-ada6-438f-ac8c-262f8b6e9c6d",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d045ce-ef68-4e35-b561-574d9c7d16b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8146b0ef-2d16-412e-95a6-dc0b374e17f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4731e504-e119-415e-a687-c70c620ab66d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0b52776d-aa17-419b-acbd-a9f7b950e653"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95995215-7943-495e-aa24-d552287f0123",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea74493-4ad6-44bb-859a-e5ecff53a146",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2bdce68-06da-4bcf-93f0-992aaf2d7a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4d4744-39c0-4d12-9531-e340ec4a8844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9d498cb-2037-48ea-8fc9-2b14935eb40f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c88da2-0483-4c35-ab56-5329d27604d6",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "085dd566-7581-4c02-8277-70e9a6c564c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6acec63f-8ca4-43f9-8435-d5760ed70640"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d30d8ad6-3d78-4629-8cdd-a2b640aaf2e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1886c620-c305-4061-a238-80a243837b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be84543e-bb03-49e2-a28d-5398e1cb9c7f",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2191565d-1a72-4a03-8a72-24e547d6c3f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71919613-bcd4-4820-92e9-8b76886a2c7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41a97df4-88ea-4173-bee8-abec96253b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "076c5f3d-4a1a-4969-a48a-bec1f5a4a29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a09ceb-a66c-4e5f-abb7-38bb3cd5a1ba",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f7c6cb-e67a-407c-a712-fa68dfed4b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac4e83c7-7adc-49a1-a962-a61586c41b33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b889ff7-1f19-4ccf-9b06-6d38061fec84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba54f70d-b1d2-4f09-b33b-c31e94b29271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02b528df-dd63-49fb-a80b-583c08aedbd0",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0f735e-cc97-4c28-9ee4-38efd4297bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b7781a0-c760-44e2-8d74-381491ec0a41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32af8756-95e3-4e78-952b-798fb555e67f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "60ae431c-dda3-494c-8c05-3bf9fda7ddb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79591771-96eb-4d3b-8836-dd1fe3ff5e9d",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f7a7b92-6f1d-4e66-a5e4-62420c4cfcc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ad0b50-cbb6-4c6c-a839-31c343f4db7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "797c9272-3ffb-4cb7-84c4-c6484dd706a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9851f2-c8db-4b37-a114-729714c752a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91851673-6b07-4c43-8a45-872f28654f9f",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91da87bd-c461-4596-adbd-6d66692e6d11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113c38c0-bd1a-4f74-97c7-1402e8952a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35816f21-eb41-47f6-8405-de4968c7b333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "082d2945-9b13-405f-9f6c-3dd02299e9ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6894eb4-3159-4a61-b660-347df28842bc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3810ea6-5a71-4635-85fe-9ac3c7e514bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ced41109-26c8-4b91-a80a-a35752a3c9a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79175625-17c0-4281-8474-cb1d0b904edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "eb0e68c7-b402-43fd-bfb9-fb9a49145a4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3130f86-cb35-498c-b298-68c6439ab41e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfa7dde-b72f-4222-983b-cc71b27f20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69979723-e055-4a81-81b0-08b24b442386"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f8ffab-b14e-4875-8b51-96a458e297e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f2d50c-9402-450e-9fb2-b83d414281e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfb818a0-17ef-40e4-8cb0-edcd44ae6062",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1fc107-e325-4193-8667-48d9dc3668da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "15b32293-b6cb-4911-9222-db7d62d18824"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024bbab0-1835-4720-8f15-2809fc929607",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4a314723-5a40-4c6a-9010-5aea33ff3c1c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "86a5871a-7a11-4159-aa20-bf4ba9c5abbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91bda571-d061-4085-8cc9-4e133ecc4510",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "844db237-5086-4c7b-b773-d1de46fc1d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "985343d0-6c9e-480d-b50c-9b9b96fc142d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af737380-295b-4052-9147-bf93d2efa6c8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b39af367-4ad8-4842-85b6-602808280684"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cee68d5e-1d93-4e23-9ff6-877e023e479c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "77ff0377-4861-4208-a922-df3aa85f08f9"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "da7b2c53-e425-419a-a90d-a43df0b85bd0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eed62565-4a3d-446a-92b9-9dc74c9487cb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "62be0d2b-a01b-4d2a-a75c-7fe7f3e3c18f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "500c6dfd-6511-4dba-b33e-636cecfa3766"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7593e8f8-4a95-4ddd-bfe9-f67058bd0b58",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2b6277b1-2b7b-421d-ba30-73b21bb5f039"
                }
              }
            ]
          },
          {
            "id": "001ffb43-071b-4546-9ad0-a99fdc1853ee",
            "name": "Positive Testing",
            "item": [
              {
                "id": "d342f4e4-9240-41f5-b0ab-d354de0e9a68",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "9398cac3-b57f-41b6-9f1f-c08bde54ec84",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6cd7883-c742-4c54-8ec8-5d11aa1f06d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "da60de04-7f2f-4ca6-9d7d-31e7faa7299d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2b89cf-a6b5-45d0-8fca-7c8a5f324934",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f536f0e-a33d-4ae0-a6f8-9c44f2f834d9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6a6c4c92-2c5f-45d2-869e-5c7373a5262a",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f84bbd8-7017-4aeb-bd37-515a28daa643",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98de7b22-9931-4189-bcd5-116eea17a427"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "753c82a0-ff06-4d18-aa88-8c3f92ed0f56",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a93f757a-1e6c-4ff8-8ab8-9ce5c6b978d5"
                    }
                  }
                ]
              },
              {
                "id": "78fe3d77-18f1-40ae-8eed-9b4c5674619a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "44af232f-bc72-49cc-966c-6224ff0a45ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4ddd3660-3044-4ed5-affa-fcf5fb53193f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "201a677c-d352-407f-a83f-f2f7424d8e8a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf867dc1-9b42-414e-9b13-5e49652817b5"
                    }
                  }
                ]
              },
              {
                "id": "10eb5db8-b40f-4194-9e08-b3ef98b32d87",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4a10499-64c4-4621-846a-81bb87ce8100",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "578165c9-57c5-422d-8ae4-fcdcf7446dbe"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5badd03-2e25-456f-88b2-b52f6ff1b63c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0ca9ddb0-fb75-427f-921f-19da6808696a"
                    }
                  }
                ]
              },
              {
                "id": "7b9e3f03-0249-4ae4-8064-d4cdb337f58d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eab8610-9c4d-424b-9e8c-2729fe631d78",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e249f35-af0a-4af7-99b9-132746c015e0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92c5732e-7f34-4178-998f-07495307121e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "0dcafc83-725b-4ca0-a8a9-366c2b5854ed"
                    }
                  }
                ]
              },
              {
                "id": "36b41bc1-54ff-4d5f-a8cd-4c6a955fcc68",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1ad7cebe-9b91-4e14-a8ec-165480695d90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6e355f94-1a3a-4ce8-90d2-613736c10478"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "43070f97-0142-436d-a884-65575c2178d8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "02c6536d-5d6b-4058-b3b6-80461147bcd7"
                    }
                  }
                ]
              },
              {
                "id": "2faa4d87-b6f5-431f-ad20-9571af754fb1",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "976f1f26-1bee-4c07-b345-9f354a324329",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5375c551-2530-43b0-8b11-922838f5e6f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d52920cb-a347-49cd-8ba0-836a17b6a5b1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "66d29218-eb52-49ba-9f42-deb4202f5dc8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "94de4585-6ec8-4860-9750-5c5e7cd10bf9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e3ac6e2-8abf-40dd-8dd8-4f2eb7db38f7"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "42b25e22-5706-49c1-9873-925d9b2c1ea6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2d873d7d-3a8d-4e25-8d1b-1ac883e440d3"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ed24c60b-9ae5-416d-a6f2-31c187eb93a1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "abee023f-f174-4471-8bca-f176ba49448d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8a02e0ef-f32a-4f10-8bc8-0d6b482747d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf23f566-021d-4e9a-81e9-f3727d301da1"
            }
          }
        ]
      },
      {
        "id": "80b53909-7a38-4a40-88cc-302a95184bb4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "9bbe5cee-d747-4752-b25e-364cfb6af373",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5e5764a0-8617-47e2-a296-5a4ce9cbe555",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ff09ad27-5869-45f8-862e-bfa82b8c70b9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c88fe91-b68d-4bae-93b6-4afbdb0cf376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a76500dd-3051-4748-9ac8-8ddd3d9ae0b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78113ee5-8a42-4b20-8d98-586ee5a8040c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fcb4149-9ba5-45c5-9eec-0d99c61cf61b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1a91e55-1850-40ac-9467-901d95695eaa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829cf63f-19c2-4c29-8e42-5efc9b7b388d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "321ba440-a29a-4246-9a75-66668e0f7568"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f8bf250-9a7b-4d69-b407-2d678283f7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9112bb47-84f3-4e86-bfe0-1efbb1b44ed2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5c4047d-77ac-4e52-8f63-3f30904c6679",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19348c22-f1db-43b9-86b5-ff955b1fad23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bad64915-d636-4ddf-92f9-2fd6db111b66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5de1d755-063f-474e-813a-9fbcbbd7da0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d82af74f-77e6-47e2-96b9-895a24f20867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6191cb7d-0cd5-46a7-a4ff-ceaf8d847cf2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04861c3-4e58-43cc-9d19-57992cd88a5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f713357-3d40-488a-8be7-843ffed4e3b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cdd99ea-3ae8-4b4a-bef6-6f77e837a098",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0549bea9-6546-42fa-a0c8-849b08b92467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681a1b22-3628-4e3f-8000-9c1f73fffe98",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a40d0c-3a9b-4b19-b3bf-0a5be130091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a497b4bf-e51e-4131-ab47-e535a1c51c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311afc06-33e2-41c9-a5ae-25d404b1d9fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1039b8e4-0214-45e3-8370-a6b00d0a4cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1069a62d-f698-4e8a-bd5c-10573927681e",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "715319c1-c0ae-4d9e-b953-3115fe007f9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e19c80b-a83e-40ee-b18b-aab1f922171e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a3ba98-7db6-451b-be3e-ece9fd2eaf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e5807fb2-8954-4b75-b32c-4a4e325a2970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1692813-a330-41dd-9c85-9c54881f7efa",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac611d2-59cd-4ce4-b198-c8ae3c7ae522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c1a202-8879-470b-83ea-8dfdda712c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8654500f-b596-4cbf-afae-acd1bf038479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96988fe7-ab61-4747-9ff7-0f6eb3f27156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f23570-c068-4e97-ba69-d47f98d113f4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfe21b07-3346-4311-ab5c-2bddf0a0a3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdf10fab-43aa-417b-95d8-631ae49b6673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48f3e18d-2874-42f8-b6b3-967058db6b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a3fd267-051d-4446-8b32-d866484a0baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7adea8a-2745-4291-b2f0-789ae2a75a2b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f07a598f-ab30-4355-a5ec-2fc2b110b9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59ba9899-10f0-4c2d-8307-d0cbdb3ff82e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5e9b43-cde3-44c0-ac7e-5e9c6bfa5a10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5248f905-4059-4461-be9e-f85e6f83d97e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1d41053-1943-42ec-a438-3a2946f7ed20",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53b0a8eb-1e39-45e6-bf6e-dabe5f68e7ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09ebcd14-e534-47ba-af37-ec0d914987b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3119a8bc-c274-478e-a880-00b37793eab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b8cc193-a27c-4f75-963a-2cd888336dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "957f514c-99d4-4622-9bc2-f3eeb28de972",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "842d3c6e-cfb4-4767-81c4-667ff3e5d65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15fe83d6-2405-43cb-b9c7-bf4b908d759c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7175f7e-7560-416e-9485-e1f26f22bd32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e91ae69e-a5df-4c2b-879f-2657bb0c4fff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6594a0de-9a4b-40a0-abaf-30790d4abcaf",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c81ebf-3453-4106-ba08-993fd31e670e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a300734f-0c23-41f3-a8bf-3b91146048e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7664765d-1ed6-4f09-98e1-9de082f6d054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "71110e59-383b-488c-8836-b4aaf7311748"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5efbada-6233-483c-9f68-26204097aecc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dce105b-9b77-4c27-9578-a9d7dd4b909e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16219ead-b593-4c7f-9210-d4c4e9f47312"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da043001-2f22-4d66-81c8-fa5190180656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a952e2eb-a522-4f59-8fd2-ea4607d9e948"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fe0dba-b2b2-481b-8ef5-a65450546732",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e35fea-926a-431f-8e91-839628fa69bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1265d326-64a8-404a-a1c2-186080d655e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83abf22-9162-4185-b97c-de03759c7ac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbe0b9c3-e910-4d45-90dd-bb7a3fefe4af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41125723-d6fa-4b39-8a26-2259556876a4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9911b4b-59cb-4bc8-8ef2-503348bb8e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0746b12e-fa00-4e3c-85e4-6d6e30cdb884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04c0d380-9f4d-4684-8097-c7605aac91b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea9caa29-2a1c-43f3-94d7-fc7d8d2267c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc09144e-4119-4af3-a82b-aeee10055af2",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce862e5a-1db4-424f-84c6-a061183156e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c0dca29-a1a3-4c9f-8035-4a677f5288ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4f07f21-bad4-4e93-820c-49e8848111c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9630e80-1482-4d58-b743-5ea4aeed39b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13484761-22f6-4133-969b-36dfa77ecb48",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1710506f-391d-4246-ad4e-a8859ba5ced0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16c59c0a-0e67-49a1-a8cd-b6babbab4ee9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c1c47b-6ae3-4383-88ee-1718a057b63c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc26b334-d332-4e40-8c7d-2bc534366d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb2aac34-ecb3-4014-846e-f7b23e01857f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b41bd5de-8a84-4667-853b-02f68a61a9ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fefdecae-fbd8-4d07-a5b8-83c48e41b2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8abbbb-39c6-4e91-8486-7a3ba8502f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "263719f1-3331-4373-8506-7dfdcd848b0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b8cc3f0-7994-4e6d-a8f8-8a13fb2ebe1e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c634a812-ae39-4554-ae92-16d215c6b65d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb5c4952-3aa6-4e28-9892-f93997793fdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b2349f-10c3-4874-b738-04f041c8cf00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e6019527-d8d4-4206-9c48-47ca3d89f88f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015e6744-6f78-4845-8150-dd17e93ceba7",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdc0fd36-cb62-4b32-97fb-1ee736a3cbb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b1653a5-944d-46c4-afb8-55c0cadf8ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d4bc0bc-8cb2-4608-a4a0-d3e6b0b0fbd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e85770e-5e09-4238-b0e4-049e16a47a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f519dc7-b1aa-4927-8867-c56589081e22",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb2949b-2b4d-413a-9a7a-8285578c6701",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f842e0-28d1-4a3b-8f2c-86965471ccd2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d97a9eff-88c3-402a-b801-d7125035e5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "31bc7446-6610-4899-a190-0d80f51460f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38646bbf-97e2-4057-98a5-638883bccdb7",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ff1918-8d16-44f9-8070-936e0698338a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88b6a4a4-1945-4c78-96d3-7d685a190c41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f300d74e-9125-453c-acee-249c174663d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77857297-c219-4b0b-a324-ddda0163d38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ac8dcc-45f3-451e-8509-21d63cb67904",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df898c83-9346-482c-bba0-930784656ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd71f735-4bd4-446e-a60b-b7fd7c499276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08fbc0e3-feab-47fe-ac89-615b3e50b2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4376e52f-687f-405d-a307-2b77977aa21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b43aa23c-02aa-459a-af95-4a7cad3ca55f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abbbdfae-dce2-4867-883a-871c08ff150c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea65c714-8d83-472c-bd4a-f9a42b37cc62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef9a58ed-9892-4619-a7ce-b1be7e7cecce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad5d3edb-0dbc-4cf6-bf2f-83cbe992ddbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2c8c9e-8375-430a-9576-8ff2e7239b56",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bde0e5d-e1e5-4ed8-b153-e7f84e7e2a0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f489f40-8a60-4ac1-8f4b-d26814cadef8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7097a23-6959-4426-a75b-9c510982f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4d28707c-2de4-41f4-946c-d2f0a5266375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "310b03e9-1c93-4379-a671-939a1ee7a317",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d608b385-e022-45d9-886e-ff42bf6cb169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fac6bdc7-8c26-4c3a-9e99-60c98f521b47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e5c35cf-5039-4285-968c-c6fdc7669a91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc431682-ce77-42d7-ad0d-3689a9ad3df3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75f55677-84d8-45b6-aeb1-7453905275b6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250d48fa-92d9-4906-bebc-ea889351579c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d720e649-5342-4d5a-af4f-b55756242237"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82bebd03-1992-4561-9d2d-1bed3946a06e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "857446e5-a10f-4d20-a409-80c962b50de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4b74a3a-e76c-4d5d-b6a7-dc11ecb54f16",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929baf3a-f19b-430f-bb20-500ffd4d7f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebf7a53c-ee94-4f7e-8856-cace3e415d6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7adb665d-d942-460f-bde8-ca8375853ce8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbed869d-2828-4ef7-a818-54a3d4dc47fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17023dd-16d5-400e-ae4a-66321c9f4978",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6302370a-3a9a-4da9-aaf2-7fa614e94208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53e302a4-8653-43ec-9680-5df9e72efd78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33237fbd-6214-4bef-aa9b-c558d9a29bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f3afad7-4cee-49b8-b5ce-876e1f0ed516"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c86665-dda0-4b94-871b-70aec44b0967",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68a65ec3-36ff-49b4-9273-e14c9441b679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e50c2729-0438-4bca-97c6-cdec9753bfe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfcc34e-5828-4324-bb9a-39055a8ddaa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7f55390-2869-423f-b5b5-1e12d9c12b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faa6af0-4aad-4979-b492-ea0534332720",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c28b1521-7ae5-44d0-bd29-7c213c181cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec9fb0ec-95e9-4cdd-97c8-6a97987e88dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a2c3ed-c74e-44d4-837e-70648f02a97f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "65931cba-4cb2-4538-9519-10da18c97693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d653f8-418e-4b06-98c2-efab68e22f02",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f1b095d-5231-4bcd-a8b4-4ed1a510495d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d27224-3a76-4d99-aaf5-f30fc2d92b15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f9234df-2c65-4d97-b96e-71131e251f6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f60ff75f-4a07-42f4-9f16-02da30078ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5fc6d7-0d65-4674-b26f-66aa43a31ad2",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9a84e28-2d72-46c5-b27a-f6b28a281d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cf4f10b-b0c6-491f-911b-3a2079252467"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "191d6e3f-a2dd-4605-bac3-3d48c09dbe5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d35032b8-e7ea-47ed-b495-8e674c08c5d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3517fabe-1674-4342-ac67-c43ceb2972eb",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d5ea791-f2b3-4678-bc4b-d11a236166c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9340c44-76cd-4b5d-bab2-4adb0f276ab1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5a8470-f0c5-4c87-ac47-7ff30de53e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46a43535-eeed-406a-8493-fe353b655a72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67253961-c759-4110-9247-df4127c7d169",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc57ae38-1ff1-4892-ba78-b9b22ff27c11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a49011-dc85-4704-bff3-27cad822c598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "006e83e9-7b1c-440f-b28c-1f0c84839a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe4126a5-92ed-4982-b216-f70646202283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac802cf0-68d8-43a0-8270-29fb0a583933",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22dbec32-2cbe-447a-bfa1-976c7bf3a8eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fde43e-c892-4263-8a2f-2ad8b6b37271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f55c610-400f-40bf-81c7-d9585b16c556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "43fc27b1-64dd-4dc7-a4f7-b1e030a09bdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee063003-d9b7-4dfe-889e-d21f3126891c",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c519ac6-0bc3-4e38-85d5-094d4f430489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4506622a-8702-46e1-9e0f-241f475d79cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85a540da-c943-489e-9c6b-2bd119386c96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54050b6b-d1a6-4635-86ea-56011529d60b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "bf52443d-317d-4c01-b909-2d711b46e468",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a9296951-0600-4280-afa1-1968d127a57c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0abc6-eaca-4711-be53-07cc60f767c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "46fb5349-187a-4f9d-8ac5-5d4e36936bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd8c7ba6-5e1f-48e5-a9a8-6fffda655339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "001ab3c3-714e-4940-a36b-097555c73f61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "51825c6a-5630-4658-997a-bc6392306c3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cbad3321-0fc8-4526-befc-0b6005018706"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e6d8ad2e-40fd-4b3d-82f2-e0e428f890dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc1b5f0d-5229-448f-be1b-3eca475b6f2b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0139612-5455-4a60-b0e4-b7acdeafdd10",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "4bcee259-f599-4c25-bb43-b75c3c485308"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "8b20121d-889f-48ab-a44e-a8e9b9b424e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fccbc37f-419b-470a-b678-65a9968a6058"
            }
          }
        ]
      },
      {
        "id": "4ed8ec7f-a754-41fc-a869-9db661e67040",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bb53ea77-f01b-44e2-9222-2646b00b507a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e6e170a0-450d-4fe0-9ad4-caef8a9508f6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "80f29667-2d3b-43ae-a0b3-3ef676a53cc4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aefc83e0-ed36-470e-9960-e38defab6232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd79515-fff4-49d3-b7c5-2d3ee569d093"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56330209-9316-4583-978a-3ed8c78e58d1",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697ea5e3-ce40-4574-ba9f-166db333a174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1219f0db-6b34-4dd9-bfe4-9c8c9aa9178c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7d7c7d-5d2e-4440-bae5-8ad365d98374",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aca8746f-b4c6-4a25-9ef2-204c6546315c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca1aa17b-6f15-437f-a4b3-999194fb1d30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ab5a3f1-424b-4ddc-9ada-be1f57e82e90",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02ca0447-e3ed-4330-85cd-040b5f8235a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3476df6e-bd3e-471f-86cb-d99a0fc70d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8786a6b4-a30b-4dc2-a69e-a8cb8a126111",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e79176-2ae7-4743-a9a1-f36d0f8a4d06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a92e818c-9a6e-4b93-b11e-4012cbbd2609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea0c46c9-a3d8-4b76-a669-bb93fa6b8ca5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ede533a-5381-49ce-8548-92bc2d475003",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "172f6d8f-a051-4fc2-b119-c44af77467eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8dabab8-b109-4900-8675-ee278c822872",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1e1914-c15d-439e-bc4e-9561b8487d50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f40cdaa1-4f2f-4496-9fc5-e8d8ba4a43d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e57129de-ac3b-4bfd-ade6-133330cedc15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b6e15ba-e18f-4ba2-8df7-1fee5f150558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "958cbf69-e450-47f4-8697-60de0a4a082f",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c104ff52-9f9f-405d-a8a6-287119ce9b41",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0136d02e-da3a-493d-9c0e-d030207c9f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2614fe3e-6a5b-475a-994b-39c2c13b5a78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbf0870-3cb5-415f-b9d8-15ec3b5f2ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9ae892d-4231-462e-bcff-bb095fd5ed69",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4813f59b-a907-4816-a6e2-5d9ce0661314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c907a6d-460a-4e69-8752-82aaae196fee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2acc045f-4632-440e-aaf7-e736404caba2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0874e5cd-a28a-4d37-99d2-6d8f57650fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a342f857-0245-4091-95a1-97a41cb5d81b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "073b6575-b81b-4782-81c3-f5308b8711cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66479440-1b8b-4ee5-9b92-205a733d78ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bd9c140-2080-43ac-9408-a83ede8f66de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce69e943-541b-4045-b809-43c7703ee51d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e99f0c-34e0-42f7-be54-d794611b788f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77ef932a-c106-44e5-b4b5-21db70862344",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cfe9b42-70fa-48c5-834d-54a2e0c3293a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dc7bd3b-dfbe-4685-b743-944fc075f97f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0233e153-3146-44a2-8e93-7e32404127ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2017d911-b8d4-4c28-b1f8-165ee778eb20",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52e18898-2a87-48b1-a5c6-f425b0aa2b54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99e68f7d-867c-420a-8458-8d48cab44d9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f8d6301-c86b-49ad-a4cd-f274724900df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4114bbd-e794-4bfc-b608-e386b8af0072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea8c95c8-bde8-47e8-836a-cb919e1c9752",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9e14cc3-835e-402c-ab66-d2585061152c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e6b5ed3-a5b7-41a9-a807-71377e0cae5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7598e08-aa45-45fc-9319-92d33e2d5cda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "822d47a5-b837-4220-9d6a-f494c0be9ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdd79c15-f381-4a68-a773-4544c10e0f88",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35dd51df-a8a8-4366-b19d-61a995e822c3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b60f9ed7-01d9-4b52-912b-a0ad633de7ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f16bbce5-5159-491a-8ac2-c70b0b1e3e05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd8545dc-2a97-4003-b171-59ac75db581c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184ee585-7a5b-4c52-a170-25d116ca47f1",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eba11c7c-f171-4e3d-ad0f-3cf59cdd5694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddd5f92-8400-4473-b6ef-1fe14785f050"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30045b23-cd5a-4a57-afff-ac5ee46bc59c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b885d762-bf87-420b-ad28-f96db62a4b7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6122b68e-7166-415e-b4a7-27ac24c9ce9d",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aa4cb1-9e72-4b01-bfb8-91d40d87e726",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95ae4ad9-d454-4ef4-b956-b8fc48e93004"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb88118c-6a8d-4af4-b1df-c82ca491d863",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711ee40b-0aa5-4214-afef-d20256e3d988"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f401374-21ce-4da2-b65e-0b6591593e83",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "098ef4e4-84e6-480b-8b6e-7a407457acc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d63218d-ddc6-4686-b464-0e3deffb47d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ecddff-c4bf-461c-a561-059267acc02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c5de15-48dc-454a-a76c-31f919cfb270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db1509f4-63b4-471d-bb39-e04ca76ad502",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63ec148a-782e-49d3-b701-c9e6e4e87b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a3c66eb-e115-4de6-991d-c7728ca97b4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ef23470-c0e8-44ef-bf05-c08a9654ab67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e957ae8b-d8fa-4abd-9885-74103c257ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac6f64ef-b4be-446e-9949-2a9d053d4add",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4caf5d-ead7-4a2b-86d9-150d49caf429",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e38b67f-ff40-45ec-b74f-c96c1e34b8d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a4c47aa-8864-49ba-95cb-282b89670a87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de8a172a-0e7b-41f9-a08f-927965e79a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6329b7d-51f2-4363-923a-380af2d777b6",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb2e7139-a195-444d-a5bf-048f28cf0028",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd9c6a30-879d-436c-b78e-50ad94eb0b5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ca4471-27ec-4216-a441-d534d7f4c388",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15648c28-36c0-4556-ba6e-45633e4ad367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ae4dec-1179-4199-a6f6-3573ba4a8dcb",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39473da1-e396-41b2-88fb-16273ceb4e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7eef871c-aefb-4633-9501-8738a68da537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b87db5f-d2d8-44c3-85e5-52338cef582e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22de8de4-3ecd-4ed2-9014-96066653f0ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27099faf-ce38-4cba-9264-f85c2a900a21",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35592d50-cc1e-40a2-9cd9-c90dd15e9c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb275862-3cfa-4447-8352-e7f32c6f8c6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dc162b-0429-462e-9ffc-adada758ed88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc48cb5-f150-4609-809e-120854f01b3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aee0401-b3d3-4402-b292-fd545a27b0b3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87ab2ed-75f1-447c-8fda-be3f745c73da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4ef472-0538-4a37-877d-9f36e50fdaf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da66c727-0a28-4222-a5e2-63105124b58d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2530f770-548d-4836-bb7a-17206a30ff81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfb1ab6-da5e-4114-9fb4-767b53ef4c70",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03b1da9-fabb-44ca-8b1a-2e76420c616e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "819b01e7-dc18-464e-8c80-b6008bc20c1c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3da805db-070e-405c-bc11-738c9608036f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d604e9a0-0a4a-45d2-9ba7-70cfbd7c4ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0183918-fd80-4acf-ad06-d897236c8873",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8a14f2-673d-4558-afdf-237c95afdb47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "14b54514-5de6-404b-9057-11d34004c64a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc293858-9001-451c-a6ea-46725c3ee98f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0638a637-4a1e-4573-9917-1a728d7a513d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c50c587-d73f-44d8-9aa4-8f8947661ece",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1634317-cfa0-41fe-aa6f-daf32f941857",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a26b8c50-aabd-4a5d-9815-a206ad367b99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41b8c348-c6f7-4d97-aaba-a01da40e02df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2ee155-08f5-4b1e-b319-477b74584037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d29aa9c-0f07-418d-80b9-124a0f65d999",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4376af93-7f48-405c-9094-1e074cc4a43c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "87975ead-fd94-404e-aaa2-b002dbd701e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfd4838-9936-4140-a85c-13d49fd0484a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46072c95-4007-49a2-915a-9562669c0e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d69f59-26af-4966-9f68-aa426c9e27e8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37f33770-a3dd-4a84-8169-922f0a93ce79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b75362e-4cda-4966-898c-5d3dca47f217"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e768cab2-7884-44a7-abde-0463f9f47322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a86f2a17-2758-418b-9bab-9480c4a1545c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "081b24b4-542a-4750-9c36-7593536ebab3",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c14b9b-6101-4e6b-a3f5-349f1bb79160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5db1f4f-484e-4f35-a2b4-f16d757bff6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85308706-26ac-441e-96f9-275aed4bf8ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1eeeb76-0fbd-43d8-b9cf-2a5d56aeb1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c92e1f36-54b5-4750-9668-7e6f4dc7ae8a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6eec508-f3a3-4741-9ef8-0683763a5cbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbad5a2b-e00b-4a0f-8080-eb72f039ae52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec42a21d-2328-4cff-96c2-138c6f017a28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6288ad18-8d77-44c6-9005-9d05848e13cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2519fc2-a0e8-431b-a14d-65a07bed8193",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf68fce3-377d-4820-8b2f-b5d89e9aff93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c59ee837-856e-431a-af2b-abea90e6d3ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4dc5981-22f5-41d7-9c9f-29df477b48be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50592100-5cf7-4a3d-8f0f-469aac909907"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d04631b-aacb-4b7c-8d74-95f9e5950405",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644e772c-c8de-46fd-827d-9ab71b0ee207",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c24821dc-9ed9-4789-82d1-c4ef7ad8fbb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bac65cd-57f9-48fa-91fa-8b093ee5fee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddbb79d-c333-41b9-9538-5277e74f60cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7c78acd-d223-4dc6-8fb6-aa100bcb5c26",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85ceb03-85aa-4850-b29e-d072009b9fca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367cf428-2e62-4c5d-8e90-4119237cf517"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c5fd74-656e-4f81-a8c1-fc2555fb927f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7722d9f-44a5-47ec-83b4-e7bce900a8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b1cc35a-4d9a-4306-91e2-44ca5b7ee79b",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6e761f5-73a6-4891-a346-d1d0fce50319",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "821d473f-d48b-45d3-a06a-e8d91ae477c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fd594f-2fa5-422a-8bb3-ea7fe797f6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb43893-7131-4ac6-8a30-57c69ee93ec1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8b7f95c-17c3-44c1-91d4-f6b219a650b3",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f09170b5-13d6-424e-b947-3f5500455a22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3d22e0e-d04c-46e3-aaf4-e2c29e3490a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69d71ca5-906e-42ed-9165-8b64bf7fd097",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79e70153-6848-40ed-b521-c21a01bbc537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84499a1c-9794-4c62-b0f2-fd4d4eef2ce1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c074f531-47b8-4265-82c2-7c4adf76fbc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e9a35e8-4732-42b1-8d76-4976d49069f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "023380a4-81e3-4dc2-a897-3b8be4c2f14d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd053325-be8d-4131-893f-d5a088049852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e8f903a-6f44-4824-b753-55db02f65c51",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7508bda2-7a20-4b47-8ba6-848cc08888c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a80a7cd-b758-4281-801b-06bb960cbea1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e90c8e4-0e9c-4fc9-aa8c-8ac610f3c4b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6abf9e5-feaf-45e5-811b-ded088287c2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f453346c-86cf-4039-832f-15941e39ed95",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45b29c50-d29e-4af4-b734-9cd765b0f5c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845ea845-125e-4dd7-8204-9134ddc87a26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "606474a8-4e90-4e61-8f66-925448fc6d95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a752d4-068b-4d7f-818d-04d5175f55af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1af30e47-ec9a-4332-b8da-c949aca3d8f1",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9db7b12-fa51-4b12-ac46-b552e21e73c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef2f44aa-be83-4e80-8a1b-5071395380fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13e45cc-20f0-4b8f-8c65-a540244bbe29",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86370c88-dea8-432e-85db-93193f46e69d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a575e9bb-4b1a-4cd6-b2a7-41b4f05f2a41",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964761a5-eab6-4003-9630-9328adfe8972",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07faadf6-3c13-464e-a7cb-505f7e4fcc5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "585afa6a-4660-4f36-89a5-b9fd8773e8a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1078c798-f609-424d-b9ce-d344c0316b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40a302be-6984-4ddc-82ee-383c8e8dccd2",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c7067cb-aabf-4eb7-86f2-f85fcd468a83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23f797eb-792e-41a4-adf3-9ec8d1da222f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1f685e-32e2-4a79-9026-a8e8d9409284",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05c0f17f-38b1-43a4-bb31-0983b063148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "114d70a9-614a-468b-a285-ba2413e99129",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71cfbe3d-f881-4ab5-8ac8-46e501763071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b629528-0738-4982-a8be-cfc6ed1de22e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8822461-ef47-4307-bced-56b74880b9fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d98d9690-b6d1-401d-9c27-800d64ca8b9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01eef123-bc9a-4d78-b493-4483c1d806ef",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b1b54e2-34f9-4bfa-8701-ed735927b401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff81c5db-dac4-43f1-a3b9-a7a198a48937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed83a2ec-d399-4f1e-a9a7-2761a8fd148b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b7ef74-c01d-4e20-ba46-e533d89e4e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4f8b49-7fe8-4d19-bbad-5bfa3c090889",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc08217-3414-4e8a-a7e3-e022455ea1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1adb549f-d1fb-45d4-aef7-ca174294b625"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a2db0bf-5e8e-47b1-b433-f5f35c2a0c08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90bdde08-4027-4df2-bfda-2c7f7f0857e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0f9f744-97a6-4011-99d8-9968d3850d06",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "734d8310-49e4-4d30-803c-2aa731a8299f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf5a69c5-eb0e-433c-be0c-f78887267335"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "faf442b9-d4e6-4fee-a7bb-6f94f9c8dc84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48b21095-b479-4964-8a33-0010847a35b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0059d58a-533d-4c30-abed-7a0d54c57e52",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50c0a1f8-3895-48b1-a022-8afa301e8bee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28bfbc4-d0d1-4b46-9476-62e3411393d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc74dd57-1e9d-49e1-90b0-09f6158a38dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6f51df4-5b18-4a40-bbb1-601a37327709"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71d01a99-c8ad-4032-ac60-e3ae9ec69e9e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "351aacf6-897c-4eb2-8cc2-da8c16f53630",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8995bf90-5664-4cb5-9b5c-aed2ba622173"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ba7322-6486-4fab-ab41-5c41298036d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8226f475-dace-4d25-855d-add6ac874bf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7816906-fb2e-466d-bae7-a0441c7f4bae",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0698ee-8a45-4dfa-93c8-bf9b23685c03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a9d226b-0d57-4c4f-b002-1f2750ebc2e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "239c1382-3368-4eb8-b01a-577398f89a73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b005a98a-f8e1-403f-ac6e-131b11809ed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2641927-107c-49b5-8b6f-2b21e785acf5",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55bf2e50-ec20-45ff-a777-dc3607affd10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "128a59d0-263c-4857-ab54-01aa361c5256"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7842c039-41f2-4a3d-9f57-347bd3594ccb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbdb1e1f-b61e-4cf7-8d4b-2b5ac831a17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74e3200-8a13-49c4-9445-12f1c5c075f5",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b481a24-8641-4bec-8fcf-eaead037fcd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfb68647-77fe-4630-bbf2-62a66f1c8919"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45f2909c-d883-4650-b8f6-b66a9e7b5022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "793cef6c-cc59-448c-8ec9-1d1b25bdb76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f0c6346-dd61-466e-83f9-507beb32e82a",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6395de5f-b956-4c08-b2d3-1175d7f0d9dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cf86223-92fd-42d0-80ab-acaaacc3d26b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b5febd-2311-45c0-a1bb-b3de58a4e954",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecc93678-b539-4df8-8488-8f72e68e1c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "904ce297-376f-4699-8abb-d472592e9d52",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d4fea19-1ad2-4787-9df8-7ecb6a3bc642",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ef3f17e-7004-4d7a-a38a-2f6bde31e01e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de98ade1-b104-447f-982e-2b8a37de85ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2dd001-23f8-453a-84be-b7e76150a2da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5de64e9-1dac-4838-a60f-0e4c2be75791",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1290677-23b6-494c-a998-7baf7a115b03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29bcbbd1-dbca-4167-97f8-5b30263b4226"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "608024f7-898a-4f71-8e23-edc07826cf26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57ca05f4-7f9d-47ca-8bf6-d563ab8542eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0721ed2e-9495-4499-ae91-d809093b2505",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c517cf93-d9a8-4f34-9192-1d8627e6a1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c8d61c0-4e4d-4a70-87bb-b107fea76874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ba4fd8-73f0-4430-950e-47b5df173597",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbab07a1-8d7f-4ed2-97f0-8de0a1b9b246"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2f50bd0-df83-45c6-a736-a57b28b9e8e6",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c6d6a10-8ccc-43a8-b0e9-176707d0b64e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd9d85-5ccc-48ea-b173-d9500be75e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8de5e59-9363-4f5c-9b21-7f9687130cad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c20c66d8-1cca-4ee9-b6f3-6b3b22f73de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de024146-1818-4c87-9c25-7fd26d3e30eb",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "827b91c6-d6a3-403a-a4ae-de9a81a18297",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be90712-04ed-4504-a2c6-a454a9ddfb07"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3f2d0d-5406-400c-b055-b4e4a46676e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd6cf244-cd83-4306-a44f-81a5b5b9a05f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc82ebcc-efc3-4b30-ab1b-94c69af72461",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbc15df-39c3-42b9-bc37-68cc2ba86f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502e2089-9a16-4463-88f6-08cd42e82436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aafef4-f939-4518-8d7c-333663c7f02d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87abf0d5-adcf-4799-bb9b-347f0dc97ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890c6166-2beb-4a37-b449-2743affa9af8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecffc95d-034e-41c6-a120-a6be649a7db5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad12d55e-bc3a-4f1d-8a5c-9d5af918a890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "712988d3-86ee-45aa-9b7f-6d28aec852a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd34931b-9541-4057-becd-ddc41e1fab14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7d4fc9-1479-4d70-9943-56e188a4cf6b",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d7678ee-4202-4a9b-9aff-a096d157be1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a750d42f-41b7-4af0-8068-814b87b379cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78069b6-e817-484b-85a4-e2019934bd30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6b8744e-9eea-4a92-808f-1b7f8151666f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8a114fa-e8f1-4de7-ac7c-35230f9175ea",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feee49c2-3c52-432f-9f4e-a09869432a17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3115c2a2-7f0b-4cd4-ab80-8c28000a4a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59ebb15a-b5de-47eb-9cc3-c88a83653c96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f2e633-9aeb-421e-ad9b-293c66a4ad50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4070f80b-20bd-4fef-bba3-d99b371abb54",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f980e95c-7ad2-4583-ba9d-7dde170da07d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6bd04909-0149-44ee-93aa-7bedc9df4d64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f148e18-4ca7-4c21-8daf-cfbefbbc30b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61ea69cb-d5e4-4db8-a43f-686a4c2b0c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3930f410-2172-43b2-8816-675567024ede",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e46d40f-4079-47c5-99c8-b14fea38bf6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4853557-24ac-46a8-b970-d664be5a3cc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f1aafec-484f-45a8-b806-f9509e4f1c55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d756f96-cae3-4e1b-bb71-b0714ef08bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7faf855b-192f-459e-b7e1-d922363e94ad",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4f6b97-0dd6-4d9c-b336-3efc45cc029a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28922478-c15a-4f28-bec8-aeaa08cb61dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcfdb0e-57d3-4295-926e-10e4e3231202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11d62d87-bcfc-4365-bf69-118672c4844d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0af1c61-891f-468e-aa58-19c33564b2f2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee08a055-d742-4b90-bdeb-d015233cad83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61f8844b-90a1-4d76-8d2f-741e233945ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6467bcc-b9df-49c0-917d-0284b6344af1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9936355a-fc3d-470f-94c1-dd4edfd6eaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca091859-0a3f-4b14-a47b-88eb93879004",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a889c4c-0002-4d41-a357-431f5e9877bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84197d27-baac-4f35-9374-dc062c3bd632"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ea0c141-aa9f-499f-bba8-6df9e6fcc6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2adeeffc-6334-43aa-8b32-f636e5ad01af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0dea85-5b45-4be0-82e4-8324a5510303",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c879678-ff0d-484a-b922-0da4f032dba2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f61256e-14d5-4f43-9957-48cc0019542e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a1e206d-98a1-4c80-a519-7f483e450f66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10615639-0da6-42a5-adbc-47b67644d1bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "622e3e0d-570c-4b67-bc9a-1529634a0c2f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5600516a-9fae-4626-86ff-f66e3f51194b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9de56fc-0280-40d3-a78a-c97c4bf75b78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba4db461-64cb-4bf2-8aef-97fa38dec82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4afb23f8-e11d-4417-be0b-642276388866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33fc4fe2-40c9-4cc7-8aee-03a0949bab7d",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6941ef8-3f74-4392-b8bb-1fb2407d7d90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3041022-53b0-43e1-8898-58b17ccebd6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1258b063-40ef-4fc2-b789-04726b8dffc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57399eef-0e18-4767-a10f-37d4c56c4203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1d74b1-f152-4507-a939-ba1aa7a5f326",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a212dc7c-3d5d-42e7-b8bf-fcf3f876da08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f0a28be-aed3-4630-98df-4dd851cd8666"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f78578-72cd-4ba1-9e32-8308aadf360a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "392ae6d8-93eb-4a63-a9c5-b87c25bc5480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fcdf196-8ec3-45f5-bf3b-792de0679fbe",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaece87b-5fcd-4145-9ef8-8bdb1963f2fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85f632c7-c686-4668-80a9-578664b2056c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8193e0e-ca81-4ae8-8bf7-50ab9d7fa9a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f14363fc-d28d-42db-be81-8ebc1334b789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "223e3cd8-d2a1-400c-a75a-92334a513bd6",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe844d8-ed61-4cda-aa94-fe98381af3ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17c69e1-9e30-4e23-b3fa-c1b3da2d9271"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3430df23-fc05-4f14-b710-2dea605f09d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f24f200-495c-4cc1-9985-375092eb741e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56a3d42-ad45-4e22-af7e-35b135c64fd3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b565f18a-5f49-44a2-b2b4-95f739d86c94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "519338f2-2a5d-4c98-bb76-4174df14d10a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d10bb1-b43a-459d-92e3-9642540f0b50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0f05867-e876-42a1-8a3a-371445824403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9647a62-e6cf-4c8a-88d9-079096f27ed6",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963d0ba9-2eb4-4245-8da6-404cca76d9dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0873450c-ccf7-41e9-880f-111a93fdbf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95e826b1-5999-4e3b-9e87-24a2a466c089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0838e2cb-3f42-4a3f-872b-48dcd9409b5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56d321e3-b649-4f6e-ab43-374a0743fc24",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "963f26dd-775a-4c7a-9612-c83e73ec1f47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d193bf6a-5a88-4f95-9915-a8625fed1c46"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694a4e41-97c0-4f2f-8154-9c3478db24f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "844044fc-f570-434d-a17d-7abbea3a7cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74bfac32-5ed0-4b6f-84d9-d278f112dd9d",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02571329-9ead-4535-8ba4-ed84ed1d9c66",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "76330b9e-fabb-4924-91a8-17dc9a0980e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4819d559-7b30-4e19-95e8-55d27a84752e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c8defad-ca11-4680-b5e8-ae51c58de745"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d86ec0-4b44-4387-966e-19c9c1fed8b5",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "176b358b-9a11-4b98-aef9-02e27937efbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad7609af-4a4f-4235-a0a0-1498bcb454d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e8ef5b-939c-4fa4-9051-2ef17848ef3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dcc1a4-3eca-4f80-8f52-283f41755c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d09e947-9c77-4e05-a87d-22f6733542ba",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "508fad88-45df-46d9-a719-ec2073601e2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a4c4e54-b22b-423d-91f2-2991af9b99a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb05882e-e562-4a8a-8a34-a8a078ca626b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be6840b-5276-4394-89f6-25d38e622f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649f6ae3-2b11-4649-a2cf-bf708b09f360",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3988098-2c21-41c4-a372-205fd00f8a2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51a516f0-3aad-40d5-b98d-f72d5623092c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e73c55-1cdd-4e9e-a051-51a08bf48bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87f04314-7bad-46c0-85d5-0b425f4247c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6823cd64-e71a-4d4a-81af-269a1790836a",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f037bb18-70e3-4421-9659-af9300c9e58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "94bcb4db-a754-4f3d-952c-e7a9a29243be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9726323-159b-47d6-b5b8-695cc7214f9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0df2fe76-4006-4c93-98e4-d86e83beddd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5dcb111-d44a-4b9f-bde3-f39ca70ad976",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "639acaa3-1c09-404f-940a-7f8b2fb1df5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12139d3c-a1bd-4c69-a2b1-58b9c5ff6a86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d298055-0dc0-47c4-ad19-142ce5d87bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "deeae7d1-2041-4fb5-828b-87ef1512ee03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4874206a-3233-4e95-b70f-8f263f07146d",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dfc847-ce1e-4095-aaa7-fb164caf7b4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "850e6ad1-6d96-4f54-8153-e3cad46692b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82262875-b1d3-497a-8bb0-1f58cc127202",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5499ca86-7fa0-4ff8-900e-2742fb5d982f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03eb00c2-08f6-405c-9a68-5ad1227e6262",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff20370-4876-4acb-9c45-6e36552d9d4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7ab61ba-fc44-4140-82b3-51464441aa99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbcbe788-09da-4b43-858d-97262d722bc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42860b52-772b-4744-9add-82befe17a8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d596fe69-df01-4a20-aa9d-d547a0a5b02c",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "334388d3-4f96-4f6f-8e31-05d3c02fd929",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "526b8620-982c-4da9-b2af-8f4994e623a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e34165f-ee7b-497e-a2a7-d04aed269eba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be7e977-4b2d-4a23-a815-5f8fa7f68e9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49fa00e9-aa2e-4f03-8759-7a112087ca68",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f906105-eb5a-44c8-bc51-a41522ba78fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee4805bb-ace3-41eb-b8a8-28bf4befe1c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65c6d8f4-e104-47d7-b64e-94934dbc57a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "428abc1b-b90f-4294-86f0-6876c747b697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8804f661-a54f-44c2-ba57-039cfac5d09a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e370858-0bc2-41b9-bfe4-dba9b310637b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "15f5bb3e-af55-4807-b04e-090ec0499454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62ae8d4-c145-4240-bf67-610ac2b93aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e59d1df-eb8c-4a47-a8d6-18e5e5e14aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1830d9a-7c6c-496d-a82f-22ce4023d468",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c70a86c-bd2a-492c-8781-7c910c4a811e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178bfe3a-6eeb-4970-9aee-7d9ea5ebf39d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c108b0d-c63f-4c65-9c1c-1ba531982f60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b561b1-afdf-4ffb-b32e-067e47653cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88e73c98-eac6-46c4-9185-b9aa2ad13347",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a78719c7-aa1d-4838-9b77-734e9936511e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bdbac8fe-f33e-420a-88d1-585b2060bd80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a152b13-351e-4eb4-81b1-522467888d3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9b34ba7-b660-4771-8bcb-9edf6079610f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e80af80-4927-4cc4-b207-753dd30123c8",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf799aa4-939e-40d6-8838-de4446ffb401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1787f747-b008-477d-925c-89c638cf9765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eb3e81-2508-4e20-9c7a-0c09926fbd74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "487c7688-b369-4398-8869-714ede3a9ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f6aab6-9327-4288-9e71-37260d572939",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76884899-efa5-435b-921f-6235118e27ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92be0708-5d98-4f1f-ac35-62ebf157f22b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e45692b9-8cbc-45cb-a2dd-3596a45d145c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776cca2c-c678-433b-ba28-594f9e4bc992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a38892-6fdc-4672-be76-fb96835f8c30",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3292862-dc51-4f8c-9b66-93fbdcb1dbf5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d98a2247-6593-42ae-ab9b-48213aebe454"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c80686f-99bd-4849-a12d-d2bd6969933c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de6e4285-8b7a-4c0a-8940-bfc003ba24e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00f8dbd1-34d8-4869-84dc-1b80ac244771",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3102f6d9-02a8-44eb-a553-413a2237d0e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bc2927aa-24d2-4f94-8cf9-9f37908f87b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8f9821-5eee-4bc2-8479-ce43cfe85992",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0f99e19-9978-4964-880e-7f70af426d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4378e989-e1ba-470a-a6f1-dd0f0cac3dec",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ac71f82-731d-47b7-82f3-91e5460bd550",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a85d520-bc5d-4b7e-8f41-99bc5c42b82a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eae5a4e-6ba4-406c-8d7d-30f402b1901d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf92128e-eefb-459f-8162-3d179654ab08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a3494e-bc99-4c0d-9325-4e06446cbb25",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd996e0-e46c-459a-a7d0-5a34c0d0c418",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8618147a-768e-49fb-aece-0b72680f3f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf62946-19f6-4629-b352-5073011fd89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad01644-9bce-42e9-b418-43b63205b472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "294b83d4-37d0-4f64-8f2e-39bba02b0c96",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a7147b-bd54-4528-b9f4-7641d4f81ebb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "684522b2-1ee0-4df0-8608-406aa6aa4c8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61b7a07a-a0c9-453c-b110-d4ab0083b13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5753151b-e229-434e-a791-d62d0b2ed07f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01791d6c-9d7d-4ebb-bb8c-4b4dfb76d03a",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca530225-af0c-4a80-8bf5-c4016ec32e82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "144646cd-8ae5-4dcf-a228-7237d5cfaf7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1552ec8a-21af-40a7-8b0d-4c8243fca237",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dabf0c90-ddbb-4ceb-9065-58a3a68bdd37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9132a05b-098a-45e5-b1c1-605bec72a31b",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c376501f-408a-4a3a-a9db-749601e48cab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97cd4bb7-0d1f-43ad-b556-59a1f07c1367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "170311d4-8de3-48d5-9d21-4bdbe346978c",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "590963c9-2da9-4e59-ad44-b2da141bbeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67e2cd3-04c4-4334-845e-bea066b7c9bb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a7dd31-c427-4a16-8613-5eb23782f3bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe62b316-898f-4a6c-85ae-a6fd27edd338"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c3de72-5c28-40fc-a066-8bf49bfff48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10801070-5752-4f67-90f6-a894d68cab59"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdb9ddc7-6a94-42ca-b985-f47e234a6699",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1e4e239b-e4f6-4f29-8960-f51e9664c09e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "22f2bab0-2d18-4700-a2b7-d037ee158560",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "027946ce-2d1b-4237-81ac-e5db54dd392a"
                    }
                  }
                ]
              },
              {
                "id": "3ae79b55-3fe4-4012-bc2a-a2ee0c053742",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6258a5c9-dee6-4c7a-ba4a-0b2584d97443",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dea614c-e9c8-4b20-b3b6-8fd102406835",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e19cab2c-3aca-43c1-af0e-51b2202c8d20"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c445862-e8d2-41b7-87c9-eeb3b553fdf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c4a2ec7-0528-4469-b6c8-c57a132a48cd"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "55f64e60-07a0-4261-b00a-39c9a4184de9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d3c7151-e4a1-4cc2-a171-0a3b27089e35"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2d00dabd-11c6-4de3-b45d-8667ea9d0d9e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d405335-03ce-4643-af07-d805b98272e3"
                    }
                  }
                ]
              },
              {
                "id": "dc59542a-ed5e-4aa2-a87c-378bab75dd55",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "038a2360-8d5c-4d1d-b6f1-176b6c60c9c1",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c873c3b-9897-453a-ba79-152649578ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "a2d062bd-c4c1-455a-a960-39c71bb9f9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c372687-1bf4-46f2-9309-64435170bf4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b87b3352-e475-4c21-8874-a93559a32c62"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "d990c1f1-22a9-4083-ae5e-1bde2d14d2c3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a7031c9c-8ffd-486a-afc3-5ad3a9ea1c8f",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "81bc8fe8-2270-4eb8-829e-553eef6ac205",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f51e3a54-214b-4dd0-b85a-580605d28f50"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c909498b-2387-4c86-a6d5-1a9162c2baa1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b25a994b-192a-4813-857e-2715a3ac7006"
                    }
                  }
                ]
              },
              {
                "id": "25a5dacf-76ad-468e-b87b-25c5a389e4a4",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "91d02524-f556-4ae3-a13d-9364d30a2c81",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "80cd7ba0-ebd2-4e63-9170-58efd163be8c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66c3f724-f6ee-4ba7-8ba7-c234c91cf548",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d16781c-7c7f-4b30-a9ec-f5319a0e3982"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "af3fd095-5337-44f6-9504-5fe448f2586f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "87d91f78-3290-4a51-bb54-a263d3bbded5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d9375192-40f7-4a78-8c46-d7e65c63091e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f85d222c-e4e0-467a-87af-bc3f8d9689f6"
            }
          }
        ]
      },
      {
        "id": "7404726f-d166-4288-9a10-a497b788d2c8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f5644065-2568-4211-8acb-e65d0784cd6f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f31c31f3-3703-41b7-afa9-c72313f30b5d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "63ef69b3-911c-4fd7-90f8-f357006f6629",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b587133-42d0-4d2f-9d95-73a53b84b24d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "17d3ce92-179c-43ae-bd2f-764ea416c89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88cf1774-b00b-4d73-bfe5-6125a12bab32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "000eb0a8-c039-44ce-8719-2dcdbece0c81"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92885839-2fbc-49c4-b989-2d1a47ee0cc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03bfbac4-2a6c-42ec-a8e8-0faaf468afdb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9714c5fe-bb26-45f1-94cb-a309fe7a6488",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0507230a-89d5-4f92-932f-08512174115a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bc4db6f1-04d3-49e5-9eda-6ebd9bef2d1f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "34e3cc48-30a5-4a38-ab51-3c10b0de6059"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cc6becc1-c46d-40b3-82a0-84d6ef0df3d3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e587e2aa-5f2f-48ca-9f43-271897c04a06"
            }
          }
        ]
      },
      {
        "id": "f5026068-750d-4164-a822-f470450d36ad",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "681fc588-6594-446c-b471-2aa4ca7267cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "625fecc2-a00c-419e-b904-2c8cbdc65ee0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ee9dd188-5455-490c-b233-88ed9377d1e2",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c016f4-7c6b-4889-bd48-78d998d8a301",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89f04412-8ed7-4e40-abed-6978477767b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fa9e05a-f30b-45df-9769-8c71002c962b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "76ffb986-7805-4538-a752-5148a6a86099"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "073a9b2b-ab44-4748-aa43-ee476be5d514",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfa1329b-9025-4c67-a59d-7df79aa481b6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3fa3a533-e1a3-43a1-85bb-185dfbd6994e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a05925ac-09b7-4b64-928c-576dfa854964"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ff654b85-22ab-470b-9f47-ca04cc108c75",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8989396c-74f8-458b-a1c2-92e4a7f1f6c6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7eae1590-1617-48eb-b31e-a3b6c68eb0bf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "32536fad-2e3d-44b2-968d-3d3da2dbc8bc"
            }
          }
        ]
      },
      {
        "id": "e91817f8-77b3-4cf9-a4a3-fddade8edd6e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "05c8537c-4688-4308-ad42-249c5627045e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c02b135-3cba-4f8f-a98d-91852ad679d0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b72c91a8-7e16-470d-8009-d2ddc9077d58",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27b000-fece-4031-a494-9e96255569ce",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e2294375-ae85-4846-8787-3547ab05e0f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06c3caac-73f3-44d0-8755-f8773eadd3ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "568251df-5dc4-4846-8c58-22eb25f6a7ba"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "70666fd7-b4c0-4bd8-b108-202b3ee1abfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89fcbf0f-8e26-4b87-908d-51803fa3e040"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "06759594-d29d-45b0-9cd9-1370d52f6150",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fdd19d75-3a2a-4685-b957-a05aac2f35dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f945131d-85c4-465c-b045-744dacb8c30d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d84e35d4-1625-4d01-82ff-e66826dc3c0a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "17d1e5d8-0229-49ea-9236-5434922f5b0a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a4d030a4-5039-4fc2-b3ac-88042e1aa756"
            }
          }
        ]
      },
      {
        "id": "51d3612d-d1ac-4745-8eb9-18148bf4765a",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4122b4ef-7b2d-4713-a7e9-e5c19ca5e4af",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c6664f98-a89e-4ebe-8525-da3274e14344",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3ff126ff-987e-4096-bf5a-a61411279da9",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f28a45c2-b19d-4017-87e6-84a6d7d8a720",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "de391d47-828a-42cf-9624-1820428d4920",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 4
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 619.6230158730159,
      "responseMin": 13,
      "responseMax": 21811,
      "responseSd": 3266.8794483582005,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1726706630757,
      "completed": 1726706795461
    },
    "executions": [
      {
        "id": "32eb2d4c-5ed4-4ecf-96bc-f63cb694d34e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "256d19dd-9391-45cb-b8e6-fc848914f721",
          "httpRequestId": "defb4441-8191-4d67-afbd-da484bd1f7a2"
        },
        "item": {
          "id": "32eb2d4c-5ed4-4ecf-96bc-f63cb694d34e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "7e4f54ee-3b3f-4198-bf3d-c26b0a398845",
          "status": "OK",
          "code": 200,
          "responseTime": 55,
          "responseSize": 0
        }
      },
      {
        "id": "ad3aecd7-751e-41e9-b377-84c60b86e5a3",
        "cursor": {
          "ref": "a673f642-d9f1-4806-aaf2-a8c17a812a2e",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "19a2a17f-19dd-4ac8-9efa-aa5dd083d8e2"
        },
        "item": {
          "id": "ad3aecd7-751e-41e9-b377-84c60b86e5a3",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "52b5ce97-26fb-4237-b61c-b952d0d230d2",
          "status": "OK",
          "code": 200,
          "responseTime": 13,
          "responseSize": 0
        }
      },
      {
        "id": "efc6fcb0-6923-4d08-9876-28e8b7ef4e94",
        "cursor": {
          "ref": "8cba1140-4211-4baf-aa66-af09826183f0",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "0e24cac2-c48e-41d2-9b1b-dbb812164941"
        },
        "item": {
          "id": "efc6fcb0-6923-4d08-9876-28e8b7ef4e94",
          "name": "did_json"
        },
        "response": {
          "id": "f066a76c-b29c-4268-9de7-f238f1356eb8",
          "status": "OK",
          "code": 200,
          "responseTime": 284,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b36b803-7554-4d81-a3e2-33fcc09c9930",
        "cursor": {
          "ref": "da6bd94f-9ebd-45ff-9ded-5d346ea3897c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b8135ca-75d2-4324-a6bd-7b6eeec03306"
        },
        "item": {
          "id": "9b36b803-7554-4d81-a3e2-33fcc09c9930",
          "name": "did:invalid"
        },
        "response": {
          "id": "4622a579-f1f2-4ff3-9d47-08e5c5657f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2467,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b36b803-7554-4d81-a3e2-33fcc09c9930",
        "cursor": {
          "ref": "da6bd94f-9ebd-45ff-9ded-5d346ea3897c",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "9b8135ca-75d2-4324-a6bd-7b6eeec03306"
        },
        "item": {
          "id": "9b36b803-7554-4d81-a3e2-33fcc09c9930",
          "name": "did:invalid"
        },
        "response": {
          "id": "4622a579-f1f2-4ff3-9d47-08e5c5657f9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2467,
          "responseSize": 25
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f23a841-07d6-4c82-912a-fd6b6c8331a2",
        "cursor": {
          "ref": "ddde1260-dfc2-4edd-bd12-ab97f516037c",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcc44bc9-fb08-42d2-8b68-2106cecebfd1"
        },
        "item": {
          "id": "7f23a841-07d6-4c82-912a-fd6b6c8331a2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "dd52c07a-63f0-4a9c-b603-4567245bd574",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2836,
          "responseSize": 65
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46434ce8-72fa-4c33-88cb-4b86e8fe38e2",
        "cursor": {
          "ref": "8b52c6f3-88cf-4d0e-a827-70449f29dce1",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "6f1b2c25-49e9-4545-a518-1e5f9c9a4757"
        },
        "item": {
          "id": "46434ce8-72fa-4c33-88cb-4b86e8fe38e2",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "e1eff99e-33c4-46df-b08a-486eed0dd8ba",
          "status": "Not Found",
          "code": 404,
          "responseTime": 2477,
          "responseSize": 23
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1107b09-fc00-433d-b2ec-dbe65896e921",
        "cursor": {
          "ref": "e01e7ebc-e0c4-43ab-adde-1b5c695e1ef8",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a459e456-b65b-4a0f-9964-f73d0fce3389"
        },
        "item": {
          "id": "a1107b09-fc00-433d-b2ec-dbe65896e921",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "dadec1cb-b601-4534-8c1c-2c1747a7f659",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ba29e5-3e3c-4651-940a-879c5fe0956b",
        "cursor": {
          "ref": "b94134d4-e2a2-4d2f-bb9b-ce46435e2f39",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "641ede7c-827a-477d-86e2-9b66b9b428b9"
        },
        "item": {
          "id": "04ba29e5-3e3c-4651-940a-879c5fe0956b",
          "name": "identifiers"
        },
        "response": {
          "id": "d90f0804-78e7-4f81-81a2-4fb170cd3428",
          "status": "OK",
          "code": 200,
          "responseTime": 2642,
          "responseSize": 1040
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c6129b6-1ebb-4ec8-99b4-d5409aa450dd",
        "cursor": {
          "ref": "e0610dc4-0d82-4033-9997-102253273fb3",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "4822ca68-6f57-48d5-bbeb-be79f251a44a"
        },
        "item": {
          "id": "5c6129b6-1ebb-4ec8-99b4-d5409aa450dd",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "d808a26c-602b-477e-8b3a-c20e99ece0e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab05341-cb99-48a8-baab-4df22e6ff905",
        "cursor": {
          "ref": "15992eb0-7d96-47ef-94d6-6a2bce66460c",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "827f4631-2bdb-4700-abd0-7ecedce25949"
        },
        "item": {
          "id": "6ab05341-cb99-48a8-baab-4df22e6ff905",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "aadd4161-c8aa-4ef2-8ff3-69370477020c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3ad63c5-87ae-4d66-b6d9-91efb43cd55c",
        "cursor": {
          "ref": "3c889180-8d42-4fd4-ae22-a738f7b97030",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "6d91b7d4-f1d2-45ca-966f-e9f7a75c1627"
        },
        "item": {
          "id": "b3ad63c5-87ae-4d66-b6d9-91efb43cd55c",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "de638fb7-43d1-40ea-a1cf-46dd6a90e61c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6154bf83-9756-44fe-94b5-7ea9a7c68890",
        "cursor": {
          "ref": "a3b0d5ed-d9c3-4e9d-8913-bca00f0d5050",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d4eb3401-0fd7-471c-b276-74a61927d194"
        },
        "item": {
          "id": "6154bf83-9756-44fe-94b5-7ea9a7c68890",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "d3a5748a-2eb1-4e2b-aa54-633eeda85ffa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cc45e09-c09f-4cf8-b918-abd5033d1041",
        "cursor": {
          "ref": "c2d45b45-2af4-4b7e-9fd5-0f4f3303f93c",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "da6625ed-b1eb-454e-84b7-9e4d6c2f687b"
        },
        "item": {
          "id": "8cc45e09-c09f-4cf8-b918-abd5033d1041",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3b881a8-bf4f-44fe-809d-98e3ec5bc058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd0778eb-679f-4697-afea-998bb0774205",
        "cursor": {
          "ref": "b0e6add7-9306-4ecc-9ccd-2d36c2aa25a5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bb7ba19f-a1a7-4975-8a82-d2c9acf7f217"
        },
        "item": {
          "id": "fd0778eb-679f-4697-afea-998bb0774205",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "5df9799e-f92a-46e5-a1f4-068445532f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e095059a-0f11-491d-b156-bee4a18fb43f",
        "cursor": {
          "ref": "c79630c3-812a-4d38-8591-9f2122a0b020",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "5b30ce3c-5dba-4b42-a163-a91302f50afc"
        },
        "item": {
          "id": "e095059a-0f11-491d-b156-bee4a18fb43f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "081fd989-4b44-424c-9b40-47cb783c8c7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ca1db8-71f0-4462-a2e6-8540e7aeb694",
        "cursor": {
          "ref": "37699b60-e250-4653-8e25-19e30986f7d6",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "501405c7-e98e-4e1d-8774-f0cfab74cf05"
        },
        "item": {
          "id": "e1ca1db8-71f0-4462-a2e6-8540e7aeb694",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "d7d64c40-fa70-4adb-bb98-56d1668c1bb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3476f1b3-5597-44d7-9894-a13986b25e86",
        "cursor": {
          "ref": "54c0e2c7-c22d-4fdd-ab29-c90c109aa1e0",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "8ede37a9-aaf1-4064-b05a-42a66c0394bc"
        },
        "item": {
          "id": "3476f1b3-5597-44d7-9894-a13986b25e86",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cf42ed0b-4781-4b0b-874e-88098cb51399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cc3835-757e-4fa7-a257-9893d826e2a6",
        "cursor": {
          "ref": "e596e1c1-ae54-432a-8a59-84f48522822f",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "e248ae43-41d9-4e7b-9375-02526fc6172e"
        },
        "item": {
          "id": "04cc3835-757e-4fa7-a257-9893d826e2a6",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "a81b9817-3652-40ab-bccf-7ea42d8f594f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab655b93-ce0c-4865-b8df-47cdf542b5e5",
        "cursor": {
          "ref": "e0594b1a-c042-4ec9-bba3-e72b977fdbf9",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "d4a7573d-3356-47d2-9c60-e3184d068862"
        },
        "item": {
          "id": "ab655b93-ce0c-4865-b8df-47cdf542b5e5",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "9db92a37-e2d8-4e5b-bcaf-0f7a0356c9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cafe6233-98ab-4e7a-8526-20638ad5d651",
        "cursor": {
          "ref": "69b8f55a-48db-4fee-ad1e-ef5eb65f4ad9",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c46d7fad-2009-4d17-a666-de804be3e0c1"
        },
        "item": {
          "id": "cafe6233-98ab-4e7a-8526-20638ad5d651",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "eab13930-d337-470c-87ce-fd7c73ef8031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d462e06-56fa-4bf0-8fe4-de9e8e9075a0",
        "cursor": {
          "ref": "66a58b51-d7fb-4a2f-8863-92a38e3880fc",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "74f0b485-4a72-4989-bb9c-74369e5bc6c5"
        },
        "item": {
          "id": "8d462e06-56fa-4bf0-8fe4-de9e8e9075a0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bcc80e31-4cb7-47a0-b132-aceca03cd496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e8c189-cf07-4ca7-88a5-c8c979da10cd",
        "cursor": {
          "ref": "d35deac6-b156-4efc-8951-6672be6f949c",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "61ea075a-7cb0-40a9-ae9f-8f1ac94829e3"
        },
        "item": {
          "id": "07e8c189-cf07-4ca7-88a5-c8c979da10cd",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "be2119d2-d599-4f9c-b875-1f3e24bf24d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2efca4e-03b5-4ce3-8af3-92b1b1e73e5c",
        "cursor": {
          "ref": "486bf5a5-94c1-4405-b9e7-fe0e06799986",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "cb3496bb-b097-4121-937d-e5911d37d3af"
        },
        "item": {
          "id": "b2efca4e-03b5-4ce3-8af3-92b1b1e73e5c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "a0b3e6bd-1599-4fc4-927b-6c9145db6d7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "269a32fa-ed05-4940-9525-5bcd4dbe43e9",
        "cursor": {
          "ref": "efa1978a-824a-435a-be22-feab3bf31573",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "09330a42-92b0-4b5b-a0bb-295a6d9c0ab9"
        },
        "item": {
          "id": "269a32fa-ed05-4940-9525-5bcd4dbe43e9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "c546baab-da29-4337-88a5-348257b45d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd63528a-d8b0-420f-b027-65353caecad8",
        "cursor": {
          "ref": "71a78549-b500-4571-bb84-fbfec1221dbe",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "42cb50a2-8811-4662-817c-e940a31be49c"
        },
        "item": {
          "id": "cd63528a-d8b0-420f-b027-65353caecad8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "91eea96d-1e4d-4fc5-bb5d-77dd825e9907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e7dd80-dd2d-4f1d-9119-a5323b66588a",
        "cursor": {
          "ref": "fa27beae-7426-4919-94f1-7958fb6103a6",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "bd7571b1-0da7-4a2b-a9ca-90b2f5c27c8a"
        },
        "item": {
          "id": "08e7dd80-dd2d-4f1d-9119-a5323b66588a",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "0dae0c4b-d238-4ab7-9cf7-3b46b4fc7b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99ba29a7-c40b-41cd-a296-810847e09577",
        "cursor": {
          "ref": "591af37e-68ec-4dc1-a30b-f75074de9417",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0c25ef9d-d6ed-46a9-af14-e3451f4a7043"
        },
        "item": {
          "id": "99ba29a7-c40b-41cd-a296-810847e09577",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "d87373c7-9787-4a2f-b2df-e763c67ce3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ca5c165-11a3-405c-8a6b-71c2564ef1a4",
        "cursor": {
          "ref": "5850eefe-9b8e-4cec-ba1c-9a8900c71482",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "02a6363a-5d32-48e5-8d51-ba6d302e78ae"
        },
        "item": {
          "id": "8ca5c165-11a3-405c-8a6b-71c2564ef1a4",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "72024822-aada-4635-8247-eaceed95d028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2a3fe8f-d885-422d-ab6a-0d3da2a53c2a",
        "cursor": {
          "ref": "18c71caf-e929-47fa-8a23-abe845a82f48",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "752d12f9-ae4d-469a-b554-f1c30ed397a6"
        },
        "item": {
          "id": "c2a3fe8f-d885-422d-ab6a-0d3da2a53c2a",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "d11a6193-709b-47e9-a132-516ebf8439af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765ac79c-c9c5-47f9-8756-0a1a9698cd90",
        "cursor": {
          "ref": "e624b25d-aed4-4069-88d2-e27fb8368389",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9d4d913d-fe94-49a3-8a63-0a93977607ef"
        },
        "item": {
          "id": "765ac79c-c9c5-47f9-8756-0a1a9698cd90",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a9a3b349-cff3-4980-9a78-d83c49304bc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6183afc5-2826-4c4a-8bfc-25127d2c8fcf",
        "cursor": {
          "ref": "6beb29e2-8a65-445f-a72a-53ceafd93056",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6725aafc-3688-4494-b8c5-16e0bb7a16ab"
        },
        "item": {
          "id": "6183afc5-2826-4c4a-8bfc-25127d2c8fcf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9e9275e5-353a-4881-8955-99032986f72e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0ba702-d0cd-4b3c-acaf-83ae2f3d565d",
        "cursor": {
          "ref": "819b155f-198f-4f74-b9ee-eeddd01ae53d",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "514ce288-fd6e-4a76-929c-533bc083425d"
        },
        "item": {
          "id": "6e0ba702-d0cd-4b3c-acaf-83ae2f3d565d",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "702607e6-dae3-4601-8afc-0e90a8575b9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62901308-9352-4e3a-9d3f-c91cf0cb9b37",
        "cursor": {
          "ref": "d7279d1f-8502-43b6-ad43-a6f6b165dbea",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7cbc706a-ba15-4065-b6d3-b29c0cdf4f0f"
        },
        "item": {
          "id": "62901308-9352-4e3a-9d3f-c91cf0cb9b37",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "44d0821a-0984-4b7e-8d8b-22cfe3ecd725",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1942cb-7e72-457d-9c88-305b9ce61a43",
        "cursor": {
          "ref": "1c9ad566-934e-49fb-9619-5d7a647ac6cb",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9094708f-c17c-4cba-96d0-bde80327d9f6"
        },
        "item": {
          "id": "fd1942cb-7e72-457d-9c88-305b9ce61a43",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "76d0c97e-4d0c-4316-a24c-341a7fbd0c6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b435e11b-8a32-4df7-9ce1-bc5138dd6558",
        "cursor": {
          "ref": "a904c03d-8e2e-4cff-b116-bcae117aff74",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "b89af3aa-2ea8-47d8-ab19-208b328f67db"
        },
        "item": {
          "id": "b435e11b-8a32-4df7-9ce1-bc5138dd6558",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "db51888a-51f0-4618-a1a5-0b5838e9c3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a55a4228-51f0-4c49-a94d-fd6dc69abacc",
        "cursor": {
          "ref": "8e786d45-fb73-43f8-a831-5fff59cb5991",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "2449a786-409b-41b6-83a2-150c175b560e"
        },
        "item": {
          "id": "a55a4228-51f0-4c49-a94d-fd6dc69abacc",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "16bea9bc-0112-4173-8c05-1c6294295fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97c1f842-b231-4b2a-b95f-1e5a49c6f253",
        "cursor": {
          "ref": "e7c8eb2d-bfa9-44e5-a460-2b84473c54bf",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e9ba26d1-7df4-47b4-b62d-99890db2eb1b"
        },
        "item": {
          "id": "97c1f842-b231-4b2a-b95f-1e5a49c6f253",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "d0ce6a63-50d3-470b-ba1c-c1b1058fd4ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dabdd9d-4298-4743-978a-777f77d380c7",
        "cursor": {
          "ref": "27cee9c4-0434-4244-b44b-9895b994fa23",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d69744d4-5541-4581-945d-971303318915"
        },
        "item": {
          "id": "7dabdd9d-4298-4743-978a-777f77d380c7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "6809ac49-0daa-4bbc-9bd4-579c6a4fbfb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce302e87-b669-4ea4-b654-7383f8ee2978",
        "cursor": {
          "ref": "4d6f0022-61fe-4c3b-91c3-78e7692d350d",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "f30d1106-fa79-4eca-b6e8-710ed31d6d9e"
        },
        "item": {
          "id": "ce302e87-b669-4ea4-b654-7383f8ee2978",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "1fce2d30-0f86-4334-a69c-1ce5d806239d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc4029c-5ae3-4c2a-a146-af8d05b28d9a",
        "cursor": {
          "ref": "3b82a355-14e8-49c4-8fb3-6a68b5df3358",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "8c6eaa3c-7520-4804-ac30-12ca3f984d73"
        },
        "item": {
          "id": "bcc4029c-5ae3-4c2a-a146-af8d05b28d9a",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "eebf0873-42fb-4bb8-a0f2-a568e73a4d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32dccdde-834c-4e01-885f-3061682943b2",
        "cursor": {
          "ref": "629f891e-5beb-47a4-a4c1-57683ca8f905",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "2d5b273e-c545-4e27-a771-c6b28c729f05"
        },
        "item": {
          "id": "32dccdde-834c-4e01-885f-3061682943b2",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "d7bbe0cd-4496-42c1-be9d-31720d75711b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28250e04-ccd0-489b-bd18-f33a0be9e77b",
        "cursor": {
          "ref": "f2fd1174-f41b-4a87-a43a-cf165bfed9ce",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ae6e2720-ebdb-4826-b5a9-b680eb53a7a5"
        },
        "item": {
          "id": "28250e04-ccd0-489b-bd18-f33a0be9e77b",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e63681c9-bc4e-44a6-aeae-3596ef312d20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c403aeb4-be76-43b6-b428-c2e53e718c71",
        "cursor": {
          "ref": "bed208ba-d441-40d8-8952-cd110fdabd7d",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "db413654-e317-4007-a37a-c4d02d90a803"
        },
        "item": {
          "id": "c403aeb4-be76-43b6-b428-c2e53e718c71",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "7d6787d3-b301-41c6-b426-ee16dcdecc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c03ff4f-9ae1-4415-9eb1-c3e96de796bb",
        "cursor": {
          "ref": "0e1e8325-abe3-4dd3-b26f-e9e11d401e67",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "9b716b9e-ef71-4405-9fbe-7698c798f858"
        },
        "item": {
          "id": "3c03ff4f-9ae1-4415-9eb1-c3e96de796bb",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "8797b9be-e8e8-4c2b-a83a-def21ce254aa",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bf5bd7c-abff-4928-96b7-76433fe98060",
        "cursor": {
          "ref": "25f650b9-096d-485f-9d7c-0ee2aa198fba",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "3930d157-6510-4191-8289-eda5c53a3b47"
        },
        "item": {
          "id": "4bf5bd7c-abff-4928-96b7-76433fe98060",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "200964a9-d8d2-4575-8d75-05b171e675cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6d48320-2593-41d2-91a7-4caf3d1e18e0",
        "cursor": {
          "ref": "ac17b091-911f-4475-858b-886daff96dc5",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "f17ea892-e1ab-457e-ac1a-dc78436845cf"
        },
        "item": {
          "id": "b6d48320-2593-41d2-91a7-4caf3d1e18e0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "67c2f69e-0a73-4ca2-9233-bea30ce9908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa81123-17e3-485b-9757-c66ffe7d0bdf",
        "cursor": {
          "ref": "36056479-5f5a-41e3-9261-b309d1986922",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "aeb6c592-73e3-429d-8a17-5ef260073126"
        },
        "item": {
          "id": "9fa81123-17e3-485b-9757-c66ffe7d0bdf",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "2d3ff3e1-8c6c-45b7-8331-cbdce5901b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d73621b-5cff-4e2b-a53d-826f4a1a3893",
        "cursor": {
          "ref": "3207a109-9f68-4d51-9587-cc1813554887",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "f069e9d7-70ce-441e-a752-8baa7a90ed62"
        },
        "item": {
          "id": "6d73621b-5cff-4e2b-a53d-826f4a1a3893",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a00cd4b9-e059-47ee-ae4d-a142edddde89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a846a0-8298-4ba2-970a-3003eecf0285",
        "cursor": {
          "ref": "9733fac2-e297-4528-a2c3-164fda74d66f",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f58e66cd-c658-4c35-9f0b-27d824f8ee79"
        },
        "item": {
          "id": "73a846a0-8298-4ba2-970a-3003eecf0285",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "84be5b2a-86d6-4fca-a214-8fd98526d3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3a9759-a820-4de8-befb-4a81431742cc",
        "cursor": {
          "ref": "74e4810f-79df-4942-9de6-520f10e5134d",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "8d06609b-dfa4-4202-a2e6-1769e43618c1"
        },
        "item": {
          "id": "fe3a9759-a820-4de8-befb-4a81431742cc",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "2e5a9bfd-702a-47da-be6e-00d26d511f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5454a1-cd2c-4205-8e77-c3f7964a56f0",
        "cursor": {
          "ref": "7ba411a4-2802-47bd-a3db-3e6642047c0b",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "acb8fd48-1767-4194-82d2-d66794dce40d"
        },
        "item": {
          "id": "8e5454a1-cd2c-4205-8e77-c3f7964a56f0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "0db9930f-844b-429b-8cb9-b499aabbb67a",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 32,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98335b4c-fcb5-4312-8347-5fa559825294",
        "cursor": {
          "ref": "c8b8adb3-ca53-40b2-aa76-3e8c61379488",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9befcf3a-9610-4b29-b5d8-72509fcb8cdb"
        },
        "item": {
          "id": "98335b4c-fcb5-4312-8347-5fa559825294",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0e47e7cd-61ac-46a2-902e-ef076da30db2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe3d7495-50f0-4879-8aec-9e91f47626d5",
        "cursor": {
          "ref": "7227b270-d541-4672-ac3a-b52cb331ca8b",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "76aac45c-632d-43e3-8466-da036fca406c"
        },
        "item": {
          "id": "fe3d7495-50f0-4879-8aec-9e91f47626d5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "0dd51275-4fdb-42b1-aa6a-5df73797f1ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f624f315-0010-4e3e-b9cd-bf104870c3f9",
        "cursor": {
          "ref": "95219aae-81e5-47c4-a944-2d51fe05433f",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "241c2721-e703-4370-888e-6d50faf012a4"
        },
        "item": {
          "id": "f624f315-0010-4e3e-b9cd-bf104870c3f9",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "d40c696e-cc49-4e45-92a6-b6adfdb35a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 261,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "745a85dd-f4df-4a8d-9970-f8f28059924f",
        "cursor": {
          "ref": "40a2f1fb-2939-47f7-b483-2b0e7cb171d2",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8d22bdc-9495-474a-92cf-1284eb77d1be"
        },
        "item": {
          "id": "745a85dd-f4df-4a8d-9970-f8f28059924f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "2652fe63-9a62-4e81-87ec-276e9269766b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb04f59-9c69-437b-80eb-09e9f498d507",
        "cursor": {
          "ref": "aac2f8d3-0d99-46ec-9b53-aa0891d23082",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "5fae4b99-6e02-445b-b1c0-a88ab4e6b5c0"
        },
        "item": {
          "id": "3eb04f59-9c69-437b-80eb-09e9f498d507",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "4662df6b-167d-4cd0-9cd5-389664afa84f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158f0343-f384-42ad-8576-fda61d3bbf4f",
        "cursor": {
          "ref": "3d49bf6d-92c2-4de5-9363-705b7f2dccbe",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "db2a0554-d523-4835-852b-a3787ed01591"
        },
        "item": {
          "id": "158f0343-f384-42ad-8576-fda61d3bbf4f",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "f4e5282a-cace-4476-999b-6a60d3f84653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f84cbab-5b57-4090-8c75-4fb6eda0e649",
        "cursor": {
          "ref": "5c61f893-141a-4012-a97f-133fcef6c56a",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ef893a4d-7456-439f-8e11-8ee82068ca86"
        },
        "item": {
          "id": "9f84cbab-5b57-4090-8c75-4fb6eda0e649",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "6a7eada0-0ed3-4a18-8e8a-009ca792f7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b3adb2f-4b7e-4f6d-b45e-943b87999796",
        "cursor": {
          "ref": "4a5be499-7db3-47e5-bb44-fe7828e75abc",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "cccc6636-a54e-4fba-ba1b-db8af7c6343e"
        },
        "item": {
          "id": "5b3adb2f-4b7e-4f6d-b45e-943b87999796",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2ae0a44a-25b7-4088-9558-1d4858ce0f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271c00e2-ce49-49d3-985a-fe7b2ffbd618",
        "cursor": {
          "ref": "d5ac9578-3803-4773-b6c9-7be5d5b0448d",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "05f60501-badb-4161-8c9d-f26600985cb9"
        },
        "item": {
          "id": "271c00e2-ce49-49d3-985a-fe7b2ffbd618",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d295f87f-e399-4fd3-ad16-7f1f722d1095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd55242-41ba-48bb-adfb-784070a7c86d",
        "cursor": {
          "ref": "27f40dc7-b4da-477b-b1d9-1254684bda66",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4678160e-ee66-4f14-81fc-28fc283be03d"
        },
        "item": {
          "id": "bfd55242-41ba-48bb-adfb-784070a7c86d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "81d224d9-8ab5-4b74-a21c-8f2acec36572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f2c7f4f-9560-4611-9719-0912abc45ff9",
        "cursor": {
          "ref": "06712469-07dc-4e96-9f20-50a52e19ca74",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "d1b52cbb-adba-4cf4-9712-dfc727d53083"
        },
        "item": {
          "id": "1f2c7f4f-9560-4611-9719-0912abc45ff9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2600c383-0e81-4aab-aaf0-52d4443ab688",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d38943f2-ab8f-4e9d-bdf5-e1195433bc65",
        "cursor": {
          "ref": "098bd344-5fd0-4d38-b6e3-9b36caa3ed08",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a03d605d-3b1c-40b7-8e53-547b97d95050"
        },
        "item": {
          "id": "d38943f2-ab8f-4e9d-bdf5-e1195433bc65",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "7cbf5107-4837-4d14-a1ee-5dc7db48c702",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7f8d07-d5ed-41ee-a638-560d906392a7",
        "cursor": {
          "ref": "b953ca64-9d41-4ef5-ae38-5de05a0f5e23",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "6071fff6-f2a6-45c4-a2fa-957887268888"
        },
        "item": {
          "id": "4c7f8d07-d5ed-41ee-a638-560d906392a7",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "7853057b-0d99-40c2-9d84-b8c92344d84d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d484340-f93e-4cf7-9bf5-208b4908608c",
        "cursor": {
          "ref": "b4b71ec6-cc13-4537-9688-02d1274ac254",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "fbd0860a-7d4c-49bd-b1b5-ed7797258399"
        },
        "item": {
          "id": "0d484340-f93e-4cf7-9bf5-208b4908608c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "26a235cd-026e-40ca-8b43-05b5af830acc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85482113-aa0f-489b-b85e-aec10030bdd3",
        "cursor": {
          "ref": "d6d40bae-9bed-43d2-a426-d1516a98e300",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "310df9bd-16dd-49e3-9cf6-230a86be7084"
        },
        "item": {
          "id": "85482113-aa0f-489b-b85e-aec10030bdd3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4c40cbf7-3d60-420b-b8c1-2a4448b8f00d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23da8e5-fbdf-4bda-9b62-4d6118207d77",
        "cursor": {
          "ref": "5a59c0f8-ddca-4f03-b43b-e81098908529",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "6cb20c8c-0f29-4806-8843-ee8724597af3"
        },
        "item": {
          "id": "b23da8e5-fbdf-4bda-9b62-4d6118207d77",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "69b2258c-0bc0-49a6-ba82-bde36e666302",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "058e1029-fa1e-41ed-8619-7736d41b7556",
        "cursor": {
          "ref": "6238b5cd-cb73-4f8b-93d2-69c3ccc60484",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "0ea10e44-d7d4-48b3-b683-950a7ac74208"
        },
        "item": {
          "id": "058e1029-fa1e-41ed-8619-7736d41b7556",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "06f3c2dd-caab-46cf-bb2f-91a79ab76a04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b24d86b-e426-4a40-9ab5-2d33eb9f827f",
        "cursor": {
          "ref": "72eec0c5-e50d-4c19-b34c-6a1d0005fe14",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "324bfd2e-faa1-4208-95e3-3396f11e5683"
        },
        "item": {
          "id": "6b24d86b-e426-4a40-9ab5-2d33eb9f827f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6750381f-1cc1-4a27-b5e6-1fb5497c8571",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87635d20-a0ab-436a-bdc1-bcc57d62f05b",
        "cursor": {
          "ref": "ce76f1df-8bd4-4d77-ba39-4708074eb7cd",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "7052a0e1-b379-4eec-a552-91902451474f"
        },
        "item": {
          "id": "87635d20-a0ab-436a-bdc1-bcc57d62f05b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "a5f67c7c-3413-490a-a72d-104a55aff8fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eed33ab8-ee70-431f-9fae-9f2f4be05875",
        "cursor": {
          "ref": "80bd0127-6f29-4e53-9d84-84b4350ade97",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a8103f42-5860-4742-bfbc-455fc4c060cb"
        },
        "item": {
          "id": "eed33ab8-ee70-431f-9fae-9f2f4be05875",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "5ced123c-4e7a-402d-9458-5352bd2e04f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f750bd-c2d7-4da0-a665-7061ccf62530",
        "cursor": {
          "ref": "5c54195e-54dc-4314-bdd8-c4e819c89d11",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "16dba32c-297f-4892-8cf6-69f979f2207e"
        },
        "item": {
          "id": "d5f750bd-c2d7-4da0-a665-7061ccf62530",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "e4b88872-f984-4802-ad8a-af1d780303f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7153fa2a-6b02-49cf-9def-6f3e100d3060",
        "cursor": {
          "ref": "43becacf-c3d4-437e-867e-e0737bc86c75",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c70b7d9-dfca-46a9-b7a9-0bf7276c4fe6"
        },
        "item": {
          "id": "7153fa2a-6b02-49cf-9def-6f3e100d3060",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ee01ea1b-6049-4eb4-afb9-fcd44eb81efa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a011feaa-dd19-4483-be1f-5d6ac5279e7d",
        "cursor": {
          "ref": "36828139-c230-4146-a633-176396c927ed",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "0f1432fd-5239-413d-8ade-058619fe154e"
        },
        "item": {
          "id": "a011feaa-dd19-4483-be1f-5d6ac5279e7d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "1eea53f3-ba83-43d5-b448-3db2c30573fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a369b20-dc0b-449a-8e17-cc681af6fd22",
        "cursor": {
          "ref": "2af30941-c6fa-4485-8599-7f165dff9823",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "8c1b4bf7-2839-416e-8c0b-ead3213e899a"
        },
        "item": {
          "id": "5a369b20-dc0b-449a-8e17-cc681af6fd22",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "f830efe5-3eb3-4957-94f3-031b8efc4ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3b8a38-0284-4a59-8da5-d55d6c533d94",
        "cursor": {
          "ref": "a38be33c-35cb-4e84-9651-80969c5efccb",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "26d62923-4856-4f06-ab18-dee8113a1334"
        },
        "item": {
          "id": "3c3b8a38-0284-4a59-8da5-d55d6c533d94",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "27d7631f-7194-4476-b7ee-e4c3ad5f5e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "204e89d4-c2c3-47e2-9a9e-e690d95d8a97",
        "cursor": {
          "ref": "2c5d43dc-f58a-49d5-8634-35d156b23045",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "a701442a-08b3-4315-99a9-dd240532ed4a"
        },
        "item": {
          "id": "204e89d4-c2c3-47e2-9a9e-e690d95d8a97",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "4f7f0cb9-281d-4e0d-b5be-4fefbc52c3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "463f7b68-2c93-4c17-9a9f-7855356ec740",
        "cursor": {
          "ref": "30705c37-e022-46e4-975c-86f40276c3a8",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "d204f8fa-79fb-4b86-96a9-2554c616784e"
        },
        "item": {
          "id": "463f7b68-2c93-4c17-9a9f-7855356ec740",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "51db43a5-cc16-4b82-8dab-b5f6dedfa7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caf72000-ffe3-4561-a12f-0416767cc142",
        "cursor": {
          "ref": "293f8da9-d8f5-4fec-ad02-f0a111824253",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "1f6fee95-c812-4ece-b299-4908978a9ec4"
        },
        "item": {
          "id": "caf72000-ffe3-4561-a12f-0416767cc142",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "d4a4f074-813a-4f54-bb67-6032d51c7588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251a5f66-b09c-4383-8806-73b1ee6aefa6",
        "cursor": {
          "ref": "e83adcd8-afb0-45d7-835e-6308dadba48c",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "8832c285-7ba7-4e77-ba48-36acb552b64f"
        },
        "item": {
          "id": "251a5f66-b09c-4383-8806-73b1ee6aefa6",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e49564b0-002b-4f83-90ae-4ffc92f9b985",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5169bbc0-1910-47c2-b6ff-06c53a0ab113",
        "cursor": {
          "ref": "cc510874-a7b2-4a51-8129-62dbd1d9b66c",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f7beb04e-9e74-4ed9-b551-8484952495a7"
        },
        "item": {
          "id": "5169bbc0-1910-47c2-b6ff-06c53a0ab113",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "240af488-68e8-45f2-a975-7a94eaa0d3a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "468803fa-1ae6-487b-8dbd-c2aaf673a1d4",
        "cursor": {
          "ref": "16fe8bcd-db56-4983-9b59-31cc0b806eec",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "beab1d4e-e9bb-4512-a1ed-e50a87e9fde6"
        },
        "item": {
          "id": "468803fa-1ae6-487b-8dbd-c2aaf673a1d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "4cbb86d9-d5e3-4b19-86f9-6e093c3d27d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dbd9155-5943-456f-a37a-899273902974",
        "cursor": {
          "ref": "8bda153f-cc8d-4ced-8437-1b1278c65eac",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d187d267-223d-48ee-9a5b-1ec60b2b99e4"
        },
        "item": {
          "id": "3dbd9155-5943-456f-a37a-899273902974",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "7ac117cb-100e-430a-be6b-e0bd376d496e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ca70b5-6427-4517-8be9-1c3f8721a789",
        "cursor": {
          "ref": "302c477b-79f2-47ba-b921-a848450d7b91",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ce894732-3e58-4d8d-9afb-7b222c8efb60"
        },
        "item": {
          "id": "b6ca70b5-6427-4517-8be9-1c3f8721a789",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ee40616e-7474-45b6-979c-4af7df76c878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "632a2828-9d36-4bac-a138-a9a59ab3a8cd",
        "cursor": {
          "ref": "1649f453-f6ed-4bc0-933d-83063e9ce338",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "2210eb4e-cfbc-4fa4-82e2-c73e36f73eea"
        },
        "item": {
          "id": "632a2828-9d36-4bac-a138-a9a59ab3a8cd",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "01dacf41-c24d-4741-b67e-7acbfcb45420",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef6f4dd-da64-4b73-81a6-c1465b402dce",
        "cursor": {
          "ref": "ed8db1c3-64d2-4759-8ef1-26712929c181",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "64d8c05e-b70e-4875-bb3b-6b5a9ee0febb"
        },
        "item": {
          "id": "6ef6f4dd-da64-4b73-81a6-c1465b402dce",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4de6d73a-824a-47e4-99f8-fb44a01f469c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c602b50-0603-45f2-8e27-18b403bbc922",
        "cursor": {
          "ref": "cd379afa-be0c-40f2-b125-03f362572a82",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "84951646-618f-4231-bbad-472797a34d82"
        },
        "item": {
          "id": "2c602b50-0603-45f2-8e27-18b403bbc922",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "88ff06e6-5faf-40ae-adc1-0b3dc9c76d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9842b7f-5f14-4ade-944e-0c4feeaad040",
        "cursor": {
          "ref": "65f2174a-1e6e-43ea-b192-327ce00caef6",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "02c96e88-4194-4663-bbe5-65affd187f27"
        },
        "item": {
          "id": "c9842b7f-5f14-4ade-944e-0c4feeaad040",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c68f3e43-e630-4517-bc06-a9da64125dba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b6258c1-95e6-46e9-8685-b1db93e2fac1",
        "cursor": {
          "ref": "264cab34-cf22-4822-bd43-aef5958fd14e",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "dd3dddc9-4790-4ac0-85ff-a4f6318605b8"
        },
        "item": {
          "id": "0b6258c1-95e6-46e9-8685-b1db93e2fac1",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "35dec0b4-3600-479b-a505-9ec826a06889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d291b7f6-ada6-438f-ac8c-262f8b6e9c6d",
        "cursor": {
          "ref": "b3185088-f493-4a17-8a72-f91df087aff3",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a9dd746c-b721-4fe7-abf3-69f30cc8c32e"
        },
        "item": {
          "id": "d291b7f6-ada6-438f-ac8c-262f8b6e9c6d",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "25990028-fbb6-439a-8685-ff8dc146a75e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95995215-7943-495e-aa24-d552287f0123",
        "cursor": {
          "ref": "2fda624e-0776-43fc-9e9e-6e2493002941",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "e5582db3-1054-49b7-a1af-47d143c57c38"
        },
        "item": {
          "id": "95995215-7943-495e-aa24-d552287f0123",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "2b5ee27a-0427-40ad-ba3e-1bedb057bbbd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c88da2-0483-4c35-ab56-5329d27604d6",
        "cursor": {
          "ref": "84d1bdae-407d-407f-b9d8-82b78fc84b1b",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "fefa0be0-1a80-4436-92d0-0f702b3d67c7"
        },
        "item": {
          "id": "66c88da2-0483-4c35-ab56-5329d27604d6",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0ee23555-5233-4a4c-8f46-b0f2ada444a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be84543e-bb03-49e2-a28d-5398e1cb9c7f",
        "cursor": {
          "ref": "2010637b-f774-4aef-af69-d8ffa66edba6",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "dd2fde7e-66b1-4742-a29c-2488eab724d9"
        },
        "item": {
          "id": "be84543e-bb03-49e2-a28d-5398e1cb9c7f",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "a3fba6b3-ac1a-4141-b573-3602867bc19e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a09ceb-a66c-4e5f-abb7-38bb3cd5a1ba",
        "cursor": {
          "ref": "f79a57d6-b462-4617-b88c-c9db5cb8e244",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "a771bb6d-d79b-468f-9a08-0e5013ad36e5"
        },
        "item": {
          "id": "95a09ceb-a66c-4e5f-abb7-38bb3cd5a1ba",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "55b8008e-908e-4b24-b4ce-e8299bf8d4ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02b528df-dd63-49fb-a80b-583c08aedbd0",
        "cursor": {
          "ref": "f31b4830-85e2-4fa5-8524-6b936450defc",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "768118bc-8b8a-41ee-9ef9-7cbb748cc794"
        },
        "item": {
          "id": "02b528df-dd63-49fb-a80b-583c08aedbd0",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ce5145d6-8886-4f3a-b109-bc3523457ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79591771-96eb-4d3b-8836-dd1fe3ff5e9d",
        "cursor": {
          "ref": "7444486a-25b9-4aa5-809f-d9846263ee07",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "ca1ae72f-a9cb-4f6f-8c7e-07f15b6cb85f"
        },
        "item": {
          "id": "79591771-96eb-4d3b-8836-dd1fe3ff5e9d",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7a83077a-c635-49f3-9629-2e117d1c8a21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91851673-6b07-4c43-8a45-872f28654f9f",
        "cursor": {
          "ref": "ace1851a-a1da-419a-af5a-532336ac41f6",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b529846b-8c3e-475f-8805-719407b83010"
        },
        "item": {
          "id": "91851673-6b07-4c43-8a45-872f28654f9f",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "21e81fdd-afe9-42a0-8dd4-a4f5fd16d2dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6894eb4-3159-4a61-b660-347df28842bc",
        "cursor": {
          "ref": "d408d513-801a-4b0c-ae13-78545e3e438a",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "c320c4bb-b0f2-472a-8652-48395a1f83fe"
        },
        "item": {
          "id": "b6894eb4-3159-4a61-b660-347df28842bc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "535e9bff-cabc-4168-bd50-ad6f6cf63dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3130f86-cb35-498c-b298-68c6439ab41e",
        "cursor": {
          "ref": "f4cb6511-b6d9-45ef-91d4-009899f14b9b",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8dc4fdf8-7169-491c-b7fe-02257b201046"
        },
        "item": {
          "id": "a3130f86-cb35-498c-b298-68c6439ab41e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "7a887364-dc72-4cde-a80d-25fcaa727018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfb818a0-17ef-40e4-8cb0-edcd44ae6062",
        "cursor": {
          "ref": "88ae420b-d2c3-45a7-9cf7-341f3fdb9f8a",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4456668b-ce26-48d4-8eca-0f00602c46cc"
        },
        "item": {
          "id": "dfb818a0-17ef-40e4-8cb0-edcd44ae6062",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "85b163ee-2b6b-4d75-9401-1be20b5cb0bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91bda571-d061-4085-8cc9-4e133ecc4510",
        "cursor": {
          "ref": "2898f3cf-a0f5-40a8-9682-3b3f96d17b2d",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "1426d3c2-a31f-40a4-81fa-ab9c447ed620"
        },
        "item": {
          "id": "91bda571-d061-4085-8cc9-4e133ecc4510",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6f755017-a358-4c46-811a-3d1d9ec604a6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9398cac3-b57f-41b6-9f1f-c08bde54ec84",
        "cursor": {
          "ref": "615ff1be-3cd9-4b38-ad06-1ba7fb55f6a0",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "724a9af6-066d-438a-843d-671b6939e2cb"
        },
        "item": {
          "id": "9398cac3-b57f-41b6-9f1f-c08bde54ec84",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "ceaaca19-371e-42ef-86e4-d57321a9744e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "6a6c4c92-2c5f-45d2-869e-5c7373a5262a",
        "cursor": {
          "ref": "97412bb1-d298-4eff-adc5-8a6911bb356d",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1ba7a3c4-8c2f-443e-a5f2-b6dc951f9dd6"
        },
        "item": {
          "id": "6a6c4c92-2c5f-45d2-869e-5c7373a5262a",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c654a1be-240b-4fe1-843a-e30b5141609b",
          "status": "Created",
          "code": 201,
          "responseTime": 21556,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "78fe3d77-18f1-40ae-8eed-9b4c5674619a",
        "cursor": {
          "ref": "1c929fc6-b5c7-498e-8a3d-e0fafe11a033",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c6c53880-1196-47a3-98f1-9e1180561706"
        },
        "item": {
          "id": "78fe3d77-18f1-40ae-8eed-9b4c5674619a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4256edcc-0a87-4e15-a564-cd32ba09c47a",
          "status": "Created",
          "code": 201,
          "responseTime": 21197,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eb5db8-b40f-4194-9e08-b3ef98b32d87",
        "cursor": {
          "ref": "cd5fbf3f-d0d1-459c-87cb-8a42ce65415a",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ee1a6a4f-ee29-4c6b-976a-81ac298b7a53"
        },
        "item": {
          "id": "10eb5db8-b40f-4194-9e08-b3ef98b32d87",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a32f02c6-b6b6-44c2-b119-7ca5c7abc9b7",
          "status": "Created",
          "code": 201,
          "responseTime": 21811,
          "responseSize": 1231
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b9e3f03-0249-4ae4-8064-d4cdb337f58d",
        "cursor": {
          "ref": "3b0d940c-9d02-4318-b6be-a580c0765722",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "b158da06-3c6a-490e-b185-cf371ad0575f"
        },
        "item": {
          "id": "7b9e3f03-0249-4ae4-8064-d4cdb337f58d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5814725f-3f3b-43ef-91cd-87f54e0e5fb5",
          "status": "Created",
          "code": 201,
          "responseTime": 21147,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "36b41bc1-54ff-4d5f-a8cd-4c6a955fcc68",
        "cursor": {
          "ref": "1fba458e-10a6-43e9-aaf5-cf20ef1509f8",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "f85d5c34-d542-4a9b-8492-9db14916c2a2"
        },
        "item": {
          "id": "36b41bc1-54ff-4d5f-a8cd-4c6a955fcc68",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "a3c7de9a-4621-4148-8fbe-d9d972548fea",
          "status": "Created",
          "code": 201,
          "responseTime": 21382,
          "responseSize": 1222
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2024-09-19T00:45:55Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2024-09-19T00:45:55Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "2faa4d87-b6f5-431f-ad20-9571af754fb1",
        "cursor": {
          "ref": "c20375b0-70d0-4b7b-ba42-ffa89c503a4b",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bd7b554e-33fa-440c-9eec-1c5f2032f674"
        },
        "item": {
          "id": "2faa4d87-b6f5-431f-ad20-9571af754fb1",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "b59aca80-070f-4ef1-9c21-b8d700fd31e6",
          "status": "Created",
          "code": 201,
          "responseTime": 20880,
          "responseSize": 1224
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff09ad27-5869-45f8-862e-bfa82b8c70b9",
        "cursor": {
          "ref": "19792539-e07c-4298-8dfb-a4d3515c26cf",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c0f6eb5f-c0a6-4594-981a-93bccc0c5503"
        },
        "item": {
          "id": "ff09ad27-5869-45f8-862e-bfa82b8c70b9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "a0a9d426-7dd9-4979-937c-b8ee264e6df8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1a91e55-1850-40ac-9467-901d95695eaa",
        "cursor": {
          "ref": "25111d60-5c46-4de4-a1c5-d43328057ad5",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "48f97a80-e96a-4bdb-a8db-b317cb9ca303"
        },
        "item": {
          "id": "a1a91e55-1850-40ac-9467-901d95695eaa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1ab6cafb-da4e-4726-bc10-73d3e1b8155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5c4047d-77ac-4e52-8f63-3f30904c6679",
        "cursor": {
          "ref": "e6664442-f542-4873-9426-203f1500e7cc",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "34295e95-b648-4cf1-87d6-ffb1ac7ca2cb"
        },
        "item": {
          "id": "d5c4047d-77ac-4e52-8f63-3f30904c6679",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d62a961d-2227-4aa9-9dd3-2ce1cc7bba1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6191cb7d-0cd5-46a7-a4ff-ceaf8d847cf2",
        "cursor": {
          "ref": "b4f53fc7-72b6-4b06-b4f9-550a33b34fee",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c9d69681-5c99-436b-ab2e-cc265116a65b"
        },
        "item": {
          "id": "6191cb7d-0cd5-46a7-a4ff-ceaf8d847cf2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a538342f-25e7-4938-843b-6e7379600e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681a1b22-3628-4e3f-8000-9c1f73fffe98",
        "cursor": {
          "ref": "a87a62c2-85ba-4b17-bb47-3c72c6c74cb3",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "8a37d1dd-6844-44cb-bd86-cbc290be198e"
        },
        "item": {
          "id": "681a1b22-3628-4e3f-8000-9c1f73fffe98",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "68d8d2d7-30a0-4da1-9d28-9a7825a63086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1069a62d-f698-4e8a-bd5c-10573927681e",
        "cursor": {
          "ref": "2adfc8c9-a564-4d62-86cd-2aed48cac0f8",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8d2698c5-7042-47a3-9942-23c9846dbc34"
        },
        "item": {
          "id": "1069a62d-f698-4e8a-bd5c-10573927681e",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b27ed225-be4a-446c-aad9-138b6b2b87ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1692813-a330-41dd-9c85-9c54881f7efa",
        "cursor": {
          "ref": "9b0908bd-3f1b-408c-a5ab-06fc3d4b3d6e",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "69fc2aa7-d4cc-44d7-9977-c1fceb67b430"
        },
        "item": {
          "id": "e1692813-a330-41dd-9c85-9c54881f7efa",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "66303ad9-87f1-42e8-8885-3f6467c44228",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f23570-c068-4e97-ba69-d47f98d113f4",
        "cursor": {
          "ref": "b7ed92e0-0bc9-4ec0-87cf-1f1f1ba994dc",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "d63c89e2-69ec-46c7-b785-f432ca65a936"
        },
        "item": {
          "id": "17f23570-c068-4e97-ba69-d47f98d113f4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "931a3536-69a6-4159-8b7d-6b53fe081862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7adea8a-2745-4291-b2f0-789ae2a75a2b",
        "cursor": {
          "ref": "900b1104-fe2f-4fdc-9e91-355e4e3d49fe",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "f11a93cc-4e1a-4e57-bc48-d13be796712f"
        },
        "item": {
          "id": "b7adea8a-2745-4291-b2f0-789ae2a75a2b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "8b91a748-7042-4558-9cb3-3bdefada5f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1d41053-1943-42ec-a438-3a2946f7ed20",
        "cursor": {
          "ref": "24059e23-776e-422d-9e8e-cdf268f76675",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7bcc54b1-4710-4873-b6de-eb8b2cb9985b"
        },
        "item": {
          "id": "c1d41053-1943-42ec-a438-3a2946f7ed20",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "369ea265-db8b-4137-a1da-604e8d54473e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "957f514c-99d4-4622-9bc2-f3eeb28de972",
        "cursor": {
          "ref": "4b8bb60d-675b-44ba-9891-f9bbb69672d6",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "320075b7-bb25-4ef5-b6d7-a71056c0f7cb"
        },
        "item": {
          "id": "957f514c-99d4-4622-9bc2-f3eeb28de972",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "e4f62949-4c30-438c-af47-3d8b06bba9e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6594a0de-9a4b-40a0-abaf-30790d4abcaf",
        "cursor": {
          "ref": "24fa00c0-a45d-413c-abe7-ccd1d8aa78c5",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "2c4f5e33-7333-4cb6-b3f2-a97dfba4a0c4"
        },
        "item": {
          "id": "6594a0de-9a4b-40a0-abaf-30790d4abcaf",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "21641bea-8a88-4758-9046-9e818de871d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5efbada-6233-483c-9f68-26204097aecc",
        "cursor": {
          "ref": "48f8fd18-d247-4bb8-a921-ce1f8e4935dc",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5dfba2cf-3ffa-4664-a7a3-419a64093969"
        },
        "item": {
          "id": "e5efbada-6233-483c-9f68-26204097aecc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "29ce75c7-825c-41c0-ba34-64b2850dafe4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fe0dba-b2b2-481b-8ef5-a65450546732",
        "cursor": {
          "ref": "85f387cb-5a4c-42a3-99ee-edd943cf7e0a",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "54d8ffed-c269-4b00-a462-58329a3820ae"
        },
        "item": {
          "id": "e1fe0dba-b2b2-481b-8ef5-a65450546732",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "09500d7c-94d1-42c4-b726-5ceb06fea88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41125723-d6fa-4b39-8a26-2259556876a4",
        "cursor": {
          "ref": "1992cc86-b7b7-49bd-9ab2-da0e9d87c231",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b36c131c-c7aa-4d8e-b958-39b0492468b3"
        },
        "item": {
          "id": "41125723-d6fa-4b39-8a26-2259556876a4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "cef5f132-8c24-4634-80e8-5dececa33ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc09144e-4119-4af3-a82b-aeee10055af2",
        "cursor": {
          "ref": "c1b49b01-ef65-4395-81c6-1ad084f76846",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "5bfaa80e-3385-4fac-8a66-654b492d3f15"
        },
        "item": {
          "id": "dc09144e-4119-4af3-a82b-aeee10055af2",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "b576f28a-663f-4eb3-a960-f53f21b26c9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13484761-22f6-4133-969b-36dfa77ecb48",
        "cursor": {
          "ref": "0f8619bd-1ee4-4acd-87c7-a0d03d99e036",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "b5074d59-5aed-4a57-a7db-67257da7de72"
        },
        "item": {
          "id": "13484761-22f6-4133-969b-36dfa77ecb48",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f90e48fe-9266-4570-ac0c-907f3c0dc4d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb2aac34-ecb3-4014-846e-f7b23e01857f",
        "cursor": {
          "ref": "499cbbf0-8812-43fb-9aa3-5a93255b3beb",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "96daf754-0472-4886-8b4a-fe01472870df"
        },
        "item": {
          "id": "bb2aac34-ecb3-4014-846e-f7b23e01857f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "30f8c37d-c9a7-45dc-aff5-13e335189b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b8cc3f0-7994-4e6d-a8f8-8a13fb2ebe1e",
        "cursor": {
          "ref": "2913e7ed-ed3e-4328-8d6e-a74cb394837c",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ffb69a02-7729-4115-ba7b-fb565bee29e9"
        },
        "item": {
          "id": "5b8cc3f0-7994-4e6d-a8f8-8a13fb2ebe1e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "23ca56a5-c8d0-4bcd-9ed2-d95573c25009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015e6744-6f78-4845-8150-dd17e93ceba7",
        "cursor": {
          "ref": "e2d2e113-b4df-4fac-beb4-350edc4a70ce",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d4544aa3-5451-4be7-b45a-b4a4e630d67f"
        },
        "item": {
          "id": "015e6744-6f78-4845-8150-dd17e93ceba7",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "dbae2df2-5937-4772-904c-dacd23d07aa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f519dc7-b1aa-4927-8867-c56589081e22",
        "cursor": {
          "ref": "c8e567cf-2118-4a03-899e-42b58e9cd6c5",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "50779463-57ee-4c75-b416-8802f9338f70"
        },
        "item": {
          "id": "4f519dc7-b1aa-4927-8867-c56589081e22",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "8114341f-210a-48dd-a3a5-21e2763db3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38646bbf-97e2-4057-98a5-638883bccdb7",
        "cursor": {
          "ref": "870a6769-eac3-4174-b1c2-93ad0aa5ce5d",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "a734a5e7-afa3-4ca5-b23a-bbf381422437"
        },
        "item": {
          "id": "38646bbf-97e2-4057-98a5-638883bccdb7",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "06f47da9-a3b7-46e1-9846-ca0cb9a7b4ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ac8dcc-45f3-451e-8509-21d63cb67904",
        "cursor": {
          "ref": "5ea232f8-3ca9-48bc-bdfa-6cce9c887374",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "325343c0-5759-47fc-8821-4b428b39b982"
        },
        "item": {
          "id": "25ac8dcc-45f3-451e-8509-21d63cb67904",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1ba1e57b-679e-4080-95a5-f1d95152d1a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43aa23c-02aa-459a-af95-4a7cad3ca55f",
        "cursor": {
          "ref": "d3a5cc88-755b-4610-bc33-0b74ad1169f4",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "5c20549c-87c2-4e65-8e60-bdde852d7a04"
        },
        "item": {
          "id": "b43aa23c-02aa-459a-af95-4a7cad3ca55f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "411e44c3-e5eb-4c41-9237-e6ac352d9ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2c8c9e-8375-430a-9576-8ff2e7239b56",
        "cursor": {
          "ref": "db230035-f664-467f-b408-980ef804deca",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "32f7ccab-19dc-4dfd-990e-e676fa4da8eb"
        },
        "item": {
          "id": "2d2c8c9e-8375-430a-9576-8ff2e7239b56",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "6701730b-3b23-48f3-8f1e-a0deac3071a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "310b03e9-1c93-4379-a671-939a1ee7a317",
        "cursor": {
          "ref": "0b0e5a4e-4646-4a00-a9e4-2a5ff5bed6b5",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "d05726e5-455e-4833-a9c9-925c8ee7bc38"
        },
        "item": {
          "id": "310b03e9-1c93-4379-a671-939a1ee7a317",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c0d62d47-c7b4-46de-99bf-9c4a6d03554d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75f55677-84d8-45b6-aeb1-7453905275b6",
        "cursor": {
          "ref": "39fc2916-e115-4a1d-b2b8-f04f851d7fc8",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "2cd2261c-dbaf-47a0-9d86-3d9129fd72f1"
        },
        "item": {
          "id": "75f55677-84d8-45b6-aeb1-7453905275b6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "3ccceb0d-161f-4e02-982d-c7ef51ebd591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4b74a3a-e76c-4d5d-b6a7-dc11ecb54f16",
        "cursor": {
          "ref": "5b0240de-e45d-4b10-ba38-9d74e0879d2f",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "538d1443-6286-43e4-8cf0-fe2d5d6d4a11"
        },
        "item": {
          "id": "e4b74a3a-e76c-4d5d-b6a7-dc11ecb54f16",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9d8d6794-4743-41a6-aad9-bb18ce9b50c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17023dd-16d5-400e-ae4a-66321c9f4978",
        "cursor": {
          "ref": "d03c9199-247b-4a57-a4cc-5c43f405d8b6",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "b85fad85-f0d2-4233-94a1-63f942da7e17"
        },
        "item": {
          "id": "f17023dd-16d5-400e-ae4a-66321c9f4978",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "14d32b0b-d693-461e-bdbd-b2ef647e939c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c86665-dda0-4b94-871b-70aec44b0967",
        "cursor": {
          "ref": "b092ad6d-21a5-4127-aede-81438d99dd35",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "740f68a5-8f76-4cb1-9694-2d1dba36a6f8"
        },
        "item": {
          "id": "63c86665-dda0-4b94-871b-70aec44b0967",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "3811abac-974d-4c59-a9ea-3b95bdb745f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faa6af0-4aad-4979-b492-ea0534332720",
        "cursor": {
          "ref": "9da33a87-9b92-4f9e-a6fd-9781b378b927",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "d78e843e-e49f-4680-b81a-4774b3788f03"
        },
        "item": {
          "id": "7faa6af0-4aad-4979-b492-ea0534332720",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7a953833-68bb-4304-9d65-0fa613739e83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d653f8-418e-4b06-98c2-efab68e22f02",
        "cursor": {
          "ref": "283c5b6d-65bc-4865-a809-91bba53c6583",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "0dd4dc65-bb9c-44fe-9fcb-185ed25ee3c4"
        },
        "item": {
          "id": "20d653f8-418e-4b06-98c2-efab68e22f02",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "83a88f4d-98d5-4d65-8174-62695ccceafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5fc6d7-0d65-4674-b26f-66aa43a31ad2",
        "cursor": {
          "ref": "483c87ba-0d56-4d68-b3ef-9b4b8c6aaa8d",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "39d7d5d2-1954-4c7e-9fbd-1eb36a0aeb0a"
        },
        "item": {
          "id": "4e5fc6d7-0d65-4674-b26f-66aa43a31ad2",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8911edca-f976-4875-9925-d09af5a2bbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3517fabe-1674-4342-ac67-c43ceb2972eb",
        "cursor": {
          "ref": "59e406f9-56cd-41d5-a7f4-79cb1e2e6151",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c83edcc9-ea2e-47e1-ac13-3d775f29c3b0"
        },
        "item": {
          "id": "3517fabe-1674-4342-ac67-c43ceb2972eb",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "6ace7e4a-ded2-4c8b-8392-29281555d493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67253961-c759-4110-9247-df4127c7d169",
        "cursor": {
          "ref": "28f79e29-05a1-491d-9ab8-d0f61af4d60c",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1201fc2a-4b66-4986-b497-01c1f50725af"
        },
        "item": {
          "id": "67253961-c759-4110-9247-df4127c7d169",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "d23d88f9-ac69-4c9c-a151-1f2a5d189388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac802cf0-68d8-43a0-8270-29fb0a583933",
        "cursor": {
          "ref": "cbe942f1-2b4c-4645-b00f-bdbae6f96893",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "964d451b-2c4e-4b60-9909-a65c80ceb420"
        },
        "item": {
          "id": "ac802cf0-68d8-43a0-8270-29fb0a583933",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0b52f81e-4150-4b14-8807-b389123890c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee063003-d9b7-4dfe-889e-d21f3126891c",
        "cursor": {
          "ref": "5de35be8-7748-4ed4-86c5-e2ff5470bcc7",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "b7c7c424-3657-42c8-959f-d5aa02252050"
        },
        "item": {
          "id": "ee063003-d9b7-4dfe-889e-d21f3126891c",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "a469a173-9ee5-4e20-b5c5-872bab3a3aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9296951-0600-4280-afa1-1968d127a57c",
        "cursor": {
          "ref": "4515f155-4e0e-4531-96b4-964b8a591c12",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "dd61346b-2dee-4d42-a5cb-f435136440cf"
        },
        "item": {
          "id": "a9296951-0600-4280-afa1-1968d127a57c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1f3e0a2a-42f6-4677-b5fe-83457d1bad1f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80f29667-2d3b-43ae-a0b3-3ef676a53cc4",
        "cursor": {
          "ref": "41602396-b2f8-4060-aa38-36c7e92557e3",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0fd1d2c7-244f-4e5e-a3ed-221ad7878f92"
        },
        "item": {
          "id": "80f29667-2d3b-43ae-a0b3-3ef676a53cc4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "ed1381be-ba53-41e9-bcff-702c98241f54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56330209-9316-4583-978a-3ed8c78e58d1",
        "cursor": {
          "ref": "3825cfcc-47ea-42db-869c-7c13b66b37f3",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "d3c23289-4625-4ccf-ae8c-4cc4af76cf69"
        },
        "item": {
          "id": "56330209-9316-4583-978a-3ed8c78e58d1",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "80f9e0b5-9a76-49d4-bbf5-ea7238de3dd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7d7c7d-5d2e-4440-bae5-8ad365d98374",
        "cursor": {
          "ref": "b6ddb13d-0183-4bbd-8897-eb4cd47e084a",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4345935d-36f9-4ce0-b548-e3807eee1263"
        },
        "item": {
          "id": "fd7d7c7d-5d2e-4440-bae5-8ad365d98374",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dd60c146-6804-4b44-9816-a706ee9e07a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ab5a3f1-424b-4ddc-9ada-be1f57e82e90",
        "cursor": {
          "ref": "d4dd37f1-b390-414e-be30-b220a26d0218",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "f0fcdb4b-5202-44cd-9160-36f5cee9c59d"
        },
        "item": {
          "id": "1ab5a3f1-424b-4ddc-9ada-be1f57e82e90",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2ea19c8a-1abe-43d5-bfa3-f91465abcd36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8786a6b4-a30b-4dc2-a69e-a8cb8a126111",
        "cursor": {
          "ref": "a47c8e51-4dd4-4d15-ac11-356ea01c452a",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0be0b4f5-a941-48ca-8e0b-7f82a4c4e17a"
        },
        "item": {
          "id": "8786a6b4-a30b-4dc2-a69e-a8cb8a126111",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "b2b185ee-f00f-4233-9a44-3a6a3e157584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea0c46c9-a3d8-4b76-a669-bb93fa6b8ca5",
        "cursor": {
          "ref": "ac979890-1219-4ba3-b8df-02038a97e3d8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "f8e281a8-bee2-4249-a1fc-e7857fadbe13"
        },
        "item": {
          "id": "ea0c46c9-a3d8-4b76-a669-bb93fa6b8ca5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "cf6f23cf-8e39-4691-b3c5-c6b7686a4425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8dabab8-b109-4900-8675-ee278c822872",
        "cursor": {
          "ref": "240ca1da-12f2-4fd9-aa3b-667215f867d7",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5ed13132-2cf6-41be-8641-b8e97cf1d1c7"
        },
        "item": {
          "id": "f8dabab8-b109-4900-8675-ee278c822872",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "dc4715fb-0420-4423-88c1-f0526896bba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "958cbf69-e450-47f4-8697-60de0a4a082f",
        "cursor": {
          "ref": "834812d2-cb83-4928-89d3-3fa78edd2fb7",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "9a39aa9f-b41e-49da-821c-0c835e810bf9"
        },
        "item": {
          "id": "958cbf69-e450-47f4-8697-60de0a4a082f",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "957d34c6-7d86-4e17-b377-ea2c37565c33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9ae892d-4231-462e-bcff-bb095fd5ed69",
        "cursor": {
          "ref": "8d413cb6-947e-4632-aeca-ee4a7110d89c",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "13312d13-3a8c-413a-8ee9-62618873e389"
        },
        "item": {
          "id": "b9ae892d-4231-462e-bcff-bb095fd5ed69",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0564c605-32c5-4f90-a5da-0c0d0f8a2abf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a342f857-0245-4091-95a1-97a41cb5d81b",
        "cursor": {
          "ref": "58cd82f4-daf8-453f-8af1-1522695b97ef",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c3997717-3baf-4ac7-b58e-4048c5eedb55"
        },
        "item": {
          "id": "a342f857-0245-4091-95a1-97a41cb5d81b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b0d4bef3-5a82-4cd6-aa06-02c1925ca1bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e99f0c-34e0-42f7-be54-d794611b788f",
        "cursor": {
          "ref": "32599c44-b7cb-494a-a6c1-1b6a09b71998",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "e72f68a0-c4c7-4c0b-917a-251577f5597c"
        },
        "item": {
          "id": "29e99f0c-34e0-42f7-be54-d794611b788f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c7696037-051a-4504-a919-a1eaa8ced5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2017d911-b8d4-4c28-b1f8-165ee778eb20",
        "cursor": {
          "ref": "bd32279b-6455-494f-a597-fd61bc3400b8",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "bb0de1d8-125e-46c6-a1bc-b2d3ca8aab40"
        },
        "item": {
          "id": "2017d911-b8d4-4c28-b1f8-165ee778eb20",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "eab4c3e3-236d-4834-ae7b-1e5beebe65d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea8c95c8-bde8-47e8-836a-cb919e1c9752",
        "cursor": {
          "ref": "04f9f7f2-0c23-4014-bed0-1b5725d4a3c0",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f1bf2130-004a-49b4-8788-62812954a071"
        },
        "item": {
          "id": "ea8c95c8-bde8-47e8-836a-cb919e1c9752",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "550409e2-a493-4341-acbb-8a1da4748ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdd79c15-f381-4a68-a773-4544c10e0f88",
        "cursor": {
          "ref": "1b860cd8-bbb3-4c7f-81a6-bc31ade0e95b",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "e2ad0bc5-01ce-467b-a70f-1f7412ea3bec"
        },
        "item": {
          "id": "fdd79c15-f381-4a68-a773-4544c10e0f88",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "95ea5e6d-b48b-4908-b6b5-f1b634062ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184ee585-7a5b-4c52-a170-25d116ca47f1",
        "cursor": {
          "ref": "d949cc69-190d-4223-9192-39f8f163209c",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "96d40af4-cdc1-4542-abf8-4bbccf6d2ff6"
        },
        "item": {
          "id": "184ee585-7a5b-4c52-a170-25d116ca47f1",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "8b4433bd-44b4-4e83-87eb-e58d0aa0c95c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6122b68e-7166-415e-b4a7-27ac24c9ce9d",
        "cursor": {
          "ref": "d3ef1d29-2243-42bf-a7c7-99b8aa6edb07",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "1f56d463-d68c-43d1-90a7-4a9bec398be0"
        },
        "item": {
          "id": "6122b68e-7166-415e-b4a7-27ac24c9ce9d",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3f9d9ead-5f3b-4c8d-852e-c0245338e708",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f401374-21ce-4da2-b65e-0b6591593e83",
        "cursor": {
          "ref": "258de157-2188-441e-9305-17a52861aca5",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "05c7da46-3d4f-46ce-8065-17fb0fb2875a"
        },
        "item": {
          "id": "9f401374-21ce-4da2-b65e-0b6591593e83",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7504c5d0-cb04-4ac9-b0d2-0bf505af129f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db1509f4-63b4-471d-bb39-e04ca76ad502",
        "cursor": {
          "ref": "48801b11-9ded-4a2e-b5ce-eb6cf7ede7f1",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "27b44a7b-5069-4b76-88f0-a7f37be4b60f"
        },
        "item": {
          "id": "db1509f4-63b4-471d-bb39-e04ca76ad502",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a696f914-0c7f-4233-a143-aaccf930d81a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac6f64ef-b4be-446e-9949-2a9d053d4add",
        "cursor": {
          "ref": "91f37c6c-7e0d-40dd-80c2-89b97b4e352f",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "b043a3e0-47f0-4062-83d4-095ab6297e6b"
        },
        "item": {
          "id": "ac6f64ef-b4be-446e-9949-2a9d053d4add",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6aef5fc5-e4c9-4e48-a295-5a0f4aaa2c1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6329b7d-51f2-4363-923a-380af2d777b6",
        "cursor": {
          "ref": "76ec9416-e8f5-4f60-a8b3-35f28af7be74",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "19c91a29-d436-4faf-b8cd-1672e47e1c21"
        },
        "item": {
          "id": "d6329b7d-51f2-4363-923a-380af2d777b6",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "7ec77b68-b40c-41ec-aa99-88b2385bd613",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ae4dec-1179-4199-a6f6-3573ba4a8dcb",
        "cursor": {
          "ref": "5d17780b-3f25-487c-9195-5867107223c1",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9c458eb2-9fea-40b3-92f1-063faa357de6"
        },
        "item": {
          "id": "b5ae4dec-1179-4199-a6f6-3573ba4a8dcb",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "7801f9cf-b9e0-4e20-9ff6-b8c8c5033305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27099faf-ce38-4cba-9264-f85c2a900a21",
        "cursor": {
          "ref": "9f3b1f28-1d3b-41f8-abb8-68d78ce71506",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "24bcb1a7-0281-491a-827f-492fd19b1b4f"
        },
        "item": {
          "id": "27099faf-ce38-4cba-9264-f85c2a900a21",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "3363242b-7952-4de1-8eb8-37f61e35ed95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aee0401-b3d3-4402-b292-fd545a27b0b3",
        "cursor": {
          "ref": "baca8e72-a2dd-47bf-8349-eb14b9efa681",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "a4ace060-6acf-4c2e-8485-47801843a0e5"
        },
        "item": {
          "id": "6aee0401-b3d3-4402-b292-fd545a27b0b3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7b2c6999-c33a-43ab-8e44-d57fb823ed57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfb1ab6-da5e-4114-9fb4-767b53ef4c70",
        "cursor": {
          "ref": "5f748bf6-2d11-4675-9b0a-ff7a38bf77bb",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f3393193-e99b-4d9e-9e21-6db09fd44c24"
        },
        "item": {
          "id": "fdfb1ab6-da5e-4114-9fb4-767b53ef4c70",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "d4ef0f54-67f6-4df9-87fd-16fa4d2d78cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0183918-fd80-4acf-ad06-d897236c8873",
        "cursor": {
          "ref": "6a9a854a-243b-4691-807f-37e938820515",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "31fe16ac-9907-4486-b9f1-94b7fe6caeb8"
        },
        "item": {
          "id": "a0183918-fd80-4acf-ad06-d897236c8873",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "aadcf026-d964-44a0-bbad-a4b269eb8ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c50c587-d73f-44d8-9aa4-8f8947661ece",
        "cursor": {
          "ref": "94a323aa-62a8-4b89-b0d8-2d179830f216",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "fba84431-f519-484f-b562-b041208ab8c8"
        },
        "item": {
          "id": "8c50c587-d73f-44d8-9aa4-8f8947661ece",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "414afc84-2ee0-4e2f-a384-28a2fb72ea00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d29aa9c-0f07-418d-80b9-124a0f65d999",
        "cursor": {
          "ref": "118ce1b6-d33c-45eb-a627-1aed91c0c61f",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3099ccc7-dd73-43fc-a6b9-2f48b465d81c"
        },
        "item": {
          "id": "9d29aa9c-0f07-418d-80b9-124a0f65d999",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "b852527e-0eae-4035-a2a3-c5448ba200a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d69f59-26af-4966-9f68-aa426c9e27e8",
        "cursor": {
          "ref": "2ffd52fe-8fbb-479e-a489-3faa2d47a084",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "ff385d4e-4052-488f-9d3a-1bee2e33242a"
        },
        "item": {
          "id": "15d69f59-26af-4966-9f68-aa426c9e27e8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "8cad96c6-f2b8-4b5a-8a21-9de44200be1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "081b24b4-542a-4750-9c36-7593536ebab3",
        "cursor": {
          "ref": "cb4aeb19-5954-4b44-acfa-72f22bc15e23",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "4eec0a62-54a5-490b-8601-a818d9ec4ecb"
        },
        "item": {
          "id": "081b24b4-542a-4750-9c36-7593536ebab3",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "668121f4-a640-474c-b7db-2dafaf94b895",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c92e1f36-54b5-4750-9668-7e6f4dc7ae8a",
        "cursor": {
          "ref": "74eb3ca6-9a22-4d67-b745-dd8f824569dc",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "941dd304-e6dc-4a41-85b1-c8c0e6213496"
        },
        "item": {
          "id": "c92e1f36-54b5-4750-9668-7e6f4dc7ae8a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "cb8474e2-9880-405c-9ca3-d238ec4182aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2519fc2-a0e8-431b-a14d-65a07bed8193",
        "cursor": {
          "ref": "3377aa4f-db7b-4618-afe6-ee8af12980f5",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "0133e6e1-edd7-400a-92ec-4e65fc553b14"
        },
        "item": {
          "id": "b2519fc2-a0e8-431b-a14d-65a07bed8193",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "23d0d5d2-9bf6-48a8-8eae-c449396ab554",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d04631b-aacb-4b7c-8d74-95f9e5950405",
        "cursor": {
          "ref": "c1561dd1-fab8-4a7e-9c64-8d1d28bc092f",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "af2a5acb-5e28-4cf7-b7d5-55d2cee2b78b"
        },
        "item": {
          "id": "3d04631b-aacb-4b7c-8d74-95f9e5950405",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "14584d64-aca4-4d8e-819b-26607a431f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7c78acd-d223-4dc6-8fb6-aa100bcb5c26",
        "cursor": {
          "ref": "4b60c122-5416-4f6d-adc7-6d8c016952d1",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3076c7cc-8358-4e59-9fdb-c0bc282a6147"
        },
        "item": {
          "id": "b7c78acd-d223-4dc6-8fb6-aa100bcb5c26",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "992d56d5-da08-4b09-92d7-45de5056c26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b1cc35a-4d9a-4306-91e2-44ca5b7ee79b",
        "cursor": {
          "ref": "37b7a177-95a0-4998-8e45-12afb73a2d8b",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "29b6b421-1fb6-4224-b3fc-9aa4c61f1b18"
        },
        "item": {
          "id": "0b1cc35a-4d9a-4306-91e2-44ca5b7ee79b",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "e8caa449-2e79-4b6b-bc66-f832f2d97adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8b7f95c-17c3-44c1-91d4-f6b219a650b3",
        "cursor": {
          "ref": "e086ff4d-72ab-4277-95bc-b6f2892b9dde",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "f0802272-133e-4ee2-b519-a86d2ff9255d"
        },
        "item": {
          "id": "f8b7f95c-17c3-44c1-91d4-f6b219a650b3",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b74e2c4f-6f7c-4ec6-97eb-722ef84ce194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84499a1c-9794-4c62-b0f2-fd4d4eef2ce1",
        "cursor": {
          "ref": "391e90b5-49f4-4dcf-97bb-a9f8f8bb5eb0",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0539e61b-646b-4bb2-9e41-63fa00db076c"
        },
        "item": {
          "id": "84499a1c-9794-4c62-b0f2-fd4d4eef2ce1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "06a56524-3a80-4cc3-a012-a63c43289d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e8f903a-6f44-4824-b753-55db02f65c51",
        "cursor": {
          "ref": "b65d021d-fd0a-4f8e-89a0-1fc0152e7714",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "28cad129-8ec9-49ce-8e7b-3f05291872b8"
        },
        "item": {
          "id": "1e8f903a-6f44-4824-b753-55db02f65c51",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "70f6ae74-6104-4b4e-bcc9-2ee3d30996d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f453346c-86cf-4039-832f-15941e39ed95",
        "cursor": {
          "ref": "8fb9e4f6-4b0f-4dfa-a833-347ad5d3d8ef",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "5b727e9e-ae96-464e-b72f-d089b634523e"
        },
        "item": {
          "id": "f453346c-86cf-4039-832f-15941e39ed95",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "120cef95-b1f8-474c-bd6b-38fb699f52b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1af30e47-ec9a-4332-b8da-c949aca3d8f1",
        "cursor": {
          "ref": "c76c7cc4-49b0-482a-bbf9-e69dd46a2497",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "3f037609-b7f4-4a46-83bb-1518f8a06aa0"
        },
        "item": {
          "id": "1af30e47-ec9a-4332-b8da-c949aca3d8f1",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "b7e7e9be-1f2d-4661-abc6-7d6577e1a8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a575e9bb-4b1a-4cd6-b2a7-41b4f05f2a41",
        "cursor": {
          "ref": "62910d24-0bab-4a5c-8a17-fc3897e8486e",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "442bcf3b-d6a0-4047-ab59-b5dc4d02feb3"
        },
        "item": {
          "id": "a575e9bb-4b1a-4cd6-b2a7-41b4f05f2a41",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "d667ac0c-2db3-4e97-b8a5-258f4d49f540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40a302be-6984-4ddc-82ee-383c8e8dccd2",
        "cursor": {
          "ref": "dd223aa4-24a4-47ba-88d6-28d91e77fa2c",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "6c5351cd-331c-43cf-b43c-da3bfeb651bb"
        },
        "item": {
          "id": "40a302be-6984-4ddc-82ee-383c8e8dccd2",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d6e2bbc1-4263-49b5-8b88-83835eaacafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "114d70a9-614a-468b-a285-ba2413e99129",
        "cursor": {
          "ref": "5411eb8e-eb28-4f93-b54d-51566d0e7bf7",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f0049e23-d89a-4397-978f-45f1d7008985"
        },
        "item": {
          "id": "114d70a9-614a-468b-a285-ba2413e99129",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "7e898905-19af-49b2-ad17-4d206beb922c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01eef123-bc9a-4d78-b493-4483c1d806ef",
        "cursor": {
          "ref": "c1f235b0-724d-45b1-8cd2-c5ca700749ef",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "fc598b8a-1c56-42d2-917e-2f0ac266276b"
        },
        "item": {
          "id": "01eef123-bc9a-4d78-b493-4483c1d806ef",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "be1c378c-141b-42ad-9a1c-40092b150b86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4f8b49-7fe8-4d19-bbad-5bfa3c090889",
        "cursor": {
          "ref": "bc0aec62-c48f-4c61-a555-5e5cedc5c1b2",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ce7e3610-b2a4-44c0-8dd8-6dca8720f8f3"
        },
        "item": {
          "id": "8d4f8b49-7fe8-4d19-bbad-5bfa3c090889",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "165c28a5-23c4-4ead-93cb-13dac5bc284c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f9f744-97a6-4011-99d8-9968d3850d06",
        "cursor": {
          "ref": "291ad2c4-fdd5-48a6-a8af-7d7c328b6c55",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "47929840-4201-488c-9204-727c116cb2db"
        },
        "item": {
          "id": "c0f9f744-97a6-4011-99d8-9968d3850d06",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "99104086-178a-4c40-98c9-bd9101a2c862",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0059d58a-533d-4c30-abed-7a0d54c57e52",
        "cursor": {
          "ref": "13f7c897-301f-4edb-ae18-28688a781ea5",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "c5da4410-44d0-4bd2-b920-30f19bbf669c"
        },
        "item": {
          "id": "0059d58a-533d-4c30-abed-7a0d54c57e52",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9f5be7eb-adf7-4b58-84dd-0ddb1c5a0d80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71d01a99-c8ad-4032-ac60-e3ae9ec69e9e",
        "cursor": {
          "ref": "766717cc-6c2a-41f6-9371-0a0b2fe2f7de",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "f9a17e09-7ac9-4bae-bfa9-4b327d449c8c"
        },
        "item": {
          "id": "71d01a99-c8ad-4032-ac60-e3ae9ec69e9e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "90e41baf-6b19-4f4d-a8e3-8b22336c0f38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7816906-fb2e-466d-bae7-a0441c7f4bae",
        "cursor": {
          "ref": "d632aa15-a7f0-416e-b529-df7dd77a30c4",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "88c36c18-ebbf-4039-92e6-52eaba7c0715"
        },
        "item": {
          "id": "b7816906-fb2e-466d-bae7-a0441c7f4bae",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "0c9011b1-44c3-4cf1-b3ba-ad0c7edc0eb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2641927-107c-49b5-8b6f-2b21e785acf5",
        "cursor": {
          "ref": "f73d5aa2-acdf-4ac9-9b9d-11c124723759",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "323ea187-fac4-4a19-a3d4-c2e455b10a91"
        },
        "item": {
          "id": "b2641927-107c-49b5-8b6f-2b21e785acf5",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "e8761d5c-4a4d-4995-9e7d-7044b4a42863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74e3200-8a13-49c4-9445-12f1c5c075f5",
        "cursor": {
          "ref": "c648489c-35b9-453d-9b76-a573d83afbf8",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "cba0d0d7-ee9a-4b9e-a7ca-9e3ef541eab1"
        },
        "item": {
          "id": "e74e3200-8a13-49c4-9445-12f1c5c075f5",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "792050d0-0ba8-4985-b577-b1e253b51c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f0c6346-dd61-466e-83f9-507beb32e82a",
        "cursor": {
          "ref": "d26d3063-aafb-4a39-98e7-64d5381b8163",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87ba373e-4fce-4ea0-bf9b-8400ec415bfc"
        },
        "item": {
          "id": "9f0c6346-dd61-466e-83f9-507beb32e82a",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e1d7b820-02eb-488c-9f93-b9fcac94e5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "904ce297-376f-4699-8abb-d472592e9d52",
        "cursor": {
          "ref": "1f5bacce-f977-4613-a86b-c35b03bc66a0",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a850eb10-8650-459b-8a13-37a44ce54386"
        },
        "item": {
          "id": "904ce297-376f-4699-8abb-d472592e9d52",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "81efda80-14be-40e7-a8e0-2836c6794e50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5de64e9-1dac-4838-a60f-0e4c2be75791",
        "cursor": {
          "ref": "cbdb6266-6a8b-4257-9246-76c754a97d9e",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4d382ab1-624e-4bc2-9c50-12e00863ba2a"
        },
        "item": {
          "id": "f5de64e9-1dac-4838-a60f-0e4c2be75791",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "6c645d30-b632-4ed6-ac96-4071d43756ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0721ed2e-9495-4499-ae91-d809093b2505",
        "cursor": {
          "ref": "6fa0a40a-0562-41f1-ac60-84b88ad017fc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "c9cc1c65-fb39-464f-a031-f6b75763a2b2"
        },
        "item": {
          "id": "0721ed2e-9495-4499-ae91-d809093b2505",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "cac4b937-3f75-46cc-bda8-38c9e481410d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2f50bd0-df83-45c6-a736-a57b28b9e8e6",
        "cursor": {
          "ref": "771134a8-1d39-4f36-8e86-18559237b941",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "276e4fdd-3e2f-4250-9111-9c0b6b2cd6f6"
        },
        "item": {
          "id": "f2f50bd0-df83-45c6-a736-a57b28b9e8e6",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "0e03b72a-cdc5-46e4-bb8f-3886a771fd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de024146-1818-4c87-9c25-7fd26d3e30eb",
        "cursor": {
          "ref": "bad92ba4-dff1-4b63-a6db-891b5ec3bf96",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "4c47acc0-f8b4-4618-a030-eebdf6eac917"
        },
        "item": {
          "id": "de024146-1818-4c87-9c25-7fd26d3e30eb",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "e504326c-6baf-404e-a418-677aebf8a68d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc82ebcc-efc3-4b30-ab1b-94c69af72461",
        "cursor": {
          "ref": "6a32afe9-4323-4be7-a55a-ae7f7b179664",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2cd754ff-fded-4c47-88d8-22ac2589f293"
        },
        "item": {
          "id": "dc82ebcc-efc3-4b30-ab1b-94c69af72461",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b5716ec6-d0f4-4715-aa18-ebbaf0bf9f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890c6166-2beb-4a37-b449-2743affa9af8",
        "cursor": {
          "ref": "bbb603b4-8935-446c-b5ef-0d18bbbe78fd",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "d9c535b5-f10c-4311-ac91-1085e7c7525d"
        },
        "item": {
          "id": "890c6166-2beb-4a37-b449-2743affa9af8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "fba72b13-7583-4500-8c9f-14d996ff57f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7d4fc9-1479-4d70-9943-56e188a4cf6b",
        "cursor": {
          "ref": "588451c7-068c-43b0-89f1-64c580f5cdee",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "d58ffd97-4e18-45ce-83ae-78bfc159e69c"
        },
        "item": {
          "id": "ce7d4fc9-1479-4d70-9943-56e188a4cf6b",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "36c2172a-25d7-4ee8-baec-f3a58aa9b296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8a114fa-e8f1-4de7-ac7c-35230f9175ea",
        "cursor": {
          "ref": "ef30fa52-d8b8-481b-8f93-a0402ef3a575",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "676c4549-d1d4-4922-94d5-74e9bde919e0"
        },
        "item": {
          "id": "c8a114fa-e8f1-4de7-ac7c-35230f9175ea",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1cc58c6d-1601-4bbe-8f76-8556007a89f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4070f80b-20bd-4fef-bba3-d99b371abb54",
        "cursor": {
          "ref": "e4ec60a9-db0c-4901-98af-514ed0a1f1dd",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "33153947-d7b0-41dd-9470-0f5740e1356a"
        },
        "item": {
          "id": "4070f80b-20bd-4fef-bba3-d99b371abb54",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "51d40627-9e7e-4ab4-babe-46f7fe9cdd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3930f410-2172-43b2-8816-675567024ede",
        "cursor": {
          "ref": "4a86f00d-6589-4ad1-80e2-a7f6d36a9ace",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "fea34c30-8491-4e9c-8e61-75422093626a"
        },
        "item": {
          "id": "3930f410-2172-43b2-8816-675567024ede",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "dfa56b8e-d7b4-431d-8bd2-bb19b6c4ac35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7faf855b-192f-459e-b7e1-d922363e94ad",
        "cursor": {
          "ref": "daa65593-db41-4a3b-9a88-e6123b12294a",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "045d5d68-601b-46b8-987e-05e64715d512"
        },
        "item": {
          "id": "7faf855b-192f-459e-b7e1-d922363e94ad",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "8529f028-d292-4bc6-af69-5943e554c483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0af1c61-891f-468e-aa58-19c33564b2f2",
        "cursor": {
          "ref": "ef5f6f5c-8a48-49db-b7a3-4819a543a1ee",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d4f1d2d6-e491-47bb-a6f8-1a3ae18ae2cd"
        },
        "item": {
          "id": "b0af1c61-891f-468e-aa58-19c33564b2f2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "06f51907-7e38-4d8b-814a-b2400cc29d54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca091859-0a3f-4b14-a47b-88eb93879004",
        "cursor": {
          "ref": "4316b328-4b5d-41c3-a060-eed03629d391",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "3b341953-ff3d-40cd-8d8b-619eee3ae54d"
        },
        "item": {
          "id": "ca091859-0a3f-4b14-a47b-88eb93879004",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "6b1e3e77-e949-4315-8199-03c7bceb08a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0dea85-5b45-4be0-82e4-8324a5510303",
        "cursor": {
          "ref": "516561ae-91ad-417f-902a-08228763838f",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "364754d5-c6dd-436c-8965-3e7b4735bc91"
        },
        "item": {
          "id": "cc0dea85-5b45-4be0-82e4-8324a5510303",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7734a308-4f23-4afa-8ff2-0582f20b2e69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "622e3e0d-570c-4b67-bc9a-1529634a0c2f",
        "cursor": {
          "ref": "5ed60748-1970-44c7-8a67-98b667c469b5",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "25b82a65-e467-4ee9-88c7-866d1934cb22"
        },
        "item": {
          "id": "622e3e0d-570c-4b67-bc9a-1529634a0c2f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "9f9575ae-e57b-4eee-83ef-710093b8a7e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33fc4fe2-40c9-4cc7-8aee-03a0949bab7d",
        "cursor": {
          "ref": "3d2563e7-1830-4488-a4e9-a3b8261ecde5",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "d36e3b6b-df9d-46d9-b1e6-7fcecd2c3d09"
        },
        "item": {
          "id": "33fc4fe2-40c9-4cc7-8aee-03a0949bab7d",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "ad67f577-d8c6-41a3-9fdf-b8805b3123a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1d74b1-f152-4507-a939-ba1aa7a5f326",
        "cursor": {
          "ref": "c43a21e5-f734-4716-bbe7-0338f1d75c28",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a9e76e74-e7e9-4089-8200-4372fe173b4e"
        },
        "item": {
          "id": "da1d74b1-f152-4507-a939-ba1aa7a5f326",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "abce53b0-d7aa-4c2a-ba9c-f51a89defa92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fcdf196-8ec3-45f5-bf3b-792de0679fbe",
        "cursor": {
          "ref": "9292f3ab-144a-4105-b97f-055b98fb9db3",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "e3a61a81-ad0e-433c-9869-6d7dc87bd673"
        },
        "item": {
          "id": "7fcdf196-8ec3-45f5-bf3b-792de0679fbe",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "a2d7f09b-5825-429e-930c-2fffa8a1dc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "223e3cd8-d2a1-400c-a75a-92334a513bd6",
        "cursor": {
          "ref": "cd786c62-c048-4cfb-b20b-4462995133a0",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "34f8628a-3b5c-445b-a409-1148e5b98ae1"
        },
        "item": {
          "id": "223e3cd8-d2a1-400c-a75a-92334a513bd6",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d663e067-22e8-4076-b9d6-db9813d3a93a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56a3d42-ad45-4e22-af7e-35b135c64fd3",
        "cursor": {
          "ref": "60807f45-0a0e-4f93-a581-32567c416e0c",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "ce4a9f3b-36b4-464d-af62-8a1ecd8308a4"
        },
        "item": {
          "id": "f56a3d42-ad45-4e22-af7e-35b135c64fd3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "11e5de60-029b-4392-bedc-16273050c7ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9647a62-e6cf-4c8a-88d9-079096f27ed6",
        "cursor": {
          "ref": "9352153a-e582-48ad-a3be-3bf45479a8cd",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "0dcf70d5-598e-4edb-ad61-e96105e57f37"
        },
        "item": {
          "id": "a9647a62-e6cf-4c8a-88d9-079096f27ed6",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9f25df3c-ed98-4b87-8bcc-70cafa5f433b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56d321e3-b649-4f6e-ab43-374a0743fc24",
        "cursor": {
          "ref": "31d6a323-0d9d-4c4b-8ddc-8cf47c003c10",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "9d2db401-e655-4ea8-8d51-497e51a6855c"
        },
        "item": {
          "id": "56d321e3-b649-4f6e-ab43-374a0743fc24",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "16ca8c13-0737-4424-97aa-46c8da78adbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74bfac32-5ed0-4b6f-84d9-d278f112dd9d",
        "cursor": {
          "ref": "11bb5853-69d8-473f-b51f-47ce9db87bd3",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "406dba75-03d7-4e16-88e1-87d13efef25a"
        },
        "item": {
          "id": "74bfac32-5ed0-4b6f-84d9-d278f112dd9d",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "83100f5e-01ea-47e9-bcbe-1cacd3a6a113",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d86ec0-4b44-4387-966e-19c9c1fed8b5",
        "cursor": {
          "ref": "4971d249-4596-4392-8983-f56c7debeb97",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "683b215b-ea21-48ff-aac4-5b45545ab2a1"
        },
        "item": {
          "id": "e1d86ec0-4b44-4387-966e-19c9c1fed8b5",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "61a3f3ba-7b83-4329-ba0f-0e61ada83b48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d09e947-9c77-4e05-a87d-22f6733542ba",
        "cursor": {
          "ref": "261d3f7c-2d2d-458a-b1f4-064d99acc6a2",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4a8a1044-938c-4b1b-baf0-28871ce3e5db"
        },
        "item": {
          "id": "7d09e947-9c77-4e05-a87d-22f6733542ba",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "970704ef-18c4-4dc2-b2e6-e20b3a6d0ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649f6ae3-2b11-4649-a2cf-bf708b09f360",
        "cursor": {
          "ref": "1d754f99-4ebc-4630-b580-deb6903a0149",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0575c4ae-c488-446f-b796-8b3eb908c8b9"
        },
        "item": {
          "id": "649f6ae3-2b11-4649-a2cf-bf708b09f360",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c6263bee-b83d-4825-9ab2-1f69970f23d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6823cd64-e71a-4d4a-81af-269a1790836a",
        "cursor": {
          "ref": "fc371628-4135-4260-b136-fd5508ab5f8a",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "f9fdb40e-91b8-4f8d-9323-fae0f7258e42"
        },
        "item": {
          "id": "6823cd64-e71a-4d4a-81af-269a1790836a",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "89c66ade-9c91-4982-8bba-a18c8c06839f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5dcb111-d44a-4b9f-bde3-f39ca70ad976",
        "cursor": {
          "ref": "acdc067a-98dd-4b7d-a063-d5c8f2a5a987",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "f451784a-6cd1-44d2-aaf4-d880c7e9229c"
        },
        "item": {
          "id": "f5dcb111-d44a-4b9f-bde3-f39ca70ad976",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "adfb4859-dc8b-4c31-bec1-9ed093a57737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4874206a-3233-4e95-b70f-8f263f07146d",
        "cursor": {
          "ref": "75089b4c-0bf1-45b1-be72-ff28cc69728a",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e1fcea79-fe62-4191-8fe5-652aafa5a658"
        },
        "item": {
          "id": "4874206a-3233-4e95-b70f-8f263f07146d",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a5314b45-3260-45d4-8876-596f1b5d0514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03eb00c2-08f6-405c-9a68-5ad1227e6262",
        "cursor": {
          "ref": "e1972b90-2a08-4753-826f-5a019e6b34d2",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "4dc62063-1799-4f47-ab40-8868ca91958b"
        },
        "item": {
          "id": "03eb00c2-08f6-405c-9a68-5ad1227e6262",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6914f99b-f81f-414e-a178-866697a868bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d596fe69-df01-4a20-aa9d-d547a0a5b02c",
        "cursor": {
          "ref": "b5b4c7ae-9730-4b70-8361-9a924dcf18fa",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "ba65d2e8-bd65-4446-920c-f4c6821c3291"
        },
        "item": {
          "id": "d596fe69-df01-4a20-aa9d-d547a0a5b02c",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "27161d6f-2520-4bc8-8733-214b5a3eeccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49fa00e9-aa2e-4f03-8759-7a112087ca68",
        "cursor": {
          "ref": "0ad3b692-e7b4-4dfc-952c-fa4f4e926522",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "f7987f13-a7b5-4c1d-9563-0005c11ed61e"
        },
        "item": {
          "id": "49fa00e9-aa2e-4f03-8759-7a112087ca68",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0ccc4760-ff9a-42b1-9e21-6ae8d453ebf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8804f661-a54f-44c2-ba57-039cfac5d09a",
        "cursor": {
          "ref": "b55bff32-4f6d-47aa-b759-2d34f0e26616",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a9d13d7c-9921-427f-9c8b-679e27dbd629"
        },
        "item": {
          "id": "8804f661-a54f-44c2-ba57-039cfac5d09a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c709013d-d934-45ac-91f0-f4753a152514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1830d9a-7c6c-496d-a82f-22ce4023d468",
        "cursor": {
          "ref": "97897579-9943-487b-95e1-601b4d7c9ec0",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "9fba46a1-c94e-491e-9a28-595fe172508e"
        },
        "item": {
          "id": "d1830d9a-7c6c-496d-a82f-22ce4023d468",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0b119331-068e-4ef0-9454-c74902095ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88e73c98-eac6-46c4-9185-b9aa2ad13347",
        "cursor": {
          "ref": "14ef5d6d-5aac-4361-9708-0f6ad539e488",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "a6cd9657-40b5-4453-a83f-c7f83dd12aac"
        },
        "item": {
          "id": "88e73c98-eac6-46c4-9185-b9aa2ad13347",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "0fb1fbfe-7b89-4cad-a4fb-8c2fd08f0d2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e80af80-4927-4cc4-b207-753dd30123c8",
        "cursor": {
          "ref": "815b5737-cac7-4b65-9577-68e3a69cb574",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "eba52b6a-968b-4720-9c0d-f4a28e86eead"
        },
        "item": {
          "id": "4e80af80-4927-4cc4-b207-753dd30123c8",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "92b2fdf7-088c-4e6e-b825-8c31cf86a429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f6aab6-9327-4288-9e71-37260d572939",
        "cursor": {
          "ref": "a20198b3-f67b-469e-b1ac-74756c5185fe",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c15ed547-ceaa-423b-b8fa-98e00af9e412"
        },
        "item": {
          "id": "33f6aab6-9327-4288-9e71-37260d572939",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "671137b8-1bad-409f-b1da-2a3619988328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a38892-6fdc-4672-be76-fb96835f8c30",
        "cursor": {
          "ref": "19934275-dce8-42b3-86ff-7f3a805c4f3a",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "afb50f9a-3299-4290-8070-b052f21a5863"
        },
        "item": {
          "id": "21a38892-6fdc-4672-be76-fb96835f8c30",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "af313299-dc62-4a5d-88cc-88e1305a5217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00f8dbd1-34d8-4869-84dc-1b80ac244771",
        "cursor": {
          "ref": "9d632c3d-a652-4b50-8a1a-aac1788aed4a",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "67e8df38-90c4-467d-8a59-3fad9ac38a92"
        },
        "item": {
          "id": "00f8dbd1-34d8-4869-84dc-1b80ac244771",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f33f8f11-7d46-4e11-9429-72b00f80b1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4378e989-e1ba-470a-a6f1-dd0f0cac3dec",
        "cursor": {
          "ref": "75165668-86b6-4fec-bbd9-2e0047f53582",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d420e882-ae85-49e9-9aa6-15a8faa24547"
        },
        "item": {
          "id": "4378e989-e1ba-470a-a6f1-dd0f0cac3dec",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "0d7f46f2-11e0-4b11-884d-3b6dc3d64aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a3494e-bc99-4c0d-9325-4e06446cbb25",
        "cursor": {
          "ref": "27ef13dd-c8bd-47f0-b743-0ef7a3123738",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "1824d96f-7760-4349-8e8a-1d2fc3a7be40"
        },
        "item": {
          "id": "13a3494e-bc99-4c0d-9325-4e06446cbb25",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "f038637a-9872-4aa9-9419-418df8baf339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "294b83d4-37d0-4f64-8f2e-39bba02b0c96",
        "cursor": {
          "ref": "5fd1e8c6-e04f-4d2e-b971-3a3333ce8127",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "92eabb28-9ed8-4506-94a5-4dbe1a3a9008"
        },
        "item": {
          "id": "294b83d4-37d0-4f64-8f2e-39bba02b0c96",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "110b5f5b-c527-45ee-9eb2-e5614c08a2a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01791d6c-9d7d-4ebb-bb8c-4b4dfb76d03a",
        "cursor": {
          "ref": "12084118-6d6a-473a-9069-a6530b5dcf40",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2e69d230-170a-4633-9ffc-8c75daa6d476"
        },
        "item": {
          "id": "01791d6c-9d7d-4ebb-bb8c-4b4dfb76d03a",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "c6a263f2-9e9d-446b-b8bf-05c6495568e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9132a05b-098a-45e5-b1c1-605bec72a31b",
        "cursor": {
          "ref": "309fd8b6-c6b3-4136-96d8-72fce480f099",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "59294fe7-1515-40b8-927c-90f37a160ac1"
        },
        "item": {
          "id": "9132a05b-098a-45e5-b1c1-605bec72a31b",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a435004e-c99b-459c-bfbb-42117f0e6a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67e2cd3-04c4-4334-845e-bea066b7c9bb",
        "cursor": {
          "ref": "130de6d3-1f91-44be-8fed-561913c36c3a",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "16209e2e-1643-4c62-aae7-ed39e8f091c5"
        },
        "item": {
          "id": "e67e2cd3-04c4-4334-845e-bea066b7c9bb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "186a8364-815e-465c-b743-d7f958424566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6258a5c9-dee6-4c7a-ba4a-0b2584d97443",
        "cursor": {
          "ref": "9b6b31b2-0b10-4685-91b6-4bc35bf81b5f",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "cbca2625-12b2-424d-974b-13bb474b3c31"
        },
        "item": {
          "id": "6258a5c9-dee6-4c7a-ba4a-0b2584d97443",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "bdb40927-3e49-4fa1-a9a4-6c950d450579",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 32,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038a2360-8d5c-4d1d-b6f1-176b6c60c9c1",
        "cursor": {
          "ref": "4c391ef2-df4e-4bfd-9d9b-1411da1c4f84",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "fbf0acc9-5f5e-4337-ad9b-d8952a633a17"
        },
        "item": {
          "id": "038a2360-8d5c-4d1d-b6f1-176b6c60c9c1",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9fe7c5e4-3af8-42c2-b3b9-bf295e1713a4",
          "status": "OK",
          "code": 200,
          "responseTime": 2250,
          "responseSize": 416
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7031c9c-8ffd-486a-afc3-5ad3a9ea1c8f",
        "cursor": {
          "ref": "2253e898-43b5-4a92-a0f9-7bf86c4ff4d1",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "0f9e03d7-5e14-43b1-952b-357f986df902"
        },
        "item": {
          "id": "a7031c9c-8ffd-486a-afc3-5ad3a9ea1c8f",
          "name": "credentials_verify"
        },
        "response": {
          "id": "7acef9fb-5e61-4164-ae2f-16c5989552c8",
          "status": "OK",
          "code": 200,
          "responseTime": 3812,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "25a5dacf-76ad-468e-b87b-25c5a389e4a4",
        "cursor": {
          "ref": "1ab1a4aa-17e7-43cb-b9cf-3ea69f88add8",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "45cdc823-d04d-4017-9212-fa932ec86b50"
        },
        "item": {
          "id": "25a5dacf-76ad-468e-b87b-25c5a389e4a4",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "d808a42c-af24-4488-96b2-95c3829f1508",
          "status": "OK",
          "code": 200,
          "responseTime": 2980,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef69b3-911c-4fd7-90f8-f357006f6629",
        "cursor": {
          "ref": "e5c79a0a-17a3-4871-bc39-44a1e5895502",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fed4d7dc-e49d-4f70-939b-3eadd624eb94"
        },
        "item": {
          "id": "63ef69b3-911c-4fd7-90f8-f357006f6629",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a0ad5c2-5dcc-44cd-9298-73853c7abfe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 115,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ef69b3-911c-4fd7-90f8-f357006f6629",
        "cursor": {
          "ref": "e5c79a0a-17a3-4871-bc39-44a1e5895502",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "fed4d7dc-e49d-4f70-939b-3eadd624eb94"
        },
        "item": {
          "id": "63ef69b3-911c-4fd7-90f8-f357006f6629",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7a0ad5c2-5dcc-44cd-9298-73853c7abfe4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 115,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9dd188-5455-490c-b233-88ed9377d1e2",
        "cursor": {
          "ref": "860388fd-c096-4c94-8f2a-3ebd4597b1fd",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "22bc59f3-de56-43a5-9a1d-996ab28d37ae"
        },
        "item": {
          "id": "ee9dd188-5455-490c-b233-88ed9377d1e2",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "3150e7de-743b-40c5-82be-83f4b2465b94",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72c91a8-7e16-470d-8009-d2ddc9077d58",
        "cursor": {
          "ref": "53180cb4-e27e-41d6-8fd8-d05d16d3f756",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "4defa20a-dcab-44a3-8920-f9f79446d3fd"
        },
        "item": {
          "id": "b72c91a8-7e16-470d-8009-d2ddc9077d58",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "e1b8f080-2056-4162-b61f-806a3edaa21e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}