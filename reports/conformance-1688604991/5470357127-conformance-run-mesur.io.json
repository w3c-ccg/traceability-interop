{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "08dd01ba-62ab-4849-8ed5-edefb91f7076",
        "name": "Clear Cache",
        "item": [
          {
            "id": "92901ed3-54bc-4375-afdf-e7b220508639",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4529c522-0e22-439c-ad01-991d8e6d4bd0",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "314b3eaf-0088-4a40-99d9-279568bc5c62"
                }
              }
            ]
          },
          {
            "id": "809ff83e-7c9c-4f15-b344-04247c906948",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "10aaa89a-123a-491e-9fa3-895c6682e9ee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "332d3a7b-3996-4fb2-b977-9939c7ad9b3f"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8232153f-58c6-4e25-84bc-96d10dff8a3d",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c51011f6-4680-430a-a00d-32d078d5133a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6e46c1a4-2104-461c-83de-1980beba7689",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd0d917f-b633-40be-82ce-d1e1aedba651",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0265b2da-3898-4a44-b3e5-5005bd809332"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "64f22370-04cd-411a-b5b2-37cffa54b83d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "07016eb8-f5c0-41a6-bc0b-132def4bf1e0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "da35ea30-460d-4bbc-83f7-6ac3d6453fa4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c269e686-8955-4a04-8d02-f47b08322441"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6cace7e-de15-45a1-a14f-9677df94c40b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "8eef81fb-e559-4616-912e-e365d95b2126"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "10a7217b-d090-440e-b6ee-2b0d8ff49857",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b672df74-475c-4e8d-9172-31fabf0dbcef"
            }
          }
        ]
      },
      {
        "id": "162afbc4-2e45-459a-8271-e5f17fb6e1e3",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "7275f474-2d9c-4a7b-b6b2-1f6d6bb18542",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6598d3b3-ad57-4861-ba0d-8a8cbb53a545",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "809429b8-8df9-4aae-843a-876af3b2230e",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df2b774d-919f-476b-a205-594bde2fcbcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da2894be-305d-456c-8df5-7e5499a0d804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2813a888-6ccc-4c26-8a06-9cfc4404cef9",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1229767a-cf13-4218-99e6-f542fc8dcef5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e782bc07-ac40-4ff5-a682-4ee855cdde4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb48940d-027d-4313-a74e-5280706f4655",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c830aab2-1a35-41a8-bae6-4b85a83f7100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fc5c54ac-212e-4195-9afe-25ad555ac154"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c37c0e7d-44a8-4a3f-81b4-c62a016997cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48e56489-0cbe-4017-a5b8-e5013380eab8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9338a88f-79a7-4507-a922-21ffbf4ef18d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "59bc0e5f-459b-417b-adc5-9af82b0142e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc739a4-d75a-4ab2-9a07-3b3ee07fb025",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d405dff-96cb-4fe2-ad1b-8346c785e055"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e421a036-3ec5-4be3-8da6-5e2d9ae942e0",
            "name": "Positive Testing",
            "item": [
              {
                "id": "72574761-2e3b-4659-847c-c101796d6934",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fdd3fbb0-3a31-41a8-855b-3a6fd8334c6c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "66439f9b-f813-42c4-b7e6-639619d2d4de"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f39344c-fcff-48b4-93f7-f3710fcf6c88",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "120cf664-5e98-4eef-ba4e-4bb730d9feff"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "40933d18-5547-48d0-89c7-b83a6bb16bcf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2cfcc844-8bcc-4750-b343-bca7c8e63f0e"
            }
          }
        ]
      },
      {
        "id": "82f07e75-fcb4-4bbe-94d5-4714364d10d5",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "c0de173e-8903-41b5-b431-3a9e6fe381fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "834a144f-5e21-451c-908c-2e211c9c222f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fa616399-73d9-411f-bbf4-43be073ed3ef",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc768fe-4fb2-4120-a644-be8208f0a04f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48016a83-908e-4e0c-95a4-8cc5f2676b61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc3ea60c-69b3-4998-8a21-6407acb15656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e7717687-76eb-49f3-b9e5-32ede7eacece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "984fefa5-6f13-4de5-92a2-47f8ecf84cf4",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b1960b4-9ead-462a-b6d3-0c3cbc0d5c7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c035c2bd-4786-4627-bd7b-55d36fd88078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f72317f-8414-45d9-beb2-953c2eb2b572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7dea0a46-f330-4d4e-96ec-a78ffc9022fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec159470-a94c-4cd3-a0d7-705a873b1962",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "239c64c3-75f8-4246-b47d-9b34c6257663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a986ffea-d89c-41c7-9197-b7271635f298"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153fb9c4-a11d-4e53-a6ca-6c7b1e35a348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "955645af-9373-4da3-9883-9be68c85b0a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "636bad99-1e91-4505-b93a-c23249fba97a",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb012a4-3b2e-4552-a994-7201692ca339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7982c953-6de6-44d1-91da-f4f8590de213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff0bb7b-355a-4f16-ad12-48d4216ec40c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dddf2b90-d213-46ad-a082-2fe32b38a41e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a65923-5a42-4604-bd3d-9b0f8e9d4d59",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4631da0-e1d6-4771-a663-19e84dfd68f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1583400b-5159-4348-b905-47ce5b066d96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dbaddc5-5753-415b-a893-facb9f6301e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9ab7ffcc-2aa3-4c35-b4c1-7c6290da6614"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85514739-9797-4634-9695-25c516dbe245",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de29c59c-f3dc-4a92-9151-89e94ef94f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9258358-3e88-442b-988e-2d878cd057b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2f52729-c892-491f-8742-5a55c478f8d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0731b836-e1c0-4a4a-a3c6-660f8dbdffee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96a5b136-2082-41df-b55e-d032e75ed5ca",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2504149-d6cf-4974-8a80-e0fd15180790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8096a4f3-adc5-4cf6-946d-9919f0fa006e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db225cb4-da10-4ffd-b322-8081467b6c68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1c0e471-b0e2-4c9f-a493-67eaa97e733e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "365b5ece-8c62-40f2-a86d-d207e0ff5292",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4419b963-a686-4f64-b5a5-8612cd5bc52f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5456af24-acdc-497a-859a-267aa8932bf0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409fe31f-14e7-469d-8b17-df74c84ff7d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "57156afb-d939-4eb0-bc02-41aa037f3f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79b4c682-f9fc-4e2e-8de9-9843c98919ef",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1cbfc3-67cb-4644-b548-bc6a1d6c8025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390f937b-725a-4029-99f1-c16e8976a565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12c0f062-567e-4c96-bc1d-da3e89b55185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bdfc8a7b-e9ba-48f9-b91b-7b5fc0fc139b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a36b855-296f-42fe-b198-1035fecae145",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896fa164-5aab-4be4-a4bf-671819f0a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc34f614-e405-4993-a6ef-c0814950f211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a95eb01-542a-4f9a-bf32-7e5717c31c9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9aaf8760-76c6-49d8-8f52-1b4b9e0a43e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0715504b-8f4d-434a-bd6b-23940d88f012",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2adedb6-a422-4586-80a2-c69e1c0a5328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dd400bc-78aa-40e2-b8e9-e6d57fb81a67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e3d78f3-6c68-4e6a-95b2-4dcbc0125a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "709c47c9-bad1-4ff5-a5c4-0ec78f46b511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96eb38d0-d6ad-4976-a7b9-f849869c0561",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9b3a49-0f5e-49bb-af8a-277f00a8b17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f0b4c0a-46a1-47b4-8437-fbeadbacde08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b675d49-038e-43a9-92ce-34b56bb922b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c72ea325-0377-4e6a-90d9-1a8dd3de10c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d65acdc-7ad0-4dad-9386-b54300e6d3bf",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "916c7347-7e8b-49e7-a276-f0c48f951823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "016c4943-ee2e-4a5b-ad2e-ca2423c5eea0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41db9e41-a8c1-4869-85d3-ed7c51342958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b6aae6e-5595-4d36-8ce7-84274e6524a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec5df42-5980-4576-9242-4307f4307045",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44c2c29-17dd-457c-8e95-77ec8857b03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed71a814-945a-4e1b-bb2d-99967dc57718"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49d7992e-bd96-43c2-a649-f0cfb6d7a917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01120c0b-2646-45c0-8584-3e4833b8af8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f1cd0b-20bd-4b47-9031-ec1dff5d13f0",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a26017ce-0c41-4c69-9a22-d75bcdbbed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8913fd4e-0a96-4cac-a8e7-477dc3ea52e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb83966-2bff-4ea4-9fd9-08c4dca9a0f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f2866db-1a80-4459-ad2c-c7bb92d54c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b42b345-754c-46dd-a2df-d3246be91d26",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f100dc5-9a01-4945-a0ec-47965029a69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b7b3e5d-d702-49fe-96db-f9fa71ff3c1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6358214d-4927-4b2b-846e-2452572ac9c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5054ee14-f868-463b-b6d7-9c9a634b6455"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0808952-be3f-4a98-9809-4ceb02fde4cc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cef747a9-7852-44de-809c-69d7ef15d34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "301bbd1b-1709-43b8-8cd2-b54b974e9bd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a99e7438-daad-4374-a3d6-aa6cf1688eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f5baa330-4d5a-4f13-a3f1-494e4da886f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49250637-8e21-4e31-b30a-3e5cd6e88f3d",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cb7897-3c5d-4ac5-9b45-59140889fe9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107d10e8-23b7-4b73-aaf0-639ad5506e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae893eb2-bac3-4592-871a-7fb091094e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "c7bc1e81-cb5a-43fd-89c4-e3687f769041"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2d41b3-0f30-44d5-b565-76800ad6c331",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "823beebb-e295-4559-b63a-a2fcdf77499c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd5bc57-c4b6-4d0b-ae54-b2e743bd1c1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d18be50a-d354-446f-9ded-4d428fc4af05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb51e35-d404-4193-ad39-e0431aad8858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9b8d5d-5ba2-4818-8c05-ed7960320fd7",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "499b90af-b0a4-4a01-b44a-9bc47b8ee028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73c5640e-6e2c-44dc-a6a9-5cf79629eb48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f2637b2-1420-43b5-8920-993896ad4de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "912632ff-226c-482a-aeee-0601f0fe04c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d1ddb16-7379-4a54-a4e1-d348dc2d4e95",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e427ffaa-c99e-4249-848c-d8a02f26b08a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c905c807-db07-44fd-996e-c739e6ad3e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0437522-b5bc-437b-ba14-3db1abbf3f5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b80dfac-b8ec-4232-bfbb-0ae86760ae0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f25ffe3-7fba-4b3c-a974-efe09086ddbd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd294f5-f5de-45e9-96d2-78f1dcd486de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54366f2b-f959-448a-86ff-b6c8e38ac376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a482f34-521a-4efc-a701-963c9caab589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c74dcd54-5a6e-40ec-93e0-d789950b5ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94162b61-2f0f-4e42-996e-a5346c717507",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b4cdf0-f72d-4500-a122-b23f548a9bd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4ab78b5-fefa-4ebf-b724-3d55ffb1471a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0529c624-624e-482b-9302-e3ba982b13cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8d99179a-5ef7-41be-80e4-c06e58ac18a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33a31e55-9e30-48fa-a2a0-ff1ac5aa1d56",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7aa49f5b-f877-495d-88a0-3010acb0780e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60b21122-7b0d-4bab-a0e4-274787c7c724"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b4ea46e-90cc-4e44-abd8-eebb0f73ae85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "9523394a-a320-48c1-8889-a3134d5d1bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27c31ce3-e416-431a-b122-6d907d495ac2",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38720f29-da27-440f-a76e-19ee14b39b58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7e6a474-848e-4ddd-99df-0dbbfab7ce51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945504ba-45ab-4388-a31c-dd2ab1a744ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc077b9f-9c31-49dd-a4a5-6a730a0fdfa9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "478fe92e-e47c-4e4a-9f24-17a44620de81",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "712006ad-c5d4-4d35-a36c-80785bdd9569",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32695131-2b77-46e0-84ad-3dfc445a99b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b479260d-0d51-455d-92c8-378be769b62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "41d3f808-9e18-4f75-94f3-733f480e8e38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b664394-9d9d-4b65-8b45-d65a9a94f7fd",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03c12392-9b3b-4416-af9b-101f612c7675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a36fd039-4fec-46aa-94fa-1a87c044ba44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1daddd9-82db-4b55-b7c3-030ff8ca4e23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b064edf-e29f-4e1b-b3d9-f078858e4f99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3739d1af-1011-46e7-b297-32fb3d6ef3ba",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b244bcd-87d5-4434-95d7-49bc401b5b1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517e9640-0834-4928-8387-718544c66742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e41f85e-37b0-4c92-81e6-7b517bcc2786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "32e01ad4-989e-454a-834b-bca8fd55d032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88a6e9ad-d8f0-4254-8111-b354a787cddb",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b72633-f5c2-47ef-8ade-ab54c46241fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5f8e34a-4a46-460b-8656-34fb30f50a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9907b2c-2630-4099-8e7e-b608b47e962a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8293222-2673-471e-9c7f-5b68e4d0dc6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f5f24e6-7397-45cd-80c2-85e96f01e263",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41dd2dad-690f-4edd-b1e9-102c59f0e95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86349bb7-e089-4d7c-9ed0-6583204d1d0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d48ea5-b6bc-4d28-b60b-e636ebab129c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fcdb9d-4963-48f0-a1e8-032d6ccc025a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf5fd6ab-4ed4-4975-8807-4a2b23aebb59",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c46cb315-3703-497a-a6a1-f68bfc570aed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94aa4485-9cfa-4b1b-843c-c305fb4e41f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ca8ee3f-74b7-4516-9004-4eaf778cc98f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb4b8e28-d196-4059-ad60-5097ef3ba577"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02cd6ce7-d7fc-4abf-9f7a-8896ed753995",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f67a0f36-6d8e-4a7e-ba92-d0f149a665f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a0e40f-887f-4e3c-a93c-72dae8c6bf61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d76042e4-773d-4346-9adb-8e240dd154fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "68956580-da85-473f-9064-0b8d8566d676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89650de5-4d21-4249-bf20-c2a499d49283",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bf843a-1b68-4a6d-bdf1-36da53814b80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcae7a09-b016-4bc0-9a41-aa9ba1a5aeaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f942c2-3c68-48b3-9a6c-935553480893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae089854-dbed-4f5a-b20b-07e8684629d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fffe8e72-6713-447c-a79a-3c67d9bf511e",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f43e5960-c6c4-4662-a987-6a3afe8310ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efad22f6-8652-4840-80c1-64937fe9b29d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2b0d0a5-7801-4f81-8884-ee2c2537ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d417aed3-66a7-44a5-9db7-f983712c54d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1de7f982-ff6a-4e4b-91fc-1f48e63893ab",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "522bcbe1-091b-4834-a1ca-3e27e9975475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7487a84c-c3ea-4e86-8341-33254d0ce005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7b6d8e-70fe-486b-83bf-9d0bf1d1843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "e31de533-52c9-42a8-9636-036b417b1d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef17bf9-7ac8-4139-a4bc-21274d78552a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d3277e-a54f-4369-9a54-80afa1f120f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "263af961-f16b-4a14-8670-1e0839d9c27a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635c0086-04a0-4f17-8a94-f9cb694b4468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af3e9c17-2033-429f-9e06-ff71525bc75a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f45db4-4070-41d6-ab12-af7283a340e1",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eb07ef-69c7-499b-83bb-cb933a1c80e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a43db2d-c0ce-475a-b571-fb361bdb641a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e27bd746-a9ef-4edf-ab44-4e0809ba5ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3ae175-1407-4100-93e9-bfe287a80565"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a37521b-b177-4c13-965a-117e2f609a43",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e2a8840-db03-405d-8981-2ab0f0e64b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5aa4df-01b1-4c31-bd72-d7bac4b15ff8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d82f48-ba2f-43a3-89f6-52a6a16aeda0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "81dc1332-b76b-4f7f-96f4-c3b9771c1ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a06262a7-cad2-4a5a-910e-f54aedbb6d99",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f2dbd8-1aa0-4307-8f5b-4fbe4d73350d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98f27d6e-464e-4b1f-9e0f-846ed7155e9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79981d-f4b0-4e37-8a26-3c86a6ed16df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "80365255-36f9-4252-86e8-32cef5bd5899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d51e4d6-443c-492d-9563-e6075f505a04",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d92ea5-1556-4710-82cc-212367f10061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3017e112-03cd-438f-b126-e074b969783a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9037e42f-2d49-4e85-b3f3-4f245dc7162e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d8f87ec-cb06-42a4-8718-9912e4ddf154"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07f1ad1d-55d5-4599-93e2-b1e4b6b16a54",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46a3d40e-509c-46e1-9531-b827bab5ac5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60f43c98-a251-4366-934d-63fc4da4e235"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c300ab01-7698-441a-ad76-8433ccbf5234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5de71b20-66d4-4d91-b97f-363bcecdf8cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b100b9e-d9fb-4f16-86c2-dda00102ed88",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac7b8fb-6536-4572-986a-6beb8fa6f3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b19627d-14ca-4bee-a631-05ee1c7e9f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73477205-9d58-4768-a9af-d9212411e5f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "a667a688-0db0-4cd3-8f31-fa5b86771beb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9563d75e-f58e-48a4-a6b9-a8d3ad5f4b01",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2aeb06e-86cd-4f61-a3db-601fd8c3e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "411ad173-02cc-4acb-b911-27e2b91e88ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d494ad25-2c0f-46d1-ba63-6a32be059d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "56841fba-f877-44fb-a3f0-fc00b57dcbb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3077a32d-d15b-44f6-a269-c2044c1796e7",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "685265ab-2b75-486b-a858-25da3169092a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d078234-79fa-4357-86cf-eadebb6e3678"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a599006e-7572-4308-b822-95400c3a545d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cd663a9-e199-4faa-a9e0-7b38e574c9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6a2b87c-8485-4b57-9488-80a8409819d2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2b5d1ab-43f0-4b21-9f10-b18d1e602ec6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f1369c-345f-4027-8b83-6dfb7d825486"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f4473c-cbc4-4a84-8d47-2202c1ade437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b0e835c4-0a4b-4022-9906-eb911e6e5175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2a86142-4333-4844-bdcf-6e7912baee66",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75aa1e5f-7651-479c-bd1b-a15ecdf15272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c8efc5d-73d3-4293-93d8-b09566a10341"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e5a41-7d2b-4d88-b26a-403c71b98b72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ba3fc97-6970-4422-b4b2-de27725cfc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f21d63f2-e75c-471a-9638-cde3a5ed0d3a",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9168b27-0e1c-4b83-aee3-9f9f0c0a1ec1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98374d99-f57e-40b8-837e-1e4bd24f32f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d84463f-0931-4f1c-b037-9f8d0e1ee55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "578ba454-3d61-4327-aed5-b65fa933bfe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9045ff4e-2587-4d10-a9da-aa5cb4a1ef4d",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf040b64-13b7-4f91-84ab-b3be9cd75a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e0f0b25-e7d5-4d27-9e29-eba7d47410ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a1cbf2b-6775-4bcb-bb93-de11f262f36e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49fea0c3-1aa3-48fb-aaef-783d724c2fc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61571b82-db96-4051-9564-4a5c4152bb80",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36cb751d-bdf9-4d36-9aab-b0599bf4bf41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02b7afe9-50e5-4351-993e-5cc6569e613c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc6c692-5519-4e26-8657-3f274f205aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c6e7f9b0-ec79-4f95-85cc-e3b140cc7252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088dffcf-18fe-4e65-b1d2-acfe7745f313",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e5c0a-e6b6-4521-9f9b-574e3c8b3890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "049ee10e-1c88-4d89-bc74-536ad1ef410d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "422bb5ec-025b-4bfb-864f-6f20d5cecebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9f9c0d91-5ae6-4477-b731-889e49118261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4f857d-2d37-4da5-8832-8ba7384a7682",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00f3402c-bf5b-41c1-b24e-0b60dd97418f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75d3628e-13ed-46ec-bb10-a51553b38585"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1414b525-be65-4100-875a-c7009cfc97ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ed51442-a6a0-4adf-a2d0-4b5813011624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "053b164f-d916-4329-87ff-1b9aaa150194",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97109f44-9ec9-4e39-a9f6-c74e88697763",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fb105f0-b3fe-47fd-94a7-9969b4da0c49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3af4c0b-4276-4b1d-a2d4-11261e3324ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de849c85-d067-4e72-94d5-ca1b18a7bb1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eba0312-7bc9-4b26-9252-2c6069515c7d",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "246b62b9-73b7-41b9-b122-c4ece5110ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a75b8716-0c08-4914-a24d-7cf682870c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a260b1f-5a6f-471f-ba59-601f9504a77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "96252fed-bd8f-4dd1-961a-f62c57b78df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1fbf5655-8a03-4ce8-a5f0-e929f0a49618",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571322af-fe14-4b54-aadc-7eba1184e016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38599b18-8423-4977-b4fa-0ac75ff449e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8db7b0f-894c-4764-9a6b-9b9adb1b69eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ee1256c-cbb0-45df-af0f-5a6f6dd9c52e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb781831-263a-4e58-a671-e06375f038aa",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "850de2c6-0d41-4787-a43e-f724d1a19018",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4951d6b-bf05-4ab6-ba07-b634c86f9fda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a239be8f-c671-4473-884c-5eedecf7541f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "726a285e-69b1-40b8-ac9e-7a08c1b5dbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cfe414-0790-4350-8832-51a03d5fc1e9",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b0c94ec-1d10-4068-8a7e-09b9dedd26d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca762dc-3fd9-4030-8dc1-d9bb25e3e308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f15a9f0-6e2f-4991-9fd5-579cc672856d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "450ac771-22e3-4cc9-a5a0-d764ecbf7383"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b7a909f-d50f-46df-8371-4bd0c7b550b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1deb5be-3346-447c-9162-5adfda05fe05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "051b41ab-cc22-4141-9312-c76d3f3e81a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74996f6-a9fd-4d3a-a4b1-faa09c6eaaea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d820a147-5129-48d1-89ec-f56439d73484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8912e91f-5287-44a5-8813-55b75a4fe52b",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9998efdf-42d6-450b-838e-6393ac89eedb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c43f77-2a55-4dca-96df-7185066b2e60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e93a4fa-2d1c-4ab6-827e-41793c684a26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e696abed-c36e-43b8-9271-d917a0276f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4847e6-75e9-4467-92e3-3b76f0ce45cb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31870bf1-d5eb-464f-b51d-070ebd2e6332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d611d8ac-a3b7-49db-b7a1-582df025dbec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6e69adf-a379-4f88-af7e-0dc6150b6fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7d8009e9-fe87-4514-bbea-58b839676081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec5a5e7f-1fe0-4c0b-a93c-d35ee29727f3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629c4c4d-da16-47ce-8088-03344674c104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "496e492c-2a07-4c15-bf3d-feb597e4dd91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bda5c74-5a4b-4046-b14d-ea767f317567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b006c9d-fe4d-480a-af2e-77afd33a52dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ae55d2f-2e74-44a2-8814-71a27acc850c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac27390c-d44d-4362-9d43-ab94837ffbe1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69e9d05-2254-4640-813e-eb99fa715617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38eea24-547f-4963-b33f-8e16ac146837",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "08364f86-9915-4be1-8472-4319bf3b92ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bfafa7-ae16-47dd-b8f3-cbf31ad0cfb4",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446003f7-ddc7-4db3-ab5c-7813d0406e4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1f1954-afb3-4fa5-8d5c-817b86a69ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bafdb52e-4807-4d2b-9a92-5e3b4fda894a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f90ca723-1463-4828-8d97-2acaebfe9e9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2b98b1-4129-4229-9b55-a6305edf3d1d",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32bdc96-8bf9-41b5-aaad-b35757714941",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb113c4b-f552-4126-b1a8-689756842460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddcbb2d-b964-4f75-8a62-e9075f7c0a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "4de31a6f-4041-479d-b9f6-041cdc10fbb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ad771-36ee-4772-b225-9bd233c82c6d",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b2622af-27b0-45e8-a4c0-907de4761187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca7ddb07-9929-49df-9586-66ce6387449a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a600a9c4-8e8d-4fc0-a7de-006f8f83bd12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0affd42-3310-4127-8919-6e1a55b9361a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c28120-8b70-408d-ae0b-3dbffc43cdd7",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10459270-5871-4d03-abd9-e7f1891988c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2449828-c30f-4c94-997e-05221ce4d77c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2db9c36-ccbb-440e-a536-996c2b4d40ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59a489b6-5352-4ca2-a68b-e9cad3c18594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987ceb02-4e0c-4515-af1e-4cde8a857e92",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "213bae42-c191-4565-bace-9f3f62f9cebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4f6859e-ef1f-40f8-b080-89b3406fd0a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e019182-041f-48de-b82f-bb6797abaaf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b3d1c74-23b8-4fee-b48d-402d1a81885e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "699a7d8d-2c92-4e59-ac35-038bede847b2",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73c95102-981d-4708-ae63-e5ff5c7c7456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7894b7df-e625-4e1f-b2ad-16259050f605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a0ef58-10b4-4387-8b2b-227bba8205fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c80f97eb-f53a-4919-b9e1-ac40eebe32c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7354accb-0253-4a09-8682-9638bd4c2b0f",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe9006c-72d7-49af-a5fc-c5aaf521dbf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503be106-1793-428a-b1c2-a277010b4f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f87483-e555-4922-96be-93b403bfb44a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "22124605-f110-4c15-8c24-a4542f194ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e1d0a1-a6c6-4acb-8d54-63afd3c857f1",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "446056b5-2728-4c93-ab6d-e5dbfea8952e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70d322d3-5dfb-4bbb-b1ab-32f46ae7899b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef7074e-285d-4080-b167-91d7eaddda67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "08821180-d689-4264-a7c2-49177f821506"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305e9783-0c98-4d7e-b12b-ba2840158208",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98e7a72-67cb-46bb-938e-fdd9e0dc9fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c58cc14-c0b8-478b-b7b8-b2953d43dfbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be53673d-eef2-41e9-baf9-02ab53e7e967",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "37e93d91-9c61-4c5e-b64b-3b34f5938da9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5923f4c6-de49-4d70-9078-6b12606267a1",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d69bec-fd07-4816-bbee-c9484ee2a94d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c3567e-fccc-41ce-972f-ab370069351b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "429073cc-21cf-4b61-8055-67757efd5fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89edce2e-ea33-4507-b9ba-02a063fdf1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a152dc00-ba2b-4ed5-9a2b-54c9d545e238",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f635121-9d4a-4b7c-9570-bfb62f7a36c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495ec793-5c11-4b56-897f-393dc8431a43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa2d20fd-0973-4a7c-8fb2-0a88aa23efc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47f1506d-7bc3-4b3f-9221-54e6e06dce19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc5233f9-50c6-4cfb-a70f-0aa4ded8c264",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a797c22-0680-404e-9b4e-52c88e843dff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9b8f10-d445-4377-9092-b2b72ee09db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da8d7c9b-7e6d-43dd-93e6-a4590e4b6e87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3e033de-aaa7-4b2b-b604-b4b708537265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009f8d07-1106-4687-9129-549643ca99d5",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926866ae-7d3d-47e3-b2f3-0e0f2de26b90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39a3e929-3f7e-4d69-9a9e-6e59b6c6dace"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "065b0788-2207-4246-9f97-e06154bd370d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34dbe8ee-7c61-4982-9c8c-8a150d2ae86a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2f72356-21d8-4c31-b028-982ea7661035",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca5b2cf-e18f-4771-9352-4b1152986a02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92ff4515-818f-40a2-b858-2ff6f42a5def"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0b90ebc-fde3-4a8b-a611-e52f487ad3d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "98d85688-fdae-4a18-a7b3-05f3070661a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76594b66-2442-4260-bd0a-79d8bfd861d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b617f1c-b8a0-4d1b-b5c0-20a1fdf6996f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e222071c-0995-4e81-bb82-3f223bd1086e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ae6a0f0-d43f-47b8-a2c5-4317b44ab0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "486fd1dd-ec5b-45ac-af22-454759f23d50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "287e0719-4f2f-473b-b4bb-ba7c4f0e4c1d",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b0013aa-8c44-4a5d-9e2b-a5dbc8f64c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3486f2e4-fb7e-43d7-a162-50fcc6786658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb83c1b-0c82-4fe0-94aa-f8eef31d66f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a6d29d31-217d-428e-b0da-c5e0992b5d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7947841-6afc-4510-8b03-c9ca66c31afa",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9984c232-8834-46d4-92b8-d73bb2e58183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2ae9b52-ad55-4fdf-81b3-aff80a52f37a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe3b31a-4e69-408e-b3cc-c18186bdf906",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "56b80c68-9c90-46aa-8891-9750e54113f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30765f04-7bdd-43d8-b1f0-f66948d1fc6e",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56102def-7a46-40e7-8a35-4ccbf05228ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e998bf-75ad-4bd7-98e4-a8bd419df7e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d1eb1b-2677-4d14-9844-5b65b650c2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "50f1736b-f7bc-4b7d-9d81-bd4e76c47de6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da9bd449-8621-45b6-b4b7-06c1de71d54a",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3c55739-9aeb-4d39-b9b1-51653dbf2c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d25a213-78a5-4776-b2f2-3810c2fa73af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84265bb-f1d9-4fe6-a0e7-90b0daadfbb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ed2f2c83-3759-49d1-9ae7-a3e987d03af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ce0e504-a381-4f09-8ac3-89c46ba4c97f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66daf6c6-5e3d-43b2-ac67-0d54b5ac064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3297ee74-a116-4816-b566-73e727c15ff2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e57e8147-fdba-48b0-969c-3a096f8bb7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b0186f6-28a7-4cb9-9d80-3124f67808d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac3f0807-4d85-49f0-b772-0aa91a72ce78",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc03d7d-51a8-4a1e-adc8-7fdd4931a660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c3728d8-c586-46ce-a332-a004f874915a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a49d5375-24f2-40bc-b6f1-c3ac41c254ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0102e278-902e-44d9-8adc-6a0dca755d7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8df0b75c-64de-4a03-bd87-c37475284972",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a62f37ee-16ec-4f8e-9980-52162fa17758",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7148aac7-40d9-464a-8dee-fb51252ff3c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ae8eb4-6763-4a40-a74f-5113932f9d2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f326a3d-8ca3-4dcb-b805-d12341219fe4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23f1e860-16cc-4379-8cf9-69d8da0bbcde",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f659a611-430e-4e85-9af7-e0a963b93948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cc727db-384f-4017-8028-fe21f9eae3e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af4f3340-68cc-435b-b0fd-6ced656bdc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3229361f-1269-4171-841b-3949997c218a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a42b0cf7-c37b-40eb-a207-cd9ac604b3f8",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0723aa09-0626-4093-9e49-7af2e73fd812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc499aac-38ff-42ae-bdd8-d747aa5b9a71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1c4e95-1f4c-407e-b05f-756071ba02ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d67e9cf5-f1bb-4b50-b3ef-9c2f1fe41e8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2815f5e-7043-4e9e-bfe2-e9e0e476ba5e",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77a3d169-51c4-4082-a205-d868b20eba1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f3468c8-40a7-468d-8c22-02972ccdfa75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b37a48ed-52a5-49be-9f21-57024cdfe7fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cafa8da7-01fb-42a1-a0e2-6f0288ea76bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e332059-e454-4afb-9df1-b6767c61434f",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "383bce5c-734b-4dba-83e2-e4ce8d70a010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e4bf33-08b8-40b5-905c-074699b88aab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "533be7e3-3865-4c18-81c9-8c7e2d4574bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6f90c2-5010-4d6d-8428-87e444698140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7720f66-846a-49f3-885c-1105821bd84e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6587347-f0a1-4034-b178-79fdef73caaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5c0a5d-4144-4e0c-b7e1-c016d0040483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca895f62-4571-4f72-aa6d-60a095423192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "eec8ed9e-da4d-4cf7-b8a5-610f4e4d73ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75cab088-fa3a-4b80-8121-b5b88f27fba1",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdcb8173-51d4-449f-b4c4-1d634b784c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fca60ba-97f2-4ca1-b41f-76b16d9874df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996d66a3-3cad-418a-aedd-f6bdbf120bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ead902c1-5aae-40f0-9640-5eb652b2c803"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9feb4c2-7bcb-414f-a21a-6e176639322e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83fbb1f-8304-430e-9663-1ec682acb302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "913df379-51e7-40fb-b550-43ba86595f94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfa33987-ab18-4143-ab90-eb18eec7170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "29b01a36-226b-4528-b016-c71c73b4ce8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e496b78-e70a-4896-807f-d0b077898e74",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26ba812-19d5-4a1d-bd3f-2dcb41b66659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "947c8b48-5fc5-4e13-9d99-8b9d89e40081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c411cd67-c89e-4aeb-b7ed-96362be86143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3e2911fe-bb88-45c2-aae8-992cffc05045"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202135e5-4437-4c7b-8b2a-6cd59b239c27",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7df4d39-f394-4742-a1cb-6ad039f58535",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "53252d06-2602-4b5c-968b-e0aca44e4073"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "976d8517-ac34-440d-89b9-72550adb1b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd68b199-7bfb-4e02-ba60-bfd09391ab89"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "08cddfdd-8201-49ca-972e-db43f2e48ab2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "bda455ed-9172-45be-96ad-3632168ef6bb",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f205fa2-b699-407b-8828-6928043ab4e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c50ea2f1-8971-478c-8166-3a310eea2cd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211b8585-7bd7-418c-b4d2-b82385db9618",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79e75125-5119-4253-809d-8f7dfdbe1fea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc0672da-3482-4c25-83f2-b7bfe9fa52a9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d7a5c61-1135-48e9-8f1e-7a87047ac550"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b3094e95-c214-4f90-9178-9529da4e3a60",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b8db0302-f5f5-4757-8042-5409e8a4fa3f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "539066bb-de78-4ab7-9c65-7ecf6e4ccdc4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f1ad7801-033b-456c-af2a-d85807332eb8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e3a6272d-c5ed-4513-a079-9e542f21db5b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea8a5e0b-f177-4686-906c-f8e92da118ef"
                }
              }
            ]
          },
          {
            "id": "d752061e-f232-47ba-908c-66d65639644f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "933ce1e1-c0d5-4fc0-a4c3-24c7cf706a46",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "988990c5-f68f-4a39-8d81-83ec5f1ad586",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9b31139-20b7-4308-ad6e-7434b5b2c44c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e8e79d2-2346-467e-8890-1faa25834362",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a58418a-41bf-4fe1-a421-76d6e4b8a92c"
                    }
                  }
                ]
              },
              {
                "id": "eca083c1-9337-4965-b6f3-084d7838e764",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9fc98201-1afc-4b0d-b043-d3e52a0dfc90",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b451cc65-3c62-420a-bb40-3c36d41058b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1747ed7c-fea1-48a4-904d-0a83eaf9da2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7eefba1e-6d21-463e-80f2-889c250ef210"
                    }
                  }
                ]
              },
              {
                "id": "0db9ad7d-c378-497e-98be-60e3a381a99b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "65d4c81b-cd59-4961-ae17-597adab10bd4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "278d8207-f767-4e8c-b85e-849a33680f3c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdf2a136-dbff-45d4-8728-99671b65cd70",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba6eada5-b3ea-4dd2-9df3-140b0e6597cc"
                    }
                  }
                ]
              },
              {
                "id": "662c05af-40a3-472f-aaf9-d0a1f67dcdef",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ae6d0b7-c1b1-4bc7-9f3f-5930f5496048",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1000cf04-6cfb-4a4f-ac50-c59a2797aa48"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d888023d-77cd-424b-b22b-62141518ecd6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3caabbeb-071f-40c1-ab6d-694699b93468"
                    }
                  }
                ]
              },
              {
                "id": "6ee99e5c-0169-48f0-8067-fc9876bfb15d",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "33832512-c0c9-4cee-874f-2b01c65555c2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e8700bfb-3a7b-4a9f-a6fe-9f7195b0496a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ccc35873-7678-4635-b80b-ce07f10d2c84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f62fc76d-4c70-4b49-8a45-3bef92fa96b0"
                    }
                  }
                ]
              },
              {
                "id": "bb4d0723-d0af-4576-aebf-ba56bb640f28",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22e17e56-f364-41a4-b19e-0a05e580059e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da7686ee-bfa5-491a-9e1f-9e1836d135da"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4590a88c-7a70-4f15-8a3c-36fce0dca89b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2c4b1c8d-461e-4e0a-8e62-8dd3b17073a6"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0eabd974-db9d-4770-864d-a4bfbb32d0b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "345f2ccc-7b5f-4277-bfb8-d74a0df638c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "360935d6-5c02-4c5e-953e-e66fc2a4a89f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bf999bdb-82f7-4f37-94f3-6353bcaf90ea"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "712037d9-c653-4d64-b511-1a2f9a6b4747",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "94ace405-392b-443d-bb6b-3ff9ec3204ab"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b7a7b34d-94a8-4cca-856a-49cc52df9a94",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dfdbb02c-5df8-4fe8-9ae8-f9d3c845ddb4"
            }
          }
        ]
      },
      {
        "id": "fa37a8ba-bab0-42de-a776-322c5a48503e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "92318dcb-da4b-48f4-91a1-7055ddf2b4ff",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ef1ef45a-c5e9-4602-9722-aebb206f60d8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "602270e7-1126-411d-b0f9-f9cbf326783a",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3cf240f-2464-4b07-a17f-31b615de595b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "873dbd01-c938-463c-be25-7f365364fc96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41549ce-39e8-4725-9c0e-d86a0044f50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "56fa84d2-4c9e-4826-a929-dfdb7c7a5177"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79070a0b-bdb3-4327-a525-bc6d6dae2919",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b488900-bd6a-47b6-bc7f-3a223dcca3c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "824868ef-bbba-40a8-b4c3-14211d5e1081"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "689b5923-d2bb-4771-9e69-f3d32492d128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "061e60ce-3308-4271-8b70-b3c1d2e34e13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baf1137-0a7b-44c3-96af-c25ee352666e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "155293d8-c894-4888-a435-6c8f737025be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8d8b689-1c4a-46b2-944f-76c67ce7f0ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1c9b4c-8aec-4659-be34-309cda6dd016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "091388d0-286b-48d7-af30-c77197952280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45cd26c3-0aaf-48c0-a1db-eed6759aefb6",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47a56d27-2abf-4bd9-bb61-4db039cd697e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "214cc889-a1d6-495e-97fe-17d9093edd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f48653b-0557-4b43-a3ce-01e070197189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c869438-0a5c-46cf-a0fe-87f4164158b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc11107-8f60-431a-8744-ef916b1f6b1b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74771167-1def-4a30-a427-410e4be0b626",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04ed5bfa-ef23-4975-be37-044f3394d8d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c280584d-68cb-4864-ab0e-088ab1c58fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca2418a6-424d-4c24-8fe1-4c0de0948622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ed1741-2af3-4e78-b5f5-0d68b99aa367",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b1c760-46b3-4486-a77d-5ef111028e8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e1a164b-f647-4223-857b-b133f0f5f61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec2b815a-b944-4e1b-a933-56c39187cd52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4d1aa6a4-77fa-4cac-a32d-7bf13d91c099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1b16b6-df2f-4cb9-886c-798c7dd2ca74",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9485ff1f-6f4f-4c4e-81bd-cc19490cd752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be6f6090-e356-4548-b0ac-b26fa808fb3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9eacd1-40db-4f67-a5b6-e0f77aaf2041",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5a0dfc9f-850e-4419-a71c-74b4c135a8da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20155cb4-d0ed-4407-862e-63d2f1d9324b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220da1c4-ebaa-40d3-9a01-ded8a77fae0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e48be5b-c1da-4b7d-b558-6d492380c281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba99d58-32fc-4ea7-8781-4d6a1e1ccaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2abdbd4-79a9-4e4d-ad6c-34faf3b3a202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c341a170-bc26-492e-944c-e127ff70af19",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674684cb-9835-40d5-940d-6bda5732fd47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1b8775f-0114-438c-afdc-5e1931f787d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3b7435b-0ce3-4187-8d46-9cfb7c5a8e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf4f9562-b53e-4320-ba81-9738dc38a840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a407e7b-2873-4bc5-8ceb-dac3e5f56c71",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60eb982d-635e-49ba-99fd-87c56c3bf8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13c9229f-7db1-4cf0-bf2c-71de9c90b3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a97b7bb7-16e1-4e87-986a-49bb929b9aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e57d031b-4a15-4b57-b615-a1a7015a319e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9e0d29-790b-48cf-9245-4ac42da42106",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bffa6f2-4494-493a-bb75-94aed29e5891",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916b0358-8735-4bab-8564-486b192f37b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81403f0a-08f3-4b3b-b934-e97e0eaf396b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "94d83940-1b1c-460d-b213-1113de93042a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b8426b-dcfe-46ae-be1a-f22ef318218c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15d2b7e0-8add-4828-b002-23875cbde366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbbf9090-cf3c-4776-b84c-811a0a54db65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3318e732-2727-46ff-b662-36c9a83b0a5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "050748fd-c17c-479c-8cac-9f1183d4bed0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4afd0dee-2ea0-4dd1-94c5-d925c072d636",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c3835a4-f891-42eb-bbbd-7e8aaa8e45c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c98d3b39-0d1a-49fd-a213-9201524c5f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78063382-18b2-4b18-bc6f-26e6c2902a1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "121d00fb-1e76-4c67-b92e-e9cac356b728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd18a12-58aa-45f0-8fd6-c0f03bdbc090",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98ac550f-9d45-4015-a082-245b74e8122a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7df50587-a60b-49b0-8344-6d58e4516d3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a143734-9450-4a0f-a545-6181c4585ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "35fb6d2a-279f-416f-a515-79c9cd10ac08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74d8f7df-939f-448b-ae16-16bf1cc33a82",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd0b9ed1-6ade-4297-ab21-0b59efa1397e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87340c67-53da-410b-8fca-75a66e656c20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9bb75a2-8545-4331-83ec-03aef7df36b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3e7d33d-0036-417b-97de-16570a1c2f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2c85ad4-aef0-42e9-be72-1b63a637856b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1375b94d-999e-44fe-b162-98ce424b0ece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e411ac46-1680-4426-b63a-d27eb3cab23d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c594a01-d86f-4287-874e-6ab29fe7c033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "9dcb8e3c-93b2-475b-a8ea-ba3e407434f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f1cecb-b684-4e13-a41e-1e373dd6e61a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c62531f-5d7a-44ef-94ae-92468e768ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1566c8-5335-46a4-9f29-98207bc8c5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "783910ca-6725-4b20-8ef6-30c1ae359fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6d1f0f96-4e92-4121-8f13-21c1eac33bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "378fbf2b-8512-477f-a024-6e5a0cf61dbb",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86493b6d-7ee8-46e8-b516-93ea560a5b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dd05977-fa9f-4677-af76-1866069f0933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f54272ab-4fea-45bb-9fd1-dfef1e401b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cabebeb-12e5-4ca1-b1e1-3ce4d527196c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92fbe933-f947-4489-934f-61251f7ebe2a",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa3a8a5c-aab0-4016-b158-125c1674f76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feea757-baeb-4e38-a81f-3c22900bb40a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96e8eaad-7a06-4764-b213-050288bd9e69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dc81dec-8ab9-47d4-b17d-6ad9f6ad387c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d93635b7-1e34-4833-bbd5-2167310fface",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba50ebd4-ff64-4044-b3d9-54a32c623e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "837af448-ccfc-4bd0-8fff-970cff967181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7be2b48-9346-41e9-8b4b-5f7c028f1cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c3541f52-bc9d-4477-9a16-8ca8a8b2a8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42efd70f-4718-4102-ada3-08573b5541f3",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b172afb-e412-428e-a01b-869b9a536340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da82362-b749-4775-9200-e12d33727334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82b59062-3336-48cb-aa6f-190c4de84bb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c09d1c-e660-41b1-ace7-6f8a1190000d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d062dc5b-5252-416d-bb7c-d2e651c73fb2",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "948d0c23-a6c9-442b-a839-43aeb7bc4d66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "904268c0-8cb0-43e3-b619-21f28df79aef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28d48902-2a41-4594-bd1b-43904f69a8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cfd7b4c-661a-423a-94c9-bd8a427dcee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee685fe8-e85d-4d42-a7c1-5f0926bc07df",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfae5d34-9f30-4f12-b247-1ea2c39d4fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aebffa19-093c-4685-98f4-6bd78a618124"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ef79d0-3410-4dc0-8b02-3b5a33dfac88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fc8580b0-5baa-418b-afbd-aea7f2112c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d77995b-508c-40d4-8c0f-3245117887fa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dbb929f-2e02-4604-9349-5f773af45093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba98e6c5-5b7a-41ce-9de6-3c4c9b9894cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e16138-0288-4d72-b28e-3f4f4cc2d149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d18400b-f076-4b24-9d57-c4fca8721eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad33441-20c2-4c1f-9bee-4cfeec76431f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a53a0f1-e578-4ae4-867d-343c6831780b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7daae3cd-bb54-49b4-a1b3-7ee66d1cde45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b0a977-f172-4779-ac45-79a20e840e91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1bb1c3f-7098-40f1-9267-10065ec8eeb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75253a8a-2ecc-4892-b022-652069a5df90",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de92ee9d-acf8-45fa-bd5e-0f6606130a33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89292190-3e44-4f0f-809f-cf5f7a2d0ed6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee45b8c-e6c6-4949-b2f2-559e072ab7a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "181fc4f2-e6ea-4597-a3ef-db288fa4aaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5353fe-c857-46c9-948a-8904dcd6d58f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3235e9fd-d99b-473f-a250-ac1d59434c92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb6f18a-896b-4fd1-8186-34a3722b46d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95826f10-b72c-45e8-8810-e89c66e71665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "68e8c39e-6e3b-4e66-935d-4395604f4e23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99de4702-65b7-4450-9d1e-40eab883ffc5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efac0f1-9ba3-42cd-a497-ae4314f0d95c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5eba813b-623c-4450-86cf-bb070bdf58ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63746b15-aba5-4716-a10c-288e01e232e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54e951c4-d7bd-4eba-9f34-77d9f69cccbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7373fc6a-1f85-4ed9-9495-e946db9f05b9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0eec165a-eb78-4342-977e-aec18a1bb4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56f1e52f-62ea-47f8-ba78-aca331788ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c46f52fd-b9ec-47b9-bdf5-085864477f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d59f477e-4b00-4f41-95c6-0cf9ec585de9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ac5043-000b-4d1c-b26f-7711b28822e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e25135e9-fb3c-4081-8e2d-8307ecd41d4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6a8a3f8-d10a-4615-b5a3-061fbb5908e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3569aa0e-529a-4101-946d-9369581d1c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "763087a1-afe2-4029-a006-cc69545c85d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59b496ea-dd99-496d-b143-de4e24b92a6d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdb49171-f18f-400f-abe7-023c8ae3d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72460d9a-b065-40b0-b91a-a4cf6f9c790a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c432bdf-9d52-4fda-a88c-6ba05809cd8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "783749aa-633d-4032-b290-d27178ce6d92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de961ec9-a660-437e-b48e-b636789f22c7",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e79a45d-6a5a-404e-85c1-e705b4686ce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc040a7-1516-4826-bb5c-e29a6f8a6792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afade8f9-5296-4c18-9678-30c47a458d3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d3a1ba9-d18d-4d24-a6f4-662e73aa06ef"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9c3a0d4e-7721-4a59-ad12-6240ffe829aa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "79b0d8d3-7333-4b88-b0cd-b3a80fb85cfb",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a69340c-e300-463f-9a75-6afc132016a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ecbd0465-46ac-4881-984d-a98ac8ff4a21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d035ab9-210c-478f-9ee4-db70285682fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "68ae9043-85df-41f6-976a-60f24302e196"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04c40dbb-9963-4f7c-a6ea-c7e908302dc9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32e8f5a0-7804-4d4f-9d70-48b2a78f48b7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "441268e8-7be7-49ab-9160-f1f7cb097b92",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "628f4d87-10c3-44fd-9303-f35f0500eea8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ac49efdc-52bd-4dba-ba92-6ea2fe45ba2b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "abe1c901-45e5-45cb-a38c-f1e1353d6203"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5c454f70-38fc-404f-b374-7b9538cc6f5f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0820050f-bae5-4e6b-86ba-95aec29b06b0"
            }
          }
        ]
      },
      {
        "id": "c1198e8b-3fa2-4fa4-93d0-2f77aa8ed9df",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "e9b19406-3a48-4e78-aa4d-c75408347f8a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7f25f181-eb42-444f-bae6-fd49ce3b546c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d2dd695-e4ac-4c39-beea-b58bb2652e79",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f9276ca-a09d-49e0-b3a1-91922e2db06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033a63d2-3b99-4cce-92ba-327751ec82d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a4278e-fc18-47cf-a9c4-85d2191731bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2db6f5f3-68bd-4f1b-800e-1a60c72b0a86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb527f6-de72-4504-9fbc-8e9a0ef488d7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d1c80b9-e589-4699-8111-55e0181b4981",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca9cda17-c2d6-4051-8075-6a3b9713770d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee2518e-236f-4a47-9e92-7f8eaf63ea42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8df831b-6122-450a-9304-b76b2372f6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4842580b-d9d3-44de-8e1c-932026797636",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a816b4-c60e-4d1d-900f-0e20cb1b45aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58025f20-0571-4885-a3e8-68ca2108162f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77762d9-ce58-48d7-a976-b3cbf5590bcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "81e8afab-06b8-4505-941a-1f8d75617bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a6579a-883a-415f-8065-84de6eb7899c",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a035d491-a20a-4c0e-b9c9-e017c59a2e59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5327925-1f39-4355-b69a-e17f35410649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5858c62f-a975-422c-99b2-9698f3a5b45d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6161a2f7-75f6-44aa-a5ee-f53af20e54e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5832f936-5272-431f-82a5-469e1c5c5579",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff498f6a-261b-46c4-933a-9b1d883fddf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a54b27-a7d9-4e32-912f-f6762a649203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7685287a-48eb-4078-bbc9-d9a2f6a9a513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "080e19c9-bd56-4d3b-ab61-8c28446c0037"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9254491f-28e8-41da-b8ff-ae81084cf79d",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c03fcfa4-dfd9-4893-9e34-2fffdc2a6d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "168158b9-e25a-4e9f-bb13-296bfdf17ac0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d99883-c689-479b-b10e-92744f261d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dfba0064-72bd-48b0-8200-d6d58c7d7526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc706b2c-f7d8-4b09-9c82-14e291c76034",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5057b4cd-1e0f-4642-8a3c-4dd0c9cfec89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887f5d1d-72fd-4650-9d84-c6960b5b785e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0383cac-f58d-4c46-a067-5b66e0802a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "81d6c759-be5d-4da2-a9f7-a81e5db49880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba0c978-a0c9-445e-8e0e-e89edf2049a6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e752d0f-a316-4591-bca1-fa7e9a4817dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64e91de2-b043-49e0-a5aa-2a81a4aa098c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a00e19-5753-4f83-b5d1-592eb8d3cea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b0b0a6b-d758-42f3-b827-2fcba6228f39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b79116ea-983f-4766-aa48-0bb5e1c18e6c",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45c227d-41d8-44bc-8d6d-c8f727faaea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ee1502d-e13a-4f6f-a6e2-9c16ff416479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d220de-84b6-4429-8ceb-6ecd6d9b561b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e1140ed-b27a-41d5-83c3-23cdcd0799a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b83da-1475-4bac-b65b-dbad9af812d5",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2a79007-f422-48f0-9ff0-7f4512bed69b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620d19bf-ef83-4442-8b29-3dd4312bd0c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "787d9e10-fd54-4ddb-b08e-2ab5c8888b11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d2e63655-3e58-44d0-bb52-91719c9d1ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69884f43-28cc-41a8-9c4a-64bbdf80cc86",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb155aeb-ae40-4767-80e2-59912387c3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b3a8e7e-49e6-4ef2-a060-48240e37a922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad45801-ea49-41a7-befa-d0cfe29f60fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "8cdb3581-85d2-4fef-93b3-68b878e2e218"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55157473-f5fd-4b2c-aa4e-eb3ee834601c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac781f95-cfea-4fb2-a563-9175106fa166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f7934ac-13b7-4369-8b34-2e691bcf085e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9574fde9-adc9-4b9d-9c87-48dfb1c32c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ad7fb3bf-61a2-4333-a581-c36f5a49e5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2abf0e-de30-4383-9a3f-14f82519dbe9",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f25658b-30fe-4210-95da-44875545eb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4db81871-02e8-4c3a-b273-0496d6e4ebfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310f91d2-c718-426c-a6bd-02caf309b1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7046015a-c831-4841-a12e-ac2e8a24f068"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003c977-b87e-4c1e-a16a-3b7810d58721",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "312a1736-77a0-4c2e-9f07-f2f6c6b3e9e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9485c53c-60a3-4899-acf6-391d6bc714fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d68c3f-e1e4-493c-b071-b08aaa5bd3ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "e99cddb7-66dd-4028-aeaa-cd56c1163fab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd24ec6-81a5-4676-a3da-c814cc394342",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad29d149-621c-4d7e-8af0-95b68e632591",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de8d8b4a-0355-40b0-85ec-6f24706df994"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e9b8e6-4ccf-4b04-9aff-3344d1ebe0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8878631a-edc3-4612-94d4-0a56378e7b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dd80a8b-957d-4116-a997-01b93649a7ac",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e051248-a117-4085-9a31-45f23d9c7aec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f31bdbe7-2fe6-4f18-8430-c7aa6f9564b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba1188a-21dc-4b8b-b762-6a844ccac2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5a9d1a-ca01-4e63-a139-2f06099f7850"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7a48c3-6577-4341-b21b-45153ecfbdf7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89780f71-5e32-48da-b84e-361c0bd1c1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88206896-3b80-43f7-93f2-edbdae3dc328"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce92a688-1819-42d3-987b-b972d41b352c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "092a3a5e-05fc-476e-bab5-1022c48c6639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4cb735-dfce-4932-84d7-a58fe945bb8c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7a9d50-c13f-47f3-950f-de1a9a0e8ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548d3869-a3a7-493f-9e3c-cb9206f8903c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b32c7f7-1043-4dc0-ba8b-3afab2c8453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "caab6c13-ef1a-4b72-a85c-9d834ede0264"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42818342-73d0-4680-8e00-15202c3c6450",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a29c881-ed4d-403d-a12c-6694ef21a2b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c0a14d7-e88b-47a7-b1e5-467924ae0d23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab3c6de-5d09-4d93-ac5b-4f3c2ceff47c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0391a0b0-0968-4f81-925c-d6ba2ae2d403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e01b358-e0d6-4504-88e1-1d04b998350a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c02832b6-de58-4628-9324-c4489a4c82e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff49ef34-b1fc-4524-ab31-309eb4710090"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30962716-511c-41e8-a35a-5c05983fbd59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c35a9be-4283-4abb-9d2a-bda74d77be0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aceda3a-8ae5-4cd8-924c-b87c95f1467d",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04f57229-788b-48bf-9f89-914ec15bc633",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c159eb7-d126-4a2a-8bbb-b4f893be2335"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5839bc49-6f5a-4fb3-adb9-3a15ab00cf07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed619655-3a2f-40af-9db1-1b46b28fb0d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc695fd-782c-4a8a-af1c-13b372097678",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb4a5d4b-4cfe-4241-9450-803685086df6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a65bd2a8-96a1-467a-bef4-d24f5032b4ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896b0411-140b-4008-b7af-b7d75d1817f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87499997-55f9-4096-b595-2da34a9d0b89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "680b094b-6c4e-4d9b-9087-521ad7410d15",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d534a14-fa7c-40ca-9f21-dc7495aebace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4f49ab-f039-487b-9910-1440175f36ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daa10bbd-7337-4e66-9edf-d9c75b780e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44f47cbb-691a-4cae-b540-a3fb2c8a2a7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "029535c4-64d0-4140-bdd6-1e53e9e65b2d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "392f4ca1-1a9a-4136-aff9-c2416edd0898",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e419900-aa71-499f-8ff2-ac467b516061"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b514e6d9-9497-4bbd-ab08-adbc6c4c03ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50506919-4e37-4532-90e4-ac5cae1a6354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd284811-22ff-4c79-a18c-7db4e84f8390",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19083b4b-5d81-48e9-80c4-0533a3abfaad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0617f79-a984-4ef0-91f6-3a8fa7fe9ed2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8de0570b-48a0-4bc3-9aa9-23db00528d60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e940529-4551-4b64-aa00-ce94c04e0883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a23428a-6e0d-4fe1-bd52-8f16f7eefc3a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f27dc8c-55d0-476e-92b6-0e28e73df207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3707329a-cfd4-40a2-8d41-934e49084a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0b50f66-20bb-474f-8e8d-bc19a68c3542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9841995a-baa2-497b-9af1-36e5ba579bad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "328ac7b5-7c49-43e5-9763-8269fbf2d1f8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d3ebdaa-a229-4265-80d3-75cca77ce348",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "193455bb-7509-4cbf-a12f-5e1bebb2a3bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a170e7c-7f6a-431e-b30d-fe28aa774db2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "efa2b024-9026-45a5-b56d-2c3e89436df9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba2647f-edd3-41fa-bbad-075a6afaaa64",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29d6a06c-a722-4a57-80fa-3c47417f4088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8151810-c508-4c47-bedf-1c1c2c073a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96a10a77-d95c-466a-8933-02af0e5982f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a9c65a-a962-4321-991a-9d815bebe2b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717637ad-132b-4dcc-b923-fc44ce3e3d3f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d0cfd02-9aa0-44d9-8bab-2fcc12875e92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3591ca31-5c69-4c18-a9cb-26a9c50891ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5da8128-e140-45a8-a01c-991c73a93b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b929a354-107b-4816-b987-c3218938f05c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1841a34-fedc-4ade-a486-b4271ac01b68",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c37ab953-a26d-4b83-ab6d-191642ebc4a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5da7ed77-24c6-43b4-8bd2-5a7fd3cf3e45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce80c7b-554d-4faa-9f83-803c58a3e8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1efa2151-7515-476c-ada8-2077d60af62a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b76144e5-54d9-4a1b-aefa-a33d1262d5a9",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae64feed-1fd0-427d-9269-7734d6995deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21280c0e-71c5-42f4-9672-f9b55ca01325"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81cdfcd6-e742-48d1-bcd6-355381579d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "976d7307-d096-4342-bdab-605d98f6e3f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a52f1d4-1634-453e-8ddc-322c721103c6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91bc7e80-6a24-418e-90ab-1d9e871cf527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d6f621-838e-4f67-86c1-0e24fef7edf7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a535f4a-d4cd-480e-91cf-ef4b7e46c1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5d6954-2b7c-45dc-bd1a-250d2c4cde36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f7ec519-3f5c-413c-a734-115ab7b120f0",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbcb5759-b8d4-4493-9815-ba8f33526f18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25459be8-d305-415a-8b19-cc032f503d28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f5b5ef1-da8c-47de-8ca0-89b857bc7ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e443b7ca-0071-4f99-af0e-16833034db79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "549a3b69-ba09-4652-be1f-bc32e632d661",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb4659a9-55f1-4671-9c65-fee6364a2f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9de910f1-647d-4b84-a2f9-677a32e95ed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5446690d-7b71-447c-8a8b-c48b5f37f6e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bacf81ba-25d0-4aef-bd8b-e76f0e54d74d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a318e6da-62a2-4158-a325-1f3b719fd5df",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c5690a4-df82-4a30-9941-39ea23c6e690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00b3c9a4-148e-4477-b789-353d760fcfd0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c8fdec5-2654-4829-896d-c5c9d0b436cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2457608-f8d3-4d0f-922c-86ed6dc702fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b735e037-e141-484e-bf24-a2dc9aa83df0",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcfa8ed-1fe1-46d1-955a-6e0557027222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6abd6bbb-16a2-4827-a2d1-71284bcbe121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eec0875-030c-4ef9-8e21-c5fe11bd129d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c90ad16-d673-479d-b753-981617cd3c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f40cf14-40dc-401d-8309-8cf0f2de05c0",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61791d31-1b32-4bc1-8af7-533a0847939b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f319ada6-5835-4c48-9ea7-e121965ae30c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b74439c-5794-4bf1-bdc8-081c2063fdd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "231e56bd-6c59-4f07-acff-414e79f8f2c5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a2da097c-ab56-456a-87e9-6fa6e74a6d7e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5122820b-f9ee-4e30-9555-0fd57c848e79",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040056dc-4e94-44b2-8190-aebd90b3d1ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd23e3e8-c9d3-4cb4-a11b-75eb8dfc7380"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19cd817d-efe4-4f52-878e-5c170f4b18e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b1d5fd10-9794-4aa8-b247-21ab75173f03"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "743c27f9-b664-411c-b369-cd6d1c96e868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a92495df-8025-4933-b3aa-401be73df9e8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1624fcca-00ef-409c-9a4e-a6f444dc9318",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e815362f-6723-4cab-ad90-1a53f407e18e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1a80d190-e8cd-4ff9-b163-9046fd5e454f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "41584685-c2a1-4bc6-8ded-f525be651a1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eaf09a53-893a-4838-b24e-ffa2e27e2c70",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3a170ff-f22b-43de-b961-a1714c52b0e1"
            }
          }
        ]
      },
      {
        "id": "451ade3a-e412-481b-986a-79f7f424524d",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "f54bd0ad-5a30-40f4-a26b-e736fd2aa115",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3d595a57-5d79-4a85-beaf-8ca0bea797d2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "045ece3a-0fe9-4b4f-ad1a-41756afdffd1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08b7ad7-1fba-4e8a-9025-ee2143068e0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e7e209-7be9-4e33-b5bc-3929111446eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e29dc19-75b3-4521-b8cc-8c5a3a6aa2a5",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f047bcf3-56ef-49f9-b6c9-9189115ae5cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55508871-4aa1-4aba-a624-4d67363bbb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e125672-dc3c-4a7f-a37f-275a2c0e5156",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1e1ebd-050b-4492-8334-b6fd370f81e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c100eda6-dbe4-4066-a43e-e4dd1fee86a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18393f64-646e-42e7-90bb-2b43b16fe841",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cdcbc27-9449-48d1-b8ad-79ed129872e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ce954fa-1133-4287-a973-9059887218eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b7545b-33d2-46d3-b3bd-e1c42f8433a0",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ca5210-1abc-4259-81f2-47af1818e08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09b3e225-3514-4481-8540-fb2ab64f1cb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e0dac96-50b5-40d6-9b2e-c98f5361924f",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3dd65a6d-ca3f-4364-bced-94024bab2258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76eebe58-c016-4d90-816c-1ddd05944aa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49676edd-99bf-4f7c-aa21-1610071e4a63",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99ea6211-923a-4469-a89e-80ee01ee732b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91e7de0a-519e-40dc-9d55-1f442af0c1cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08455058-109b-474c-ac05-0a439bcf6d76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70b6a9e3-dd24-41f0-9922-90a08ef8a18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb257c5c-807e-437f-86cc-8e06a56ff67e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3b43d6a-4bd2-4738-827b-31f5dcb7abb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "545ca5b2-f76a-4399-96dc-da26b8af4844"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "393ef2b9-0cc1-4603-aa87-f7800c0294f2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ac468d4-ee11-4044-b38c-122f522ec661"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae5bbd7-60ed-4e7e-8092-5d7330ed1d5c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4c69913-dcf6-4da9-8d2b-20e94606dc52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ac40901-88f1-4a75-a1b7-2bc24b8ecef2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e21d928a-2a44-41df-9a6a-a244cb1b1468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3553564-f218-435b-8505-c62a8c5439a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f1ae4d-3ceb-4c5b-9db1-2b92b150911b",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074114d9-8068-4a42-929c-c561757972a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "67de6ca9-5014-4d05-8d07-70ee20a86a49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20b328e7-fef4-41f8-b7a4-934c238b7abd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bb23e7-982f-4789-a540-27b72c507e18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3187e7f-5530-4ade-86fa-93de7103057b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "389956bd-9146-48fb-aadb-4b8edabe6ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe47906a-487e-4334-9bd4-8013cd670117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb29a705-5cb7-48fd-b703-3f236d23a0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85404b92-fef1-43f2-a1a9-690244e0d999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0323eee1-4df7-4d36-b7c2-6296807dd043",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "991f1cab-bde3-4330-874a-d165f3c06d7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b82511af-f5f1-4d86-af44-8f0bf3310a6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a11322-650a-4ba9-a80f-4292edebd6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1642c1f0-1212-4b1e-b1e8-ab1430633cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a25cce6f-12ed-409a-a906-5b0ec9cc7307",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcb89bc6-17ad-4e52-906a-92b3f5e2dc49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2954031b-7513-46d7-a907-4ed41366c269"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fd7410c-dabb-49b2-9b96-7afa81c224ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1f14d9e-525d-461a-8d0e-12d727db9345"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2481679e-dfd2-4aa4-81d1-86c9dbbf0aff",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fb5d66c-36e8-476e-95d9-0ebe76dc2521",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c16e1814-7dc6-4d9f-8445-78b28cf18c53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2633a24-5f97-44e1-b895-86458e510a0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147ad14a-8801-4611-8874-66d222cea342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63f2cccb-4bed-49c1-91d7-5dd460ac8df5",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a15a6d8b-627b-4f15-834c-3c40a24b3545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2323ce39-be13-4a73-ab36-f943c5e05937"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c57b9300-3fce-4e33-a41e-db0248356a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0039766-addf-4e40-86ab-4b8238c4204f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72bee95d-e933-4665-b54e-ef16f0f4cc1f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "680071c0-6c44-49f6-b700-f7ebf8b6dfc5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6acc81ab-05c2-45c8-8039-cfcf98066deb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a83a1510-44ce-475b-a7aa-ecb5e0a0359e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5d27507-e63f-4155-958b-7502e995d962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5a5f8d-a30b-4d91-b293-67182d76a0ea",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "730d4ac6-150a-4a4d-a3b1-255f2cef122d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bc6a8a-19db-4d04-b36d-189c6f58de92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8089046-2722-4250-a93c-8e27af9008c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "251b158e-47d6-4a0c-b54f-f845332c3984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "303e1891-3a39-4646-92b5-1db1f11e7d41",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81b44122-153b-4e32-8a90-4e3c37c31024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39821c8a-20fa-4242-a460-7c1a5747509c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6101a23a-ddce-4028-9915-d7767b9adcdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e800846-3df7-4f33-8b2b-783518fe0892"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e05733-8d4d-4e3c-97d8-50022b7cc99f",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0919ddd4-20ae-4d70-ad41-02116dafab5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59751bfa-c869-4800-92c9-cb76e02c2d2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2198896-014a-421e-adf0-5f87d65678c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd4c118f-82b3-4fc2-b9ff-89b0d6d33563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192c521b-b2df-42ea-9689-0e416da8b670",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "581b99de-cb22-4900-bf5d-77f3df2bd130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43186d27-e11a-43c1-a03b-c3d3c821956a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d9d322-66f1-4f75-baae-10c2cc6fdeea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d3d2452-c8d8-4979-b9b9-aaff50efb015"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba591966-a51b-45cc-af44-3688dd4cb530",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d215e262-e7f2-47f5-8a5a-1476e76e594a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f7cba69-9f81-4a1b-83f4-c7153e37b05e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02391da4-ffaa-442f-a6e2-10b6d4850bcc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf5eefe-845a-494d-b72b-2a91807ce945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a80ed9-96f7-4749-a087-dd8cf56acb6d",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9cb9f1-51b0-474e-995e-52b6bb137660",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d53bd085-8614-4f60-876e-36b520a16acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c53637d8-77fb-4dfe-aeb3-c156666d6d63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63ebd53c-e175-4dfd-b131-2fa5e0dac809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ae5fa5e-399c-4f87-9c21-7ef62dcc460e",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2886ce2-86a5-41a3-b30e-f6fcf9c32dbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2d118ee-ddfd-4414-a469-4e957269efb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefa432a-815e-42be-9bd9-374801754ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b2cddf1-515e-4358-bebe-8f3d12a206ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20f2db08-4582-43e3-b36e-76cd4787c5aa",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5717cea-d595-4bf8-9074-271b79201ddd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "59cdc025-3def-4902-a3f9-37747161c3fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c906107d-8da1-4f9f-87ef-7311162771b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af181312-f0f6-4356-a262-2362c9614809"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bfb63c-9131-4e05-987f-845a21412563",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34815698-6d21-433e-9c82-0d054591e8fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca7e9c4b-ee41-4385-a95a-39a13f72de85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea5e5e3-ab6b-47d9-aaab-d91afaa2f2a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74108bfa-3981-4c35-b99f-f761e4caa347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fb8a9c2-4fb1-4863-a738-6bcfd2009627",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d9f554-e2ed-4c9c-8d38-eb0e5747b937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72b01404-f4af-4fcb-a870-f11670e4de32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd674d1-ea9d-4de9-ae35-7ba86a53f334",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d070a37-fefc-4c71-9df3-a6a661fd9728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c5f94cc-48bd-4ea3-8414-33a3c7f886a1",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31923cba-6178-4b42-8fe4-e38775e58922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6229073f-c9fd-4982-b2c6-5912e8ecbf6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3026def1-6e64-42b2-8f36-0544d40125a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb92baa5-ce4f-4c7d-b58e-d304302591c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dacff0af-4b61-4366-8220-e71b16b8bbd8",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9495f13-52a7-450f-ac80-9131da37e05f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bbe8eb1-4812-4807-a2a1-b99661f8d295"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94652647-2abd-488d-8924-c1cf0149c7c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dac18b44-7ff8-4f08-98ef-2733c0e2a7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b86d993-4931-4d15-ad57-e8898613a119",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d1872be-3ae8-46f9-9ec9-8f7a13dbdb56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7d809b0c-99cf-49f6-a2f4-8be14e2cdc8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bb250e9-0238-45b5-b3c2-e5c9c8d19437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61dd539b-d33f-4955-8a1f-a785571501ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72687685-798c-4967-8ef2-36881a159da9",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347cf914-4345-417b-a266-306c40d0edef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c90e975f-df5e-4f47-b431-1b49bbbcc9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "055b84ce-e086-477d-b793-b9224fd7cce0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ed5d461-87dc-43c0-b887-f1f40f9dd087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0577ee0a-3584-485a-89a8-f46aa7f0698e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09012a11-fc6b-4e63-9983-72e1b41ce665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f49abb-c2f5-432d-90f5-035cc2d0c21d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "980a2750-ff2f-4be0-90aa-a5acd4bed6d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8840b62-368a-408a-81fa-45204a184c92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40385137-8818-4ae5-aa05-64066b183272",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d12a1efa-9bc1-4a13-8fae-114f844b2cc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed7f3c91-25f8-4e2c-8336-0b8e46b5b460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b525dab0-615e-4b39-be95-6de322b0913e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "629f76ed-82f7-4963-b9b7-084375a630ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5878f9ba-3150-4958-b965-d4fb5fd3750a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cd042cd-16b1-4d78-8d77-a06b878bcde7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06716907-7764-4b3d-9ef6-68e61015990a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "867796dc-6d8a-47d7-97e6-e79f2130c111",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e091e1d6-598f-4951-9de9-943abd36b277"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e56e6e3-3cd6-42fc-934e-b8551354fb7d",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b33ceb69-9f78-48e0-a44d-3722118ca3bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "afbda638-65a4-4da7-9590-0392c6cde46e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d62c92-0bbd-4c00-b0fd-e45dcda0115c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d627d58d-a5e8-489f-95d3-e67fb35fac21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf47192f-4aa8-4bf4-af94-a0897a7a3c6d",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e6b6ac6-aed1-4eeb-88c0-22865c15cbfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaeff98f-f0bf-40d6-8da8-029d0ee886cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7c25fe-6106-4888-b454-2da260615206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76417450-0335-44a2-ae0e-f66dd9016b98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab1d6810-7709-4d07-9493-daecf069279f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17eeae87-be26-44d8-ba00-990cece21dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "750bbf19-5245-4400-a424-0619a2614099"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0f9db71-e8f2-4823-b0a2-d3e4dd036dec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0967449f-81c4-4a39-a6ac-d262712c6fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629c3538-d028-42bc-8de5-61cf3f9e55a2",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0b63a7-cb41-4dcb-bb5a-b10f473e63a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f711e0ff-42c5-403d-9f29-2760147978b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e9fdc6a-cb46-4fa0-baac-5c2d43daa769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d741b66f-22fa-433f-b22e-0b62e16e920f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ab97092-0f19-496d-b1ba-d2d15bced695",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063c451d-3282-4ff3-84b0-8f777fe5d1d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b48a9ebf-89ed-4e19-b10e-ead17bfdff09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fedf7e-2d58-45b2-9fc4-2a8b4fdd755e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7df5a367-a1e6-4c61-8d37-358cc8823bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2d09f88-50af-49cb-80b9-6a38932c5005",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb2b297-33ab-4fa7-a36b-2466232252b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d97b2eb-bca3-4bdd-851c-b13032562331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8710ecc6-e5a1-473f-9992-0e4895568482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0105e7ed-c742-4a0d-a7dd-8183078c3db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa08b9d5-5761-4290-9155-abe0f9adb786",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0d444f-d4e9-425d-954e-e2d21c14a093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09e995a-ce74-42d3-88ce-56b59f34e27d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0798bf78-8032-43b8-bff5-0620f17d96f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e64b3b8b-79fa-4e4c-99cb-af7d870597ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49c78c39-93a2-4b0e-8216-9baaf4368a5d",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e44506a5-896b-4bec-88a8-b0e0bffec9d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e3e23b4-507d-4b11-a637-7165393fb3ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbb2e54-351e-43bd-ae15-05e79fbc573b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e416ddc4-aa74-4d91-8a38-059f96c28b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03c0d0c-b6b2-4b31-a7ab-eff44261b86d",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cce309c3-791d-4020-b787-049e738262cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d0aa8f3-d6bc-422f-8147-c3a780a36292"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8860876b-1eea-4e22-ba6b-f983e07a9727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdc672e5-8cf6-4b67-8d80-cd72a60378ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3797fd1-9e87-4d6c-9d3d-4f25adc6d972",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fa97c61-4cd1-493f-8f20-b5400ae267a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea8e926d-6f51-43fb-8754-d3cbb0605d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1062864f-d092-4d96-b1e3-b88f8f0c8feb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f65317-4525-46b4-9e40-3fceef018f87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c17c6a1d-6443-43ac-9fa1-e7b24de23226",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598e417e-f297-4b8e-ac75-56e7dae80658",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266872d1-8af2-4a20-ac5c-8b4f2f7c2def"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3f65c14-ccd8-420f-85ce-5d2d9ebf6192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f2c406f-6080-4df1-b7f9-56f0393e3025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "422a5b06-2552-44fd-b15f-939442746cee",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdc468ff-30d3-4cee-820e-02757147c4e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a52a8da-00ef-4c1e-b09b-dd6aa6957943"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1de9b2-8e59-4edf-a783-af74c361acdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8588a2ea-5dc6-43fa-8d65-a8f31eb64571"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ccf545-d183-4cb9-afbd-33e440346d2e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd39b43-1ef7-4abe-9d3f-c4f07e29be5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1626c973-e45e-4fee-85e8-d3b798b6b199"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0fe6c56-043d-4ce6-b0ad-f12aea61cdfd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "396a657b-eb6b-49cb-a66d-589c2fb89462"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79f8c584-ccdb-4d9c-8005-a7f65a73ac7c",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2747b7f6-bb3a-4a9c-9697-b3a3eddeaa1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44a55c00-10f7-4124-933b-981c9be9faf4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c8b5a34-a72d-41a1-ba6b-2d1cb84c4f90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55243f93-3a9e-4bcc-b108-208d37035686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147901a4-38f6-447c-b00e-a9a0c4439153",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "442ec81e-b8ae-4a46-a221-b376231d73c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "301b2d78-9ad3-40e5-8a99-8d9af1be0998"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e2c16c0-94ff-4e66-9f72-42aba6d5b978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4241b94d-0e54-4bf2-8902-77471cdd473d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e9b237-bac7-4212-b37a-a4d93a7a02be",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af86783-0d44-45a1-b29e-fbf5ecc751f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95999c9e-9db5-41d6-b082-827064f8e8c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e11fdf1-0238-4ffd-93b4-18754e933014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "932e46e0-1444-44a9-a686-f125c600ef09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b78ffd6-de2a-4f3c-99cc-ef87e1c08018",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bda7ba0c-a88d-4151-91f3-5daa85186401",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f874c0d-c3ee-4197-b418-ab1eb14f3d58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aa1b60-a994-4958-96e9-7691c1c2b083",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e15e027-f85b-4f8c-b153-00581d8a9f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2d00f11-85ea-4ee1-83a2-6503fd8655d5",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24d1346-74e0-4fff-a408-d365ff15d132",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d5d1b6-794e-4fd0-8477-30305ec71ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c67ef43-9e42-44ab-a957-38c2fb902cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa92c75-acb2-44b6-a962-efce048331a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34bbe464-c70f-434c-b4b9-adf742041838",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "300090c0-8296-4a25-96b8-6034a8c14628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277322d0-c48f-45c7-aea2-3af5eab41d30"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c25392ac-4e9c-4da9-b934-822792d5c700",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0c2066-0806-4351-a816-9930522e8407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d104370a-ab78-49b3-9f2a-35ac5aa36169",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf2fa4d-ba58-4ea6-8eb3-fd385794e319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b2a98a9-709b-42ec-942c-847cd120eb97"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b21182-bbda-4802-bbe1-747513f7f82b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b190e2a-4afe-49e2-82bd-80f9a2b97655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c652734-645d-4c68-96db-254c6f11f143",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32e1199-d62c-4868-a6dd-351810569319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "883231d2-592b-4e4b-9bcd-e62469abef78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf849a90-cae2-40ab-b4bf-117310a074b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ede965e9-7571-49c4-8d02-2198b4d57e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cf5b031-64fd-419f-a2f7-b8efb3f3c889",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e283bca3-b6b5-4532-b9b9-b17b0f64c36d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8086145d-07f1-4114-bc64-ffff66c3d6c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da294af6-c9e9-4615-80bd-aba9bffc9e0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13f56b48-d3f5-4c40-85fc-15d094019179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8c393b-a619-434c-b811-acf709d5e56e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211d010a-4d43-49ad-9781-0fa00e8b129d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d5d8d15-ed72-4e7e-bcd5-0b01a6faaa98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1369b8b8-5ecf-41cc-9868-e4f39ecf8004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d8b616e-7896-46bb-88f0-6cf42fd786a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be2177c2-0721-441a-9323-87a4ac44116a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad00d3a5-1817-4e39-b62a-7a9111ca045a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68c8a232-0b6b-4983-83b7-e45f8e611f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5bb4fae-7ab8-4040-b60c-765a2e35289c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1fae1c0-f6ec-4be4-b052-1bc5b1b45f21"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df49958-1be7-4c3e-937f-55e109c2bdf1",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0912699b-25a6-4533-b687-6eacab627860",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5610c3fd-f98b-4875-8815-6499477b23cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c2af9b-c30e-4780-b3b1-8b0d248ed0be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054600e8-6883-45a5-a833-c549c69a6779"
                        }
                      }
                    ]
                  },
                  {
                    "id": "245a9679-d240-474b-9ab9-3140304f6685",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18ab897-7c0e-4b69-96d8-8c87a0965b23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e558b4-e9e2-46e9-b0cb-8d4b8dab5443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "904d4aea-0124-4949-bda7-16a93c21a00b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0c33305-f29c-4c68-adbd-d834d51b019f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a69ffc4b-ee4e-4468-9083-0ab866232401",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9f0807-49c9-470c-a94b-1531f596406d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98078da5-eb3e-428e-b995-0e2549425a8b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b040676d-3cf4-464f-b40c-e4877fca11e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f72ffce-02cd-49d0-abd1-24cd9a460d88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50aac8ea-46db-4238-9a30-002086bb20fc",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73dff846-83c1-4c14-9295-21d6d036fe77",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e129b13-6d22-4e59-81ae-5eb616fa85d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae4978f3-a1f6-4986-b5ed-9a67e627a610",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd8642c-0f4a-4204-9979-c5786565ae15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "415de73f-4f21-4c41-a452-08e58d2df058",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cfb032b-d12e-407c-9cad-6c96d1eabcd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "075a4ffd-9a41-405d-ae1b-c86675bc1ae1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54647f13-3541-496c-9e2d-ada5afd82e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54d626fc-4d8e-41d6-8e64-1351a348ff89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e9eeb8-301f-4fd2-96c6-a6437ecb0605",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5805a58-54bb-4a2c-aa89-95194935d263",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "625d3cd5-af56-49db-ae6c-3c5d66be34bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb75cc1-0577-4d83-a4f4-787feabf2aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fb56339-a72a-46cf-a9f3-334ff1e99028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54098d6d-46cd-45f9-9e6e-4253084acefa",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be7abd21-e4a4-4364-b838-aac5220220eb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ff2f5db-3a2a-402a-8b77-44324091cbd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739f3c03-4cfd-4dc1-9652-9fdc5dbb045c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89332dd6-cbd5-4227-877e-14b04491ba2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38637f1e-e4a4-490b-ae16-6ef45ff9aeeb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3930bf3e-f27f-49cc-a4f8-bc8b7b36b5f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07593a0c-cd16-49a6-a69c-a59e072b357b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c351d9-5953-49e9-9204-a55eb70522eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a8a808f-87de-428f-80ba-67be6e35bffb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f3a3182-51bf-4a11-ab86-d55e3935a6af",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5f61bb-9276-40b2-b79a-a3daa2826469",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07160d8d-c7c0-48fc-8652-686c73407c83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "664fb4b1-1aee-42bf-bb24-0019daf359b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1ed3959-73b1-45b7-9b06-f15d020fbda9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b5eeda2-d85c-41ed-9f85-351f61ef7b69",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10845e0a-6785-4db9-bc4f-de340119f483",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "86f706a6-6c47-4879-8a06-1831c652350e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78504e99-b0e7-4faa-8bcd-d7d08b960522",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "941b49fc-c5ba-41a9-835a-fca0a7103c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92bf2605-adb0-4a6e-ac46-e9f5c9abff95",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c621701-7f7c-4db6-93a1-fcfc5a6ca3b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "22d92b25-ab08-47cd-9f47-03578786355d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "41d20b49-8883-4bda-a258-d7d928ed1fe1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed119801-6f9f-4407-98ef-693dc1c40e0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c6b710-b77f-4f50-8dcc-c190d8d815ed",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95105c3-cb83-4263-8b8f-438a973024ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "52e3334c-9a79-4e49-8df6-097a1658ee95"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54b3fb8f-c821-4898-afba-7d02b15c932e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6b61d71-2975-41b1-a2af-e444a7d077d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cf1ba5b-447a-4fd5-9846-641a2b8f9722",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7af06b0-0ccd-4eb7-9db0-93a9995bc1ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8942b72e-b8ee-4d87-8755-51a512b09443"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f05bc9-db37-412d-9839-7d27edef24e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff3a06a3-35e3-474a-a7ea-31cd29d8e854"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce75982b-51a4-49fc-89ef-8e28fba33248",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1271f83a-a724-4228-9d5f-b4b3e4dc4c05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd827bad-e3ad-47ce-be71-9b977bca25a5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a667134-4094-4792-ac4b-dfa8d51a813d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0fed82b5-d2d6-4279-bf6b-630cbc6a4c40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f53a6c1-b12a-48ac-9105-d157f68c97b5",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df44f85e-4175-43d4-90b7-398517b5776d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23085554-7f9c-4446-8532-9ea8bc7d355f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffa1412d-15fd-405a-9cc5-ce7562cf6fc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e05982d-c320-4103-acee-e1a09256fec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "890434b9-b9e2-4ff6-b9ed-1cd50612b405",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "368fd4e0-1e37-4a4f-bbbb-2fb7e80e57c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17fca1dd-53db-46d2-837e-2705a387153e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c36ebbc6-6323-4f73-b617-f80a9f4a3b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f5d3701-827f-4175-abb7-ada19f10cd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa397b2-a4df-481f-afea-986c63aef41c",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2c2239-f981-4ee2-9a53-b81339a1be23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1008a1fe-475c-4ce7-9ea6-99ffe78194cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25110bb-96f8-4cbd-9d3c-6e1797bcce2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad4c8ac7-fac1-4de0-a05b-7fa805200ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfba39fb-1bfa-48e7-9205-36a0c17455d9",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12fef565-cdcd-4a0d-8a4b-b0e04d1ea039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec90bb1c-1577-4166-8e6b-a7347eb3b077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a087c1e9-7da4-46d1-ac60-3bcfec542ac9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0656be24-5631-4b8f-ba8d-5428a70f1d2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbe385c-618e-4134-bf8f-ef256e5ad848",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89b1aeb0-c86e-4001-83d7-8df00ba6f874",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9f14df4-e125-4e9e-a5e0-eb71d4c2536c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf96d413-d43d-4bcf-ba84-57caa46c5889",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5448bba0-e899-4f28-b83b-49b01472dd0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "febf591c-b9dd-416a-be66-1d7928590ec5",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5d13a0-7624-417b-ad64-07faa203e128",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "961359be-2f7a-4991-a982-a9c6bb84e2a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a52ce9d-aa99-4897-bc3d-19ddc64085d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eb065bc-e7c9-42ac-bfa8-884f79e113c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "340c72bb-7e8f-4b9b-ae7e-eac8dbb1ff01",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "531fc433-06bb-4e09-ae60-2a41ea599803",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b9fdf175-d8f4-48ca-80e2-d806958b0c70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6da8480c-9763-4d45-8107-3fe6a1ded5cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8db0aad-ee8f-403e-8b9a-20c1818bf4f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aefffec-eccf-4cff-b326-62bb96aa3885",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df58a9df-7625-40f8-bd46-fa0042ec2224",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "988b3e6b-4eff-4429-92dc-f3e5c6c89407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab431aa8-17f5-4a73-b91b-969eb83d396b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd64a8dd-088e-4c10-8f21-c5f28f7ab152"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57ba74b1-bdd6-4467-9427-c651afac39f5",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e23939-203a-4b06-be53-d3e3fa9e284d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "467ced54-5aa7-4aeb-9943-555b4052118e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76a43af-068a-490b-b546-86448c47981f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ef02b27-7599-49bf-9e5f-3518847bf488"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2ed5d0-4f84-4bdb-913f-2750fed3452c",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2625b88b-e813-4e8e-85d3-97d28ad23b8d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c019d7ef-fa04-4502-887a-2db63bbdb9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f382f7-6895-4e47-990f-6963a8d393d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04ec5e2a-8ea7-40bb-aa58-aef99cd0f60a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39dd6892-1e9d-4f95-944e-824f4c9f27ec",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d0b84cd-1254-4f68-a1f0-14e2b5d3585b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "151e05d1-4558-4090-be7c-c53abe678014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d945e35-a992-42d0-ba33-8f27cd10ce0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba3097ac-2e62-47f8-bb7e-078b6c00cd01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb05098a-7dc5-40f7-992f-6f0294879092",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "563ae5d6-59a0-488c-9064-bf068e165df2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9836fa3e-f6ce-4170-b45b-01af6fdef4c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c52d053a-84a9-4091-8d17-884ecf6a20f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5454195a-1d5a-4476-9d48-a68ba679aad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb8e119-a451-4e5d-bedb-d284bf970f49",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffc59d0a-ba37-433c-b690-21781fb471f1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a42152a-c970-437e-9075-39fb58f6469f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0650a1fb-f013-4136-849e-5596600d6b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e80715e-18ed-4ddc-8f80-d53b27e1d9b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eaba41e-14fc-47a3-af74-303a7568f652",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61da37c-26a0-4d77-8a95-ba3d20daf7ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca253945-cadc-4510-b067-bce74b3846dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dbfeeab-55d4-4176-9d04-256eeec51e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c11f07a-b7f6-4511-a820-975609960629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712e454c-9045-4450-871f-99a77c131864",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3290bd12-b942-4b4d-bd37-f719908244cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77cf5d77-0702-436c-8e21-4d90e2229644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "293cd150-4e15-41e6-906b-86fc0be5d60a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de33209d-bf55-4dc1-9c37-bfced6ee0675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a9a9643-3379-48fe-8d5b-3e7a13a00108",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f92dacae-896d-41ac-b56c-5ecb995a9a85",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c2b8d6-6a6d-4cfd-847d-fbc7bc2828ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "486f2b30-e336-4747-8fb9-2e552e964e2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a1c96e-bfb0-4344-b537-9375b798148d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19284de9-bc03-4969-9919-f501487a6731",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "699ea497-4bf6-44b8-813e-c0229dfd3160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4fb4d9e4-ad40-43a4-b737-1956fd8c999c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9254960-63fe-448b-b1d2-c3f751a429b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1a6bd96-7381-4e8b-9343-a96a4d45a59b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1876e4ac-6d98-42da-b19b-b40b6f4d61cf",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5557452-0b60-4c1a-934b-f2d3bd15dd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "653fdcde-a62e-49dc-b404-de10c1b0bbc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8de117b-429b-4d7b-a90d-c32c9a93dddd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a7e05c-bba4-47fd-8847-d47569ce3a40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f18c12-ac48-437b-bb77-db2bc29f8627",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57084937-3227-4473-b7bb-0cf63b3d2424",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26e878ba-7265-43a9-89b8-54e70a266baa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "801b278e-6d1d-4194-ac8f-c6ed4bf00181",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8f7414-4fcf-4bb4-b6c9-e91824d2a85f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca12212-95f5-43ab-ace1-69718ba422b0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d868d24a-ed5d-4102-9bca-445c58d167f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d41aa09-c15d-4459-8a23-d9422143a3b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0517ce-be1b-4076-bab0-e11cab970ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a64d8ed-43d4-423e-bab7-e9ccd98c9543"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e228c2a-cd0d-462f-acdc-6fd7e39a07c6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0cedce0-e0db-4a2c-b3dd-0c5b6a3d562e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a282c28-43ec-4e36-9171-4b227b215180"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf8222a9-87ba-460e-a28d-a874275fae04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d10fd1c-b67e-46a0-8700-ac589e47623c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca469a-c11a-42e4-b6e8-10f528bdab6a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc35018-3a9c-4415-b5a1-e9d46c21f2ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e232b893-8216-4e84-a611-87201ad17989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9019c450-4ba6-4ab1-815b-490d1826b2d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ba2f09-8549-4ef5-b4a7-b62f7d0c864d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fdeb32-a4ef-44e9-abc9-ccbf86187716",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b24062b-7f93-44e4-bf39-5210b7044d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51727d78-8c24-47dc-9b59-2e3c79200bf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ec105b0-3781-4580-aaa4-85142ef8765b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e713c41d-f819-4573-ae7f-fbe616776269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41e93b92-257d-46aa-84a2-7a1d53679092",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62c7743-5110-4fae-819b-c33b10ec0947",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd0c26f-cf41-49a8-aac9-8dc7eda9dbd6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fffbb1fb-e129-458e-ba05-4981eb09331e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e1502a0-335b-4a06-9ab7-07b5aadcc900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98f3af7-d5f4-4b8e-8c8e-5fce42d7fe8d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c00a6f-d1fc-4445-a707-5919da4d55a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36823f1a-6032-402c-a00a-cc299f5cbbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62f5aa91-07f8-4659-ace4-d54a7bfde3cf",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fba3196-2047-4186-9f02-70c7a44bef7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63ff7b75-b70f-4225-bc15-f597b6fc946d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68c389c5-9537-4278-8135-c90de92d341c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a43dcf7d-aa22-4817-b18c-d3d2a28a45bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66fcb13f-b475-498f-838d-aedf665802dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97cf169e-62ee-4761-8e6d-0a4bb1749b7c"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66255914-7450-41c8-82b3-45f0cb20bb40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8207aa8b-e052-4096-8dde-ea71f034da70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "816b66a8-dbd6-42f2-9759-b40b0eaccd7d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7d84ca66-1eb4-4118-9c49-4dedfca2dbc9"
                    }
                  }
                ]
              },
              {
                "id": "519029ab-39c7-49e4-9411-0b8a6168937d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c27f221c-99e2-4212-943f-d9d7dab190a1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b06ccf79-282d-4e72-a689-3711ea39da4b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "463ad638-8561-4e6d-8fbc-bf6d0064c684"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d03819-3f62-415e-83d9-dfd3ce161279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4e416deb-dd52-4c4a-b097-7aa9e8b7db19"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "35e0c818-63c7-43a0-bc06-a3c0c700ff79",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c68e9b23-8dbb-46fc-a134-402ace8a1113"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a4d974e-922d-4564-bfbe-8869212985e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3451c771-5952-4b6b-a675-41126794e714"
                    }
                  }
                ]
              },
              {
                "id": "47c76735-a94b-4c0e-9db4-b5946ddd591f",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "5de57f29-dc28-410c-896f-95f4f4b22925",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42d70a7d-841d-42ea-ac65-4aa82084aa29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b6d7c52c-6dea-4258-b256-487a955bacbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ccc0206-4687-467e-b7bc-4651a2ceb408",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "651fec78-b02e-4780-9298-dc708d222f32"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "492ae7b7-8336-4560-83bd-0c04164e0d41",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4244e154-f6a7-4580-98bc-d5da4a080aaa",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8303b9e2-9cde-4da1-838e-e9558cd2722f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "3e6211a7-e274-4e0d-bcbb-e22ec755b437"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7bc8a0ec-8be7-4128-9a4a-9a609bb00d52",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f0c5565-8f07-43da-8e5b-c73e80533987"
                    }
                  }
                ]
              },
              {
                "id": "4a0c2f40-9e0d-4aa3-8202-b08c8dcb3df5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4e0060d-6e03-498c-a4b9-62fac64cd4b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "396d11b3-cc1e-42e4-a899-a99ea11d3818"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eaf700f2-e90b-4491-98cb-057b9e941c58",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63f1040c-9d90-49a8-b967-a0879bef979e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "855de141-815b-41bf-9ac3-3c98dbe2fd97",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "3e4e5241-ff4c-4c9c-8cf8-61f97d4865ea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4c8dae2c-c093-4fd9-ad03-5d90f0372a10",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8c6649b8-9bb9-4f95-8b7f-7f3a80f35809"
            }
          }
        ]
      },
      {
        "id": "f01ba90d-2c16-4619-a7fe-91e5a065c1cd",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "89430a0c-e3db-4cbe-b0fe-876d11aa380e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "07d20f8a-4aa0-4bb6-8050-0c808d8d35cc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a80c0ede-0579-42df-b08c-346ac76e68f6",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f698e6ff-f764-47a0-bbe9-46e1c07dafe5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6584f4f-fa86-4d3a-bcc8-180908aed5f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0526ec5-f932-4ae8-be70-b3748ab04740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ee0347b8-225d-413f-a828-5b149f6c69d0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa5df2de-0d74-44f8-bc69-38f21ad67f55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b0cf8eac-70cb-4e7a-83e9-c9b2740b5945"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "43fb07fe-1031-48b5-bd7b-0a8429406eb9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a780466-9ed9-4b5e-8e79-d28183efc24c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a502b50-de06-41f8-b811-9b2d5a3e7fb2",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "0f2b73af-f1bc-4f4a-bafe-393388c2a1ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e665c4fe-322c-46a1-8612-81ca1c956337",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6fd0d101-97f5-43bd-9bfc-dd9883f5c21d"
            }
          }
        ]
      },
      {
        "id": "b2c4189a-549a-42d2-8de2-aa29d0b6e203",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ff723667-1ff2-4ee7-8549-40a217d5b8a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0ff01e9-283d-4c5b-8552-79c321db5fd3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "acb781d9-9391-41cc-ad35-1c38040afbaf",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ebe773-eff9-4448-a390-ecbf865ef5c4",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ffb49fae-0241-410c-b3c1-e0d41d04648d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe91c3c-e372-4fb4-b01f-b56fe3e1ceb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e263be32-7810-49eb-8718-b3e4309f277e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d8fd07c3-9aa8-4d62-9703-62c810573bb5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6883af55-e97a-431f-85a1-d5d2a5274680"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "54d0a0fe-6394-4067-b981-62765627f28d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5c1b610d-e651-4690-852b-d8a037381934"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a351f83f-33e1-4665-aef0-fa1610ca1fc3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1f77f6f7-8ac9-410c-85a4-ac8c090908d0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5e0490a1-3a2c-4b8e-9a30-06e9309da714",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "309925dd-09d7-4f27-a337-a034932b1571"
            }
          }
        ]
      },
      {
        "id": "752a28fe-48e8-4b69-bc1a-8cc7d97c0c7c",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "739b94e6-3df0-4502-a97d-d061c06bfaea",
            "name": "Negative Testing",
            "item": [
              {
                "id": "6634d0e3-7e5a-4bfd-b92c-8c02c8cefbe7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "34f09734-5cd8-4a5c-a051-9088fa94ce1b",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5b2dbe-fbec-448f-b01f-7cfa11f034e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c4bdf5c1-e2bd-4123-9251-cf102ce06628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c314e578-cf5a-4ba7-9cc2-887901eea171",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70d9880c-1dcc-4793-abd6-3125be20efef"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "20fdb790-0182-41f4-bf6f-ae55ea1c6a55",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b20a9803-0d86-4e09-94b0-b6cd0ba3d18e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6513ded9-d0d0-44d3-a444-c50aa2e7b560",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "91f6668b-d767-421c-956e-c052d7f5d315"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07708670-a59e-4c61-81b6-b8e0b4206f07",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9b6bfd4a-b996-4850-ac61-f98d38e328a6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3e3fb405-e89a-40d5-a2e0-57be37d282ae",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "37c0b08e-59e1-4556-9068-1db0681786f7"
            }
          }
        ]
      },
      {
        "id": "11ed2b12-60d2-4cbc-8704-b7cb2e0944d2",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c76affb-4164-44b7-95bf-a6b303df5f3c",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "400c7873-1bcc-4066-a27e-447600d5003e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d2a6552d-f8ac-4009-81eb-61fddbc939c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a7dfbd2a-1c16-402c-a17c-f1028f061b45",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32e45477-9854-494d-8d88-eed04188d85b",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.602112676056336,
      "responseMin": 3,
      "responseMax": 249,
      "responseSd": 19.773723381843656,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1688604572258,
      "completed": 1688604585826
    },
    "executions": [
      {
        "id": "92901ed3-54bc-4375-afdf-e7b220508639",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "4e9727bb-a5f1-4854-846b-6bd5a4f18c11",
          "httpRequestId": "1bb19d83-a381-415a-9950-57393bb6baa2"
        },
        "item": {
          "id": "92901ed3-54bc-4375-afdf-e7b220508639",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "85915ac0-55e2-4f79-b8a4-99ab689e4c5b",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "809ff83e-7c9c-4f15-b344-04247c906948",
        "cursor": {
          "ref": "434260a2-ded6-42e2-bdb6-20860ebd9dc2",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "34416f05-d7f3-4b69-a3fe-94663fd36e42"
        },
        "item": {
          "id": "809ff83e-7c9c-4f15-b344-04247c906948",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1404be3c-5525-4a20-bc59-d4a206fbb871",
          "status": "OK",
          "code": 200,
          "responseTime": 10,
          "responseSize": 0
        }
      },
      {
        "id": "6e46c1a4-2104-461c-83de-1980beba7689",
        "cursor": {
          "ref": "dd46b1a8-d5fa-40a4-9c59-8932e75013bc",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b2840246-f693-42ec-a1c0-fb73581296be"
        },
        "item": {
          "id": "6e46c1a4-2104-461c-83de-1980beba7689",
          "name": "did_json"
        },
        "response": {
          "id": "ff2dc17e-5f4c-4d51-89ba-21f1e053658c",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809429b8-8df9-4aae-843a-876af3b2230e",
        "cursor": {
          "ref": "144068cf-8dd0-4f8d-beea-b7b9cf5763e7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "910e1a4d-14e2-4364-a3d1-b855515787ed"
        },
        "item": {
          "id": "809429b8-8df9-4aae-843a-876af3b2230e",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d82e7b2-88f0-4626-a6ac-e2c47c1968e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "809429b8-8df9-4aae-843a-876af3b2230e",
        "cursor": {
          "ref": "144068cf-8dd0-4f8d-beea-b7b9cf5763e7",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "910e1a4d-14e2-4364-a3d1-b855515787ed"
        },
        "item": {
          "id": "809429b8-8df9-4aae-843a-876af3b2230e",
          "name": "did:invalid"
        },
        "response": {
          "id": "3d82e7b2-88f0-4626-a6ac-e2c47c1968e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2813a888-6ccc-4c26-8a06-9cfc4404cef9",
        "cursor": {
          "ref": "a81aa0b5-c30c-4420-a0cb-9ba07f9c74d8",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "92f05047-78b5-4d17-b8af-d17628cc35a0"
        },
        "item": {
          "id": "2813a888-6ccc-4c26-8a06-9cfc4404cef9",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "f561df33-407b-46cc-89d5-3aba2d06692a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 115,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb48940d-027d-4313-a74e-5280706f4655",
        "cursor": {
          "ref": "9765543b-30fd-4074-aeaf-7b03eb9bfd3c",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "e3ca8f60-c499-49c2-a40d-0b864c3479a6"
        },
        "item": {
          "id": "fb48940d-027d-4313-a74e-5280706f4655",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c0b82fe6-ad53-4375-8259-f9fb3ca9576f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e56489-0cbe-4017-a5b8-e5013380eab8",
        "cursor": {
          "ref": "0a9fedc5-d748-43a1-a983-c431f79f7b97",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c7d72637-72d1-4ff2-ac96-07d2a5aa2ec4"
        },
        "item": {
          "id": "48e56489-0cbe-4017-a5b8-e5013380eab8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d6e2068f-859b-4742-b9b4-6fc28c0fc170",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72574761-2e3b-4659-847c-c101796d6934",
        "cursor": {
          "ref": "1d6cb68d-38c7-41a1-be7a-4c9ccc6ecb6f",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "74406dd2-3310-4c44-80d2-ee87fdd05c44"
        },
        "item": {
          "id": "72574761-2e3b-4659-847c-c101796d6934",
          "name": "identifiers"
        },
        "response": {
          "id": "212675f7-c25b-45fd-95ad-5bdf0d0e359d",
          "status": "OK",
          "code": 200,
          "responseTime": 167,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa616399-73d9-411f-bbf4-43be073ed3ef",
        "cursor": {
          "ref": "9b68cf3b-39b3-4d5e-9cc5-842d015908e2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "b91fe550-2be6-4ed2-b7a7-a8cd9c0b9a22"
        },
        "item": {
          "id": "fa616399-73d9-411f-bbf4-43be073ed3ef",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "7136b189-4451-494b-95c0-9ee161ad3f72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "984fefa5-6f13-4de5-92a2-47f8ecf84cf4",
        "cursor": {
          "ref": "99c2a3e7-b82c-4acf-8a7b-a43722986393",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5f1c8bd5-9fd1-4bcd-9419-495517524e3c"
        },
        "item": {
          "id": "984fefa5-6f13-4de5-92a2-47f8ecf84cf4",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1efcd51d-4d04-4ce1-aea0-cb0d8f6995dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec159470-a94c-4cd3-a0d7-705a873b1962",
        "cursor": {
          "ref": "cd687454-8755-49d5-8429-e5b77bfc3031",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "7fdcccea-d842-47e1-8fa1-e4a57f347cf0"
        },
        "item": {
          "id": "ec159470-a94c-4cd3-a0d7-705a873b1962",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "8f3ac074-37fd-4e1b-9e60-559e2e3e447f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "636bad99-1e91-4505-b93a-c23249fba97a",
        "cursor": {
          "ref": "fb376021-6229-4982-b1ba-bfe1188d5c0b",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "baab7c0a-420b-417b-9cac-ee003944781c"
        },
        "item": {
          "id": "636bad99-1e91-4505-b93a-c23249fba97a",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bc4ca0be-1d10-4d6a-b32e-c6257130e886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a65923-5a42-4604-bd3d-9b0f8e9d4d59",
        "cursor": {
          "ref": "7b4b3c58-da39-4306-bc90-0193fd70221b",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "437aed51-ffc5-4081-9b14-f17dcb1e2fe5"
        },
        "item": {
          "id": "89a65923-5a42-4604-bd3d-9b0f8e9d4d59",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "f870cf00-9cfd-41fd-bb67-1b679a98f3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85514739-9797-4634-9695-25c516dbe245",
        "cursor": {
          "ref": "8b95756a-9242-4055-953c-136dc47c60c3",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "5575e630-08ba-4203-a6b3-2735449ba473"
        },
        "item": {
          "id": "85514739-9797-4634-9695-25c516dbe245",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d0a4e605-a1b8-418f-9f13-7991d38cb29c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96a5b136-2082-41df-b55e-d032e75ed5ca",
        "cursor": {
          "ref": "cc2149c1-300a-4e05-b5d4-c6ec60a83c8c",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "517c1cea-771c-4ef6-b24d-ee5411eb3189"
        },
        "item": {
          "id": "96a5b136-2082-41df-b55e-d032e75ed5ca",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "30f3cfb5-c6d6-4828-8418-0163e9bb016a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "365b5ece-8c62-40f2-a86d-d207e0ff5292",
        "cursor": {
          "ref": "42e39f74-20a2-4abd-b4d2-e150f162aaf6",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c13d0bd2-588f-4d48-b706-469eb687e21b"
        },
        "item": {
          "id": "365b5ece-8c62-40f2-a86d-d207e0ff5292",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "4bcf3bc9-96d0-47a4-bc9a-25b2f2710344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b4c682-f9fc-4e2e-8de9-9843c98919ef",
        "cursor": {
          "ref": "b047692d-265f-42ad-8a13-b9e7d73424c0",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5e028367-469f-4249-bed6-f8fc331772e7"
        },
        "item": {
          "id": "79b4c682-f9fc-4e2e-8de9-9843c98919ef",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "6ee16981-4383-4601-9fbb-b8fd8451e50e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a36b855-296f-42fe-b198-1035fecae145",
        "cursor": {
          "ref": "72c736e4-5bf1-4fbc-973a-e332251249c9",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "af179274-d765-4d8f-948d-b211bb724c45"
        },
        "item": {
          "id": "7a36b855-296f-42fe-b198-1035fecae145",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "90658cda-e5af-419b-9ced-46ea12b9e2f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0715504b-8f4d-434a-bd6b-23940d88f012",
        "cursor": {
          "ref": "a541c41f-35fb-4347-a4d9-3c4a0737973b",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "347dd2b6-d973-4ea3-b9cc-4812c8c6383d"
        },
        "item": {
          "id": "0715504b-8f4d-434a-bd6b-23940d88f012",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "ba560fde-1802-4784-897e-50d725d38047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96eb38d0-d6ad-4976-a7b9-f849869c0561",
        "cursor": {
          "ref": "5aec2168-e613-4ec9-afdf-13b3a71e40e5",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "2f4055e4-4ca3-4769-b8f3-9a2eda85d4be"
        },
        "item": {
          "id": "96eb38d0-d6ad-4976-a7b9-f849869c0561",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "d3b77f59-5c6c-44ec-8ad6-533c518b3d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d65acdc-7ad0-4dad-9386-b54300e6d3bf",
        "cursor": {
          "ref": "763ec840-2a91-4d06-81f6-ac74c5ed1672",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "7602b234-43eb-4179-9261-8138d600e293"
        },
        "item": {
          "id": "8d65acdc-7ad0-4dad-9386-b54300e6d3bf",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "9a184ff3-269b-47a9-ac89-ff965c8967f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec5df42-5980-4576-9242-4307f4307045",
        "cursor": {
          "ref": "13ed7d5d-a2a8-469f-a033-3ee85e9b35fd",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d7076c2a-997e-45aa-a81b-a2daa44a5857"
        },
        "item": {
          "id": "dec5df42-5980-4576-9242-4307f4307045",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8644490f-d644-4f6e-80f5-9a8f572f0e01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f1cd0b-20bd-4b47-9031-ec1dff5d13f0",
        "cursor": {
          "ref": "7645db7b-95ae-48d0-994c-c2d860e7c715",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "d0865bc8-344c-4ba6-a7a8-0c983ab74ffd"
        },
        "item": {
          "id": "52f1cd0b-20bd-4b47-9031-ec1dff5d13f0",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "0b6c68c5-9358-4933-98ef-6ea95ac69a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b42b345-754c-46dd-a2df-d3246be91d26",
        "cursor": {
          "ref": "58d3c501-d980-4bcd-b0b4-e29f82d9f3c0",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "7809ecc0-6f6b-4099-abab-d6ed17bf2e39"
        },
        "item": {
          "id": "4b42b345-754c-46dd-a2df-d3246be91d26",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "b770f78a-1290-4b89-8ec3-f2f5e098ae29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0808952-be3f-4a98-9809-4ceb02fde4cc",
        "cursor": {
          "ref": "6f60cce7-838c-4d65-907a-a73a1e561333",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "9a0b24a7-0664-446d-9de5-f9251945d0e1"
        },
        "item": {
          "id": "d0808952-be3f-4a98-9809-4ceb02fde4cc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "5e6ad4c9-00c9-4189-88e0-7325cbbb1804",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49250637-8e21-4e31-b30a-3e5cd6e88f3d",
        "cursor": {
          "ref": "309f7b44-a960-425e-9c2d-dc5d6df66f95",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "ec784c3d-c9d5-4a70-a5c5-5b24a9946d75"
        },
        "item": {
          "id": "49250637-8e21-4e31-b30a-3e5cd6e88f3d",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "dbe46f2d-7dac-4b41-b7ad-b9bf269e70b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2d41b3-0f30-44d5-b565-76800ad6c331",
        "cursor": {
          "ref": "87ea0005-f9df-4b1c-9523-41bf4ab63954",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "1cc94092-ead3-477c-bedd-dcea5bad3b55"
        },
        "item": {
          "id": "ff2d41b3-0f30-44d5-b565-76800ad6c331",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "1bc6f450-a5a2-4257-9e3c-b92f1f2f1dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9b8d5d-5ba2-4818-8c05-ed7960320fd7",
        "cursor": {
          "ref": "9a97a666-ea33-4fc9-87aa-7777f55a8ab6",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "840e226e-6a4a-45f5-a4ad-7fc9f759d262"
        },
        "item": {
          "id": "6b9b8d5d-5ba2-4818-8c05-ed7960320fd7",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6b188661-202f-48eb-bd02-d8e7d8715431",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d1ddb16-7379-4a54-a4e1-d348dc2d4e95",
        "cursor": {
          "ref": "0c4c1f02-cbad-4806-8ab4-9a7526181ee1",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "0b27f7ca-8b11-46eb-9624-7b2efd16e5e2"
        },
        "item": {
          "id": "9d1ddb16-7379-4a54-a4e1-d348dc2d4e95",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8ca9ab37-9798-40e9-b95b-229b36eda5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f25ffe3-7fba-4b3c-a974-efe09086ddbd",
        "cursor": {
          "ref": "fda93814-1784-4afa-a697-711402c3c3ec",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "ae427e4b-71f0-462c-a68a-8ca6188764d8"
        },
        "item": {
          "id": "0f25ffe3-7fba-4b3c-a974-efe09086ddbd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "7f769fb2-198f-4c20-b925-4b6918e2060e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94162b61-2f0f-4e42-996e-a5346c717507",
        "cursor": {
          "ref": "8382c3f6-e461-42ae-8448-a158beb88b07",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "dab828a4-38cb-4397-97fd-452f93ca4c3b"
        },
        "item": {
          "id": "94162b61-2f0f-4e42-996e-a5346c717507",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f9e150e4-cbde-4fbe-a620-a926b7c1be51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33a31e55-9e30-48fa-a2a0-ff1ac5aa1d56",
        "cursor": {
          "ref": "32baf7ed-296b-400b-b4eb-98803c4fbf4f",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "47780320-c51f-4428-a23f-a40b53148630"
        },
        "item": {
          "id": "33a31e55-9e30-48fa-a2a0-ff1ac5aa1d56",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b350d437-c39d-4e0d-945d-c021b4b33c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27c31ce3-e416-431a-b122-6d907d495ac2",
        "cursor": {
          "ref": "a4617fa1-abe3-4234-8906-8759755ad81b",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "a4878a74-4796-4d4a-8d6a-2f6da3d80b50"
        },
        "item": {
          "id": "27c31ce3-e416-431a-b122-6d907d495ac2",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "f2990270-6821-46e6-90f8-3f352b65adc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "478fe92e-e47c-4e4a-9f24-17a44620de81",
        "cursor": {
          "ref": "d6bd937e-b6c9-49be-a2b9-9cfcad03cf9b",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "60688c60-52ba-47ef-b9bc-89216c780865"
        },
        "item": {
          "id": "478fe92e-e47c-4e4a-9f24-17a44620de81",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "01c57d96-8a77-4d33-aa90-03fe78b4eb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b664394-9d9d-4b65-8b45-d65a9a94f7fd",
        "cursor": {
          "ref": "786569a5-90e8-430b-a732-9b5e2063ff86",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c47311d2-2ba5-4c90-8554-cb5401bc8d6d"
        },
        "item": {
          "id": "0b664394-9d9d-4b65-8b45-d65a9a94f7fd",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "fc0a2063-afd1-4727-b2d0-320c21eed006",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3739d1af-1011-46e7-b297-32fb3d6ef3ba",
        "cursor": {
          "ref": "c3cbb9e8-9013-4104-b833-ea191281ddb0",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "f205ee39-7597-4fbf-8268-3312dfc6e433"
        },
        "item": {
          "id": "3739d1af-1011-46e7-b297-32fb3d6ef3ba",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8fbd1d91-5d63-4f28-8508-288c8ac9e68b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88a6e9ad-d8f0-4254-8111-b354a787cddb",
        "cursor": {
          "ref": "08fd1174-c146-4a9e-92ee-1e087a5f2338",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d27b3814-76fe-4d87-9235-6443daf4379d"
        },
        "item": {
          "id": "88a6e9ad-d8f0-4254-8111-b354a787cddb",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "7d2439e6-9218-4386-b3ae-a746964f6a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f5f24e6-7397-45cd-80c2-85e96f01e263",
        "cursor": {
          "ref": "fefed37e-6fe0-4137-8a7f-450d4424dafa",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d953c5a3-06e6-408e-8174-22de10bca1a3"
        },
        "item": {
          "id": "6f5f24e6-7397-45cd-80c2-85e96f01e263",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "26b4bd44-3e2b-4fde-8a65-c692cf82377b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf5fd6ab-4ed4-4975-8807-4a2b23aebb59",
        "cursor": {
          "ref": "0664f204-6053-4760-b381-126c491dc72d",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1f58fdd6-d5bb-4139-b18d-a7282cb6ee89"
        },
        "item": {
          "id": "cf5fd6ab-4ed4-4975-8807-4a2b23aebb59",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "54040d7f-9ac1-4f29-a119-e26f90d12baf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02cd6ce7-d7fc-4abf-9f7a-8896ed753995",
        "cursor": {
          "ref": "3c2f54b5-38cd-4ae8-ace9-70ef5b1479ce",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "974bde3b-cabf-4261-b437-0ad79a75677f"
        },
        "item": {
          "id": "02cd6ce7-d7fc-4abf-9f7a-8896ed753995",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1da91506-b0d7-4070-adf7-0cbbcf122b57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89650de5-4d21-4249-bf20-c2a499d49283",
        "cursor": {
          "ref": "f7b9e6d4-25c4-4b41-a72e-0a1c0ab47d39",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "c4d4934f-aba0-4f7a-93a2-1c4f8a0911eb"
        },
        "item": {
          "id": "89650de5-4d21-4249-bf20-c2a499d49283",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b9d5db20-9488-4439-9dea-c356002c0037",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fffe8e72-6713-447c-a79a-3c67d9bf511e",
        "cursor": {
          "ref": "99123ba1-080e-4347-9d04-b789349b3d84",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "0b851c1d-5014-41d4-b58a-2ea0562e5789"
        },
        "item": {
          "id": "fffe8e72-6713-447c-a79a-3c67d9bf511e",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "c94cefd7-6087-46f9-a0fb-1332c6fffb90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1de7f982-ff6a-4e4b-91fc-1f48e63893ab",
        "cursor": {
          "ref": "f5fbf8da-b365-4b37-b998-02e41c4420a7",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6b007845-944e-4d3f-b4f7-20a66ff13bcf"
        },
        "item": {
          "id": "1de7f982-ff6a-4e4b-91fc-1f48e63893ab",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "dc8926f8-5ecd-49a9-b5e8-80e8d0a4e9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef17bf9-7ac8-4139-a4bc-21274d78552a",
        "cursor": {
          "ref": "b4c00bcd-4df3-4318-9d10-030ca2a83591",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "31b38622-ee3c-4c24-bcfe-dcc33c55d078"
        },
        "item": {
          "id": "8ef17bf9-7ac8-4139-a4bc-21274d78552a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "3403e848-a8bd-465f-b0af-268cfb52895c",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 16,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f45db4-4070-41d6-ab12-af7283a340e1",
        "cursor": {
          "ref": "b735c740-6588-4aa7-abb7-163a0fb19982",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "cc39b1de-be1c-45d3-b9ce-492d61da9cda"
        },
        "item": {
          "id": "46f45db4-4070-41d6-ab12-af7283a340e1",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "1a489510-b556-4c00-9b6f-ecb2c47fd8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a37521b-b177-4c13-965a-117e2f609a43",
        "cursor": {
          "ref": "64048463-545f-40ec-b334-3ef56b749a01",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "81713576-ed0a-4e6d-bbcf-514fdb4fd3c9"
        },
        "item": {
          "id": "2a37521b-b177-4c13-965a-117e2f609a43",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "af6b42d7-fdac-48dc-af25-38c9bd45bdf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a06262a7-cad2-4a5a-910e-f54aedbb6d99",
        "cursor": {
          "ref": "cabcc77f-4693-45d8-86b5-b384d64d7238",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "850fb1f0-9821-4202-84ee-bf0965f3ee2e"
        },
        "item": {
          "id": "a06262a7-cad2-4a5a-910e-f54aedbb6d99",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "008dd3fb-05f1-48aa-bb82-fd7b7b49fc62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d51e4d6-443c-492d-9563-e6075f505a04",
        "cursor": {
          "ref": "ab70bac0-fe35-4064-a288-49ba9cd89e7e",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a7dba178-5bbe-4872-bd84-f4ffd9d446e5"
        },
        "item": {
          "id": "6d51e4d6-443c-492d-9563-e6075f505a04",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "f4f35715-97cc-401e-99de-b66256e147dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07f1ad1d-55d5-4599-93e2-b1e4b6b16a54",
        "cursor": {
          "ref": "d28f6cd8-adef-4ccb-807e-ec02c8410b2f",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "e904baab-ec7c-4f7a-b65b-0168a116fa64"
        },
        "item": {
          "id": "07f1ad1d-55d5-4599-93e2-b1e4b6b16a54",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "3fa79515-d42a-4016-b27d-faa454327fd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b100b9e-d9fb-4f16-86c2-dda00102ed88",
        "cursor": {
          "ref": "9b24bd89-4036-4099-87c9-cecb5ff843c2",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "1da716df-24c5-4a42-8eb1-64d1ea875bcb"
        },
        "item": {
          "id": "4b100b9e-d9fb-4f16-86c2-dda00102ed88",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "4e27c364-de29-4eba-b248-57c5e57a4b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9563d75e-f58e-48a4-a6b9-a8d3ad5f4b01",
        "cursor": {
          "ref": "c02e040d-94c6-475f-9642-063dff5bbc8f",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "0c94c18c-d172-4842-9e02-5a41bf48b8a2"
        },
        "item": {
          "id": "9563d75e-f58e-48a4-a6b9-a8d3ad5f4b01",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2ec19919-8272-43ba-aefc-5c07451d2ebf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 14,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3077a32d-d15b-44f6-a269-c2044c1796e7",
        "cursor": {
          "ref": "52742e06-73e3-471e-a2ec-48b6b95a01f3",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "63292f6d-ae8a-4924-862a-3ec6e6d539d1"
        },
        "item": {
          "id": "3077a32d-d15b-44f6-a269-c2044c1796e7",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "28798319-92dc-445d-9a94-0248e9c9ac33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6a2b87c-8485-4b57-9488-80a8409819d2",
        "cursor": {
          "ref": "7599ede1-b22a-461f-ba87-72c7d2131b89",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "25dcc97b-80d3-4321-a7a7-a2e36fbe4ddc"
        },
        "item": {
          "id": "d6a2b87c-8485-4b57-9488-80a8409819d2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "28893d2a-9ccb-4bf6-b717-d128f7ec6ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2a86142-4333-4844-bdcf-6e7912baee66",
        "cursor": {
          "ref": "4141c67b-a272-4151-9d78-5d599d30fe4d",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "11f7812a-d1b8-4e0b-a052-17b401c8fbe9"
        },
        "item": {
          "id": "d2a86142-4333-4844-bdcf-6e7912baee66",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "ad46d6af-3284-4825-8dcd-a5557ff21a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f21d63f2-e75c-471a-9638-cde3a5ed0d3a",
        "cursor": {
          "ref": "ae025b4a-982f-4355-ba41-f0b645867a77",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "0e2e7032-c7a0-4da6-9718-4beaf991a2b1"
        },
        "item": {
          "id": "f21d63f2-e75c-471a-9638-cde3a5ed0d3a",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "020ada0a-b8ab-4f27-80ba-842b4f341346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9045ff4e-2587-4d10-a9da-aa5cb4a1ef4d",
        "cursor": {
          "ref": "3180a359-0167-48e9-ba76-d1092166116c",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ff7970e9-2cf1-456e-a819-cd3cbd36d9ce"
        },
        "item": {
          "id": "9045ff4e-2587-4d10-a9da-aa5cb4a1ef4d",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f13bdb56-0655-4393-b3d5-efa39d94f56d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61571b82-db96-4051-9564-4a5c4152bb80",
        "cursor": {
          "ref": "7167de85-b310-4630-a483-48e5511b2e66",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3205c203-9a53-4b4f-addf-84634241fc59"
        },
        "item": {
          "id": "61571b82-db96-4051-9564-4a5c4152bb80",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "db41bff3-d927-40ff-b99e-226be1ccb3de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088dffcf-18fe-4e65-b1d2-acfe7745f313",
        "cursor": {
          "ref": "3ac44db4-9167-489d-acdb-8d1b1d79fc6c",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "812b7eaf-57b0-43f4-acd3-f864602927b1"
        },
        "item": {
          "id": "088dffcf-18fe-4e65-b1d2-acfe7745f313",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "9c64edbb-51ec-4bed-a01b-23f99f0a61e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4f857d-2d37-4da5-8832-8ba7384a7682",
        "cursor": {
          "ref": "b72c8292-138c-40e8-8eb5-f95bdf1ee825",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a17d3ec3-1a0b-4636-8891-ac951ae31700"
        },
        "item": {
          "id": "bd4f857d-2d37-4da5-8832-8ba7384a7682",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1f1f3634-4753-4f70-8495-6e1c2712ab22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "053b164f-d916-4329-87ff-1b9aaa150194",
        "cursor": {
          "ref": "71f6ce64-ce1f-45f6-8696-755a9129c2e5",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "198fde82-ef89-4c2a-80d6-d802e8c177a8"
        },
        "item": {
          "id": "053b164f-d916-4329-87ff-1b9aaa150194",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7a0ed53b-dc02-4936-84f0-6744c9452b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eba0312-7bc9-4b26-9252-2c6069515c7d",
        "cursor": {
          "ref": "99474af0-d9a0-4949-b4d1-5529c8165ef6",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "75aadcce-96d5-4579-b203-997d9bb57622"
        },
        "item": {
          "id": "3eba0312-7bc9-4b26-9252-2c6069515c7d",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1cfcc798-c6b6-421e-bc1f-8d82aa270b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbf5655-8a03-4ce8-a5f0-e929f0a49618",
        "cursor": {
          "ref": "5c97e41c-27d7-4bf3-bf5e-e2255c804f99",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f3647ca2-6aab-4231-9be0-a5f4ee657970"
        },
        "item": {
          "id": "1fbf5655-8a03-4ce8-a5f0-e929f0a49618",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "38fcdd6e-a2c0-4a9c-83c1-836af20ceaf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb781831-263a-4e58-a671-e06375f038aa",
        "cursor": {
          "ref": "b880a8d3-3649-412f-a041-4f468653ae42",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "f08743c9-454b-4c81-9df5-187df442f2cf"
        },
        "item": {
          "id": "bb781831-263a-4e58-a671-e06375f038aa",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f5191687-2bca-4eff-9f63-0fc6d8cdc502",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cfe414-0790-4350-8832-51a03d5fc1e9",
        "cursor": {
          "ref": "d17ea4ec-b0c8-4e4b-8a23-1de2d5895947",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "e83f10f1-2841-453c-beb7-f57fbbd52db5"
        },
        "item": {
          "id": "d3cfe414-0790-4350-8832-51a03d5fc1e9",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "90cf74be-7036-47be-884e-06d7da5c6d55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b7a909f-d50f-46df-8371-4bd0c7b550b9",
        "cursor": {
          "ref": "21b52dd6-13ed-473b-84e7-d98447fb7c43",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "9d810670-dfa4-4efc-81a6-c48d75c1ed9c"
        },
        "item": {
          "id": "9b7a909f-d50f-46df-8371-4bd0c7b550b9",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3fba308f-f0d0-4274-9a87-3ef987b6ebf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8912e91f-5287-44a5-8813-55b75a4fe52b",
        "cursor": {
          "ref": "a6fb8dff-c1cc-4400-bb81-a546c7a1f838",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5d345bb9-d746-404e-a969-ee041c4cbbc4"
        },
        "item": {
          "id": "8912e91f-5287-44a5-8813-55b75a4fe52b",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "007ea060-b7e6-41e1-bb9d-d3a984d6759a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4847e6-75e9-4467-92e3-3b76f0ce45cb",
        "cursor": {
          "ref": "7edae738-bfbf-468e-980a-2f3e93f14e84",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "9a79504f-19e3-4253-9599-e3dd8e8c5525"
        },
        "item": {
          "id": "0b4847e6-75e9-4467-92e3-3b76f0ce45cb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6f0bdbc3-eac4-4535-9ce8-7fde5e931ad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec5a5e7f-1fe0-4c0b-a93c-d35ee29727f3",
        "cursor": {
          "ref": "59f7d057-e7e8-4044-b340-77abaa46fa61",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5b33384b-f873-4056-b420-95ce5740d3ba"
        },
        "item": {
          "id": "ec5a5e7f-1fe0-4c0b-a93c-d35ee29727f3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "4ab9f4ef-ab5d-4117-baa5-0077422421e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ae55d2f-2e74-44a2-8814-71a27acc850c",
        "cursor": {
          "ref": "9a52577b-4751-4f1e-ac6b-959008f333c9",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "e87ea64a-25de-4135-bcb5-f404e451757b"
        },
        "item": {
          "id": "2ae55d2f-2e74-44a2-8814-71a27acc850c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "a40b5116-7437-49b6-8b9d-4bd52cb396ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bfafa7-ae16-47dd-b8f3-cbf31ad0cfb4",
        "cursor": {
          "ref": "3f5549ef-19a5-436a-b54b-9f997122a262",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b33a4b71-ec56-430a-b318-962ae853d53e"
        },
        "item": {
          "id": "e7bfafa7-ae16-47dd-b8f3-cbf31ad0cfb4",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "3387cc99-de80-496e-8363-23ee9f0d3524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2b98b1-4129-4229-9b55-a6305edf3d1d",
        "cursor": {
          "ref": "75001822-51cc-4f9e-b363-cf7d41263e58",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "04733170-52f9-46d2-93f3-e9fb9bb7c7c3"
        },
        "item": {
          "id": "ed2b98b1-4129-4229-9b55-a6305edf3d1d",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "c0ff074d-62b1-4784-824c-b6ca271f8a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ad771-36ee-4772-b225-9bd233c82c6d",
        "cursor": {
          "ref": "2c3fa6ba-5132-45be-9212-7f3cee1cb3c5",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ebcda778-c7b1-438d-b290-bef3008e05d9"
        },
        "item": {
          "id": "da1ad771-36ee-4772-b225-9bd233c82c6d",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "81c98f66-fc8d-41a6-8458-8eee109630ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c28120-8b70-408d-ae0b-3dbffc43cdd7",
        "cursor": {
          "ref": "409421e2-2565-4133-896d-e755f91f7397",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "11cdaec0-6cdf-4719-b024-7700abcd79e4"
        },
        "item": {
          "id": "f3c28120-8b70-408d-ae0b-3dbffc43cdd7",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "a266fa95-2c47-4f3d-b71e-d221df8ee0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987ceb02-4e0c-4515-af1e-4cde8a857e92",
        "cursor": {
          "ref": "819590cd-3642-4970-acc7-6cdceb3c5844",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "503fd71b-ca06-4e0a-b86e-4aa773e8375c"
        },
        "item": {
          "id": "987ceb02-4e0c-4515-af1e-4cde8a857e92",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0ac7a814-c082-43bd-89a4-a84136bee23f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "699a7d8d-2c92-4e59-ac35-038bede847b2",
        "cursor": {
          "ref": "253fc74a-b37e-49fc-aced-8f7fa5d1ec57",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "9ccddc6e-ef52-4da4-9b9f-1b6577b4066e"
        },
        "item": {
          "id": "699a7d8d-2c92-4e59-ac35-038bede847b2",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "03c3239c-2b81-47ef-a50f-209d2f4722a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7354accb-0253-4a09-8682-9638bd4c2b0f",
        "cursor": {
          "ref": "eccfaedf-c8dc-49ad-80dd-7d153fa26136",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "ffa2cf1e-1f5a-4e09-ad82-5b70f541b5aa"
        },
        "item": {
          "id": "7354accb-0253-4a09-8682-9638bd4c2b0f",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1e325ad1-54ca-42b7-bef7-cfc8328b80c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e1d0a1-a6c6-4acb-8d54-63afd3c857f1",
        "cursor": {
          "ref": "fd357f93-e4e2-49ad-b873-f1251e8c81ba",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7cdcf097-51f6-44c3-9d58-8f98bc4d8eb1"
        },
        "item": {
          "id": "04e1d0a1-a6c6-4acb-8d54-63afd3c857f1",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "713d8231-9e23-4910-86fc-bcf64e8d4cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305e9783-0c98-4d7e-b12b-ba2840158208",
        "cursor": {
          "ref": "469bcf3e-1616-41d5-afe3-f77c1fc877a3",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "b21561e0-0d55-488e-b18a-ee0915c039a8"
        },
        "item": {
          "id": "305e9783-0c98-4d7e-b12b-ba2840158208",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7ce3b044-888f-4dcf-9107-1aa3100e68fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5923f4c6-de49-4d70-9078-6b12606267a1",
        "cursor": {
          "ref": "a7ac9def-a4ae-4792-8ce4-51026476605c",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "b567a3cc-2643-4d56-a3e8-955f4e8d98fa"
        },
        "item": {
          "id": "5923f4c6-de49-4d70-9078-6b12606267a1",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "974716b7-f1d4-43a0-b9ac-2c28ea159903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a152dc00-ba2b-4ed5-9a2b-54c9d545e238",
        "cursor": {
          "ref": "9ac7ef46-eb2b-462c-8548-543f326e96ad",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "1d5a4c02-9a90-4325-a8e1-b25f155050d5"
        },
        "item": {
          "id": "a152dc00-ba2b-4ed5-9a2b-54c9d545e238",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "f11cb21d-7dce-49f4-b017-09ad504c943e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc5233f9-50c6-4cfb-a70f-0aa4ded8c264",
        "cursor": {
          "ref": "3a236880-2bf1-4d0f-b8a9-80ec02549d71",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8768ba12-2134-4dba-9135-383f3430c6f9"
        },
        "item": {
          "id": "bc5233f9-50c6-4cfb-a70f-0aa4ded8c264",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "d11db71a-e05f-44ae-be13-895f60ae7e43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009f8d07-1106-4687-9129-549643ca99d5",
        "cursor": {
          "ref": "54d5ced3-787e-418b-869f-ab2576cef797",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca4b86c4-4266-4de4-8c56-a2f4f54bb37f"
        },
        "item": {
          "id": "009f8d07-1106-4687-9129-549643ca99d5",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "c7d02316-9fb5-4064-8e7b-ae0628efadd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2f72356-21d8-4c31-b028-982ea7661035",
        "cursor": {
          "ref": "dbf00078-f891-45f9-9e2e-81d26f28d8ce",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "96ea59a6-f244-4a34-9139-92ed91320c97"
        },
        "item": {
          "id": "b2f72356-21d8-4c31-b028-982ea7661035",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f9d425b1-cff8-4259-83e0-67767daacd5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76594b66-2442-4260-bd0a-79d8bfd861d2",
        "cursor": {
          "ref": "56094c8c-a892-42b5-9f92-c090efc0681b",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "ff1f0d4a-2610-47e6-9ee8-3c8cff47e77d"
        },
        "item": {
          "id": "76594b66-2442-4260-bd0a-79d8bfd861d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "f6143038-19db-4d48-9cf6-3abe469c7048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "287e0719-4f2f-473b-b4bb-ba7c4f0e4c1d",
        "cursor": {
          "ref": "91f891e2-54dc-4345-8986-e40026a74b47",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "7c07d91e-bc53-4a17-8e70-deeb20e4aebe"
        },
        "item": {
          "id": "287e0719-4f2f-473b-b4bb-ba7c4f0e4c1d",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3fb2fd1a-0218-46dc-bd4c-d5c06c79f74d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7947841-6afc-4510-8b03-c9ca66c31afa",
        "cursor": {
          "ref": "ba998464-4a78-4c1c-93db-e183f194af8c",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "656dcc28-d025-4087-9a1a-0aca1a78c417"
        },
        "item": {
          "id": "b7947841-6afc-4510-8b03-c9ca66c31afa",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a252a7aa-ab06-4448-984b-6c65637d05b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30765f04-7bdd-43d8-b1f0-f66948d1fc6e",
        "cursor": {
          "ref": "c75215e1-9fbd-4f15-bc30-279d52534184",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "8e8579b6-1034-469b-a494-2dadce02611a"
        },
        "item": {
          "id": "30765f04-7bdd-43d8-b1f0-f66948d1fc6e",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "56d2e418-9a61-4102-948e-ce353360e9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da9bd449-8621-45b6-b4b7-06c1de71d54a",
        "cursor": {
          "ref": "bbd7f40f-5ffa-4928-a554-fa203743d66f",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d1cfc391-a10e-414e-8bc5-6408e2dd774d"
        },
        "item": {
          "id": "da9bd449-8621-45b6-b4b7-06c1de71d54a",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ef5b1524-dfa0-474a-91e0-36495069a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ce0e504-a381-4f09-8ac3-89c46ba4c97f",
        "cursor": {
          "ref": "fdb8cb02-7f35-4e7c-b143-609a15d85e33",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "344bbc5d-d218-47e8-bc74-da3037e95da0"
        },
        "item": {
          "id": "5ce0e504-a381-4f09-8ac3-89c46ba4c97f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "2d750d14-7bf8-427c-88a5-2ef5ea32248f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac3f0807-4d85-49f0-b772-0aa91a72ce78",
        "cursor": {
          "ref": "688ed399-cd40-41fb-bfbc-cc1c64245be9",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b6eec7cd-7b0c-46d7-a07b-b7b1c003d0e6"
        },
        "item": {
          "id": "ac3f0807-4d85-49f0-b772-0aa91a72ce78",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "b5e649ad-fad8-4c6a-94c6-c1cf4dd2f0f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8df0b75c-64de-4a03-bd87-c37475284972",
        "cursor": {
          "ref": "b5da8eda-f916-4e08-adfd-80e97485b1b6",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "acf3c243-9b1c-4cbb-a2cb-275229214525"
        },
        "item": {
          "id": "8df0b75c-64de-4a03-bd87-c37475284972",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "154d7499-07ca-4a1b-96c4-4bc90f037542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23f1e860-16cc-4379-8cf9-69d8da0bbcde",
        "cursor": {
          "ref": "998d4c3b-b6bb-49d5-bebe-1d69ce575577",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c9bc5390-8700-4bb6-9889-0358e8308823"
        },
        "item": {
          "id": "23f1e860-16cc-4379-8cf9-69d8da0bbcde",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "d2cfe8e5-c1cf-48e1-aa2a-d4878e0fa3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a42b0cf7-c37b-40eb-a207-cd9ac604b3f8",
        "cursor": {
          "ref": "1898549d-d0eb-47e2-8657-104a45ed75b1",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c3a70c7a-4000-4188-96cc-2e58afae083c"
        },
        "item": {
          "id": "a42b0cf7-c37b-40eb-a207-cd9ac604b3f8",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ce9ca69a-6370-4a86-be52-47ed5ea1b77d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2815f5e-7043-4e9e-bfe2-e9e0e476ba5e",
        "cursor": {
          "ref": "d58d3b53-7a03-41bb-b98c-6e4387b0237c",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "bed6f9c9-4c74-4dec-a6c2-9e862e6cb23c"
        },
        "item": {
          "id": "f2815f5e-7043-4e9e-bfe2-e9e0e476ba5e",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1ec04e20-b0c2-4708-aab8-03fb5888f8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e332059-e454-4afb-9df1-b6767c61434f",
        "cursor": {
          "ref": "48f191ef-c898-4dcb-b5bc-1e256ddd023c",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8641c9ef-8137-432e-9d01-c5028d0b87a9"
        },
        "item": {
          "id": "3e332059-e454-4afb-9df1-b6767c61434f",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "670f6f25-b5e4-4995-b3f5-4ddad818a472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7720f66-846a-49f3-885c-1105821bd84e",
        "cursor": {
          "ref": "d18ff303-d64c-49c1-8c6c-20d88c8d33bc",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "dc1e7bc7-ddea-4eb7-9391-6d5fb24bf3f7"
        },
        "item": {
          "id": "d7720f66-846a-49f3-885c-1105821bd84e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "47683e27-a277-419a-a16f-fa8f16e5155e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75cab088-fa3a-4b80-8121-b5b88f27fba1",
        "cursor": {
          "ref": "8d69300b-21d5-437a-bf26-90531076df6d",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fee287af-0b56-4164-97de-4366adc16038"
        },
        "item": {
          "id": "75cab088-fa3a-4b80-8121-b5b88f27fba1",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "51a545a7-3b2b-49b1-9862-a1438a9f5c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9feb4c2-7bcb-414f-a21a-6e176639322e",
        "cursor": {
          "ref": "ed57cab2-df80-4a15-93d0-9e973518dd56",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a5393b7f-03af-4d74-a228-074da7dc5e18"
        },
        "item": {
          "id": "e9feb4c2-7bcb-414f-a21a-6e176639322e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5039468b-aaf9-4369-925f-eed494adc57c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e496b78-e70a-4896-807f-d0b077898e74",
        "cursor": {
          "ref": "f50a9ee9-0eb2-4684-a37b-825978186d2d",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "1c70690c-1ed6-42de-95df-b42645da2a9f"
        },
        "item": {
          "id": "1e496b78-e70a-4896-807f-d0b077898e74",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "c789ea4b-e3cc-4e9c-b595-814f54b90798",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202135e5-4437-4c7b-8b2a-6cd59b239c27",
        "cursor": {
          "ref": "d072da45-6479-47f2-9bf8-9ac32bcca687",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a2d22e26-1b51-43eb-9534-9a5b91ebf28a"
        },
        "item": {
          "id": "202135e5-4437-4c7b-8b2a-6cd59b239c27",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3d2c85f-2cec-4d03-8afa-8dd1b88b48d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda455ed-9172-45be-96ad-3632168ef6bb",
        "cursor": {
          "ref": "3d78a77e-7375-4cf3-8899-9f5c6621f66f",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "c8a51e3b-c480-4544-9acd-38478df0bb43"
        },
        "item": {
          "id": "bda455ed-9172-45be-96ad-3632168ef6bb",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a978afdd-35fe-4f0b-9081-29a93db3433c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "933ce1e1-c0d5-4fc0-a4c3-24c7cf706a46",
        "cursor": {
          "ref": "6de38388-5f00-4e5c-8887-4c799ae19ca2",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "08ffa1ae-8e0b-4a49-90fe-1da6d0b1d4e8"
        },
        "item": {
          "id": "933ce1e1-c0d5-4fc0-a4c3-24c7cf706a46",
          "name": "credentials_issue"
        },
        "response": {
          "id": "5ca054d5-1448-4a7c-99a1-9007c9f88792",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 905
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "eca083c1-9337-4965-b6f3-084d7838e764",
        "cursor": {
          "ref": "42c93796-2119-416f-aac5-c068e8cfc559",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c24638c8-2a10-4a2e-8f30-44a343b16cbc"
        },
        "item": {
          "id": "eca083c1-9337-4965-b6f3-084d7838e764",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4b7cafcc-578e-41fc-9bd8-ada4fb8c703e",
          "status": "Created",
          "code": 201,
          "responseTime": 68,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db9ad7d-c378-497e-98be-60e3a381a99b",
        "cursor": {
          "ref": "bddc59e9-af4c-4aa2-89d5-a63deabb9039",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "2298140b-c728-42fc-bef7-0649cc2ec2f8"
        },
        "item": {
          "id": "0db9ad7d-c378-497e-98be-60e3a381a99b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c8ca7dcd-66b5-44c2-af7a-a8ff6369e690",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "662c05af-40a3-472f-aaf9-d0a1f67dcdef",
        "cursor": {
          "ref": "cc946675-ca76-45ea-904a-0872ebc4af90",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "769908ec-3a3c-4468-aea0-8dc4903754cf"
        },
        "item": {
          "id": "662c05af-40a3-472f-aaf9-d0a1f67dcdef",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "804fe78f-db9c-443d-abda-fd76ffeeeba8",
          "status": "Created",
          "code": 201,
          "responseTime": 23,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ee99e5c-0169-48f0-8067-fc9876bfb15d",
        "cursor": {
          "ref": "47e465af-739b-4ccd-a674-dcc549dbd66f",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4ac6174d-650a-4fd1-944e-e1040a3fc4bb"
        },
        "item": {
          "id": "6ee99e5c-0169-48f0-8067-fc9876bfb15d",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "b9bba3dd-e33c-4959-9adb-ee01def929fa",
          "status": "Created",
          "code": 201,
          "responseTime": 44,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4d0723-d0af-4576-aebf-ba56bb640f28",
        "cursor": {
          "ref": "e0971bb4-4dcc-402a-8159-e9e2e7cfc6da",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a8eb0c82-94ec-4dc9-a315-1a4b0043d30a"
        },
        "item": {
          "id": "bb4d0723-d0af-4576-aebf-ba56bb640f28",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "99fc7c3c-db1c-475c-9e79-c57d9e1ba9a0",
          "status": "Created",
          "code": 201,
          "responseTime": 21,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "602270e7-1126-411d-b0f9-f9cbf326783a",
        "cursor": {
          "ref": "237a248d-3e68-48dc-90d1-1e8ea023b193",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "6d45734b-e1d0-4a25-a477-97722f812698"
        },
        "item": {
          "id": "602270e7-1126-411d-b0f9-f9cbf326783a",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f646be65-97dc-449c-8322-cd30bf37f5ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79070a0b-bdb3-4327-a525-bc6d6dae2919",
        "cursor": {
          "ref": "14b27bf5-7a2f-464e-8810-d8bf458d8714",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6da37b13-2303-444b-80cd-654e7cad1f0d"
        },
        "item": {
          "id": "79070a0b-bdb3-4327-a525-bc6d6dae2919",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "31dfc480-fc5e-4e22-a496-6680457ee2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baf1137-0a7b-44c3-96af-c25ee352666e",
        "cursor": {
          "ref": "940c4228-bc29-4bc5-8a0d-4a91e38607e0",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "529ef803-f3b3-438a-8b9d-8fdd45e811f1"
        },
        "item": {
          "id": "6baf1137-0a7b-44c3-96af-c25ee352666e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3c95fd65-fa70-46d1-a7fe-dd902491434e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45cd26c3-0aaf-48c0-a1db-eed6759aefb6",
        "cursor": {
          "ref": "64facd7a-39fc-4725-b368-459c83fe3a24",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "b520bf25-8b43-405b-a7c7-c47c44e3cc3f"
        },
        "item": {
          "id": "45cd26c3-0aaf-48c0-a1db-eed6759aefb6",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ba14b93a-3f5d-4de0-afe3-355f2d04168e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc11107-8f60-431a-8744-ef916b1f6b1b",
        "cursor": {
          "ref": "e33e3584-b0ab-4d45-ac14-382c79020bba",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "d28c367e-30e2-461e-b33f-8f90f77a208d"
        },
        "item": {
          "id": "2dc11107-8f60-431a-8744-ef916b1f6b1b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6562eb18-837b-4e03-89e2-78a20288649c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ed1741-2af3-4e78-b5f5-0d68b99aa367",
        "cursor": {
          "ref": "6ad4ff4f-f4b3-4ef5-bc5d-22810a8f4b78",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "07d64526-4583-4524-ba84-695a26b49511"
        },
        "item": {
          "id": "e9ed1741-2af3-4e78-b5f5-0d68b99aa367",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "e9df96e6-fb30-446c-a377-2e991bd93577",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1b16b6-df2f-4cb9-886c-798c7dd2ca74",
        "cursor": {
          "ref": "dc846db8-4471-4af0-9fa7-20895ff17f9d",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "44921585-7ae9-448b-b865-4ad0415aec9b"
        },
        "item": {
          "id": "eb1b16b6-df2f-4cb9-886c-798c7dd2ca74",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "bf22f6de-644e-4d49-823c-97d8b95c0400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20155cb4-d0ed-4407-862e-63d2f1d9324b",
        "cursor": {
          "ref": "c1b5a54f-51e7-4c6a-b608-df1a9d9667ae",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "03301ee7-27a4-4ec6-8dfb-54de00182503"
        },
        "item": {
          "id": "20155cb4-d0ed-4407-862e-63d2f1d9324b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c546dbd3-702f-40db-806b-167b024d992e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c341a170-bc26-492e-944c-e127ff70af19",
        "cursor": {
          "ref": "5c50d41d-335b-4645-9e74-9e5b7894d7d7",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4889dd05-9dfb-4486-941f-1e9d350bcbdf"
        },
        "item": {
          "id": "c341a170-bc26-492e-944c-e127ff70af19",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "b5da052b-b7c5-456a-9e8b-0b5da9855337",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a407e7b-2873-4bc5-8ceb-dac3e5f56c71",
        "cursor": {
          "ref": "fbd9598f-f134-4328-abbc-390fd007656b",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "854a6616-f8db-4179-adab-c2a456f540c3"
        },
        "item": {
          "id": "8a407e7b-2873-4bc5-8ceb-dac3e5f56c71",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8804b6c2-bdc8-467f-8783-e338c6aa0dd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9e0d29-790b-48cf-9245-4ac42da42106",
        "cursor": {
          "ref": "16cbdee8-99ff-4853-a698-3221e7abcd37",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "45f3e7fc-72ec-4a66-bab6-7d0ef7d6fe9d"
        },
        "item": {
          "id": "ad9e0d29-790b-48cf-9245-4ac42da42106",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "23efd644-7d91-41db-8099-b86c9d0deaba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b8426b-dcfe-46ae-be1a-f22ef318218c",
        "cursor": {
          "ref": "8e0fe838-0448-4b4b-8bc7-165378797d37",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "237ceb45-49df-4cda-b0c7-75f5b39b3125"
        },
        "item": {
          "id": "86b8426b-dcfe-46ae-be1a-f22ef318218c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4b44ba51-bbda-4750-b562-b697994fff80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4afd0dee-2ea0-4dd1-94c5-d925c072d636",
        "cursor": {
          "ref": "24b040e0-92fd-436e-99a8-66686923a4e6",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "33fd8791-7da5-4fa7-8338-a7889f38f6c2"
        },
        "item": {
          "id": "4afd0dee-2ea0-4dd1-94c5-d925c072d636",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ff5cdfeb-74ce-4585-b5df-7773edf00f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd18a12-58aa-45f0-8fd6-c0f03bdbc090",
        "cursor": {
          "ref": "71c3cb1c-57b2-4ba5-b072-763ec2ac534c",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e0c1d99b-cad5-4166-8aff-42ac9926a76a"
        },
        "item": {
          "id": "2dd18a12-58aa-45f0-8fd6-c0f03bdbc090",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "644f193f-ecbe-4509-812e-588dfe08084b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74d8f7df-939f-448b-ae16-16bf1cc33a82",
        "cursor": {
          "ref": "65e00d32-6e9b-41a8-bedc-5d43060f37f1",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "7268f370-2049-4b0b-8ab4-14b78069d5fd"
        },
        "item": {
          "id": "74d8f7df-939f-448b-ae16-16bf1cc33a82",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "bef704af-4a3b-4637-8d3d-0e84778e67ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2c85ad4-aef0-42e9-be72-1b63a637856b",
        "cursor": {
          "ref": "e74eb184-d8b0-4f9e-95b6-97f7098b46da",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "d4a09604-6681-43a6-8386-b93b42a349e6"
        },
        "item": {
          "id": "b2c85ad4-aef0-42e9-be72-1b63a637856b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "332bdc6a-130d-4c88-a6cb-53b6dd0c798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f1cecb-b684-4e13-a41e-1e373dd6e61a",
        "cursor": {
          "ref": "11781ff4-7107-4a2d-9200-f766deffbe27",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "37630b93-9a97-405f-99bb-1b5cf5474439"
        },
        "item": {
          "id": "79f1cecb-b684-4e13-a41e-1e373dd6e61a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "3a69e880-32bd-4ca9-84cf-2c879b22bf3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "378fbf2b-8512-477f-a024-6e5a0cf61dbb",
        "cursor": {
          "ref": "4a660d32-90a0-45d0-8a25-8d86c59809d2",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e92b1dc8-89bd-4fca-99c9-3cb432ae7ed6"
        },
        "item": {
          "id": "378fbf2b-8512-477f-a024-6e5a0cf61dbb",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "9f60d502-4681-4d86-a0b7-3e9456662a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92fbe933-f947-4489-934f-61251f7ebe2a",
        "cursor": {
          "ref": "63e9a796-e3e9-4386-bbef-3260fb264eb0",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "88bcbd59-64fc-4bc9-9152-1e774b556d72"
        },
        "item": {
          "id": "92fbe933-f947-4489-934f-61251f7ebe2a",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f8191b3a-44a2-4343-b08f-aa4e730e817a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d93635b7-1e34-4833-bbd5-2167310fface",
        "cursor": {
          "ref": "87ec4486-0311-49eb-931d-b27073759275",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "ec854666-8f91-4548-9899-c7e63e0376cb"
        },
        "item": {
          "id": "d93635b7-1e34-4833-bbd5-2167310fface",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d3b033c6-4fee-4fa0-abc5-2eab90b74b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42efd70f-4718-4102-ada3-08573b5541f3",
        "cursor": {
          "ref": "b3ee1dee-8f65-4478-a801-8c29859de786",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6c71f82d-a018-4dbb-8c66-eb81ba72ba82"
        },
        "item": {
          "id": "42efd70f-4718-4102-ada3-08573b5541f3",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "318fa237-e1cb-4a3f-b79f-9fff3a27804d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d062dc5b-5252-416d-bb7c-d2e651c73fb2",
        "cursor": {
          "ref": "e24b699d-0a9d-48ad-bf61-fd94d87dfaec",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7816a8b4-4bc0-4cf8-aa52-6e459f71a451"
        },
        "item": {
          "id": "d062dc5b-5252-416d-bb7c-d2e651c73fb2",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "bf7b05c5-d137-45cb-9453-02869e07fc85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee685fe8-e85d-4d42-a7c1-5f0926bc07df",
        "cursor": {
          "ref": "caefef58-2c7d-4711-bf97-f187c54b9217",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3cd2b113-da70-4b1c-9b92-c1bb8c157a68"
        },
        "item": {
          "id": "ee685fe8-e85d-4d42-a7c1-5f0926bc07df",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d6a4d22e-7d71-4d84-bf81-c5c476c17f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d77995b-508c-40d4-8c0f-3245117887fa",
        "cursor": {
          "ref": "c611f4d4-4907-4c96-a02d-4eb15a44f0f5",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "1791963d-1ca0-4458-a4d9-b4a6dfb51c53"
        },
        "item": {
          "id": "2d77995b-508c-40d4-8c0f-3245117887fa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7f956b88-7978-4914-a2cb-c93d0a310a31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad33441-20c2-4c1f-9bee-4cfeec76431f",
        "cursor": {
          "ref": "e0f8a22a-7f1a-4ddb-af09-13fb64f174a9",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b2b0c548-1253-4dfe-b0cd-2cd42301021e"
        },
        "item": {
          "id": "3ad33441-20c2-4c1f-9bee-4cfeec76431f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "ea68e253-2a7f-4a37-98fc-869954b4fce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75253a8a-2ecc-4892-b022-652069a5df90",
        "cursor": {
          "ref": "0088b848-6aa3-4c03-8ea1-ef32882d5951",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "39334930-ef86-4611-a079-bd1e1f67797a"
        },
        "item": {
          "id": "75253a8a-2ecc-4892-b022-652069a5df90",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "29878e1c-07c9-4522-890c-3bd6a9933a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5353fe-c857-46c9-948a-8904dcd6d58f",
        "cursor": {
          "ref": "b7bc4543-6d91-44ba-9245-cc49db1a4a88",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "4d048dd7-03a9-4a39-bb39-63dc560148f5"
        },
        "item": {
          "id": "4e5353fe-c857-46c9-948a-8904dcd6d58f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d400a017-2dd7-47b5-8390-dbacb36637c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99de4702-65b7-4450-9d1e-40eab883ffc5",
        "cursor": {
          "ref": "20793b73-9a3f-4257-b7b9-bed185799c94",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cbb2b0bb-bb5f-46c4-b94a-9ce5fcfe27fb"
        },
        "item": {
          "id": "99de4702-65b7-4450-9d1e-40eab883ffc5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "eaafc991-b732-4802-962c-93c5959de50d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7373fc6a-1f85-4ed9-9495-e946db9f05b9",
        "cursor": {
          "ref": "36d737bc-bfbf-4e38-82f1-bd9b25f74703",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6cf1d1e4-2d3c-4d0f-a387-d97dfc0202ad"
        },
        "item": {
          "id": "7373fc6a-1f85-4ed9-9495-e946db9f05b9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2ae9c33f-9f3e-41ad-8d10-9b86c5bcd575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ac5043-000b-4d1c-b26f-7711b28822e0",
        "cursor": {
          "ref": "023c0335-5ece-41d8-808d-24b033ead8f1",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "9880a05f-70d2-4d4e-8e4c-d5ecd6f25267"
        },
        "item": {
          "id": "22ac5043-000b-4d1c-b26f-7711b28822e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7ed7b284-8dc9-417c-945c-2bc8dfbd9200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59b496ea-dd99-496d-b143-de4e24b92a6d",
        "cursor": {
          "ref": "52113f6b-d609-4f9a-8f68-35b8e32bff19",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "f599103d-1a0d-4495-a409-67a7be61f070"
        },
        "item": {
          "id": "59b496ea-dd99-496d-b143-de4e24b92a6d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9e06c87c-7d87-4dbb-9e45-6fecc2fbb299",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de961ec9-a660-437e-b48e-b636789f22c7",
        "cursor": {
          "ref": "80fd917f-06c3-43d0-9f26-83c87a997dee",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "4c18b8c3-4205-4c70-913e-c73e47c14267"
        },
        "item": {
          "id": "de961ec9-a660-437e-b48e-b636789f22c7",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "007bdf11-ce12-42b8-b9e7-abe28a41a82b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79b0d8d3-7333-4b88-b0cd-b3a80fb85cfb",
        "cursor": {
          "ref": "77f1b29d-b2f5-4768-9557-aebe3e0d2232",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "3eb60490-a2fb-493a-97a3-f6dcd0e10261"
        },
        "item": {
          "id": "79b0d8d3-7333-4b88-b0cd-b3a80fb85cfb",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "808b46d1-653a-4127-b50b-7be189172c20",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2dd695-e4ac-4c39-beea-b58bb2652e79",
        "cursor": {
          "ref": "0ebee31a-ee06-49cb-82ec-1627fbda83e5",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "4e4ead93-a975-49f9-b1fe-f7014bb1c429"
        },
        "item": {
          "id": "1d2dd695-e4ac-4c39-beea-b58bb2652e79",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1fc53922-6ef1-4b97-b935-5e275f10b756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb527f6-de72-4504-9fbc-8e9a0ef488d7",
        "cursor": {
          "ref": "43cdfba2-bb06-4cad-88cf-f8ed7bb5d8da",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "6bbb98d2-4832-4060-9aa7-8bbadd27067c"
        },
        "item": {
          "id": "6cb527f6-de72-4504-9fbc-8e9a0ef488d7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "573edc0b-2a6f-4c96-ae9f-e6e6f21282ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4842580b-d9d3-44de-8e1c-932026797636",
        "cursor": {
          "ref": "05c330a4-296e-431c-9c81-1912e9016bf8",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c6fe4f37-6f85-4a4f-af54-2f846a56cf6d"
        },
        "item": {
          "id": "4842580b-d9d3-44de-8e1c-932026797636",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "3001c63f-3657-411e-8311-49cc4db2a5a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a6579a-883a-415f-8065-84de6eb7899c",
        "cursor": {
          "ref": "45878984-6e3a-49cd-9f74-3417210d672d",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8e43e170-db12-40eb-acb5-b526cc7a4139"
        },
        "item": {
          "id": "e9a6579a-883a-415f-8065-84de6eb7899c",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "a4873cd1-3ba3-442c-a398-0bc83c49084c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5832f936-5272-431f-82a5-469e1c5c5579",
        "cursor": {
          "ref": "ae797864-b69d-4067-9acf-a0e08e021f8c",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "5c183d03-e889-41b8-a40e-e843245c120b"
        },
        "item": {
          "id": "5832f936-5272-431f-82a5-469e1c5c5579",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "c8db56bc-032b-4ab1-b7b9-d91ccc2fbdfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9254491f-28e8-41da-b8ff-ae81084cf79d",
        "cursor": {
          "ref": "bb95f96b-2502-4fd4-81cb-b4eec11187a3",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "c8c7b937-a411-458e-ade2-a731fb245a30"
        },
        "item": {
          "id": "9254491f-28e8-41da-b8ff-ae81084cf79d",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a9d26fe3-2d89-4b7c-9297-84c611021341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc706b2c-f7d8-4b09-9c82-14e291c76034",
        "cursor": {
          "ref": "03846619-854b-4310-a59d-7a6ef4cc34a9",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "4c46c622-2005-43fc-8c8d-a440e1f4f835"
        },
        "item": {
          "id": "cc706b2c-f7d8-4b09-9c82-14e291c76034",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "94b9ad04-e2ef-4da0-b381-273f70549200",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba0c978-a0c9-445e-8e0e-e89edf2049a6",
        "cursor": {
          "ref": "0758bcc9-38de-45f4-94b3-b2f6d149e87b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "58199e06-6d93-44bc-adc8-c478509830d6"
        },
        "item": {
          "id": "6ba0c978-a0c9-445e-8e0e-e89edf2049a6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f06d4da5-54a3-4868-bf84-5c0ffa5f36a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b79116ea-983f-4766-aa48-0bb5e1c18e6c",
        "cursor": {
          "ref": "a0f64856-0c8f-476c-a37d-9dbbbc8851d7",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "62eb2dbd-b79c-4358-8198-2ac95596c156"
        },
        "item": {
          "id": "b79116ea-983f-4766-aa48-0bb5e1c18e6c",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1ebcd2e5-4295-4447-9456-a604ec6cc508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b83da-1475-4bac-b65b-dbad9af812d5",
        "cursor": {
          "ref": "eeb73403-63b4-4581-bdf6-920b4b9051c6",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "b8e7b7cd-f5d2-44da-add2-989414b10f8a"
        },
        "item": {
          "id": "cc8b83da-1475-4bac-b65b-dbad9af812d5",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d978ff5c-7d6f-48a8-8ea7-7b4ce3d5653a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69884f43-28cc-41a8-9c4a-64bbdf80cc86",
        "cursor": {
          "ref": "2fe0949d-6adc-4f66-89b9-8654948c4e53",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0a1852e8-d3bf-4ece-93dd-91a82cd98cf7"
        },
        "item": {
          "id": "69884f43-28cc-41a8-9c4a-64bbdf80cc86",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "a9ad6d6c-042f-45b2-9e46-b6d703ed85dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55157473-f5fd-4b2c-aa4e-eb3ee834601c",
        "cursor": {
          "ref": "1a8d72d1-5809-4cff-aea8-3e77ae6060e5",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "4d19a2b8-faa2-498e-b9e6-7fa8255c3a15"
        },
        "item": {
          "id": "55157473-f5fd-4b2c-aa4e-eb3ee834601c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "58a895b7-9e4d-4d6c-a65f-643cc01f0d37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2abf0e-de30-4383-9a3f-14f82519dbe9",
        "cursor": {
          "ref": "12c4149c-039c-44da-8a7a-4bbc931cfddb",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "847d40d5-063f-4466-9fa1-4259506b55cd"
        },
        "item": {
          "id": "2f2abf0e-de30-4383-9a3f-14f82519dbe9",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4baa6c41-7fdc-4c38-bb1b-49fde2d3825d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003c977-b87e-4c1e-a16a-3b7810d58721",
        "cursor": {
          "ref": "283c90ce-1518-4291-ad5c-98c83ceb56d2",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3afa0c9f-55c1-4cab-868f-d1af47240f16"
        },
        "item": {
          "id": "2003c977-b87e-4c1e-a16a-3b7810d58721",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0a95c560-a41b-4cea-afd5-5a5ccfafb025",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd24ec6-81a5-4676-a3da-c814cc394342",
        "cursor": {
          "ref": "422bc20e-2fde-43c4-8a71-d8592956ffbd",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "c550d382-6400-467c-a7f5-050cabbee89d"
        },
        "item": {
          "id": "6fd24ec6-81a5-4676-a3da-c814cc394342",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "08e8e255-e2c5-4d73-8858-2c740a61883d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dd80a8b-957d-4116-a997-01b93649a7ac",
        "cursor": {
          "ref": "6daa780b-80cd-4eb6-8deb-bef86d48fb1a",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4e1deb17-839e-4d76-80fb-5b1cb569c05c"
        },
        "item": {
          "id": "5dd80a8b-957d-4116-a997-01b93649a7ac",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ac20d2c0-47da-4bac-b1d4-35327ee8c972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7a48c3-6577-4341-b21b-45153ecfbdf7",
        "cursor": {
          "ref": "1c6f97a8-e6fe-44f2-b969-3f95f3b0b3bf",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b3cec951-524f-43cf-af56-1ca53a457f97"
        },
        "item": {
          "id": "0c7a48c3-6577-4341-b21b-45153ecfbdf7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c3634da4-b8fe-45bc-bc8c-f35dd2152928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4cb735-dfce-4932-84d7-a58fe945bb8c",
        "cursor": {
          "ref": "5ce1eab1-91f5-4f70-abbc-4e9a8aea0978",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "10d5f972-34e7-405e-b880-06ecb5dc1453"
        },
        "item": {
          "id": "5a4cb735-dfce-4932-84d7-a58fe945bb8c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "8347d66d-6967-4b1f-844b-9bcd938dcdb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42818342-73d0-4680-8e00-15202c3c6450",
        "cursor": {
          "ref": "446e152b-e718-4f48-b5e8-87608f6febc6",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "015b9c71-b694-4fdd-856a-84c9eafdd698"
        },
        "item": {
          "id": "42818342-73d0-4680-8e00-15202c3c6450",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c891a528-e67a-4833-827b-37585b4d3a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e01b358-e0d6-4504-88e1-1d04b998350a",
        "cursor": {
          "ref": "4819e07c-d93d-4683-8e61-18b5586de26d",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "364e1432-723b-428c-9ff9-c091b78e4274"
        },
        "item": {
          "id": "6e01b358-e0d6-4504-88e1-1d04b998350a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "81729a04-a44e-4a09-9d63-6ad4f34d06c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aceda3a-8ae5-4cd8-924c-b87c95f1467d",
        "cursor": {
          "ref": "2eb9abec-0cc7-40b7-8d1e-f833480bec79",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "ea0dd498-def0-4597-ba32-5baf5dd4f80f"
        },
        "item": {
          "id": "5aceda3a-8ae5-4cd8-924c-b87c95f1467d",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "6c290d11-0e22-4dea-af73-fd9f2bdb5c35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc695fd-782c-4a8a-af1c-13b372097678",
        "cursor": {
          "ref": "3a61bdb3-ad4b-4a94-91a5-d7ccfaa5375e",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "9f0d2f97-9ee0-42c9-aec6-328146727a49"
        },
        "item": {
          "id": "8dc695fd-782c-4a8a-af1c-13b372097678",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4a0883fd-e233-4e33-b60c-04b3d689a2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "680b094b-6c4e-4d9b-9087-521ad7410d15",
        "cursor": {
          "ref": "a78b5437-a3ea-485c-aa1b-26a59e29e53d",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "fe40eda2-761f-405a-9bce-8e111c59f1b1"
        },
        "item": {
          "id": "680b094b-6c4e-4d9b-9087-521ad7410d15",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "996d810e-7175-4c4d-acf6-ea3e8459de87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "029535c4-64d0-4140-bdd6-1e53e9e65b2d",
        "cursor": {
          "ref": "532bfead-bb60-4091-87be-70e7a60f33d8",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6a3c3696-0d6a-47e6-819d-66b2d0d9d295"
        },
        "item": {
          "id": "029535c4-64d0-4140-bdd6-1e53e9e65b2d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4d90327f-6697-4fb3-b92c-a4d45d9d5b60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd284811-22ff-4c79-a18c-7db4e84f8390",
        "cursor": {
          "ref": "a888c7c5-bf3a-4011-86e0-31066281f322",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "319e352a-e6c7-427d-a1f0-5d2b80dfb3cf"
        },
        "item": {
          "id": "bd284811-22ff-4c79-a18c-7db4e84f8390",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "84fa75d5-0d39-495d-ac97-70deed932c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a23428a-6e0d-4fe1-bd52-8f16f7eefc3a",
        "cursor": {
          "ref": "30a8ffa3-ca84-4c77-abe3-be0a650afb0a",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f192a51b-1498-461b-8232-7df337f4af82"
        },
        "item": {
          "id": "1a23428a-6e0d-4fe1-bd52-8f16f7eefc3a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8fb33337-dcdd-4539-b695-164dcbca8348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "328ac7b5-7c49-43e5-9763-8269fbf2d1f8",
        "cursor": {
          "ref": "5747d35d-c319-4612-a607-d18cc4a6b742",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "590fa412-4f8e-44d2-87e2-48b9606fb83a"
        },
        "item": {
          "id": "328ac7b5-7c49-43e5-9763-8269fbf2d1f8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "765f01e2-a85b-41f6-941f-4bf4d04d09c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba2647f-edd3-41fa-bbad-075a6afaaa64",
        "cursor": {
          "ref": "839dcb06-6c58-4128-958a-b01d48275885",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "33638197-9b59-42ff-b5a6-430340cbaab9"
        },
        "item": {
          "id": "8ba2647f-edd3-41fa-bbad-075a6afaaa64",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "61e11555-9841-4595-a135-fe3b5db6f4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717637ad-132b-4dcc-b923-fc44ce3e3d3f",
        "cursor": {
          "ref": "ed106178-8d80-42da-be5f-2fc879ac7405",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5f266513-ff0b-4f5f-847d-d666dec42b02"
        },
        "item": {
          "id": "717637ad-132b-4dcc-b923-fc44ce3e3d3f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "43c49d96-7dce-454d-be2b-ca2df611124f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1841a34-fedc-4ade-a486-b4271ac01b68",
        "cursor": {
          "ref": "58dc2320-4683-4a54-aed6-e4b28c6d550e",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a6eab611-beac-433f-8366-a5ac7cc3f600"
        },
        "item": {
          "id": "b1841a34-fedc-4ade-a486-b4271ac01b68",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "48b90373-545f-4d93-9c3a-9f1e6d3c92ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b76144e5-54d9-4a1b-aefa-a33d1262d5a9",
        "cursor": {
          "ref": "2440a7c8-eb00-468a-943b-a3b8a041ecb5",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "3ae64459-077e-4c35-a30f-fb694b8069f4"
        },
        "item": {
          "id": "b76144e5-54d9-4a1b-aefa-a33d1262d5a9",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e2cef27c-8df9-4bff-9cc6-9c79d08c25f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a52f1d4-1634-453e-8ddc-322c721103c6",
        "cursor": {
          "ref": "1eb141eb-fe62-44d4-838d-fe4e1daca81a",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "b285be11-8875-40a2-a456-95497a2b66d9"
        },
        "item": {
          "id": "0a52f1d4-1634-453e-8ddc-322c721103c6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "aa8dd868-e0c6-4d94-8ac5-309b908465a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f7ec519-3f5c-413c-a734-115ab7b120f0",
        "cursor": {
          "ref": "fceb47a6-edb6-4604-9ead-8da03f8194ca",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "ab72d078-4917-47a9-a529-a2f46fa1e5be"
        },
        "item": {
          "id": "6f7ec519-3f5c-413c-a734-115ab7b120f0",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "986dac60-a12d-4458-8966-d8868230a6b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "549a3b69-ba09-4652-be1f-bc32e632d661",
        "cursor": {
          "ref": "fa23d79d-2a84-4b49-a9f5-319c6dc00fe7",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "23782b45-fc50-4f3c-87f4-fe156d9fa9ff"
        },
        "item": {
          "id": "549a3b69-ba09-4652-be1f-bc32e632d661",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "f261da82-ed0b-4b4e-9af7-452acc224b92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a318e6da-62a2-4158-a325-1f3b719fd5df",
        "cursor": {
          "ref": "b77f321e-c5ca-4aa3-a558-8d0fca1e7bda",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "e57a8618-fc6a-4479-84c4-b918e3fbf805"
        },
        "item": {
          "id": "a318e6da-62a2-4158-a325-1f3b719fd5df",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "ff316780-c4a7-4264-9dfd-b589501e406c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b735e037-e141-484e-bf24-a2dc9aa83df0",
        "cursor": {
          "ref": "2943a1e3-f047-4808-b848-fed1b8c6309c",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "74479eb4-1c3b-4783-84c2-294933831929"
        },
        "item": {
          "id": "b735e037-e141-484e-bf24-a2dc9aa83df0",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "458d741c-bd35-4fc9-a517-6acbf084823e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f40cf14-40dc-401d-8309-8cf0f2de05c0",
        "cursor": {
          "ref": "7d29aa60-5b0d-4778-8f28-38c5994ea739",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2acd50e8-5800-4f26-9508-0566df0e09b9"
        },
        "item": {
          "id": "1f40cf14-40dc-401d-8309-8cf0f2de05c0",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "dd982a0d-ff95-4691-81aa-61eda4346a2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5122820b-f9ee-4e30-9555-0fd57c848e79",
        "cursor": {
          "ref": "69eddfa3-ec86-4d8a-b95d-3c06a109176e",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "569608f4-ffd1-468b-938a-18abda88d1ff"
        },
        "item": {
          "id": "5122820b-f9ee-4e30-9555-0fd57c848e79",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "1cc31c61-e6cd-4b4b-be14-6f714e72a2c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "045ece3a-0fe9-4b4f-ad1a-41756afdffd1",
        "cursor": {
          "ref": "75453858-7bc3-464f-9cad-1a691e5b7d8b",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "f17c5e50-70d6-4385-84ac-a6de617bbe9d"
        },
        "item": {
          "id": "045ece3a-0fe9-4b4f-ad1a-41756afdffd1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c87021eb-9a0d-46a7-923e-71fdb13807d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e29dc19-75b3-4521-b8cc-8c5a3a6aa2a5",
        "cursor": {
          "ref": "8771f269-495a-40c5-af2f-5985c09375ee",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7f02b9b3-1c45-467b-be4a-83f94b356a53"
        },
        "item": {
          "id": "9e29dc19-75b3-4521-b8cc-8c5a3a6aa2a5",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "3837bf40-800c-410f-a869-a841513ae20e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e125672-dc3c-4a7f-a37f-275a2c0e5156",
        "cursor": {
          "ref": "67a39c32-e1b5-4f3d-9b6a-872d41a34bb3",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3886ec39-c7e9-47fa-aab3-b514b3b0b0ae"
        },
        "item": {
          "id": "7e125672-dc3c-4a7f-a37f-275a2c0e5156",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "c7eb50fe-44ef-477c-81a3-7bd61131955e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18393f64-646e-42e7-90bb-2b43b16fe841",
        "cursor": {
          "ref": "68e8ff7a-fe9f-4314-a486-ee780a40bb43",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "5a7aa4d9-bba6-4529-92ce-be161b1fc9aa"
        },
        "item": {
          "id": "18393f64-646e-42e7-90bb-2b43b16fe841",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "19e68ed7-e66c-41e1-9e79-3d4e165ab3b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b7545b-33d2-46d3-b3bd-e1c42f8433a0",
        "cursor": {
          "ref": "8079dbcc-e177-48f8-a82d-4f8b1999556f",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "811d892f-8f77-46c5-b5f4-c877c39e2485"
        },
        "item": {
          "id": "d6b7545b-33d2-46d3-b3bd-e1c42f8433a0",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6e8a5862-51af-4f8c-9194-0169bceebabc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e0dac96-50b5-40d6-9b2e-c98f5361924f",
        "cursor": {
          "ref": "f65d8dfe-6644-4b24-8230-9b54a345a0e3",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "2de6b14a-5208-448b-9120-87bda811a2cf"
        },
        "item": {
          "id": "4e0dac96-50b5-40d6-9b2e-c98f5361924f",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "a327ec9a-ad70-41c3-a9bd-e441394d2b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49676edd-99bf-4f7c-aa21-1610071e4a63",
        "cursor": {
          "ref": "c0fe9495-7b23-4e42-83af-b0c1b6e13d8a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "c385f036-d41d-402e-8219-e795bd6d3c65"
        },
        "item": {
          "id": "49676edd-99bf-4f7c-aa21-1610071e4a63",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "cfb5def2-834c-47b9-b50d-807dd88df3e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb257c5c-807e-437f-86cc-8e06a56ff67e",
        "cursor": {
          "ref": "4b887e1c-30e7-4c12-9c2b-119a0f227064",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d886286d-f93a-47eb-83b4-2d3ac641d4d7"
        },
        "item": {
          "id": "cb257c5c-807e-437f-86cc-8e06a56ff67e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "5b19385d-4388-4e8c-9080-a68ca1313f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae5bbd7-60ed-4e7e-8092-5d7330ed1d5c",
        "cursor": {
          "ref": "01b13e8e-e62b-4922-b498-c72714ba6869",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "d861ee43-88ce-4959-8a83-45f4ea81df46"
        },
        "item": {
          "id": "4ae5bbd7-60ed-4e7e-8092-5d7330ed1d5c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c2d20e25-c401-46e8-aab9-56b0d5166b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f1ae4d-3ceb-4c5b-9db1-2b92b150911b",
        "cursor": {
          "ref": "57ab0a22-b63a-4de7-ba37-2fca8d106a4d",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7e5ea429-5b88-4436-87d5-dda2bd9aa855"
        },
        "item": {
          "id": "88f1ae4d-3ceb-4c5b-9db1-2b92b150911b",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "733e03db-a116-433e-b129-3bee6b5b9909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3187e7f-5530-4ade-86fa-93de7103057b",
        "cursor": {
          "ref": "1136652f-fe80-4c1d-b651-246a0437626a",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "74035025-10dd-49e2-9004-ab0bcd1b9fa9"
        },
        "item": {
          "id": "a3187e7f-5530-4ade-86fa-93de7103057b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "ae1f79a0-aa70-412d-91fd-4327317354bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0323eee1-4df7-4d36-b7c2-6296807dd043",
        "cursor": {
          "ref": "d9700e47-5b31-432d-89c8-36ca3309174d",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0d5d7c03-55c5-4aca-99c4-827ca58cdddc"
        },
        "item": {
          "id": "0323eee1-4df7-4d36-b7c2-6296807dd043",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "c3764016-3589-463c-a521-a7aca541735c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a25cce6f-12ed-409a-a906-5b0ec9cc7307",
        "cursor": {
          "ref": "d48ff862-6c21-4e8e-afd8-d03c550b5762",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "1aa9b76b-b975-44e8-ba57-ec407d8eb0aa"
        },
        "item": {
          "id": "a25cce6f-12ed-409a-a906-5b0ec9cc7307",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "be010886-b34d-457e-9b70-823295c09690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2481679e-dfd2-4aa4-81d1-86c9dbbf0aff",
        "cursor": {
          "ref": "d9312c12-2a15-452e-aa73-aa7a84aea12d",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "330712d9-8bdb-4a85-89b4-b30c867477b6"
        },
        "item": {
          "id": "2481679e-dfd2-4aa4-81d1-86c9dbbf0aff",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51241bec-b48f-4b2b-bf8c-95fcb8afa74e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63f2cccb-4bed-49c1-91d7-5dd460ac8df5",
        "cursor": {
          "ref": "4005bb2b-c2fb-41ad-877c-164a27d0ccd6",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "9edd6c5b-df00-4ab7-b997-30c1a899a1b7"
        },
        "item": {
          "id": "63f2cccb-4bed-49c1-91d7-5dd460ac8df5",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "69b6f3eb-f5c3-4461-9bb6-77f85d3b7f4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72bee95d-e933-4665-b54e-ef16f0f4cc1f",
        "cursor": {
          "ref": "bd53de2f-5fd8-42b5-a6d8-d48dcbb65ea2",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17cf0115-2a3b-4ffc-a09d-9f389a037504"
        },
        "item": {
          "id": "72bee95d-e933-4665-b54e-ef16f0f4cc1f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "3a97a7b3-b353-4978-b852-810ca5c0842f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5a5f8d-a30b-4d91-b293-67182d76a0ea",
        "cursor": {
          "ref": "e07c477d-a780-4d0d-afc0-06e2da498956",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "134a78af-b083-42e4-8757-01b09010ffef"
        },
        "item": {
          "id": "2a5a5f8d-a30b-4d91-b293-67182d76a0ea",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "73eb97fd-b175-4102-a215-749d7b06d152",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "303e1891-3a39-4646-92b5-1db1f11e7d41",
        "cursor": {
          "ref": "3defbfa4-e622-42ac-80be-06ff19ba04d5",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "f1eb47a9-892d-44d8-827a-63da53cd3472"
        },
        "item": {
          "id": "303e1891-3a39-4646-92b5-1db1f11e7d41",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "a24e0f88-f1eb-4e36-8665-55b96c2cdb60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e05733-8d4d-4e3c-97d8-50022b7cc99f",
        "cursor": {
          "ref": "b5bf2048-d86c-4405-a4fc-7fe81886022b",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9f6ed6cd-9527-48bc-9253-045f9141c7a4"
        },
        "item": {
          "id": "b8e05733-8d4d-4e3c-97d8-50022b7cc99f",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "7e343f92-196d-43f6-8c79-597cd96af6d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192c521b-b2df-42ea-9689-0e416da8b670",
        "cursor": {
          "ref": "9a307889-456d-46ff-9956-e636fe53d117",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "fc74a4d3-3c20-48f5-8a34-0d6e1cf5993c"
        },
        "item": {
          "id": "192c521b-b2df-42ea-9689-0e416da8b670",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "d4e0ee94-0972-43d5-b4b6-a6ff62b0631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba591966-a51b-45cc-af44-3688dd4cb530",
        "cursor": {
          "ref": "6e051a55-67bf-4b30-b94b-6cc7311163f1",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "5e6ffd9f-1ca4-4a8d-99bb-a55d5a1eb6d1"
        },
        "item": {
          "id": "ba591966-a51b-45cc-af44-3688dd4cb530",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "eac48689-59dc-469b-b898-9671d9733b49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a80ed9-96f7-4749-a087-dd8cf56acb6d",
        "cursor": {
          "ref": "fcd80087-bfef-42d4-9ded-a47c0c0ce974",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f67a05d7-de4a-4a27-b78c-8c8ba853341a"
        },
        "item": {
          "id": "53a80ed9-96f7-4749-a087-dd8cf56acb6d",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c9123aa4-9364-4f0b-a9d9-f8fb83ce4995",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ae5fa5e-399c-4f87-9c21-7ef62dcc460e",
        "cursor": {
          "ref": "343c5d69-a127-40f4-acaa-133c9004c2c8",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "29d427a3-4509-4cc6-a1a6-a7eec1367e26"
        },
        "item": {
          "id": "6ae5fa5e-399c-4f87-9c21-7ef62dcc460e",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1357893a-8481-48cc-aa92-c18dfddd0227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20f2db08-4582-43e3-b36e-76cd4787c5aa",
        "cursor": {
          "ref": "cd789991-24f1-4218-9806-523cb8285e3d",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "05eea3b4-f716-4720-a66a-7f586a26caf8"
        },
        "item": {
          "id": "20f2db08-4582-43e3-b36e-76cd4787c5aa",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3ff08837-c0b8-4e98-bf78-17ed2d59a13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bfb63c-9131-4e05-987f-845a21412563",
        "cursor": {
          "ref": "aa8b839d-62dd-4e8c-90e9-626e890cb413",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "edc7d8a1-a79d-467d-b4b6-d7896f94600d"
        },
        "item": {
          "id": "11bfb63c-9131-4e05-987f-845a21412563",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "7f84d7e1-9034-4e18-a613-ff9013fc3e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fb8a9c2-4fb1-4863-a738-6bcfd2009627",
        "cursor": {
          "ref": "ce1c4fa4-ce56-4378-81f3-cd9d2a275c9d",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cfe411f9-2cc8-482d-83ed-7f18d2ad79f4"
        },
        "item": {
          "id": "2fb8a9c2-4fb1-4863-a738-6bcfd2009627",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b7752828-2553-4747-92e7-b3f02acd61ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c5f94cc-48bd-4ea3-8414-33a3c7f886a1",
        "cursor": {
          "ref": "b9306eca-d361-47fc-b972-d14530cebe0e",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "6405744d-d395-469a-a85d-b76c5593a649"
        },
        "item": {
          "id": "7c5f94cc-48bd-4ea3-8414-33a3c7f886a1",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "a555147a-f741-4de9-a06a-e4108cb03c5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dacff0af-4b61-4366-8220-e71b16b8bbd8",
        "cursor": {
          "ref": "66f98238-1922-46e0-9cc8-9a265bc0087a",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "50cfd340-cf68-419e-883d-c54233c2802b"
        },
        "item": {
          "id": "dacff0af-4b61-4366-8220-e71b16b8bbd8",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0116c5ca-936f-464a-b815-dfcedbf0faba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b86d993-4931-4d15-ad57-e8898613a119",
        "cursor": {
          "ref": "06680961-98cc-493a-8697-6c09942b2a35",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "5ea13cb0-f977-47b6-a648-7d8f452ca48a"
        },
        "item": {
          "id": "3b86d993-4931-4d15-ad57-e8898613a119",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dec2d40f-6c7a-43c6-83a4-ff4947bda742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72687685-798c-4967-8ef2-36881a159da9",
        "cursor": {
          "ref": "e3fc1a21-f917-4829-a7df-cdd1942e094b",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4a46cb7d-905a-4ad7-9ab3-e57825492737"
        },
        "item": {
          "id": "72687685-798c-4967-8ef2-36881a159da9",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7cdb73c6-9ab4-43a9-9733-177456a63365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0577ee0a-3584-485a-89a8-f46aa7f0698e",
        "cursor": {
          "ref": "acc86a2a-3842-4443-a62d-a12844accd02",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f48be5f6-3ceb-460a-97a9-1af39696ba77"
        },
        "item": {
          "id": "0577ee0a-3584-485a-89a8-f46aa7f0698e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "52e7c923-182d-4d64-8e19-39e4eb5d01e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40385137-8818-4ae5-aa05-64066b183272",
        "cursor": {
          "ref": "e4ef871f-756f-44c3-a006-095ee83a7de9",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "210af00a-b223-42b2-957e-bfe12fade4c2"
        },
        "item": {
          "id": "40385137-8818-4ae5-aa05-64066b183272",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "bd22cf5e-9bc9-400c-bc60-b586bbc732bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5878f9ba-3150-4958-b965-d4fb5fd3750a",
        "cursor": {
          "ref": "400fa74f-18e5-4635-9410-c5795d9fd52e",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "4a7bde3d-9daa-4237-b37d-8fba5a307f4c"
        },
        "item": {
          "id": "5878f9ba-3150-4958-b965-d4fb5fd3750a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "1a31913b-6ea2-43bf-b0dd-1c98df2e7274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e56e6e3-3cd6-42fc-934e-b8551354fb7d",
        "cursor": {
          "ref": "67be7936-6ea0-4e23-a316-754f0e01155f",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "9d772c0c-5918-4279-9838-ae9792bc42f2"
        },
        "item": {
          "id": "6e56e6e3-3cd6-42fc-934e-b8551354fb7d",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "b03b79a2-887a-4ab7-a4f7-dce5305f0f36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf47192f-4aa8-4bf4-af94-a0897a7a3c6d",
        "cursor": {
          "ref": "3486232b-cfe6-4701-9149-136d048a6ba2",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "5c65899a-6500-42a6-840f-4cbe3ff9e2e9"
        },
        "item": {
          "id": "cf47192f-4aa8-4bf4-af94-a0897a7a3c6d",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3ebf11ce-6343-4ad4-a05f-99cea76f587d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab1d6810-7709-4d07-9493-daecf069279f",
        "cursor": {
          "ref": "771931ff-2c2e-400d-95dd-e4ba69e6a347",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a1c4b5bb-6b26-401c-92ec-0c348a1eb521"
        },
        "item": {
          "id": "ab1d6810-7709-4d07-9493-daecf069279f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "bdfa1f9e-a3f8-48f7-9cf0-d6f7e244a785",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629c3538-d028-42bc-8de5-61cf3f9e55a2",
        "cursor": {
          "ref": "d6a2640b-dfb4-4b50-905d-616a1e435998",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2270547f-31d9-4e03-9306-411a07f2ba77"
        },
        "item": {
          "id": "629c3538-d028-42bc-8de5-61cf3f9e55a2",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "a13fe1eb-4ea2-4ba5-be31-32cc28277e76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ab97092-0f19-496d-b1ba-d2d15bced695",
        "cursor": {
          "ref": "a1f36ab0-2d98-4728-a593-3b7a0e0ba190",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "d210f023-bcca-4893-b058-b9c859ecf662"
        },
        "item": {
          "id": "9ab97092-0f19-496d-b1ba-d2d15bced695",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "0965fca4-f2e4-4403-ae24-9b73a2c4c87d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2d09f88-50af-49cb-80b9-6a38932c5005",
        "cursor": {
          "ref": "094ea754-8459-43eb-827d-4f179b4f950f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55ea1bf7-5dd7-44de-846b-53fc36c949d5"
        },
        "item": {
          "id": "f2d09f88-50af-49cb-80b9-6a38932c5005",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3db12751-f315-4df5-b250-683b9491fd08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa08b9d5-5761-4290-9155-abe0f9adb786",
        "cursor": {
          "ref": "24d733c6-37d7-45e4-a16e-d587c6ac5048",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "62b772f4-be53-4c24-b4fb-5a82002f3954"
        },
        "item": {
          "id": "aa08b9d5-5761-4290-9155-abe0f9adb786",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "419e8ad4-fa75-4bba-806a-8718475a0731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49c78c39-93a2-4b0e-8216-9baaf4368a5d",
        "cursor": {
          "ref": "1da92862-2765-4080-92e4-5e1bbf2a11e2",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7b17b04a-082a-4fe3-b13a-bb128b01a2ec"
        },
        "item": {
          "id": "49c78c39-93a2-4b0e-8216-9baaf4368a5d",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e59a9290-72ac-4f15-a1ae-b7a707455514",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b03c0d0c-b6b2-4b31-a7ab-eff44261b86d",
        "cursor": {
          "ref": "fbedd9f7-05b4-4dc5-a8e8-98a7590dd2c3",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e3eb76fb-d8c1-444c-af9b-28027cdf0491"
        },
        "item": {
          "id": "b03c0d0c-b6b2-4b31-a7ab-eff44261b86d",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8e6d8338-1190-4b15-8677-b6a1b3010fa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3797fd1-9e87-4d6c-9d3d-4f25adc6d972",
        "cursor": {
          "ref": "6b49d011-02e4-4b92-9885-ed57447de47b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "4dd9c278-0ec5-408a-8705-037b3e81343f"
        },
        "item": {
          "id": "f3797fd1-9e87-4d6c-9d3d-4f25adc6d972",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e3db041e-f2c9-4ee5-b843-f86fbbae03cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c17c6a1d-6443-43ac-9fa1-e7b24de23226",
        "cursor": {
          "ref": "0da2ba59-7f34-407e-bb12-6bfc63021c6c",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "214a94f1-6306-4709-a646-86bbe6c7adad"
        },
        "item": {
          "id": "c17c6a1d-6443-43ac-9fa1-e7b24de23226",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "a058096d-b075-4e7a-97d8-db93a71f17c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "422a5b06-2552-44fd-b15f-939442746cee",
        "cursor": {
          "ref": "6dee78bf-8fe3-4b76-a444-afa1019ddc30",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "a4f38f0a-05b4-44ba-9aaf-45026d1e8782"
        },
        "item": {
          "id": "422a5b06-2552-44fd-b15f-939442746cee",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "5c10b7ee-c7d4-4335-ac1e-6c08e1ed720c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ccf545-d183-4cb9-afbd-33e440346d2e",
        "cursor": {
          "ref": "1202974f-d84a-4a2f-ae93-568c2690d1e6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "f2a398b3-1068-48b3-89f6-1e68c7875567"
        },
        "item": {
          "id": "c4ccf545-d183-4cb9-afbd-33e440346d2e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0d9c0d07-264d-412b-a387-79f64fbaa12c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79f8c584-ccdb-4d9c-8005-a7f65a73ac7c",
        "cursor": {
          "ref": "72b2411e-5bf2-4cd7-a491-431895c76e44",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6ce02f52-a2b6-4925-88a4-ab28c3a75996"
        },
        "item": {
          "id": "79f8c584-ccdb-4d9c-8005-a7f65a73ac7c",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "279e8ee1-cee2-4fbb-af53-7648b5b6c33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147901a4-38f6-447c-b00e-a9a0c4439153",
        "cursor": {
          "ref": "f532569b-2684-44b5-9a60-c21f7ab70de7",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "803ad5f9-a44e-429e-9b34-85b21af2ee53"
        },
        "item": {
          "id": "147901a4-38f6-447c-b00e-a9a0c4439153",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "bcb49224-ecd3-4c04-92f5-6a0fa2c39a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e9b237-bac7-4212-b37a-a4d93a7a02be",
        "cursor": {
          "ref": "9ccfe4d7-e14e-4741-9af1-a0871a5d6719",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "cd97f094-3fba-48d1-b72c-b5f94e5afb53"
        },
        "item": {
          "id": "60e9b237-bac7-4212-b37a-a4d93a7a02be",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "f0ba0e04-b128-4104-80b8-048a9cf1a764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b78ffd6-de2a-4f3c-99cc-ef87e1c08018",
        "cursor": {
          "ref": "34e2ee6e-b663-45e2-a928-19dcbe483ab0",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "ad413689-3d3d-4a08-847e-c5db465f8602"
        },
        "item": {
          "id": "5b78ffd6-de2a-4f3c-99cc-ef87e1c08018",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7e558996-d21d-4cc6-88c8-74a2b223b417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2d00f11-85ea-4ee1-83a2-6503fd8655d5",
        "cursor": {
          "ref": "4aa45605-9960-4800-8f61-e7cff6d12806",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "acc6e48f-0df9-4abd-8e03-02dc6cad7451"
        },
        "item": {
          "id": "d2d00f11-85ea-4ee1-83a2-6503fd8655d5",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fc4dda0a-bb0e-4b44-aa56-18b9bc1bf6a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34bbe464-c70f-434c-b4b9-adf742041838",
        "cursor": {
          "ref": "170150dd-6c1d-4ff7-ba35-df00beef4c17",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02f32dbc-d598-47ca-88a5-a9994a32ad34"
        },
        "item": {
          "id": "34bbe464-c70f-434c-b4b9-adf742041838",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "476482e6-daf2-4778-bd2e-c879da7b96ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d104370a-ab78-49b3-9f2a-35ac5aa36169",
        "cursor": {
          "ref": "a7895b5d-e3c1-4fa9-b044-2e8b1d3e8069",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "9b116f68-1e47-49a9-b797-5767b01c3baa"
        },
        "item": {
          "id": "d104370a-ab78-49b3-9f2a-35ac5aa36169",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e31050b0-4f44-4a96-bb5b-db161451fff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c652734-645d-4c68-96db-254c6f11f143",
        "cursor": {
          "ref": "4cb9c0ef-ae11-4619-92b5-bf002c2340dc",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "8cf5f223-ca60-4242-bae6-76ee1be87c5c"
        },
        "item": {
          "id": "0c652734-645d-4c68-96db-254c6f11f143",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "310ea317-38c9-49e4-a51b-b1d0e24927b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cf5b031-64fd-419f-a2f7-b8efb3f3c889",
        "cursor": {
          "ref": "a2568690-cde8-4e67-a9d0-7fb9f2d95a43",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fda4c523-abbb-4d17-baac-d8f3b8570901"
        },
        "item": {
          "id": "1cf5b031-64fd-419f-a2f7-b8efb3f3c889",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e5796183-9807-4b10-b7c0-ff670bb9d315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8c393b-a619-434c-b811-acf709d5e56e",
        "cursor": {
          "ref": "812e9159-8cb8-4fdd-89ef-8af1b60b7663",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "9394e22f-cba5-409c-b0e6-f91a7bb53c1c"
        },
        "item": {
          "id": "ab8c393b-a619-434c-b811-acf709d5e56e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "c7671ee3-90d4-41b4-b941-5794284e06a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be2177c2-0721-441a-9323-87a4ac44116a",
        "cursor": {
          "ref": "7a2fb035-2466-4c49-bebd-82fb887e2734",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "44b2967e-2ace-4840-80d0-d704c95c2024"
        },
        "item": {
          "id": "be2177c2-0721-441a-9323-87a4ac44116a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8a412923-e266-4c45-87d2-b3e88e88cc07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df49958-1be7-4c3e-937f-55e109c2bdf1",
        "cursor": {
          "ref": "72732025-b015-4f36-98f8-b9a1841b4374",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "bf1805b7-d32d-46eb-8500-ad77dc9aacca"
        },
        "item": {
          "id": "5df49958-1be7-4c3e-937f-55e109c2bdf1",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "a4d0031f-cfda-41be-a4b1-428111d03c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "245a9679-d240-474b-9ab9-3140304f6685",
        "cursor": {
          "ref": "3089900e-7c87-4168-861d-f41d490ca581",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "0043c125-10c1-49cf-9f96-19f687920611"
        },
        "item": {
          "id": "245a9679-d240-474b-9ab9-3140304f6685",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "1b9b9b39-b8fe-4fc8-b97a-c2f09f05d865",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a69ffc4b-ee4e-4468-9083-0ab866232401",
        "cursor": {
          "ref": "f9b61c80-5edb-41e4-866f-42ae6e101014",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "91b10b20-6ad3-4b31-a39b-c9150e055e97"
        },
        "item": {
          "id": "a69ffc4b-ee4e-4468-9083-0ab866232401",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "fee85684-eef1-459e-b064-7605f9611250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50aac8ea-46db-4238-9a30-002086bb20fc",
        "cursor": {
          "ref": "1e54eb06-9d7c-44e5-bdc3-9342a3e03d0a",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d05eccdf-6d87-4523-9b66-23ee5b4b9c5c"
        },
        "item": {
          "id": "50aac8ea-46db-4238-9a30-002086bb20fc",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "168a22fa-dbae-45b8-b356-49dc24f0e605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "415de73f-4f21-4c41-a452-08e58d2df058",
        "cursor": {
          "ref": "1a40b1b6-5e7b-4558-ae35-6e4a0eac7bc5",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dfcdb8fc-32f2-4cb5-807a-4f4b21539c84"
        },
        "item": {
          "id": "415de73f-4f21-4c41-a452-08e58d2df058",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e49c8f53-98ff-4254-b7cf-cced9cfafb9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e9eeb8-301f-4fd2-96c6-a6437ecb0605",
        "cursor": {
          "ref": "c6637d13-3024-4df7-bc9a-54979337c001",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "3aa5e30a-7e8d-4c59-b694-f406a2eb9445"
        },
        "item": {
          "id": "b9e9eeb8-301f-4fd2-96c6-a6437ecb0605",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2dda1a15-ebde-4415-a9c5-034cc8b9368b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54098d6d-46cd-45f9-9e6e-4253084acefa",
        "cursor": {
          "ref": "33089015-0796-4855-a57b-2780c1f05736",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "cb241331-8a5b-4987-afa0-70e2f9fa12d3"
        },
        "item": {
          "id": "54098d6d-46cd-45f9-9e6e-4253084acefa",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "bcdb1b54-2af5-44c5-8de9-737b1ee8c58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38637f1e-e4a4-490b-ae16-6ef45ff9aeeb",
        "cursor": {
          "ref": "d4dbc225-a985-4741-8bef-aa33fd924f0e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "84d106d9-923c-4127-924c-e39c2639ecf1"
        },
        "item": {
          "id": "38637f1e-e4a4-490b-ae16-6ef45ff9aeeb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "15d1f0c6-1802-4d4c-a5ed-4b5d4fd7cea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f3a3182-51bf-4a11-ab86-d55e3935a6af",
        "cursor": {
          "ref": "e1454161-bc5e-437e-9a5a-47f42d907ce2",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "ba571afe-4835-428c-aac4-80130be39c66"
        },
        "item": {
          "id": "2f3a3182-51bf-4a11-ab86-d55e3935a6af",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ead25eca-363f-4825-bf27-c72df0cfb3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b5eeda2-d85c-41ed-9f85-351f61ef7b69",
        "cursor": {
          "ref": "5338b19f-7568-4450-bac9-020763e661b5",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "4cba9a7b-9013-4a6e-8433-96d9e3a59279"
        },
        "item": {
          "id": "9b5eeda2-d85c-41ed-9f85-351f61ef7b69",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "40c68c1a-ccea-4fc3-a3b5-88981dd702b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92bf2605-adb0-4a6e-ac46-e9f5c9abff95",
        "cursor": {
          "ref": "f0f9df24-4c2e-46c9-b2b7-70e0d22473f5",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "d0a81d92-b9c6-4e89-8cb5-b69c9dd465f0"
        },
        "item": {
          "id": "92bf2605-adb0-4a6e-ac46-e9f5c9abff95",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a8efa356-0e2c-4065-96b8-015f12cb0b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c6b710-b77f-4f50-8dcc-c190d8d815ed",
        "cursor": {
          "ref": "e42ca2fa-07b2-433b-a37d-4b137502b397",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "013a69d4-dfd6-48fc-b10b-3625a2b34db1"
        },
        "item": {
          "id": "17c6b710-b77f-4f50-8dcc-c190d8d815ed",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0ba0e519-e3cc-4298-891f-eaec061c8818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cf1ba5b-447a-4fd5-9846-641a2b8f9722",
        "cursor": {
          "ref": "27c27789-53e6-4b26-981e-80e3cd7eb2f6",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "af2a65a0-586f-496e-af5a-1d58fa4809b6"
        },
        "item": {
          "id": "8cf1ba5b-447a-4fd5-9846-641a2b8f9722",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "dc443da3-a1a3-4822-a12b-34bfc6ea1837",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce75982b-51a4-49fc-89ef-8e28fba33248",
        "cursor": {
          "ref": "de2e0042-b279-4619-b0bd-886f0a0a050c",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "bdaa7fab-5dbb-4df4-abf0-35bfc8984519"
        },
        "item": {
          "id": "ce75982b-51a4-49fc-89ef-8e28fba33248",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8db17473-2ac5-4718-a173-fd07a47e1a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f53a6c1-b12a-48ac-9105-d157f68c97b5",
        "cursor": {
          "ref": "d6aa9841-6fda-41b3-8693-f2d57a028fc2",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "2d905efd-1e51-4f88-a8bf-574c111b5dfd"
        },
        "item": {
          "id": "5f53a6c1-b12a-48ac-9105-d157f68c97b5",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "4e45f241-df7d-41bc-9e74-af83e2f2907e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "890434b9-b9e2-4ff6-b9ed-1cd50612b405",
        "cursor": {
          "ref": "8281897a-7a99-4fe0-b463-97156c9c62dc",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "19fd3e31-e13b-4bad-a834-dab8fdef88db"
        },
        "item": {
          "id": "890434b9-b9e2-4ff6-b9ed-1cd50612b405",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "710bee49-2a3a-4c4e-8da0-cdd7c28b680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa397b2-a4df-481f-afea-986c63aef41c",
        "cursor": {
          "ref": "ebee34d5-293b-4759-a6cb-8eb19b28aa35",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "69fe688b-225a-451c-9a48-be86fd5a2cff"
        },
        "item": {
          "id": "5fa397b2-a4df-481f-afea-986c63aef41c",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "02045bff-14d7-4799-99b0-bc1bb1ed87b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfba39fb-1bfa-48e7-9205-36a0c17455d9",
        "cursor": {
          "ref": "18d2f225-9b97-484c-a9bb-0d27e98603da",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "9562f55f-e8d5-458e-8549-9b258543a112"
        },
        "item": {
          "id": "bfba39fb-1bfa-48e7-9205-36a0c17455d9",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "7c44d3e0-2fce-45a1-924d-0337b71c7847",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbe385c-618e-4134-bf8f-ef256e5ad848",
        "cursor": {
          "ref": "4dfff08d-e5cb-4940-8953-f09b2024ee78",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "3a8fd1a8-be20-4708-b440-ebf75b2668e3"
        },
        "item": {
          "id": "2bbe385c-618e-4134-bf8f-ef256e5ad848",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "45e304c8-15a0-42a4-9554-d9ebf2498af4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "febf591c-b9dd-416a-be66-1d7928590ec5",
        "cursor": {
          "ref": "458d671d-d7ce-40a7-b613-dc5a80e3126c",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "1e7b23ad-2452-4730-95c2-655de2d80c9e"
        },
        "item": {
          "id": "febf591c-b9dd-416a-be66-1d7928590ec5",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "3f067a7d-485e-4b19-9989-a67a43eae9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "340c72bb-7e8f-4b9b-ae7e-eac8dbb1ff01",
        "cursor": {
          "ref": "948244ee-1e75-4027-a3af-d328d434a2ca",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "25264473-936c-435a-a2d4-9fa8a571b590"
        },
        "item": {
          "id": "340c72bb-7e8f-4b9b-ae7e-eac8dbb1ff01",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2d5dd3bc-a0e3-409e-9558-cdc6af7021c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aefffec-eccf-4cff-b326-62bb96aa3885",
        "cursor": {
          "ref": "15ddf81a-ca90-4b6d-9e3c-08d4fecbde9b",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "fb05ecc0-7abc-4525-9311-56b07ac5c584"
        },
        "item": {
          "id": "7aefffec-eccf-4cff-b326-62bb96aa3885",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4de274da-9ac6-4128-85ee-e06d7352d456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57ba74b1-bdd6-4467-9427-c651afac39f5",
        "cursor": {
          "ref": "342b5322-4d54-4d1c-9626-2fdc68308441",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "1cc69fec-b765-4dfd-81a1-217b9b99dbaf"
        },
        "item": {
          "id": "57ba74b1-bdd6-4467-9427-c651afac39f5",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d6ead3a0-84d6-4ffc-90af-6d27f24872b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2ed5d0-4f84-4bdb-913f-2750fed3452c",
        "cursor": {
          "ref": "3c31f216-5566-4f24-bb01-e91d196ed4fe",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "5b0a1810-cdad-4cb0-8955-a28895deb782"
        },
        "item": {
          "id": "8e2ed5d0-4f84-4bdb-913f-2750fed3452c",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "84d093d1-37f2-4159-9034-643890596f5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39dd6892-1e9d-4f95-944e-824f4c9f27ec",
        "cursor": {
          "ref": "046ab248-d5a1-49c8-a0ca-77398662e7f5",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "bdaaea27-5b82-4778-a892-065600eade5b"
        },
        "item": {
          "id": "39dd6892-1e9d-4f95-944e-824f4c9f27ec",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "0495559e-5354-4242-a9f1-1335f208c73f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb05098a-7dc5-40f7-992f-6f0294879092",
        "cursor": {
          "ref": "1ea3202d-7670-49bc-a232-9b0c0b2e22a8",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "7ec64371-e797-4089-9c47-1236a1287a12"
        },
        "item": {
          "id": "bb05098a-7dc5-40f7-992f-6f0294879092",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9fd50ad7-642c-473e-9336-9a5ca7bfe1ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb8e119-a451-4e5d-bedb-d284bf970f49",
        "cursor": {
          "ref": "91d22e91-4e2c-4041-afdd-3bb01a9f2009",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "1132257e-b564-46cc-af4e-b6076b0428c3"
        },
        "item": {
          "id": "6fb8e119-a451-4e5d-bedb-d284bf970f49",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8beee807-ee84-49c3-a7c3-5c753ee13953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eaba41e-14fc-47a3-af74-303a7568f652",
        "cursor": {
          "ref": "7c72ab5b-8cba-41df-bb70-cccd694f9c00",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "a429c938-7847-4ac2-b660-ff251489c933"
        },
        "item": {
          "id": "6eaba41e-14fc-47a3-af74-303a7568f652",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "4bfc9b9a-8b74-4e9b-ba2f-9d237a070cb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712e454c-9045-4450-871f-99a77c131864",
        "cursor": {
          "ref": "790b9034-1ad0-4cb2-af4c-b29b2fd9bbae",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "70511a01-ffd7-48f5-82ab-279111d96909"
        },
        "item": {
          "id": "712e454c-9045-4450-871f-99a77c131864",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "19bd435c-6b9b-4cbb-bab9-c19499f173f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a9a9643-3379-48fe-8d5b-3e7a13a00108",
        "cursor": {
          "ref": "e218cccc-e4fa-4798-9958-b7285c3cbd8a",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "90341cd5-30cd-42f0-bdd9-7d4cd10ddec1"
        },
        "item": {
          "id": "9a9a9643-3379-48fe-8d5b-3e7a13a00108",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "93c92370-5a78-42f2-8a29-48102d3c4143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19284de9-bc03-4969-9919-f501487a6731",
        "cursor": {
          "ref": "0b08637a-b9dd-412f-b73c-f0e993a821d1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "25e48d03-9e23-4a1e-9a17-24d4ad19cd51"
        },
        "item": {
          "id": "19284de9-bc03-4969-9919-f501487a6731",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "1be7cc63-7dcd-4d59-8729-deeb913f6bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1876e4ac-6d98-42da-b19b-b40b6f4d61cf",
        "cursor": {
          "ref": "82fddfa1-8536-41bc-83b7-b990c2d5ae11",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "c68249b9-4161-4f23-8309-4bc2123bcb1b"
        },
        "item": {
          "id": "1876e4ac-6d98-42da-b19b-b40b6f4d61cf",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "6e1da612-0675-4a00-8335-0a49a6c08a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f18c12-ac48-437b-bb77-db2bc29f8627",
        "cursor": {
          "ref": "5436b914-1b2e-4a43-9839-abf7192bcb4f",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ca5a54e3-aa36-4b20-bfd9-739510b42588"
        },
        "item": {
          "id": "31f18c12-ac48-437b-bb77-db2bc29f8627",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "9da583a4-0de1-48a9-8af4-153eed9e4212",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca12212-95f5-43ab-ace1-69718ba422b0",
        "cursor": {
          "ref": "21f0e64a-1e66-4095-ad25-a7f01086ab98",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "bd09684e-949b-4a5f-b8bd-4d72cd0c9c6e"
        },
        "item": {
          "id": "3ca12212-95f5-43ab-ace1-69718ba422b0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "425b0e31-da8a-4d48-b5b8-7840eabc3170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e228c2a-cd0d-462f-acdc-6fd7e39a07c6",
        "cursor": {
          "ref": "7320cc21-a502-41d0-9817-9c45ca93f062",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "a10a3fda-4665-4451-8ac9-a2b5bd31d4c1"
        },
        "item": {
          "id": "9e228c2a-cd0d-462f-acdc-6fd7e39a07c6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "74678912-de85-40d9-b60a-088a84164ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca469a-c11a-42e4-b6e8-10f528bdab6a",
        "cursor": {
          "ref": "c6b6ea9f-fa97-45df-90b0-aa488acf6602",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "98171801-55ec-4495-a1be-90c28d57de08"
        },
        "item": {
          "id": "9dca469a-c11a-42e4-b6e8-10f528bdab6a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "20d3059b-54ab-48a3-9aea-b25c601f2c16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fdeb32-a4ef-44e9-abc9-ccbf86187716",
        "cursor": {
          "ref": "2f2e078b-28c6-4890-8603-96f24eded6b8",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dd5dcf30-5289-4856-a7af-fd891f07a9f0"
        },
        "item": {
          "id": "a5fdeb32-a4ef-44e9-abc9-ccbf86187716",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "1f742b15-3697-48f5-af68-b88f8015bc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41e93b92-257d-46aa-84a2-7a1d53679092",
        "cursor": {
          "ref": "8385446d-1cc5-4686-a7c5-8246454bfe3a",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "8b40fc6b-a6a6-4a33-8904-469c2436701f"
        },
        "item": {
          "id": "41e93b92-257d-46aa-84a2-7a1d53679092",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "81735b4a-f8bd-4f32-b78f-ae984d03e289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98f3af7-d5f4-4b8e-8c8e-5fce42d7fe8d",
        "cursor": {
          "ref": "7d01666f-8187-4f53-831f-bd2c810f31c2",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ddd1999c-0246-4819-b11c-81a7e5ead3a3"
        },
        "item": {
          "id": "f98f3af7-d5f4-4b8e-8c8e-5fce42d7fe8d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "45c2b583-a729-44ad-8cf7-16d235254889",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63ff7b75-b70f-4225-bc15-f597b6fc946d",
        "cursor": {
          "ref": "388fa49b-0178-4b11-95fc-1b23a6969a92",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "19a5c020-2bb2-4505-8369-40e1ed88739a"
        },
        "item": {
          "id": "63ff7b75-b70f-4225-bc15-f597b6fc946d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7f46a14e-bacd-4a41-8612-3fbc68f37375",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27f221c-99e2-4212-943f-d9d7dab190a1",
        "cursor": {
          "ref": "4de817e3-28e3-435d-be8c-80a3ed5f31a2",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "47c1e1e9-9061-4b53-a0c4-d765f12d7556"
        },
        "item": {
          "id": "c27f221c-99e2-4212-943f-d9d7dab190a1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b86acb93-508d-4ce0-b5fa-18ddbb41c8e1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5de57f29-dc28-410c-896f-95f4f4b22925",
        "cursor": {
          "ref": "61d88e90-e6e3-4717-ac90-1e20c3f422cb",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4c917c5c-1c0a-40ab-b80b-8f4d394a4e39"
        },
        "item": {
          "id": "5de57f29-dc28-410c-896f-95f4f4b22925",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "dd2eb62b-32ff-484c-948a-184e444dbeb4",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4244e154-f6a7-4580-98bc-d5da4a080aaa",
        "cursor": {
          "ref": "645e114a-0786-42df-a3ec-eeeae00134e7",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "83cda6af-3b56-46bc-a7f4-b0940001f14d"
        },
        "item": {
          "id": "4244e154-f6a7-4580-98bc-d5da4a080aaa",
          "name": "credentials_verify"
        },
        "response": {
          "id": "ac82a79f-5543-4822-800c-c92dfe8a361f",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0c2f40-9e0d-4aa3-8202-b08c8dcb3df5",
        "cursor": {
          "ref": "b99cbfc1-c6fd-403c-b273-d85199a56cc3",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "225a7f37-6cf6-45e7-b64d-6cfca1540e98"
        },
        "item": {
          "id": "4a0c2f40-9e0d-4aa3-8202-b08c8dcb3df5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a045cb8e-a1a6-4303-8cff-c772183a1407",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c0ede-0579-42df-b08c-346ac76e68f6",
        "cursor": {
          "ref": "11766c61-f3d0-492d-85cf-016240fe2737",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cc76f72e-259d-49a4-8890-f2ca4a2bb65f"
        },
        "item": {
          "id": "a80c0ede-0579-42df-b08c-346ac76e68f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8fee46e-234f-4555-b9b6-bac2e59e6621",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a80c0ede-0579-42df-b08c-346ac76e68f6",
        "cursor": {
          "ref": "11766c61-f3d0-492d-85cf-016240fe2737",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cc76f72e-259d-49a4-8890-f2ca4a2bb65f"
        },
        "item": {
          "id": "a80c0ede-0579-42df-b08c-346ac76e68f6",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "a8fee46e-234f-4555-b9b6-bac2e59e6621",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb781d9-9391-41cc-ad35-1c38040afbaf",
        "cursor": {
          "ref": "31c9d3a0-0a6a-42bf-b9ea-020c838ae095",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "1af65c1f-9580-41ca-894b-4fb56aff9557"
        },
        "item": {
          "id": "acb781d9-9391-41cc-ad35-1c38040afbaf",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "26b87362-5db8-42e1-8989-fe74878ccac7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34f09734-5cd8-4a5c-a051-9088fa94ce1b",
        "cursor": {
          "ref": "1d23953f-4516-444e-9df1-5c8e836e0c18",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "ae7c6ba0-c017-4564-81b2-47bf53352e4b"
        },
        "item": {
          "id": "34f09734-5cd8-4a5c-a051-9088fa94ce1b",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "22e3d536-1aa7-4946-9556-62077676dad7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}