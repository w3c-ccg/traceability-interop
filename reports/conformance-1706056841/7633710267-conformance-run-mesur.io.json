{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "fca25845-1e4d-4e8a-a683-f206aa13439a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "479a2648-8778-47b7-876b-b42b08227bd2",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "84961ca3-43f4-4e90-b25a-6445a6db1bd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "213956ab-745e-4ac6-8324-1696a6f740a8"
                }
              }
            ]
          },
          {
            "id": "9a44ec50-c6d8-45f6-bcf5-e0fd79e42809",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f9b6bbfd-0fd0-44ad-8fdc-c98c5c157aee",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "8bfca0c1-94f2-477a-aa67-357aa577200a"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "6431a84e-00e1-4698-aa66-f37a6ad637bf",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "046c9cef-852a-4c72-bfa3-80e861e7c070",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f8a5766-119c-42a0-b516-f56b6779fb1c",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99f3c2c4-7a29-4dde-884c-89ae16f887db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "191b79bc-a598-45de-951b-0a41c19d4ddd"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "acc589b6-f156-42a0-a458-e9630807fab2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a22fcedf-93b8-482b-a753-7b62a4c0bf73"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a804f38-0798-476e-b8ee-fa6379d0fbbc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "455b18b2-6f6e-485f-8722-87d780f0cd43"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "05f675c9-c1e7-4a0e-a199-3ac04d732208",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1ea2dca1-b159-486c-b8f4-aadb86b77a59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1efbe50d-2aa2-424f-8b8e-858fba9babc1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2adde24c-3ce8-4bea-a44d-dbe245a6da6d"
            }
          }
        ]
      },
      {
        "id": "b8068db9-1e5e-4dd3-ac64-a12ab2d50b7c",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "d2c3ef3b-d892-4042-b056-e4ce58ea8af6",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9f252e68-ff63-4891-9b1e-c1c1f1b0ea15",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "01113660-ebea-4970-bed4-5d4a74a95307",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d09a658-c7a4-4bcd-8328-0ef5e834f1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cab1ee07-231e-4960-99ac-1ba7850001a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e01bef66-5331-4548-b8d5-35a9be004e43",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd98843-df33-422d-8af6-d1741c3101c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "56ad4a89-b1a8-4128-8245-1b89b29688e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c07c451e-3075-462d-a1f1-076bc735b249",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e3159d-43b3-4ebb-8eae-cf71376d7b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "409a8e9f-6884-43f6-a861-61de3b68c27e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a6a9a469-efd2-4350-b518-a626739a8ba0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "58bd63d8-adad-43ed-8461-495a4421f2d0",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae5d0cf-0338-4380-95b1-4b82a454e0c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c439a26c-8e0a-46fc-b430-9e36bf147530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "425f6929-5962-4b5d-9bd2-747e996b70a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1afc24d-6a51-48ae-8389-5f563d1ff2b8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "cc919e91-5d84-45e1-996b-0134c7ae4c27",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e625724b-7549-49fe-b8c4-096f4aa2fac8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b8614e98-5650-4e92-80a9-4570566dad1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "42434357-ffd8-4af5-a047-3dcc0e9dc845"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "690545df-5ce1-449e-a86b-3d4f86c5b874",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "c5acd723-6f00-4c99-83bc-51f18fbd3990"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f1ea8e6-39da-416d-94ec-9df2f1344d75",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2e309111-e68a-478f-b7c1-e6b74ad1f2c1"
            }
          }
        ]
      },
      {
        "id": "44a54092-0393-4cd1-9b6c-4f8b24fdb368",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "0d60d8ec-f51b-4b1e-a52c-5d0e36288a5f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3be89a4-2a8e-4075-ac26-cbd47a9a9451",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "58c5af77-b294-4ecf-8ef5-6f851ed25fe8",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b3518c-05b8-4d5e-95a6-f3defc408a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a57397b-03aa-4619-9562-40e5077e781f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f77655-6e15-46d9-82b3-11bc2828c1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "147b9017-b6ba-4d45-a27e-5ca3349677c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9458f5b3-a322-46f6-91e2-61ead99e20fd",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cda3d9-20a9-4aa4-9969-b280adf21647",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4edb7b56-5a47-4399-9bcc-b137eb51f90d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52fe6c39-23f3-42f9-8290-304747dd623d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0753e63a-8eb6-4c44-9867-f3227a77846d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b10ed8a-95f8-44a2-bbd8-8f1b2ce886bb",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "951753a4-cae0-4881-8e7b-aaa9f9acad90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77e107a2-e9ca-425a-ae02-329a5f919ea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b0d159e-7d16-47df-9092-a707a2ea4966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ce1a931-9bbd-4643-9639-03995021a99d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9928e99-24a4-4ba2-9478-36b86a431b32",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23936c1-1cbe-4033-8ab0-7497f10858df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "284457cb-f208-4f20-b162-5da53d037b4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228f563c-4ca0-4d11-a6d2-220e3a7d6ae5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ccdc22d-577e-4ab5-ad3f-47e0f67f63f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f5bde8-1a04-427c-b3a0-e0dde92a8f6e",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e94823-c7ae-44a0-be0b-034ea4cf7143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3a6cc6b-29b0-44a1-9a21-e6cd1f784af6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed37183d-24c1-4985-9da2-d11dd628addd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "297f9299-6cab-4682-a688-b97e51b7124e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73bb6bec-a662-4595-bb95-64dd4a44a4c2",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55c3af66-56c4-46f9-8055-2a27c92ce80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f140f47-a808-4665-8e9a-b79e5b8e638f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad570d46-4e68-480f-8cb7-e0ef24d59894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7e7852b1-13bf-4c14-b39e-9b24f773ef8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb83c1da-9408-46ec-95cb-40edaab4955f",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff0f4c9e-c878-4c46-b500-bf3487f8f4ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f037e2f9-316c-43db-9df4-9535fa5ef6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d34c629d-a860-452a-963c-411c1e64d3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c6fd91f9-d7b5-47c8-b003-05bdc5bfba40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b0b005-68b2-4c6b-87fe-b7c24eebe6a9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1c485f-5c5f-46bc-ae03-e061a5c51900",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f58270fb-e93d-4992-a37c-bfbbcd9177f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29cf6e61-45e3-41f1-81bd-7a90ff5a2515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4fe258b5-3af0-4149-8562-5c05dd1847d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "302b72cf-62c2-4c70-9e5b-a6e6aa7f0e97",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3760fe4e-f80b-43d7-8606-064795719038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2d6cd3-ec3b-4f75-99ae-a049cbbc7c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002166d8-6a52-476b-aa49-5fd3c1d5d929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d7fe8c45-72ce-4c07-878f-a255f3917467"
                        }
                      }
                    ]
                  },
                  {
                    "id": "031b7564-7515-4ac5-8921-fcc655ca4250",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d2327a-ac0e-40dd-aef1-637b701bfa8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35779185-b5eb-448c-99ad-38b1f134947a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5e9512-a7b4-45c6-af22-d8a4e75e6ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5c7df239-5839-4d70-ac86-8b0db909970b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab96aec9-4968-43b1-9af9-033ee5a94557",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdc0141-b90e-4f83-8611-007d205536fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f7c44a-b89e-4a75-8825-88c1ba2c1380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc761188-5591-4336-9713-feb53bb43bd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5dcbbc6e-c9ab-4b23-8591-3175ca94bc3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82a92015-e9a3-4dcc-855e-565ed79ab0a4",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "515d27eb-d255-4055-92ab-61342dc1e43e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13538cbe-4f5c-45bc-af6f-dbddc616515d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b344a43a-df35-45c1-9786-87f6789ac2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d791ccf-01a3-454b-913c-870039659823"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ba5fb75-c08c-4400-9d0f-21145aaf59e0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de152fc-6f07-44d1-8147-ce088df771e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afd65e44-b1d2-4020-b01b-ac492110b6ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cee54ab1-0b3a-480d-9d71-28764be2002c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59d680ab-41b7-4056-98b3-6b1554b4832d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36e63340-f61c-4471-85c8-f06df5ead488",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "223c36ef-dc9d-48dd-9828-1b72099735c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d060be-208b-4271-92c4-41482c8cf00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "635ea878-3a63-4cad-a660-edde94646d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f52d926-3f74-408b-a5fc-cc83cdec88c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5733f616-7890-4149-bece-1854078bf161",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d03605c-c184-4c65-97ff-c7588c6ae630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b189ed6-5643-4398-bc8e-878c8458f2b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f6fdcd-311a-4d81-9376-0caa2e454801",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3722060f-7966-4b47-a096-61aa2a5484c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5c795c6-f491-43f9-b41d-2456e4d24cf0",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c251a2-9ee1-4466-8eaf-73cb494052fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74aee16-6842-4392-87a9-ed7e5bf0db1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd008f6-ebad-4100-a4e3-074a30aadc78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e5357d2-b242-4e50-87c4-dfd41e39a1e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b31280-b4a1-4c99-8f10-74a78caecc08",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "621ef1dd-df37-4e29-9851-eb1f16ba01ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "581f7a9a-ef8b-4b25-aa12-38d1cfdb406d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a02e9f-136f-4c44-89b5-5f248118ad63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3f788f34-c4e5-494a-936c-249c2d36b622"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ed21c0d-2ec9-4a55-8ccb-e003c995189e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c330d83-913e-4d0b-87ae-ff501d25cef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5baaf87-e794-45c4-b9c8-6334768a4904"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3840ff0-f3ef-4942-94a6-10cba089c884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2d60252-02d3-4ad6-a841-72e74757f53f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bfa687d-b74c-4e64-b337-a818f7681152",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6fc94e-8e06-483b-8234-ad9f110eab99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf19d35f-3f8d-4632-b923-e936cee1d41e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1c9c22-d4ff-4a0d-a9dd-da7911590e4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab1a8fec-0582-40bd-9aa3-9ad3e19b777c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b347d13f-3176-43cf-89a5-8da967eb9233",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e89ae60-3779-4d02-a994-b13b1bdbc0b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548d13ef-7e4b-4945-9096-7c28285510a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee57a21c-6808-48ea-9f36-b37bcab8c888",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b72fcf3e-10e9-4e96-acdd-ea0734e8e5e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08c3ed3b-0fd5-4283-be02-de158adc4699",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "618f8364-b257-40fa-abc8-56ad95970856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d11ce08-37fd-4533-9411-ac94f18a21b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "364cf17a-1944-401c-a9f5-4352c9e6b0c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2cda0dcf-8174-44f8-b83e-3b67820a1ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9321bf2-07df-46a7-8905-4543984b504a",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384fde1d-28ae-49f1-a84a-dded37be7fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6089e7af-ff08-413e-a8a2-abb09d72921c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5b4ab1-6341-4805-a47c-25cccfab28a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0815ab29-ca9f-4a40-a6c0-eb8cf0aba09c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a29e77d4-96eb-44fc-bde5-cf1d9104aabf",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2868a288-d85b-43bc-98e9-8c9c088f8d8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6605ff94-bc4d-499b-b3f9-71620f2ca11e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb55e171-b358-4b06-b388-fad4a04ef1f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e40486-043c-4bb7-920f-dca2babe7fdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acac3f6f-4f7a-4c64-a195-215b66c2903f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a29b0b74-b1cb-4227-83a3-7d250730a04e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be587d8a-0579-48ba-aced-0e250b5df4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c620e8bb-2d9b-44f4-935e-f02fc01d53e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "de0b96b5-f3a9-4d12-8fc8-9a40fee41c3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99859bfd-bb01-493b-884c-997ae2cab243",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0109e1c9-f6e9-487e-bfd6-f7d99761b9a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27d2dbd9-9e27-45ae-847a-e748f7644c73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e2c8a0a-a931-4eff-aedb-2ae56afc5aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f0cc48d-cf88-4462-9d27-a87d9316c326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d160359b-ec7b-4a5c-995d-3d2fcbd5c47d",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc751bb0-c731-4798-98c2-7a065422d56c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0ca6730-f847-4a36-8b07-86ed8f77bfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5f5eba-5a11-4fa3-a8e8-c98796ff3957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "739b9b0f-a928-4019-99bb-89050e18b77a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca737448-ee6e-47b0-939e-e06bd634507b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a88cdcd-f45a-4e89-b27a-3f93e28e7255",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760b90fd-a53b-4428-947d-dafcde899c2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2923fe47-cdfc-46a4-91cb-74b7a2b277cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0943c2bd-9046-445e-86c7-c524949aed07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b470fa-af29-4429-9852-40892578886c",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "573d2802-1da4-409a-8d74-674a6ea9b9c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116bf167-ac2e-4360-b401-fd5fc2a41ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2096d8e-5680-4382-b6e4-e8366511eb0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3501cc67-93e1-451a-93b6-1cb94ebad444"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20fe346d-99d0-4ff6-abe4-84ca09941dc5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcd23c5-bbdc-4752-8442-0d3bc1af0563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c34b622f-6380-4338-b4e9-7ae669fc7579"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2add31-d211-44ed-8fd8-71ebb87d1d21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "77019f43-b4d1-4af2-b3d3-8ce8c1b2fdef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4437a249-79fc-4e9f-8458-3f121176d2c2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0e9b0b4-7345-470c-a2fa-88e215b18d04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c76e2bd-39aa-4233-b574-13d72004182e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da687ac3-ddc4-442a-9df1-e8b10fe7f7f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "c6151109-138e-44b7-a49a-902e12151cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ccad775-a810-40f6-b8de-5fd23cb8776a",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a15d86-898b-42bf-a69c-2cabed13161d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38d45425-7976-4ec7-94ad-b1a66d9dd9a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72cf2d4-8e81-49f9-93ff-456fe2efab42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cda29bce-711c-4ee5-aebd-f6302e97968f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "966ffe45-d9b4-41d0-aa23-28282e355283",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045dc399-ace8-4d37-ad95-c689a719ab00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecc01919-ed46-4160-9c31-ffecd7acdccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40345dac-5b62-4faa-b854-9b4eef4c54fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d0ad648-cabc-4124-9d39-0a97e7de7996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61bef188-9ecd-4e31-8301-167b132b6127",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf11d9-c87e-4d96-ac84-d56a9ed815a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5dae7f1-75da-4f58-9cf9-bd94283026f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87172600-7af3-469e-9785-251d0aa312c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e434547b-9c00-4238-a5c5-3898b49623f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe68d95-2b33-4223-bca9-a81db1656ba4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "559b3ece-c625-4330-98c1-b70360d27c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a76b051-0716-4481-a134-a08c7c0e4e8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb3b535f-cd49-4731-b065-159d8d68fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01f1211d-c7aa-42e4-aba5-b5f665079afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab679a-6b30-49f1-813a-93dff00bfca3",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57930fe-78b8-4978-bb5d-28d2e8aa9ed9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5764376f-84d0-4db2-81d1-fe23463cebd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd73203-c963-4e08-9680-bd625c2e1750",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0dcc2b49-9b67-4e9c-91f3-f172cf883263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bdaf7bc-aee2-47f4-9a5c-925cec465d6e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e5e615-4269-4282-badb-aae67fdebb20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9c7a12e-b668-4aa1-b68f-3c67c12543ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9de7148-dd50-44c8-86f6-1ec90c9b7d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7076dd57-6f54-49e1-90ff-01a4b1aad0e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bc79ffc-6781-4d1e-95c9-9c4edb6eeacf",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93bc7bd9-7c46-4d6b-b855-bea5764b5be5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e00d548f-1909-4380-8576-f9120b898167"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7e392e-1357-4a76-84e7-9a9024a5d514",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "363db3ba-583c-49f4-8a8d-bcdbd928c394"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9f4d58-02ad-482a-9231-89eb94661fd0",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33728378-aba6-46ea-a08c-3d87b11c6b5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31db7442-a4c1-43ee-8ed1-d4c2f5682abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f16a23e-e247-4323-bc0a-535f27e32b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1fb21c-091f-4498-8f20-d7004d7e67f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc0e89f7-6bad-46ce-81f8-66a3c6e2fab6",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbc91044-5839-42e3-8343-abc44962f6fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5b9a4e8-2d15-4266-bbb5-47e75fed0ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88d43e33-7be4-4357-9a63-594321ee1e2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "9b55b579-0aae-43e2-88b0-ddace4e9ac84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba87d3e-3891-4fc3-a6bb-4a200110eeb6",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72e49573-83d7-44e6-8903-0ac44270d8ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e2404db-fcef-4a75-adeb-4d42cf9fecec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4dfed09-2dfa-4915-9d05-8320af9ca51f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9bbe7758-fbcc-4c54-937b-c4693de55f22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d62765f-5ee8-4834-b47b-61dddc4f3e0e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57d45ebc-8aa0-4f92-bf54-e72fd4fd3ed1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51bfa5c3-c287-47f5-b4ba-1dc33100c7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b87e4f25-3fb2-4174-bb91-a611d3a017c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f8ce0b3-8556-4a78-8ab3-741225718b1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa6f797-ecf6-4267-aa37-d2e6a47c3675",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52bf66f8-e4f9-44f8-8f81-fd5e3ed7368f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1a9a9df-ded7-4d54-9666-898880c27c6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bffad1b-b575-4498-930a-4dbdbd978a78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "c37afbd5-d9c1-45e9-a726-b80cfc7af9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25926459-d0de-48f3-b350-dd49a9ab177c",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5215a1-11e4-4b41-b6d5-ac401947a2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5fcfaf6-d8bb-438e-87fd-936032452777"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61749270-f03b-419b-841e-5e293bb1cac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7c522652-adf4-47a0-899f-6cd45e8f070a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "079dab74-a07f-43ef-a8b8-76c79919216d",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d971fec7-deb5-4fd2-8143-14292e1b9a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "582a6d62-dfbf-49b5-b38b-35eec1268960"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0533805-8bf8-47f5-80e7-55dd4e0c06cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7ddc3c2-9899-4430-a108-4020175e061c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8564f5-c8de-4203-b9ec-38de9cdfb555",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f325c91-0107-4a39-8623-1576b7447cdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c1ac4c-62ef-4ec3-9a35-666665102239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b7d115d-8fb6-4afc-a6d8-70259bd4aef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f50256e-4ca9-45f7-a117-e0d8f5390e98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b4e0ce0-215b-4c77-9273-f65df5e50acb",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4185997d-58fe-4a7f-a07f-588634df1e43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93c4328e-e8e9-462a-8a31-6c7be6368421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "199a5ea7-0ce1-4dbf-9da7-d8f3bab0d0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88bdecf8-b79e-4ade-95a6-0a03f4265c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f903836-be4e-4f3b-b193-854c170a04d0",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cac7b041-bf4e-450f-ab31-34e94d8eb84a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42375c79-532b-425b-a807-153f5e060477"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b3966e-b74a-4603-bc65-591c7c826391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1bd7376d-233d-47fc-9fb2-4d56c293b412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32444f3a-bd79-4ea6-9a00-5be4169730ff",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8183be11-fafd-4389-81f7-bcaf32ca1cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "300738f7-1bd3-4828-9e15-3eb640d0722b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48cb7af5-8313-4d67-b09f-044a9160b298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1e5efa-e6b0-43b8-9ab4-e63280362805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f225d2b4-8020-4f96-833b-eb43d88aa196",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d12cdd9b-4927-4ba4-9481-339059899418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db18e57d-d288-451c-b195-a464b67c7fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970891d4-a5e8-44a1-ba0a-bee83eb6c944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9afa78cc-e0e5-40f2-bb03-de2390550472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c149232-2933-426f-ade2-52be1601d7d4",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34707394-31e6-4933-8c1a-efcc4b571746",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc4f0c92-f0eb-4e58-adbe-ed7047e62a20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83ba9cf3-a5e1-4615-81f4-84af8f0aa40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d95c64c6-f48e-4db5-888b-6ba8a53a49ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdc40be-5275-41dc-93d6-80be900330e9",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64c73023-2fc1-4a18-a14e-23652477bb81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bb44858-416f-4ca2-b05f-1c7aceb062a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e088aa4-2552-4611-9573-7ec46e05dad9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "72a5dddb-63ef-4d0c-903c-4e2ed307ad68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f86896d6-2d99-43aa-a66f-9bbd5f64bda4",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df05e9d5-b445-4297-863d-eaf511ea246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ba0533e-6354-44e7-a17a-3d43e712bebf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f675b3a-b4ac-4f67-9cde-11cacb67592a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "62101031-b178-4207-b9c4-dfccf6e5ebf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aeb128d1-6e51-46ce-9816-aca778523fe5",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252912df-db35-4b8c-a5f5-cd8d0d559194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ea74bcc-cc3d-41e2-9ad6-1812ba8e6446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be72ba0b-dc91-435e-845b-45a9022b914f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "578dd06f-3deb-4164-a27b-eccab75f0f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a276ffd-bbf0-4a17-8fc0-cf1c38625476",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08dd6f-5acf-4aba-83bb-60c4d0fc7e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e6eeb0-36a0-4664-8e98-f3a611f9d310"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "346f85d9-e0a6-4acb-8261-336c09567b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8becd1e7-902b-42fb-a3ae-1b7e65453d8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b752c15b-014a-4b93-b98f-8bbdcd7cdb8b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d981148-777a-4a3a-ac92-aeb84fc2a681",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ed37917-92bf-4bfb-8c35-ea99af31c936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95d2cdf9-8f79-409f-9b3c-dd1c27ff5d7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb0a352-9d7b-42b0-a07f-63327843708f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b63bd4d-50af-4752-b395-9281001d7bef",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ba21e78-a7ec-429b-b22c-961fe62e799c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2464398c-d4db-43c6-91a3-28747255aa72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aed5eb6-d5dd-402a-8e66-0f50d7ee92e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "fe7272be-d8a0-4506-940a-3cdb3bc35451"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9bcd57-5378-49bf-9288-6265a166b814",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "533be5a8-e4b5-4b5d-bd1c-1694226b4baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df9d97c-ee95-48a0-9c90-3afaace26d3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88a8eda-a4d3-46ea-a3ee-2a284c35833c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a30719d0-bc07-4051-a375-1e234db0552d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f1eb91-58d1-4459-9c7d-5d4f81118dc3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bff68e0-f827-40bf-9b0d-7413e33b617a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de403fef-d42a-4664-aecf-c1691208708e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa4c64ca-3107-4f2a-bd50-1c08ea7dba21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4bd9d0e0-1ce7-4cfc-8646-b25f0eed7a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe36e16-532a-4be0-a97d-ef4ad5b4e85f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72893d9b-4927-4bc7-b4a7-f36283a81a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c70c7c63-5d3e-439c-a453-e287a8f79159"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c21d3f8a-74db-4ee7-85c7-53fa3135991a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "124f7d08-b1e1-4d76-a62b-25073759c3f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fd8e09a-0bd4-40b1-b98d-10252e3c6ab3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00c5e8ac-c709-4259-b1ba-5f4eadfa6697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c1970f-1ac5-47c3-9b9f-0aa760b2f2db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c0f2f6-365c-44e7-8e02-e303ef09a436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f83c028d-be7e-4325-a23f-43f1ffe6c965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f326d8b6-b88a-4aed-b6da-40f493701dd2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee027ff0-9a57-4e25-9d29-b1d97534c3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5daa05e9-2950-4159-a278-d5e13386c59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95bd671d-3ee9-4a05-943a-1abdb7a61d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f8a2bed-c856-4e34-abd7-ed10d80bc337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e077e333-f6f0-4243-942e-0d09731e685d",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7ce3d2-1c9d-47f0-9bad-c15ba3bf37b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d11a499a-b74a-4c61-ac87-303fb2d84121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acdb7c85-df58-420f-9a57-bfa7535e9cb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00e2ce1-32a0-4b27-9be8-57f1123f2532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ea2242-7bcd-4b62-80d3-1228d707fdc7",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b5ea198-47a3-4c51-88e6-7c4175165934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f3bf113-29b3-44df-9995-781ac325abdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb962ff-b717-4b95-99a1-0eb2c390a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "8948c627-13ca-468a-adfc-46c3891c4865"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dac6536-d0cc-4156-beda-d26856e976d9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "346d7a1e-5ea9-41fc-b732-b373d12268e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d69ee1a6-46a1-47ba-a44e-281da052f2ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3f1fabb-ffa1-40a5-b0c0-38781fc9fc39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8901c8d9-9001-46ed-851c-bace4cebe9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aee4243b-0f0f-4f99-9559-025dcb6c3ef6",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b0acfd-edb1-401c-a912-21549c90e328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b714e6e-e69f-43b1-94fc-e4c0a51f194f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4c6b5fc-5f86-49ad-8b5c-cc459840febb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c58150c8-753b-457e-8834-027a50639088"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e5b4f88-6e49-4707-a476-3101fbbbad85",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d2a3ea1-d8ba-4b7a-b957-9ec94bc08618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "619ce4dc-5161-4794-8692-2694f907ef12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92329079-807a-41b4-9502-d19b617c1519",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c16d95b1-65fb-4b06-a685-1319077f1c2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a8dd2bb-7088-4aac-81a8-c75ceba1575f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a950b63-46cb-4dbf-929d-5bb0a4babb28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7e667c0-bf31-48ae-8468-65d1eb46112f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54c428b1-372c-4db4-a8f8-dfcd541d4892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c58e219b-fb21-4171-91aa-3e7c1c6fde8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b31ae016-cb47-4d7e-b053-aed66f584c04",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9540cbdc-12a0-45b3-b852-5d54a75232a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "249c3c4d-3522-444d-ba84-a8e3691e96f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ba7fea-726d-4ce1-9919-4cc7773db388",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccf508fe-ba8d-4e2a-bdd4-846ebdd8dfba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d729658-75ed-4e6e-bda5-3e660d40a7d4",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5492b5ed-10a8-40a4-a222-f3e98be9fd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed790370-1878-439a-896f-e7778bb4a10f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "612dd49d-7373-41ad-98fa-a4ea1d4753d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0bc8096-6c08-4546-84ec-af14cd750f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7161dbf-e954-47ca-ad7d-065d43645189",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbc70007-2825-4e66-8a8c-f80f35f9819d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6fc6666-357f-45d5-b6d6-2371dbd6aff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6372c306-599f-4fda-bc39-d1d928031422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac62e458-35a8-415c-92ad-57fe5e972001"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e60861-e4a4-4627-b074-e220ad6e9557",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3c9474-2510-4fd9-9524-d312baab8ecc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1219d03-76f3-4c5a-b722-8bf01d3ad022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4359b8e4-07aa-47a5-906d-5322a2ee22a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ebd8f66-acd4-4bba-a88a-748f5ab8e2e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c661c80-bac0-4cfb-825a-2c7c9ded2fa7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e6083c-bc2b-4720-985e-8b7aa4e92f1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd110ee5-3e96-4d9d-9277-611b69c38c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f4ad9f-3daf-42a4-803a-555cfbf87732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9cf89c06-23ec-4a97-8403-91c23dc61d96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28c4a654-3437-4418-92e2-ee25a162cd7f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "944ac625-dc39-4090-9c95-f5dd07ea418e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89b3aee4-7cc5-4119-8ac3-a113ba7ac322"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf244497-005e-48c1-a1f9-7682e53bb317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "106beb71-9ae2-44eb-bde9-e9c71074da9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "339dccb1-0362-4b83-a4de-6077d81e8b6b",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b474c4-8a50-4c7e-a5e3-70d872baf567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceeda5e7-f59e-4dc3-8487-c36c9d013e30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b79448a-5038-4d30-9ad8-4030b2d98e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "186d4648-8f75-43a5-b121-8ddd69596f6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e19e4dd-1048-48a9-8274-75ceee0508c2",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "636818a3-75ae-4e98-85b5-82a8559fe848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5542d19-b99b-4072-9d87-7e8e0e135e72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88de599b-51f2-46e0-8070-d274bd9c377c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b41c847b-c02f-49fd-9aae-0867721cca04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2926f3e-659c-4e22-bb69-78364b3e101f",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d31f0806-8b5f-4255-8014-c0ca01c42a36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f74db9-b34a-4978-bb1a-ac047b9bacc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b9a3af4-b5d2-4225-936a-c3ca04e06684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bbc590-4424-4520-9326-68d46c73210a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfe9264-7162-43bb-8e20-330ed88a103a",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e62bb9a-4b67-4670-8082-1b7f527c07f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "515ff560-0ce1-46f8-b055-7b6f924f54e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ea0df81-a4c9-4f84-be6a-1d851db0343e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5f6f175-ddaa-4c56-abd0-18bd177ae6b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9727ffe9-2068-497a-b43f-0567403c8629",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "166e31d8-8f55-425d-b348-1ebe77bca17e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "159a7aec-27ce-4b89-8cee-4a6a26b3b4e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ffe667-8197-4272-93d6-8771be0c9fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "920cf028-06ee-4762-8911-d8483d77f409"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27ac8670-1da0-4e78-a67a-35d36ca4e0bb",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcf413f-1273-409c-8c84-1674f3bab0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b68a38b-8f68-489b-90ea-aa9ce0d75d99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3532452b-fff2-436f-bf11-0f7f423c8aaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "96ed026c-e992-4a82-ad63-8b14aead5a26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a815775b-a01c-45ed-88e2-18143acf4894",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8a54c50-09e1-435b-bbd7-66d153344386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877717c3-1769-4a55-8524-e67331b393de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70a18dd3-baff-4dee-af15-12503b57c4f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7bab0397-6436-47ed-ab07-b83ef803d6d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8b911-7593-4825-b335-3153b89df737",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c4746a1-65d5-48e1-9d6a-e98aef261d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a691329-0d3d-4725-8818-742b6263482e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4200f216-bf78-436c-b67c-96fdfbf2241f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fee6aa61-10a5-4879-92fe-9fdb9f3b6362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b48afa-8ecd-495b-8cb1-fa284a4b9c00",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "249d8417-1cd6-4013-9b00-7172f9b0359a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9bdd29d-8d1a-4718-9f40-178284f2af53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c3e6e4-898a-4498-8930-ba9b4c6f6244",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95aa7d54-d40d-4ae4-93db-9f579de84e32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2497443c-ac45-40e8-b9c5-644a9ca47350",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faa581a2-9ae1-4c22-aa96-9c3248e14d05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47273d9-669e-4b40-a84f-d77b3478e7d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c15210-8c10-4f3d-ae28-ad36980aad15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cec27496-0b53-4582-b697-dbba447549ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be8d9b54-392c-4337-b8ff-f17e8199875f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad1902c-b214-4fd9-8628-0427fc0dea03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9504205-41c2-434a-a9ca-ae39fc770bd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025d39d8-7b05-4eb4-8acd-5ead8162cade",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fae19a00-4082-4c37-bf9c-a95768d51f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708c17e2-e423-4115-a5a3-653ffbcf6a98",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9399877-23f9-4e13-b80a-c878d635c9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3155ebc7-363c-4ac6-b34b-422a0b289340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e87f7e2-0bc1-4d05-9c22-f47200597cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "be0bed3b-8901-4d14-ad57-e5de2f013c26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b798fba9-cce4-4477-a7ff-2a7f1bdb3e5b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43d18728-0409-42da-a32f-7f06c047755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03493507-2ee0-4e9d-b624-33973079bf06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee08bf-30ad-4ce2-9a00-8157fb6c0fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9b25f32-d231-485d-bc93-9f302aa8b9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c632400-5639-4cea-a606-e651dd8b5955",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e889a98b-9ae0-4147-ae5c-3ee136bcb368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b862c1-bd20-48f3-9ae3-e495b126b530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c306eae6-f3f8-457b-bd32-ab6ea3486dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "aac2599c-1e30-41ce-9fa1-5996b0b1a96a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e0fb3d9-d5c4-4f79-92cc-baf63a568d88",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec8561e9-cc09-41f8-b0a9-088207c9a7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a83f3f9f-748a-48fc-b813-ef9b0c38203b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a5bd3ce-3abc-46bd-8ce1-501d423326c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0f95d329-c2a3-4bfa-9a6b-6dc0957d1266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33727d92-64d2-44de-a2a0-f3ad908ac552",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c70145c-186d-4118-8886-f8c013621b48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adcf2ce3-bb49-467c-98c4-9f7e747f12a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac5c447c-75f1-45d8-9b47-014b51354fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ede6096e-1750-4573-867a-7d5cbc4cf327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b84d5ce-b6d0-4947-b0c2-51fa0d69fa4e",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e2ceb6-a1e3-44b2-8c5c-ffa2d5ea1267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41577503-7f75-4db7-b1db-8795dc5a1cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5378fb-ee42-4053-9d51-1bbcf2266c21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "bfe318c3-25d5-4817-bf52-3424dd63fba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff025391-54f4-4bd0-90b0-0e0fd4a0b56e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a41d7f4-16be-4c90-9203-f1bbf214efb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90a30f79-cca3-4635-84f6-bb0b2647441c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d4c9590-d571-44ab-9ca0-6d438742036a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ad8ec99e-7b5a-46ac-9938-98eb71a604d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a353767c-2c3d-4649-8845-ffe5629a9eca",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2cfe01c-64ec-449b-9bd8-9003302077b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2c5083df-2b51-4666-9fd7-a95416b72514"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bab2fc58-20ab-45c4-ae90-6c25d8cdf6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "222362c2-1c61-47e5-998a-2435014e0b25"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "97b1d13d-9966-4509-b985-8c7034af15fa",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "07a548c6-e129-4d12-9453-c6ca2541d335",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c2ac91-48c1-44df-ace6-3f6ab7129e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7bdec1c5-4f21-4b19-b148-844c88040f12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3422ffd-b60d-4d99-a55e-8f2d602b4d3b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "97730eae-0bc6-4324-82b9-e31412ead66c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c3f5b00-0fad-4f17-885c-2415a17f87de",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b90419af-e63c-4203-aa9e-e3a8d955a7cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b61e9b1c-d724-4922-b925-0f1f8f22afcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12a9f28c-6374-4f01-a842-d72a26ec11c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "75934f9c-432d-47b0-bd24-ff09dcb6aad7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b61941dd-efff-4e36-860d-c8cc343adfe0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5051cdd4-ec41-4499-a33a-88678faed8d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "41b7816b-63b7-4ccb-9893-3b54d224244d"
                }
              }
            ]
          },
          {
            "id": "7aac7bac-c7da-4369-b6a8-4278955cccb9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "8f23c32f-7209-40b1-b9e2-367f47cb950c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "5c856d1a-957c-420c-9aca-62c49251cd03",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b39a5d56-4d11-463e-ae97-0d46f2778602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "bd797441-58c6-4ad6-a9e3-3acd55bd46d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "124b9686-0e00-4374-8fc4-73000ecbb6c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95984d5c-cbd4-41a9-8c99-bf2f542d1e9a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "7ccb179e-f269-4ebc-a146-f39cae721474",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "86e885cc-b886-4324-9e88-6f71154f2ac3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c52fc201-e7ee-4a99-ac74-4e967f394948"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f69e499-ff26-42a4-a5e9-06203ddba797",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "01cdcaa0-c88a-42a5-a28b-1311ca9a7402"
                    }
                  }
                ]
              },
              {
                "id": "00ea9366-a43b-4563-bdca-a93bb84214b1",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "50641760-15f4-4c3a-bf20-d1cecd0029ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b0896011-7697-4c44-b446-875747ab0429"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f05d3ffe-4e46-4569-837b-e0814fcae131",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b715d66e-6af0-4a6e-af44-40da0134dea2"
                    }
                  }
                ]
              },
              {
                "id": "868789c9-c2e6-48cd-96ed-5e8ad78bb47b",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "09a50b16-9065-4bdf-aa29-31bfca18e7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "77ab8828-0e48-4e69-9e88-77f387f68357"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "04f10f01-2bab-4ee5-8573-82f87b422cc7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "060ca461-9c41-44bb-8353-3d288905bfbc"
                    }
                  }
                ]
              },
              {
                "id": "73fcd96b-890b-4ad5-a444-6dc41e86c91d",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f15b3a08-7943-4b63-a74a-f44cf62d82c6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84c6ce82-e57a-44ed-9f21-53e6f5b7da6a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d730c592-5b16-43c7-8835-2aec13c9213c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "f722bf5d-5ad0-4a2e-abdc-f6ef7635576b"
                    }
                  }
                ]
              },
              {
                "id": "42340d86-148f-42a1-8c60-04b1b8b6cec0",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59cfec87-54ef-4803-a777-f969f01d6bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "33ee9b45-a45d-405e-bacf-850e7d2ea33b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1930d455-d002-4935-bc1d-f30642cb0799",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "ca9cf989-1ba4-4c61-bff3-6664d681bfc0"
                    }
                  }
                ]
              },
              {
                "id": "587144be-00a1-43bf-95a2-1fb6a686c777",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "160ca6c2-3ef0-4b34-90f0-4e56384cc12a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "87078e28-3e92-4711-b5e1-cea33642596c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad2f57bd-9bf6-4851-a5c4-da608b404b1a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55c62da8-762d-4f80-a611-1336741a99f5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "89c5406b-09fc-42d7-8f48-898ef4ec35ba",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "457b326a-7362-4f8c-8123-546618d7108f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5e3c2aa2-f5a1-4bef-b863-d15bf766e49c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e77b3ad6-4f9e-4e71-adf7-7ed433ba1362"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e2b4b8e7-0ff5-4008-9b41-198ce457c4f1",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2e96dc45-b68b-4846-815e-ae6df2a6fc30"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e79d203a-8165-445e-b2e6-78cf1732e3e2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c3449ab7-88e1-4f7e-a5b5-f5a7507cd12e"
            }
          }
        ]
      },
      {
        "id": "98cb2d1c-aa3b-4ffd-8dd6-161b733fe267",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "34ceceb5-2556-4138-85ee-87a2385fe830",
            "name": "Negative Testing",
            "item": [
              {
                "id": "709fc10a-7690-4a19-90c7-2bf1fb082922",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e7889730-a4fa-49b4-a82e-ddf377601e20",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cda43564-3d92-40f5-a646-8bd5f7005f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1e1a6dd-990e-4350-b1f9-68d5622c584f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97f1a4bb-1186-48a3-aea2-45b1ee8fd636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebbb1df0-f595-40f5-986b-50fdd0360685"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa30850f-a0e5-4cf8-977e-0180c3bf4ab6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b75ca6-d779-4a8c-8a31-be7e6dd5cd62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1d6c6da-1412-47cb-86b1-4be20058b28e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4f5a968-92a6-426a-a732-e833cb602fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e75b1cf7-990e-4766-b8a0-229102b60cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ff909e7-9a8d-4467-9bcd-e765f804400f",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba35864-5da5-4fa0-b8a7-b10372e87abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7951245a-927e-4765-833f-557fecbe3a1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d9436b-6d45-40e8-b1c6-3fc252935108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8d6dca5-5140-4443-8516-b8994b512b5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b17f54f-2d28-43e0-b5e8-c5e8bca9cdd4",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb89ffd-cc40-4f99-a342-f7b7eba84f58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c886a6b4-6e9b-4b71-8022-3ef29200b810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa07f194-0f8d-49a8-9138-d961190e110a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b54deef4-98ca-47cb-9bf9-f7c87b81546d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a4c106-b5e2-4e0e-94d7-7aee4c813b14",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3b8e318-1f97-408a-a42e-54cfc6b52e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8291950-a8d1-4f34-9d9e-a759eeb673c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2a99b5-a6e8-49bc-a8ff-3bc094ad7c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c079aa21-b55f-4ffd-822a-b073184d1f0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1c3d8af-6d58-4c3e-bcde-eeb5f72bb899",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c31d1a24-3bc9-4699-ac84-51af6fad5c90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "949bb17c-6327-45cf-9334-4cf69d733426"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe6df5cf-f39c-45d0-a125-6fb5792da871",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "5033b513-52d6-44fe-a6e1-f3248d2e87fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d207a39f-2205-46da-99a7-c9b64f20ed86",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbb3652c-2a1f-4f70-a67c-858f7313f2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d6d6e2-cd0b-495e-9a28-f46c259f1c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088a1a85-a616-4241-b693-bb523b7d7c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d9a70dc-ca3c-4ffb-869c-df5443c6b886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12fb2cb7-15ab-4f92-9e78-ee60369f8d4d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37bd2f00-87f8-4ecd-9306-2daac503a7d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd853d4-340d-42fe-af90-7e695a9823c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4980bb36-b6b0-482b-9a20-66b19381dbb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fec79f79-134b-4b35-bf5f-f6db6c00381c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "691b81f3-a56b-40a8-a735-c097403d6c60",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bb18af-f28e-4cbb-a93e-111812e78a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "079bf8bf-ea40-4799-966f-0291b2b3c626"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "170ff27c-5d36-4ce7-9323-d9256ca94802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b257f6f0-8ab9-4954-8e0d-14309a9b5d3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecdcfe36-5b2e-44c2-8d31-282081a64c53",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5fff80-4683-4f93-88aa-474e32e3802b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f35afee6-237f-456c-8add-bbf9659c221a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7014bcbe-a632-4c9e-b4ec-ea725c2d012d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da318c69-e2e6-4af0-8bbb-631058200dc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcf0a43-d680-4372-b668-a769ce2a6232",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95c04265-eddc-4deb-b85b-4d7e3c7a6d5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f6f0a4d-cb1d-4a70-b66c-5c0c56dc66b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4934e7e7-a203-44d6-96d5-1e5889c6ea32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ba76d2-1485-460e-8ca3-5d796c228002"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ca3303-ce0b-4968-8e1b-cbcb96a7a060",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "584c1954-f7c7-43e7-b3c9-130af5c3c043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb6a9702-4dd5-4d34-8cb5-00dedd5c5c0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baea6551-bca6-4e8d-9865-0cf4fb2cb934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0f089dd6-09eb-4919-8d24-4261e30447c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e118fa-5225-43c0-b516-1ac37984d03f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b8ff2e-a085-4669-812d-c21000a02477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471282e1-81a2-484e-b484-3ec1e4f530ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a141309-8844-42d5-8b98-cc817713c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "78c9e7c1-cc4c-4f59-9f0d-17f24f76035e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb55fc2-a9b8-4118-be6e-592a8d1fec22",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48308c7d-723f-4473-9af4-f4f6ed8fd005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cae1cba-6bfd-4d23-9ed9-6ab79b508243"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bcc5638-c5f7-49f7-a108-6f5983913dac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a7b9ea-12a2-4310-b986-26855a7a31ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b82d906-fc3b-40f1-a481-0c35967909f4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb874c2-e821-457c-b28d-e3894ea9ca11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a740e84e-5aad-44ee-a955-ed0cc10aecde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d6cf03a-1656-4650-b81e-b1a650e8727a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5038df-0613-4089-bac9-00da6f0977cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bae66ec-8485-4e4e-9a7a-44dcb47ef374",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9e77659-a1f3-4289-bdaa-ba6235b9994c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40312d6c-85c9-4fe0-8a0d-6558cce43a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6632f12c-f712-423b-a1ef-4387f6b0364b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "eea481d1-1020-46f3-968f-a878e85f8ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4918b5df-13cc-45d4-9a06-7b68039fb2d4",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b83d0dd7-a1f3-4ff6-853e-6329cb3aad4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a4882d4-2308-4819-a729-7174c5cb80cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98271085-aa90-4b84-88c2-116e2c805e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7236bef-0785-454d-863f-bfedf4214287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c64b1183-8e21-480a-a265-105764b26edc",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0483a5-3179-4fe6-a620-d0626efd1c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b790ff4a-8fce-4864-81c2-f42463241e16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668d99d4-7a87-4507-bccf-a8e20e4f672c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "525b9055-5f43-4da2-ab9b-99e8518e2b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d5e19f-9623-454d-a2d4-04992875b1fe",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fc06fc7-851a-4c1f-93ac-5151f5c0343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "181339a2-dc50-4b90-aa50-09bd8bbaa4d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7addda56-2d97-4877-ac6c-25b5139ad90a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "618bf944-440a-4dfe-984a-8fb77f2684dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b6ce0c-7391-4326-a508-9319394f627c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0478d41-0f49-414e-8769-b9f785a3b37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3be722a7-5eb1-4a89-a876-b4be8f3d59d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df88d0e2-b315-4ea1-b172-1277d5fdb032",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b7dbd7-9e8f-4502-ab1e-c101a8055ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d64aed6-5261-43c9-8e0a-576f8aca394c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3443d9-d4cb-4b5e-8736-3cf10310fc4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52931e25-757f-4df8-80ca-5e05acc0fc21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0018856e-cd5b-4030-a3cd-044d25c93bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39e54e27-241b-47a3-9d25-38068365c815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0704c95f-4f79-4731-a9b4-7ff62f4c8886",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac61651e-1936-429b-b9f1-d6980f188cda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bafa388-3d05-4fcf-ac86-2e7b29602609"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c923cf8-478e-47bb-99bb-2a3bed7b62e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fff45b93-79d0-44ae-aaff-744f2346db4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6ed86cb-5867-4424-8fb5-d5147d9eb5f0",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5631fe9-2c58-4715-b8d9-109fb236ee6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c23f159-2334-470c-850f-5a8d6d4cac02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a6c6d7-02b4-455a-b3b9-c7a86cc6923d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28e35bfd-33a2-4ae6-8e31-f082aaace0f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e007a01-a752-46d1-8ab4-0fbc6326d657",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a40821b-6ec3-4a8f-b552-34ed949bb91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5074ef7-147d-4d67-b2f4-9d5bee14140c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b7561bc-bce9-4c04-98fe-422747e574f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca339a0d-0343-4fb8-be52-6e84d9ef3e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb0a3b92-a144-4092-87ab-bee8f4161d1f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "674a3987-2118-4cb4-9a71-2630fa994228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179e3f8b-23c7-4872-af0c-5cff9c207d60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d62b2638-ccb7-4037-acba-ee0ae0d11c36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da9efaaf-93af-430c-8587-ef7fe02527d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d67b609c-3c60-4361-8d5b-686f65633196",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248a78d0-eb41-48ae-a847-881b70674bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13f1c3ce-b0b1-4472-9451-80dde9202018"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05eccc18-3d88-41fe-b9d5-22fb673a4973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a4b4da4-4bdf-4f48-ac0b-070548f6a1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43722076-0819-49da-97c3-1fb403c90e70",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6de858b1-bfcf-49cb-8fea-d3fe05b98121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "381ee1c9-f4a4-4054-847c-fde5627fc595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d37847f9-2b52-456c-a961-e5dcceebd844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62a0d885-dbb2-4d21-ae99-54ea7b82ae76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f9bed9-3028-41ec-9b80-7703759c01b6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e749025c-93a5-4a74-8390-026fc1a6ab7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b285c5fb-7247-4c71-9b9d-914079db091c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f13f38f-8117-46ae-90f4-019f31974dd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d88d7345-66e1-4047-b04f-66415f622afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db10fff4-3a3b-486c-a8cc-2649f73a6fb5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14240f9e-3313-48f4-b527-cb7f6baf1b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7552a5ff-9e98-41d8-9ee2-8991a8a2c3a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f2b064c-75de-4357-ae61-b32a8f1b8a75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7aebfb1e-428a-4841-8a26-71fde4d73e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfac5d3-4aa1-4852-b2c2-b1ca668e98e0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "970fed8b-d735-46eb-8793-4bf2348458bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44c00740-46a9-4923-acde-c36f42328dce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03648f23-b1ed-44e3-ad0f-f2cfb9d9ec05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a863a959-4fb3-483a-a393-f016ccdd2b0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc572396-b8cf-4813-abfc-4a8d60cb03b7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1edbd424-5c84-49f8-a5de-7a8c1815075f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d67f57d-0ac1-4257-8cbb-ba9a402f330b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d87b90-e2c6-41f4-97c4-76e55ace207a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0d59f95d-73ab-44b8-b253-9267d1d824f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8eb447c1-59c1-4aba-8cd7-2a128973c94d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61400df0-7486-458a-81cf-34f30c8149b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84809d45-da88-4ef2-984b-8b28c3707fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8628133-cd08-4bdd-b9a8-cdcfa33c0058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d18e2590-1875-4b87-91ba-bd353deb9ea2"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "58cac5a8-a390-4622-84b2-7a23f5be4d49",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "219e5abf-7786-4c91-acd8-0437f2b75b77",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0f351f8-238a-42aa-af40-37978a36761b",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "493a853e-ecf6-4f86-8b90-f9e0b6290a9f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f792090f-cc38-40d7-b734-2c8fc5e98ee4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7108c214-3e2f-4e30-ae37-7d9d9254900f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "557193b3-4adb-49a7-97a2-c7a766f8964a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6e842856-4593-4ce5-8ced-d1009e5c1bbe"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5921334-6e39-456f-a653-e5ef340ba1f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63256169-f3af-4429-9b0e-7a80652a42cc"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7463901f-d765-4103-a681-bdd12c11ed64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b7535b11-d63f-4a9d-b43c-5e1aab954c3b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6db53caf-f40d-4edb-9b05-d2a83382e970",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c81da49a-38a2-41ca-a34f-0e0256132915"
            }
          }
        ]
      },
      {
        "id": "077c6e9f-1492-467a-9340-a1ef85e0c578",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6a6ec3d4-81ac-43f2-b2db-b06fd4b279e3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "416c2feb-162b-49ba-9b51-bb9cb3785cd6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a318e871-0a36-4225-81e2-8ce544987463",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af0d447a-237a-426f-a160-14759bbb0c01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9612ee0e-6d26-4d56-9032-568e16f75cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e573e77b-a0bb-49bf-b2c7-53441f517a9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "27ff6544-0cb5-4982-9718-39c60cfd927e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d9b8e3a-4373-4a31-90cc-3023b217c04e",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a0a3b7-145c-46a7-a9aa-668373d95fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45435dbc-2fab-40e4-abb0-24291635172a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cff4b731-ec01-4256-ac5b-c97e6776567e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "106e1537-4f13-4fda-b224-1b467c013a6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f5f4aca-1bce-4e37-800c-14bbeb348331",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acebe0c-a42f-4f6c-a591-db96792808af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a9eae9b-7aa8-4a4e-9151-88159c92f82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dce50ffb-03dc-4f15-af9b-b086b8d97781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a95fd5b5-b72f-4ee3-a8ef-59240eb8e7bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4dbd1f-c401-4946-84f9-c8952cc8edd8",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1865e276-15ad-4813-a401-b871cafc4d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4165ff6a-7201-467b-b8e6-0b006597ccff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8291390-471f-44f2-a402-7dfdbaa72879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76458540-5309-4efb-a7bb-ae1da1a67639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b9c2cf-5901-4eed-b3ea-28b760ec5170",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e6608f1-8ce5-4dbd-b1f5-b8684a5057f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58961821-b64b-453e-9799-f4ffdf0d85ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85524060-e587-4e1d-819a-0d14a62cb960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f64773c-bdb1-4478-bf6a-6b265c38d37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5aa671d-80b7-4952-a8f4-45656bb17ccb",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2075c22e-434d-4101-a627-54f6d7efa77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e2fb721-6ede-4d9b-9697-44cad0921114"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e3abf6-faf9-453a-9bbb-602751162713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e703d60-ca31-46ea-b4be-32638112fcc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe27f19-aed2-4940-a375-bf02f159d6fe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e01a9e3-c487-4ef5-85b1-4b5e8fe704ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d464e6f-3a40-4c6b-bb33-f955035ac73a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53775a53-6e00-417f-9f5c-a85d3a52396e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "b3642d0c-7dde-46ac-91fd-c57025ef52ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf0d54-e2dd-404f-86d2-a75427bce31f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcaa8f03-0aa7-47a1-b498-33817995c18a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc587e6c-c06c-4d4f-bb33-59b78c122867"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c24aa3-e216-4158-ae7d-dbbb46825dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da7e0575-16e7-4e6d-8127-dbf876fc11d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734d35b7-c26e-4223-90d7-81341cdc9f6f",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef950d39-c57b-4537-aee4-d27ce37f5caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "488de82f-4126-4e6d-ab9a-00230e8dc48c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8976b090-b995-4422-a5fe-a3cf5a13cdaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7987668b-3125-4d10-b7f0-5ef3e057dc20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0055c542-14a7-42f5-a5cc-af327d0c08af",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94a14897-a937-4238-87e3-f1cea42e3922",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0025f0ac-a6b2-4bf5-bf4a-8b96f8e23cee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60939141-2192-4a8b-bdca-6b5e51170815",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2334c44d-7bb2-45c8-bddd-e504c84cb172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0ad4fbc-9ae9-4d2a-99c4-6a0fa2aa0e78",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cb8f294-e58f-4027-94c0-0434fa6ef8ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33938db4-9b01-4dad-82d4-92c092bef60f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf6bf75-905d-4d16-9aff-2b255bf05ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "06dbdcc0-9db9-4a83-9bcb-487135a48629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea674990-22c3-438b-9b42-fea359655a60",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3525d5bd-8a85-4b8f-93ab-8dc51057b24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87473b20-80c0-4146-af56-062876eb1c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c53ac8e-332b-45ef-ad7d-c2608c7afc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e83f4017-5ed9-47e8-80a1-9562e6ed9d22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "616a1804-2f6b-4c61-a4d3-e8c3d646cbb0",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99c366c7-ecae-4b90-88ff-f2248e494ada",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b512f7b5-bf30-491b-a435-102e7ad0d8f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b592e-f50b-424a-8bc8-2812b4b640db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa29d9ba-6a90-47dd-b036-88e6c8e761ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4e23dd8-44b1-4eb3-aa35-8970d5e94c41",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb15cf96-d369-4f27-ae1e-f33882a22120",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1230eaf-7d81-4b88-a075-3074d9b4afba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90e9e42b-fddd-493a-aa51-96dd56fbfef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "94f650b7-979c-434b-83c9-213ba4ce5c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55a07cee-76a8-4591-9028-ef0b4796843a",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac1ff66-8c08-4ff9-8840-e5d51773ef1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac6d8b6-2cb1-4283-8501-19cc2fdf3996"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1668af5-be45-4082-a5e5-d5af4bfa3d8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "41186cea-91a3-4c7f-a157-4e9e1d8483ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6def3d61-c8f7-474d-a2c5-dea5777779d3",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfef037e-fa62-4d75-8dac-5438e99cb45a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3225fa60-cfc7-4ae1-a270-9ec9c05f85be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "432a89fb-18f7-475c-ab1b-5c856a3631ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "21403c48-9bb3-45b6-9aad-17499119b827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e0126c-9ac2-48f5-b203-c5c4736f7444",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d762cb4a-e631-4059-b1d9-bbba8b096089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "182b9a82-a9c4-486f-841b-315549fe98ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b041fc-9080-4628-ba8a-c4a56de2ea5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "675b6f50-1fe3-4a94-9302-85e1be594c2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4cb94a0-9faf-4451-bfa4-1c5256381dea",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaef885d-f3cb-43f0-81ce-9065b0d6503c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b15c645c-d166-42af-99ec-5625580cbcd6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "721b5fc3-60d6-42a4-bd3d-1ed7ffff17f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "662663ca-2b43-455b-98c9-7fd8043d62c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7d02279-fc67-46d6-b210-ec05c6646535",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcdeb80c-fb27-4397-b68c-99448d7eb440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32d65c10-2699-48e1-856e-8e71d6ff7dad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964a0151-84a8-4e7c-9b4e-d85c0c406e2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f11c8ae9-6c20-4ffb-92f7-74a5ce90f0f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecd0fcbd-b64b-4272-85f5-10bc0969101a",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ca08c3-6488-48b8-b360-86f7abe407a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edaa7875-ff29-45ef-bf0c-01ebd802021b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908032a1-b482-475e-9e3d-14eebc88c2cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfb8e807-c4cc-4a8f-9805-c32368006107"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49d2c17-3b60-43af-87ec-efaf65f1119f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2900d4cf-fca2-42c5-8ae6-0c4665b50a0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5035b7ae-ffc5-47fe-aeb7-7e5b5a76e117"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833df70e-c2ef-4eed-ac6b-9adf5f6b9fee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ccfc3a6-2732-4b79-b281-ddf5ab345982"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c73dcde-03e7-4483-afa2-2116ac063a8d",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1d7d4f-5d1d-420d-8ddd-6061fb2aae51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31ccd4f3-ee55-4311-ae5c-01f38adde76f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dca80a9-d4c3-41da-8164-1b5633793618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34b20a90-9e40-4c42-9629-5c609c7aa81d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca61867-9745-4b41-8a80-bf8694bb689e",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43fac3f-78f7-4fb4-a579-2ad8e4ad4b05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "abc409b7-e03e-4944-a272-e7cfd7707f87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d72a877c-5305-4771-a362-09a9f73be44c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ec57ea5-0355-4421-8a47-14469f75acc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da26a521-491b-4ff7-b131-a9a38bbbd472",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67f5612d-8dad-4a49-b87d-00a70927e6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1832d533-61a4-4ab9-92ac-d3a7b16f6a8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfd47921-7de7-4c60-89f5-611117897f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e9e3d14-00eb-4674-bd33-5f509ffb7270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef21c3ad-dd49-4848-92a2-e24726858fea",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddf09a8f-6eaa-48f0-a232-a739933cb376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c942293-328c-4fa7-bbfb-59141a45ae33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d10e55d-1a6d-4120-8468-83701708f908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c940a11d-56e2-47d7-8cab-c2b710d55ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eef9618b-b5d5-47bb-aacc-cecf9c83706c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c488d96e-5d5b-4565-b844-418c2db7947b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcf57efd-f1c3-4099-b62d-f1b1c8f6c446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c0db2fa-78db-4453-973b-1c8af4563708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "970f4d34-756a-40c5-b1ba-54cd603765e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f7b8132-cc3f-4165-aa28-386240385637",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e99426fa-dfa0-4cbe-95a7-d28b753f976e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eff081fd-36ee-4397-a0f7-7a10608c2d5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "001c106a-6c58-452d-b375-9f64a3e9f8c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72a7cfea-85df-4874-80eb-be618ced80d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca5bb1b-6768-4718-9f87-d91685e97740",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b78b8ce-bbcb-458b-8289-43cb407a9729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e157e20f-d71e-4b8f-8009-d3809984bceb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7977e62d-4f52-486a-ad6f-f3a9f52c3dda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a9f0439-d009-41fa-9f77-5e3280fcfca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d205fb4-c215-4066-ae1b-40a14216b154",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b761c4-8094-4c79-8dae-88ac96893e93",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "729d8ac9-5230-4432-9b30-1f39aa3d3887"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4599698e-44a8-4ed6-bd3a-445adb536d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f722735a-57d1-4d1d-9658-ac9de86a81ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4490a756-d67a-45dc-aff6-923e86a8821f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4abeac21-3d41-44ed-b18b-aac9f81c15f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef749757-56dd-4698-833b-5a74a8a49d55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c474e8-c65f-42a7-b33d-8c59716844db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c68a2a35-3710-4cc1-ba44-c71bfbb36b95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e76fe15-18b5-4795-b236-a4fceeeedd4a",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cace92fd-2177-44f9-af8d-fe1173f0b7e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee1c7c13-9804-42f5-9789-5433ea9399a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc11756e-b386-483e-966a-a312f3bf4f46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44998d00-1568-4da0-bbde-38a4b8455eb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760f187b-2730-4082-9f60-0faaf655468c",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d23e7c40-2019-4029-8b94-083479efdce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5a1d7cd-172a-4557-8691-7061fa2ef6f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6ec2f1-6502-427a-a2ae-03512bf1ff0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58319df2-43b9-48ce-bbb7-2228a4806a2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "701fad46-813d-433c-8074-05f5cfb6f3f1",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "119d513f-8ed3-4ff4-9f93-4dc578f15051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c5cf916-88a0-46f2-97b7-a1b5bc034421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1100653f-e91e-46e8-900f-7b1c7e741b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f71d6dc4-fb72-47bd-8034-683fb5c5b0c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cc6060-91b4-4de9-aeda-1ff136d75906",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99b70160-ace5-4545-9266-a32cbfa08a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ee62fb-17f3-4df7-869a-bd6477504c4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cc6da2b-46e5-4455-a227-3a43f4a538d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6816bf97-4167-4501-87a9-2157f558a8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd57336f-225f-4dbf-ba08-5d5fd8c68821",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cd9b7f-c4eb-488d-8cd2-f0dc05ecbb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8feaf39c-8e12-4a13-98f8-680d6399d8cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f5f3843-689e-4ad7-b151-3a197c481a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "418ee66f-00f1-494a-bedd-3f1b8dd7dfc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ad6d80-f887-4b3c-9659-df333c2bd73c",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56bc4092-b7e3-4aae-87db-eea2aa3700ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5a2c76b-ea60-4b4b-8937-863ac53df8ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f57a90d-f963-4894-9186-08fc313b394a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cbf43a3-c40e-41da-b7d2-4b56094f44a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acec0362-554e-4200-8e20-e8d757c882f8",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd4228e-d5aa-4cf0-8552-9d8d61b96065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9be821-344d-4110-8d35-dbb120fe31af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73e63021-cfc8-4752-ba6b-14c9077b3eb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "380e9ab6-e01d-4243-9312-6e9e3c7c2b53"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92a5586e-ff5a-4b9a-b00c-03b916534d32",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c85b8496-1edc-4b9b-87dd-cca4c5a47837",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3405d88d-8692-4273-a368-f9931e5f0fce",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a5164d42-560c-484c-b26d-b0c88769401d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "267c347a-0b94-49fb-99b6-fd213f13c90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "86a92041-40fc-4fe6-b6ec-27642597dd5b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "17173faa-822b-4263-b880-6b860a47f2e1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e8ac7a8-85b2-4253-a8e4-e676826b0c30"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4f656f62-9afd-4028-9e11-c576cba9a6cf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48f89d43-2b80-4ed7-872e-9e9d353cfcad"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d2619434-917c-4c8e-a633-f716633b9d98",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c82bb92f-748b-40bd-ad36-ded2c0505a1c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72b7cd95-f98f-48bd-b167-bce606e79a49",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14747368-1f01-4fa8-b587-e0f7b4c07987"
            }
          }
        ]
      },
      {
        "id": "a35f3fa6-72d5-4a67-b873-8e078fdeba11",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c0b347d2-3fe9-4cd6-a0d3-71308414051f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21473b32-5744-4486-bd70-35b336b2186c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8f3019f3-6b51-4ec3-92bd-be37aff58890",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6382ab0-3f33-4cdb-9fcc-08fbc3773431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60892444-49c9-4983-aab0-c062e88307fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee9ec1e-5f7d-47e4-908d-ec64fbaa9480",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfe91180-3526-49ac-8765-33b76a83156c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2483c494-ab8c-4607-a39f-bc4d276c1492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c48ba19-58b6-4c73-ba5d-5088fde6a853",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ebeeed2-a836-49c2-b913-0926f0977dde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d474fb26-95f4-4cb6-af64-63dfdfab5da0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3294cc35-8861-4b25-ad0a-a03189581d76",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe604a9f-fea3-47e0-95d6-ad929bd1fa9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1233723b-a12c-4366-a7b2-e50ccf634ebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bfa65a8-04e2-4863-8f14-786a7d2aa3f1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12baa4ad-1a8b-4df3-8736-04359befb20b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0529cf70-c60d-4d39-8bab-df6211a70581"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55c4512a-94db-48cf-aecf-a44ff7d6ebdf",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "896469ff-23b6-4dcb-9676-2ed6e6978bce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86e49a3a-f92b-4125-a216-f15968c3ffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35ea676-dc34-4a31-85cc-61c327ddf19b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0318725-f03b-4fb7-9bef-514bafdf2d15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82a3a2fe-572e-4cbf-9cc2-147478c84f4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39678b25-03d3-4bc6-92a8-43c8f2ca3d10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "992e68fb-047a-4305-b910-644f3e7bfe0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eb32667-b509-4652-87e8-4961c4538543",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcaa401b-0648-49af-979d-b31a1e8a6b26",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0d13d19-18d5-4bcd-bc3b-7172f2de1a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c613c5-6632-496d-8dc0-7b12880bdc2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e67bf0ac-4721-44ee-8903-51edbca11366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08a2812-ddf8-477e-ba45-cd4b15724bf0",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb8f839-212a-4624-872e-e7281ac02d44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e0a273-c223-48f9-a561-5804d13b8f2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e425545f-fdfe-4808-a129-a8df951536cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4a96051-706d-49da-9282-a03ac6955f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd225f64-2ad3-4f70-b633-8d881c291594",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7737f0aa-8d28-47a5-8a87-a430f0b4e840",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e7eb6ed4-ea6c-4573-9ec9-cad8ec85889d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "10a89846-7502-4fa1-9d1d-2176b5dcc6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8cd5e74-4a96-427a-8880-394349e21b1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e657d6-f209-4e29-ad68-bb3a6af03722",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1893ebec-e292-4090-b025-e91565d76405",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "117c5f66-66d8-455e-993e-b4fcd51610fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c59ab06-ca3a-4140-837a-344efee5b172",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0d15d0-707e-4930-9f4b-29f31e64b93c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "989935f1-bcdb-44fa-8fbf-3d504b6f5dfa",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e956a026-1277-477b-99ce-d5e8b8e367f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "225cd6da-7a8b-4a86-86be-d8501d9bc2b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c15f5c-39c3-41ff-a499-6bbac7f03a62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c41d3bb-35de-41bb-aaf8-8be5393afb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f73f9b9f-9581-4a80-bfd9-b5009d70c05a",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b8a0a-51d2-441f-a9c6-e9bccafa027f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6234c89-9184-4d50-8246-2980701a5537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb0502f7-b435-4443-a646-b0b3b7cc8b91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c11c4f49-6211-4c5c-ba52-d568e8392292"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e63fcb2-7ec8-446f-bf91-e4a3a1682f51",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4bef111-d41f-4044-9d60-8c1f6ce54b2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "990af805-2331-40ee-ad19-4278677627e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79b5b137-8865-47bd-b7ca-e4e8c10b9270",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d957e0ff-a59c-43a2-87d6-bf7875293551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62b81173-c267-4547-afdf-faee19e0b086",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d621943-bf57-4f01-807d-46befcebd85c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d37a48d-a973-43ad-a6f1-2897c8a7aa9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec5bce0-2ab5-4430-97b4-5bbe8d9f5c4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eac630dc-0579-45bb-8318-e78aebea2b56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d235117-4048-4734-9027-190afd6c690a",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4894784-b43a-4d30-8afd-41d39496bf75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0160f219-c581-45f2-8914-6a9dfa864a5c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9a8d33-6000-4a3c-ba94-b3a5baa3e034",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65bb8e97-1e40-44fc-9354-bc54b8aa57d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5428c50-6fa1-4c07-af1c-7c14f26d4453",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e392a48-acf7-4b51-a36b-9a670c2da560",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae516d80-0382-4795-b6b8-03f9ab2c8f3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6135e17-92ea-4d20-85c0-51860b7910ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6036f1e2-e47d-4338-aadb-582eb94b2f03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd1f5bae-ea70-42f5-b0b2-a148a0f88ced",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1831b979-e3c6-4265-8929-2764176c1aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b504747d-f875-4f06-875f-1bd3766476ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "81ac044d-4737-4ff0-a89d-2f2dce8cb61b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b8a9ddc-4a18-4f65-8667-65c492a3e0b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a3fd16e-518b-4755-9ffd-551c2bdef787",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c492fb5e-7e67-403f-ae52-f46c85a46368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef203715-84d1-4b6d-96d6-cdef0d1dfb52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b2f51cc-8175-4dba-9ab3-2a45feb6b715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff04c9be-b718-4aec-8d2c-aa2a0740bf51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e62222-ea56-42c7-a37b-4c45ffb12d0a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611838ee-6af7-4b44-8787-9c64bdd3e6c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf15e145-ad27-41d1-a7db-8a46e99b9a81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b2b262-0601-460a-8983-992eb6f0971c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ecb5382-03e5-40ee-9ad3-a026d5dc4284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f11d1baa-564c-4a36-b002-08b1e73b25ce",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2fe1306b-ab69-485c-bcf1-2bd7dc0f07a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca87cc08-4107-4e46-8ea5-db4e75d9df09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8986a45d-de90-4231-b174-e37fbe39cfbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50e3fe19-2465-4eb8-b5a9-5f8c5712302b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4233430-fab9-4046-8196-9cd85b0738ab",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2bf0cb8-39c6-402b-885f-be52e9caf57b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c88dbee-3024-4607-9dc9-6a09b2aa5586"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f72f7-4936-4f9b-8bad-cc623fbc903d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5bb48f-8a0f-4b41-ad02-f397c0fff616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93a4ecd-aa07-4633-b958-29b1e5231c26",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d34bc21-fdbe-4d81-adcb-604934d51238",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f165c6b-7b0a-4486-85c8-d5d46d7d8cb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3e13f53-822c-421a-816f-edf307cad98c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821c868f-aa1e-4348-90f4-b85b5f249c5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29321efa-5de2-4c62-9fa8-86ac3e044a8d",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7ea05d7-9c13-4326-9a5d-b16080a62175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30140ea5-71cc-4dab-9b06-5714f60be14b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8af0b9-35b3-497a-8ade-d77e0b70296b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2c35a05-ae21-4ae1-a48d-bdb48ff38af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17053b4a-e7e0-4296-926f-02e1968609e9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "843bea21-0e42-4e34-9658-79475f03f3f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61df93be-1dc5-4fc6-9698-faf0e6d1d4c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "531f0d14-7d1c-40ab-8b5e-f4862bd64212",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdd06568-3ca7-4a65-bc7d-070dda421f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb6a33c-418d-4c8b-993a-7cca8da25601",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1019d08-2240-4346-bd1c-410a337e5080",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3043188f-e80f-401a-bb98-e4b9d6930c5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c025a4d1-e719-416a-9e47-afdeeccafc0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70ec187d-89fe-434b-a830-0562dcdc62eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf82e71-06d9-43f8-bbd6-50aaa41710d5",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c248003-8552-4893-9020-ee62657b105c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "937ce770-d906-47db-a99c-57fbad334737"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "759ec6b4-70e4-4fe4-95ac-2cc866e17179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9846605d-c954-49eb-a683-2780f55b595e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ec0e17a-3f98-493a-a9dc-70b7b1861095",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cebfe1de-285e-47a7-b979-67d3049307c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a580cb2-62fa-4dbd-924e-52289a51476c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cf991e1-1ba0-423f-8e2e-7f563a432bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1a4442d-96e8-4193-a406-0b7023280324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e358b14-6555-4544-981c-9747f682c777",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51002b2f-adb0-4bdc-9a29-cea7b910a96d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d9edfbaf-d710-4176-a956-196b0f9b21b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03196f10-5679-48f3-8788-4b132d86a017",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98c2bce7-6800-4fa7-b937-bf38317806cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4ada0a2-cc4b-4681-8f63-5aa97e64c76d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a9afbbd-9e2a-48de-bd4f-bb968e0c28b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a398a714-d318-4986-91bf-33813b21fef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d4f2d97-6cd3-45fe-a7d3-f1aa95bf779d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db9a1a31-f21e-467d-a7f7-22d8cc45c607"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe73ef4-4e4a-4970-9f6a-66decc21167e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27d3174-eda4-4b22-aad5-74fb901ea7ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a22fab42-0193-4cff-b9fe-e0c2fcee71d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02e308d-1684-4e65-9916-efa77629befa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "599c3eda-414e-4e02-ae82-6f1bcc3133ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d69677c9-6630-4141-b1a6-a5d271ea2a9b",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92bfcaa3-01fb-4209-9f25-adff1ce9fbd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f17c5e85-ebb1-4195-9da0-fd724a542b22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "209aaf24-8545-417a-b358-16c81712a754",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d554107f-dfc7-417f-bced-357dbea521fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69344f45-5c42-43d4-83cf-999e05f7f574",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62b67445-ba56-4377-9bf5-f78b2b289462",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f6e6a49-368e-4c3a-af55-401737398ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8e0ec9-667a-4dab-aba3-cfdf328a4e48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2429867-7fe0-4d21-bfef-1c880d85f507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6973d9-24d2-4f21-be60-71301b9a8017",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "154a445d-fa07-480d-a001-8728dcaa42f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a97e85a-6eeb-422c-a951-590c9d5280e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1c9658a-a40b-41ff-9a26-c47b8ef5da4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99219262-1912-4078-a212-9c89abcc8077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393561e9-6834-4dfb-94e2-a13bc8b8572f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8c0c08-7c27-47eb-a89f-af33461142a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "814ac267-4e71-47c1-8bbc-b953eab07bd2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b599f367-6dea-46cf-8acd-b39a84d94a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb0645d-32a8-4cb2-863f-2ad082fb4dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00a9f5a-23d0-40dc-9d9c-29dc6a1be8d7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce533ca3-3956-457e-a650-7c51e6870df4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf70465-5757-4320-ab5a-9b538e70d379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "94da3c1b-f7b0-409a-889e-1e4bf172ac22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd75a9be-cb4b-4298-b936-a08b708e0c6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2e5ec8d-6a94-468e-853a-285599c0fd51",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a644c22-044e-42d5-8b05-d4bdf9adaf8d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bbac341-8f47-4cbc-8153-d6aec673ca3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1856853b-3998-4de0-abe2-890171203577",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77ec80a-09ec-4930-9022-fa668661052a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd6d8600-06cd-4f5d-85ed-87845b3482b1",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0f5988-1149-4936-a243-be1097a83571",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7022a47-0036-40d6-8b3f-f5e33036b8a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f962fe36-3a1f-4b94-9987-445f350a3200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3c0c7fb-6034-49f4-a47f-5555cdf37d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da252c1-8f70-4fda-88eb-9d389af3fc6a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d15226-6968-458d-a8c8-fa0912dadb68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b4954c0-60c2-4721-8830-adecbe9196ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7744a2c5-cc9b-47e0-9dcc-9ec48793cfdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca3ad716-41e4-4a59-ae7c-2edc82acb220"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ecc8de9-0ac8-47a4-bcd8-ad8e774851ad",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5a29f56-0116-436f-84e7-c0dc4c9aea34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60c94755-9597-4be8-9969-cf9f233f7ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54d0eb1-4fc6-4957-8f33-9d3c4b38bc4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8e37bc9-e5e2-458c-bec8-e05594c35746"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75358c1c-935a-41a7-851e-e639f40b1c07",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b27ca768-c740-4e30-aecc-b2f984e8d51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6287e651-e536-40ec-a97b-b7f5430eadd0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "125140cc-577a-414c-9674-8597958de7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76c15018-b907-4f85-a17f-9e78c41f1697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "987deb4e-d6e1-4103-989f-231ac4732849",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff961d2e-ef5d-4746-8192-95f655bb54b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9a0774-0288-4081-ac3b-37a0c61e7909"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "984faa99-0f4d-4f67-96a4-2369dfdcd07b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1579ae0-dde2-45b2-881f-348ce1a6f38b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcd3224b-df82-4e4c-9ede-22fef1836b4f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d06f99b-0a1c-4220-9453-c3f9e05a1e0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e935e85c-a7f8-4459-8fd2-dde7e7873b19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9304c4fa-d05b-46c7-b242-d534b51dac6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "406a4a2c-251f-40fd-911c-59771448661e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a878fe-e141-4d89-bcc0-c1f3a481f5b3",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f7d286c-22e7-4774-859d-7d8a24a28aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "613082eb-d9c8-4c99-b2fc-1d49a20b4575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3ba2b7-644b-4b79-879d-45b6e4909338",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc76274-9e2e-49b5-8043-04a391a6eced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f16be0d-7365-4f97-becc-968533548f8e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b662abc-5641-4c34-8740-efac13bab805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12655892-f54f-4259-bc30-f52d059863c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "786ebccf-73d8-4924-80db-fcfa3e378ebd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c9a5aa-0c2c-4012-beed-044634ec31eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfa2c7e6-6765-4322-a884-7cc0a96d7151",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf888b6d-8d36-4100-a29c-741d39878cde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11fbdc8f-45b7-4bfc-9e62-7c382f186f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d21fd087-a97f-4086-903a-c11232306d39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6382ed8b-b678-4165-8eba-dba287cda253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "064ecd16-1f60-43d1-8d5d-81279be51a3f",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "888ab725-11df-4ee0-8835-f82941eb59d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75d0be6c-2fda-4c21-8de1-664e28a376c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bdc890-1297-400f-9e14-c6915a840c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cef769c-3080-4470-8a49-7bab5f935cb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543cb967-5757-4e49-8740-de86ecc9e924",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd590324-52e8-4c54-ad2d-87ae9acb7701",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1edaef58-7ba8-49b2-9b77-b54c9e7a8208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8af8c98-2957-489b-9121-f5e5b7e61a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a361f170-3e3e-46c4-8253-06107028f087"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40893c93-e2a6-4871-8788-ea0823f8076f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "776aa3be-fa7c-499c-90ec-062f72abccfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f29741c-679e-4f67-a9c7-abfec0f720aa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5df410f3-01a5-457c-b266-62dc5ee97681",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d3f5cc-c160-4655-8acc-c0439edaee6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96bd004b-0125-45cf-a095-359eb6aae9a1",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69066d88-a753-42e1-be1e-27386ea1f181",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "26c25f6a-9558-43f0-9c7b-d2f8f2645de0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28e46ea-8df9-4176-892e-4e4f83782f09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09f01ba0-0012-4cd5-b254-3dee764f55bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa11b67-361a-410e-b1d0-51bac776a350",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77da7312-7658-4527-92b8-84b1057aa450",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203a63d3-5764-4b6a-aa04-16c0659f41f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64cf1d94-852d-495f-a489-8adfd2384ad8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e166046-4322-43e7-b615-8f6edc25e9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57566cda-d978-4093-9a63-ce3936da9fb6",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6f2e13-cd58-463b-a0a9-dd6647f91489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "624792aa-f97b-4ddc-bf26-ecfc3dfc00c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e42199e-c9b7-476d-8d92-33f67534102b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a4c27a2-2ae9-4b9c-ad57-d6bdf82befa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf501ed9-908a-4e51-9434-dfabb8d24d30",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afee2587-6ced-457b-8f5d-b0271a33d130",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "055ed0e5-66cb-4035-81b0-84b32daef470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1460e9d-0b24-4fd9-8e77-12cb35018b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1123ec57-d652-4682-9a36-6a2e4ab6b7c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfe2786-3e63-46b0-a2f4-aff39d7eba83",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2adb1603-0a56-47de-a63f-8546bf5c03e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e221f2a-250e-41b5-a534-05cfa44c27bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14514e7f-2f5e-4c48-9a9c-cedab540aa02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d266119b-1c38-4077-ae40-4a47d60d1602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e996de77-7ac2-4a35-bd98-a106c33dd920",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfb5542d-f93e-44d9-a2c4-d36776bd9643",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5330a3c-ee77-4416-b741-dc23a0f9bc02"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3138c8c-ebe9-40a8-8750-7ee62fb0d70f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aef8a70-1ee1-43cf-83b1-ecad20363338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ad5b5ab-fbcd-4f78-86a0-2a674a784940",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5832991a-9e1c-490e-a50e-aca4c873ba4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d51736f-27bc-44f1-8ee1-5832958a91db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "277d53c6-fdf2-4090-8ce7-945babc57d5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1174ef0b-fae2-4e7e-af33-9bb64c16f8ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c0013b8-105e-4295-97a9-adf8fef4f660",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "549a2ea6-fe5a-4b36-8c00-a673de549fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5d5d8b5-04bf-4fcc-857c-a796a983d01a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2d907c-a768-4434-8f76-b94ebe78bceb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0528d1f9-85a7-443a-bcfd-785a93dcaebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49676b71-b8ee-4310-9ccc-bf65e6b46917",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454851a5-57bf-45b0-a05c-c466c9c34a1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f8d6800-d787-48dd-940e-665420fb6ed1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd5c98-23b5-4b79-9b2f-a9febd1977bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bd5b54-6876-4c87-9231-709ccee22180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f8b040b-7fd4-4592-abf3-a86e6840d0d8",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1dc16a-d4df-4dbe-b0ed-3f9e75f2ea35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00084403-0829-4c6f-8952-0c6ccdba4191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05589af2-4a03-481f-bd19-09939773e03b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e9f48a-566f-4bbd-9c75-34d62b65a22e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a656f74-037c-495b-ac7f-59034208c701",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac2f738-cab6-40a4-83d3-3f8aa65c128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f6dfc6a-c4bf-4bd6-befd-668dad6b4c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc79ece-0ae3-49bb-849d-07e5b391671b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0091e733-3c62-4aaa-8c73-504f5c483b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d80c12-9ded-4af7-a5c0-d44db1936a5e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a8ce2a-e49e-4ba0-bfe7-7f048b4fea2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2e0af37-6f81-477b-ab55-9597b75fd897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8b577d8-e625-4eb5-9c3b-b359c9f66546",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9baa1b69-9ec9-4bf8-a662-c68fcd9c4a04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d3bfd41-a4c9-4185-9cd6-b0ae21e9daa2",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a337e36-5b67-48ae-975e-36c898f1257f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5b56088-e120-4cd7-974b-96210f2a95e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a09b042e-af30-4aca-8df7-f58fb72cb0f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31c318a6-5cfc-41ff-8604-1b6a08a7f166"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e776b5-62de-4e45-a132-5fd176c26126",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6346171d-94e1-4ac8-a695-94de977030bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46c2584f-6c99-4044-af17-4f06358cf6ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "670a4489-b9c7-4e6c-a292-b2a99af50393",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb1b1dcc-9067-4e48-89fc-6cf95cd5ad41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78a7c17-8c49-43c8-9aa3-68119d076341",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1136f0b6-6450-4cbd-9fae-b15c25f3b79c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b375a39-e5ff-4964-8945-28bf0f81ea6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0675de6b-bdc3-487b-b166-aeaf3590fe11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89669ea2-c65f-4a2b-8d57-c3285960a4ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8de58123-5dda-4b17-b53f-c23325e8d979",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fae8f8f3-c0ec-43f3-8c82-d799496fa6cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9fec1736-2030-4547-832e-b1819162c8b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "429f1d4b-272a-4534-b284-dec7a2c238e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5754dea-b691-46ff-8dea-be4bf2966ece"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ec943e7-04fe-41a6-ac8b-c81a6d8e9d0b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "833822de-9e75-4b10-ba43-23f10255abf6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f48c5c3b-a979-4293-b2b4-17a0b642e33c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0c0d008-107b-4c1a-b9e2-406c2d14b4e8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e386f322-8309-4a84-877f-44aa7954f8a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cebd0d86-6da5-409c-abc3-7350c8fe8625",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6905e924-2c3c-4fd5-98e2-792d4717712d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca23a552-7cdf-42f1-8830-1cb7a7b89363"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df4d73e2-d2f3-460c-afd0-d3e22a65848d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d06a2fd2-0f9f-4455-ab8d-819f83e0383d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2d3f01a-bfad-4da4-9a81-f8d02ad21143",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8581963b-5bc0-4e8f-97b7-5b7b7ec2e24a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c811228-1aa7-4717-b6e9-0bc56c35f864"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28326a85-80c0-4168-bd3f-2b6668ee0d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "529cb289-05f4-43b3-a6c7-99a95700b7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3598edd9-659e-4849-a1f8-ec619113d43f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b2ad875-aecf-4ccb-a999-282d23af3fcb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3f66f6e-8da5-4926-bf70-cf25518fcb85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f60e2761-caf2-4f30-b40f-54dcfe04df9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47b5189a-7ece-4494-a87e-a7fa9af78064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a708db5e-210b-478f-9d35-e4cbfdf9c9be",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f048df1e-a134-4451-9a4e-2c8f423152e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a414fd0a-b2b2-4711-b0d6-2cc45a0c3d59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff02aff-3d4a-4212-9d46-1cc7c272f8be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e48bc524-bafc-4f87-85fd-fb38d3fd9819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9e6e01-ec3a-4e44-ae74-a738effed5e0",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63ae71-536f-4fe8-b97b-32cf9e2af45c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed527af1-4c1f-481f-8f89-be2b6043e9f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5114b218-b4f0-416b-b012-b5c41af17187",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97a1fbd6-a29b-4896-b35d-c9cf81b60f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254929d3-7625-49e2-856a-60915433ba4c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ee26f20-a2fe-4fb0-b61c-aacec2a2210f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8b42af28-363b-46ad-8099-c7cdc7dc62a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "754698ce-5a76-402d-80f0-6de666f77e75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bbe21e-81f8-4611-96fb-29800fb5063c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b252de-dbab-47ee-af2d-52dee3c19d01",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a0ee5-2e5f-44fb-8603-0973671d4a2c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8510fc84-8561-4817-b2a9-9f82180160e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5802769-a36d-4b44-8026-93ba686f67bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2753dacc-3b27-45ca-b291-fae25ff56e1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f795ef1-b0e1-4f9d-af65-90db343bd7ae",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d380c508-6609-45cd-b9a8-7527e94018b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3d6b74a-262d-44a9-a563-2e602196e83c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d79024-260a-4eb7-9eca-c5ad2315a89f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbfc9b9-f1c1-4504-ba95-99d357e47da1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "189e037a-5353-4fab-8da3-5d87ab94d843",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "892d201f-eee8-4bb1-8322-f3361fa0dc89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b540f7fc-b52b-4f83-a388-d8c9ddf805e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8551b26f-d11c-4a92-8745-4ffcdda2a20f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25e03e3-77ee-4bc8-9b0e-5566e65e7c4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bacc2467-e2ea-43a0-87e9-a4413405dd4f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a30051e-e4d3-460d-9b79-e5d8fc8c68e6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a354139-3a16-4b4d-b1d4-abbf42a5aa71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8474cc80-0965-418b-96a8-df40c5a2b281",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f55f9e6-d834-4a00-b720-1516d134a295"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229dd1da-48f1-4cb4-be4e-8c80cb472cbf",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2186e383-90d4-4b60-b5d1-3d287ac78e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf01770-90d9-4965-b94f-7cf5ac07e16c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2aa59f8-99e7-46fe-90a8-5cfcc2d5c712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5ef7268-3747-42c7-a66a-30f5eb318326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8f1794-59bf-47b1-95ea-f16850b61c20",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc638247-47aa-4ae0-b2d9-0d603b6b81c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c54e1ec-8048-4f51-8d95-a28a0e81de9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9665de26-c974-4525-aaca-5e678b00995a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2de44434-6f1c-4662-8646-3a112bcbcc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f90f705-19b6-4d66-ba01-1700590fe980",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51219d37-40e5-4a8f-a1b8-c0752b3db62d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23c5af1d-e465-4d4e-879a-8f286c1850a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b74c42ce-5311-4dc4-8abd-63f5c2310bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776bb5f2-0691-4f1d-aef4-de93e0bcf499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affe039b-68e1-4e30-bdb1-01c868fc1462",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e487f6b3-2a3a-4fb9-9518-f7388af0b9c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6bf84cba-8920-414d-8ef3-064d3da8d537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "395c312c-dca2-40cb-bc6a-a42d0b85f3ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17fd742e-e71a-4929-8bc0-a3fb91c05e4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33e573fa-e853-4a14-b951-6799a8f16b70",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c1dd151-f12c-46fa-997d-cc284a36a909",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6bcf30c-c3b2-46da-a572-9110b0f08572"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f3bbbef-1e3e-46fc-8ea9-332df52ad00a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bf9e0a6-21e8-43ba-8d48-e63381954aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db4bfd6-a115-4a13-a6cb-7db9ab026009",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754f22bb-3e67-4a43-956b-c9e93c20b382",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ba40a68-aa81-44c6-b132-ba81647180c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4482f1f9-31f5-4a5c-8b99-2437ac2ee55e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "238894f5-dd42-438c-8c97-60a600555676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "784c768c-5a26-4204-bcaf-a8e9a5a55bda",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44615cd3-b370-49c1-97c1-9b378241fdad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c6429fa-7ab7-4442-a2e0-62c8375b8535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b78f2c21-6d46-409a-88d0-8eb1cbc98513",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd10d4c3-c820-4db4-9936-7874897ea1b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17fa3111-ca88-44f3-a8bc-0ae93d3427e9",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f1c976a-e7e9-4661-9407-1d04b62423ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1381e0ed-2e15-4837-9d4d-16f7fde683ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eaabadf-b11f-466e-abc7-4b6c8151315b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67d4e71-49ab-4d67-a5b6-98b1f802d3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8ee753-cada-4eea-b0a1-e3258c9d51e0",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9352ba6f-8482-47dc-8d58-8a74d43a8b30",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab8edcb9-f6da-451a-a66a-b4f828bd20a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebfe7305-8655-4031-a16a-b75b0a3ea5c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98ebfa3b-3b66-48e5-bb88-5870562f31a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24b7562b-77bb-494c-bafb-cb7f531c4c87",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74f326a6-be21-42f6-9d27-457da1d8f3df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35d37554-a691-471c-bfc0-3671f74180be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13b2f9c1-79fd-4dc5-a4d7-5567e1ddd7e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13f3b69-ae3c-4570-a3d6-5c8d0285c12d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb705f73-9d0b-4bb8-94a2-25792fa13a65",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36fa8958-5400-4829-86fe-f967980f7243",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4b7982-b0de-4746-85d0-4f1bc7bd73ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e337cf8d-1d1f-4e34-a188-7f70415e9a52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "546453d7-b478-410a-a2c0-30b4d69966fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b3fc98-21b7-4779-b031-aa2275410548",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96079195-e342-414b-84cd-f370b3a15436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0515076f-411e-47bd-8f62-d7ca21279c8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00ce59d-c0e7-437c-bb00-789ab7d263e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78a6eb99-4982-4b55-8eb4-d5b87a833897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f275886-11d4-4a49-8229-a82c5be75725",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e459a0-b8af-416e-b5a4-734543f789e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3af458ab-9c95-4614-8829-ced6f530284c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a8d152-4773-4032-a3cf-3eb0e2ccb41f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f782949e-2737-4f9a-bedb-b6c0a40e9175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c30f47e7-e455-47bd-9e32-7b50512395f7",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff90104-018c-49c3-a9e2-dc5c75646486",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "911d3918-1f49-4500-b4c3-6d1bab0035e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85b2c928-0236-4ef5-911d-d01540cb8eb4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11df426d-d30c-4904-ab25-5552f115e8eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f96ea58-0c4a-4a34-935c-e3ce7d2b2d49",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce6dfbbc-769c-46ce-8873-de1bdff006f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "357ccd5b-3991-4bd1-99c8-8f86c3c4e850"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3916a9a7-fb8f-4664-a2d7-d80dcbcd8fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25d5fcb-f700-4c3f-9ba3-d521f9a24796"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d7c6ca-90f0-41d0-9dde-775416f49cee",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0391d06-b0df-44dd-94d8-1b245c3f8430",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83052027-653a-49f4-91c3-1283433ad57d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47d5f8b-aafb-4fea-9163-18be93a07141",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70a34b9b-961e-406f-a7c5-e6760fd2417f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b82cc803-50ce-4903-838a-f4c69375aea1",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba953b9-834b-465c-a249-2c6afbc09e52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2cd982a5-117d-4c03-b5b6-31b7664a282c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0a42d82-197c-4a85-abb6-cd51a12399af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c09e1e43-f95d-43d2-b670-a5e4b4f0667f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27011db7-8a6f-4de6-bf5d-28f717b75321",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ace240-b907-452b-99e4-c8c5f97ec635",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "19d0fbc1-0da3-4e42-83b0-4dc222bb8e7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69c2df24-be2a-46d7-b367-65418ed52298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e95cd54c-c84b-4b7e-ab80-f50642340bfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724f9e7e-9c51-4cbf-a31d-4d6935b3a4e3",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d36dc90-c58f-4388-9f11-5cad0f34fa12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "073dfd06-39f8-4f24-8037-f0369fb2fbfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54794818-c9e8-4c58-95e1-d964afa9e1de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2704c40b-56e8-4046-92fe-e1edd9e8bac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce24949a-1bc3-4736-b225-226de94f10dd",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9be78ce9-e43c-42b4-9b66-98978867d5bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441896ba-2ee2-4be8-838e-15954a424ac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db77006c-2ba3-44bc-b5c5-641bdedede8a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1255e9d-a162-43be-9514-9d00e48a45dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59c95549-15ee-41c2-b1c5-6c0058aab0f7",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3cb0f3-6e5a-4383-befb-556a6ab5b311",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "18536f88-6e3a-4880-a408-c50623164bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6bfc2ec-f464-463f-bbd1-72dd64271167",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83369857-375a-41f1-88e6-6ebb1e3f7fa5"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "de2f31cc-5f82-46c1-bffd-d18e703672b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d5aab511-8db1-4bf3-a3d5-c92399c15719"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "db8d3ddd-f4f8-4e8c-b290-f9dd2cd14b2f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e6388a4c-84b6-405a-8de4-28fc3eb8bad0"
                    }
                  }
                ]
              },
              {
                "id": "da94fd00-8fed-487d-a497-ec68cc805bfe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "33ad736c-60dc-4f41-a18f-ab45f2c6f4d1",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eca61a0-a87c-48c2-a356-fce296550331",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "6651fbce-cb95-45a0-8e1f-b6361be85a3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b22efd3-84f5-4f25-ab52-19b682ea6d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e16c023-3076-4716-a177-28d22a18caf0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c4bbd76f-425f-4355-84ea-0a4324088950",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "93dc3a5b-3a48-4810-bbb4-74736c3000c3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6136cad4-b26a-4e19-87d4-3a718f0ea24f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "00d6467c-9945-4be3-8730-0b9fddf0122a"
                    }
                  }
                ]
              },
              {
                "id": "96415483-1140-4f22-90ba-594d6a89fc21",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "3866971e-5bd2-47a7-b345-b33f7a07e27c",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71d63058-2b23-46bb-bbb6-04ab7c639042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4b6248f8-735f-47aa-8908-d2ccb57d5acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26fac992-5655-43ff-9e7a-c537851f9adf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e08338e-2dc9-4937-bb87-ee9f6fc01b50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "42723948-4427-4fd1-a6bf-6bfb1caff36a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e90cb255-689e-4d74-b86d-0ff02483bbd7",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bbbecdc-b534-43e1-b844-16f0e52e6335",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "8e419eb8-90cc-4ab6-b5bd-14c121949146"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "16a2eed0-3527-453f-81b5-791c3cacb578",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9eadd534-9ed3-4b94-8681-3e104dde8221"
                    }
                  }
                ]
              },
              {
                "id": "c086a137-14c8-4ffa-8535-f20ba514903b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "25ffc98f-11c9-4937-b951-19dac1504b87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e7ca0da7-4b79-4ff9-9056-cf45e7178800"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e42706c2-69af-4a54-b0e7-25e8cc33db8a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d4175e2-27fb-42c8-8418-be0c5c70ed26"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0f650bc8-f022-41de-aac2-336f2c81af01",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "d983fd27-52cb-4bf4-970e-3d0f401559aa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f82b7b8b-2d81-47bf-957a-8d944ff4f4a5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1dfb6bad-4a46-4816-b796-57c419cb955d"
            }
          }
        ]
      },
      {
        "id": "f668579a-8728-465d-b159-8df7bc16149d",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3085a922-0a72-47be-9a47-613decac6410",
            "name": "Negative Testing",
            "item": [
              {
                "id": "111150f6-f857-407f-bc68-dc6b5e851ded",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d18d1cc2-1b90-49ce-9fa1-ddd5bdcdf878",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fec4931-8025-436e-8615-ff7cdfb49470",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "377cb009-04ff-4d96-a709-9df3cb324592"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aee10158-af57-485c-a767-a55780b815e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6062f89e-ea2b-4855-9400-851b7c39a769"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6267d3f-9123-41d5-829a-009a7508fea3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a2734b85-a64c-4597-ae13-132295d2104b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "63177351-f23d-4424-b609-68586ea7e5ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2602112e-db88-40c3-b60f-ba94d15f7e68"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f795539-4550-4e91-b975-7e8bc240b8c9",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ab4f2cca-c636-4fc2-aaf2-d84027d5066b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3275977d-284f-4b09-9adc-f4f4337464f6",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "41389319-996c-410c-9e11-8afeac5e9e7e"
            }
          }
        ]
      },
      {
        "id": "c31b2734-c86d-45b5-a8e3-e47b08c2d9b2",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ab0d9276-d016-43df-93c9-fc7a6ffe0ea3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e85b226c-5ff8-4aad-9c4e-d81df301ee7b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dff31c43-e49a-49a1-a7fa-07be10052433",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76349322-7778-4be2-a405-6c53fb94588a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2c926043-145b-4de9-ac73-00e1a897a21f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18aeaaa1-b969-4595-a0c0-2252136b2686",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3946d27f-d6e8-4b3a-99b0-4468c99a5adb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cb4475d3-1c4b-4095-aaa7-b995b87c3b97",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "769028f3-7b89-4c6f-82c2-5772f1abec39"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0ec88b53-a1f0-4352-8dbe-747fe7da0a96",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b9217ace-a07f-4452-bd9c-badebf25800f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c359cc1b-b97d-4734-af84-5ed4cbb82fee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2cfbbe1e-159d-48cd-a614-438441692a9c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5eeb4278-9f48-4531-8d40-0b7ad2ece499",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b1b2f7bd-0604-4b95-9a68-1680d8e008f0"
            }
          }
        ]
      },
      {
        "id": "0c59656f-ce73-4111-bcf3-11278006a120",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "ec8a8352-dcb7-4e5d-9dc4-8e80d53d2239",
            "name": "Negative Testing",
            "item": [
              {
                "id": "970c2303-69df-4e2a-b8e7-1f36f97635ee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "94b52aad-1fea-4f6d-ba90-d4cb33129dd2",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b154156-a42c-48cd-b064-58f0c1c65f2d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8ec8e27-6497-4a70-9892-f303271bf724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061aab61-25a1-4296-a890-0364baa3d34b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06f54aa8-e066-43c9-a186-2fe3bfdea832"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fab209fc-3272-411c-9017-757ea9803500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15e3c3d3-db45-4bc1-abd1-7a15f8a59ec4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6877f2d7-c0a4-4524-b791-25aed96b01bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "35d98578-c99b-4fbb-8307-65474a0af785"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bee45209-5476-4d8b-9308-aa54e6b8654e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a34cb227-c3cb-47db-a425-6498ea5d4b2f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4599c93f-843b-47fb-b7e3-fe824ce3b483",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f5c0fa9-f056-49c8-bc7c-37874ca81947"
            }
          }
        ]
      },
      {
        "id": "80fbbf1b-2ed2-43d6-b39f-5eb1a0e6ee14",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "03c6d64f-c510-4de3-b114-4e9af2f5c5d5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f228cee8-fd14-41b2-b5b4-2aec097942c7",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "cc4b4497-4988-47c0-8e8d-f46f416b34c3",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "458b561f-3977-4be5-8842-79b7bdaf5a2b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6012a4ed-7ecc-4e31-ae27-7c09d784f38d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 28.249122807017546,
      "responseMin": 7,
      "responseMax": 207,
      "responseSd": 16.63470397763408,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706056627873,
      "completed": 1706056645488
    },
    "executions": [
      {
        "id": "479a2648-8778-47b7-876b-b42b08227bd2",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5ab3c836-009f-43b9-b108-901b731b16db",
          "httpRequestId": "5d6687dd-e23a-4383-bf05-c564961ff5bb"
        },
        "item": {
          "id": "479a2648-8778-47b7-876b-b42b08227bd2",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "02b142f9-02c8-444f-a374-1908c3029be1",
          "status": "OK",
          "code": 200,
          "responseTime": 83,
          "responseSize": 0
        }
      },
      {
        "id": "9a44ec50-c6d8-45f6-bcf5-e0fd79e42809",
        "cursor": {
          "ref": "1738bcec-f09a-4cd4-b1e7-ad2139fa94cc",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5b3c1e07-b9f4-4565-8f6c-35b990c837a9"
        },
        "item": {
          "id": "9a44ec50-c6d8-45f6-bcf5-e0fd79e42809",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "b0dc8292-5a6a-4b7c-a917-2274336eac77",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "6f8a5766-119c-42a0-b516-f56b6779fb1c",
        "cursor": {
          "ref": "b3cfeace-7668-49d5-a144-f65f5f299a17",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "917fd08f-4d86-4cd7-b392-418f5b7785ec"
        },
        "item": {
          "id": "6f8a5766-119c-42a0-b516-f56b6779fb1c",
          "name": "did_json"
        },
        "response": {
          "id": "1e1e89fe-6769-42d4-99b4-35d636a270e3",
          "status": "OK",
          "code": 200,
          "responseTime": 120,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01113660-ebea-4970-bed4-5d4a74a95307",
        "cursor": {
          "ref": "d88f6a54-f5e9-44fa-9426-375f44fe5f1c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d19e43e-a608-419b-a928-653127a20174"
        },
        "item": {
          "id": "01113660-ebea-4970-bed4-5d4a74a95307",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb5686f5-21b2-4fb9-8587-311d0d9edbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01113660-ebea-4970-bed4-5d4a74a95307",
        "cursor": {
          "ref": "d88f6a54-f5e9-44fa-9426-375f44fe5f1c",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8d19e43e-a608-419b-a928-653127a20174"
        },
        "item": {
          "id": "01113660-ebea-4970-bed4-5d4a74a95307",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb5686f5-21b2-4fb9-8587-311d0d9edbdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e01bef66-5331-4548-b8d5-35a9be004e43",
        "cursor": {
          "ref": "39857093-551e-4512-9268-3141a31fefe0",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "61dee53a-63ab-4fff-86be-0d55943a8fe9"
        },
        "item": {
          "id": "e01bef66-5331-4548-b8d5-35a9be004e43",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "072659dd-f89b-4887-8c87-7990b62475c1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 71,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c07c451e-3075-462d-a1f1-076bc735b249",
        "cursor": {
          "ref": "4862c6d0-ae23-43a5-a462-3d7cbd88086f",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "7d7e8cd8-d306-41b5-a5a8-3a6deda3ceef"
        },
        "item": {
          "id": "c07c451e-3075-462d-a1f1-076bc735b249",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b07d3c51-63f0-4ce5-b036-cfccec00f698",
          "status": "Not Found",
          "code": 404,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58bd63d8-adad-43ed-8461-495a4421f2d0",
        "cursor": {
          "ref": "9cb94ed4-dc83-4783-83bd-c442a22d1bf1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "919bbcec-d891-410e-bc63-fdda16760c56"
        },
        "item": {
          "id": "58bd63d8-adad-43ed-8461-495a4421f2d0",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f510e8fa-dcbc-447d-8a8d-fefa3b7aeb5d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 27,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e625724b-7549-49fe-b8c4-096f4aa2fac8",
        "cursor": {
          "ref": "0e1e3c4f-4455-490e-a461-e07728338010",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "c66c0926-2c81-44c1-8e56-4737a50c3216"
        },
        "item": {
          "id": "e625724b-7549-49fe-b8c4-096f4aa2fac8",
          "name": "identifiers"
        },
        "response": {
          "id": "585f5737-e6e3-4417-8b2a-54c2f49c2e29",
          "status": "OK",
          "code": 200,
          "responseTime": 184,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58c5af77-b294-4ecf-8ef5-6f851ed25fe8",
        "cursor": {
          "ref": "b3a442ba-0645-40f9-ab8a-55cee77d0419",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "88f5f8b8-b660-499c-9c80-75089ac72663"
        },
        "item": {
          "id": "58c5af77-b294-4ecf-8ef5-6f851ed25fe8",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "8623c022-df89-4f4a-91e7-de82e1b504c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9458f5b3-a322-46f6-91e2-61ead99e20fd",
        "cursor": {
          "ref": "245af0d0-ccdb-4a50-9502-d4b2d4f33a7d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "0772717f-fb42-40d3-a458-4fcea5743c2d"
        },
        "item": {
          "id": "9458f5b3-a322-46f6-91e2-61ead99e20fd",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "e9e89980-378a-43b9-8a64-4930c3c73901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b10ed8a-95f8-44a2-bbd8-8f1b2ce886bb",
        "cursor": {
          "ref": "f7d01327-2729-4ee6-a8c1-87f7c01ac873",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "37309c35-2034-45db-8e05-b07f7bf914dd"
        },
        "item": {
          "id": "9b10ed8a-95f8-44a2-bbd8-8f1b2ce886bb",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "48edbe24-1e59-4739-a8df-90957705b8f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9928e99-24a4-4ba2-9478-36b86a431b32",
        "cursor": {
          "ref": "c3f2d234-68ef-4338-ad59-b80882c40dc2",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "cafd1605-5ae5-422c-9dbf-edef1564d81a"
        },
        "item": {
          "id": "f9928e99-24a4-4ba2-9478-36b86a431b32",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "02cd1145-b8e3-4b46-9521-c4cb1d5157eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f5bde8-1a04-427c-b3a0-e0dde92a8f6e",
        "cursor": {
          "ref": "d9e08be7-25c3-411e-9ad6-364802a2ba32",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "98345137-aa38-4c8a-8636-b8dec4c8bf4f"
        },
        "item": {
          "id": "04f5bde8-1a04-427c-b3a0-e0dde92a8f6e",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "4612eff6-cff3-438f-b307-68e8bc07a473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73bb6bec-a662-4595-bb95-64dd4a44a4c2",
        "cursor": {
          "ref": "410d1236-67ee-4050-b851-96a4e47bc315",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "67b3d60b-1135-46be-8ef7-2fefc43a95f2"
        },
        "item": {
          "id": "73bb6bec-a662-4595-bb95-64dd4a44a4c2",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "440afd1f-b470-473e-8c62-108539afc435",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb83c1da-9408-46ec-95cb-40edaab4955f",
        "cursor": {
          "ref": "f9cc3ad9-9ca7-4266-96a5-7fd6fb3adede",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c9b8b87b-fdf2-4065-ab3f-8a9c46e89b12"
        },
        "item": {
          "id": "cb83c1da-9408-46ec-95cb-40edaab4955f",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "5f5e3bd4-e324-488d-9787-71847c64f9cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b0b005-68b2-4c6b-87fe-b7c24eebe6a9",
        "cursor": {
          "ref": "5a3cfd1f-78c8-4cbf-a5a2-59c603b16464",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "049a579e-5594-4925-88a4-aa00eae72a46"
        },
        "item": {
          "id": "b4b0b005-68b2-4c6b-87fe-b7c24eebe6a9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "fba19477-2c53-4f06-8a71-9af0b9229782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "302b72cf-62c2-4c70-9e5b-a6e6aa7f0e97",
        "cursor": {
          "ref": "09048d29-d764-415e-b449-eb17d007337f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "77f1fefc-d2e7-4f7b-aa6a-ba231cf2285d"
        },
        "item": {
          "id": "302b72cf-62c2-4c70-9e5b-a6e6aa7f0e97",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "5de00c19-61a3-4f37-bba7-32f324b0f1ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "031b7564-7515-4ac5-8921-fcc655ca4250",
        "cursor": {
          "ref": "6fd5d74b-d057-4060-9512-3247e224b0dd",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ef8b9c7e-b723-4718-a4f7-0b1df99165c9"
        },
        "item": {
          "id": "031b7564-7515-4ac5-8921-fcc655ca4250",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "027a01ea-b973-498b-ac81-0b3049a9f69d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab96aec9-4968-43b1-9af9-033ee5a94557",
        "cursor": {
          "ref": "895cd1b1-4689-48e1-9ba4-4aaf2210512a",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "33339b1e-4d5a-4267-9a0d-e46027ab70ca"
        },
        "item": {
          "id": "ab96aec9-4968-43b1-9af9-033ee5a94557",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "b12673c4-bf9d-4b71-a037-9a88721f4e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82a92015-e9a3-4dcc-855e-565ed79ab0a4",
        "cursor": {
          "ref": "04f5d23a-3e8e-48af-85b8-88a4501c7286",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "34db1481-31ef-498a-a576-6b15de990b87"
        },
        "item": {
          "id": "82a92015-e9a3-4dcc-855e-565ed79ab0a4",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "46b2e334-e66e-4a93-9b1c-a70be61e660b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ba5fb75-c08c-4400-9d0f-21145aaf59e0",
        "cursor": {
          "ref": "e9446b9e-845e-4334-85c8-156dc0fa20c2",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "ccd485e3-d46d-491a-b680-44a2ec29eda5"
        },
        "item": {
          "id": "8ba5fb75-c08c-4400-9d0f-21145aaf59e0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "7219b0bb-df72-49ff-b7a6-3a65d9bfe114",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36e63340-f61c-4471-85c8-f06df5ead488",
        "cursor": {
          "ref": "1a194255-baaa-44d6-9631-f15f1005498e",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "1ab5b12c-c90f-4a25-b003-056a3dc6c69b"
        },
        "item": {
          "id": "36e63340-f61c-4471-85c8-f06df5ead488",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "7ec1d9d6-7f1e-41ee-a79c-db3702016a51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5733f616-7890-4149-bece-1854078bf161",
        "cursor": {
          "ref": "017f64a7-d734-46c1-83f5-5cd1bbc6dfc2",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "139e040e-660f-4b46-80cf-00587f0158b1"
        },
        "item": {
          "id": "5733f616-7890-4149-bece-1854078bf161",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2ed9bd23-395c-4be5-a252-b75aef177bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5c795c6-f491-43f9-b41d-2456e4d24cf0",
        "cursor": {
          "ref": "4e7d0cc8-a708-4b3f-b322-1e0f14b0e389",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "1a4e56bd-db80-43b8-931b-bcecc1c5e480"
        },
        "item": {
          "id": "c5c795c6-f491-43f9-b41d-2456e4d24cf0",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9423a8da-84fd-4e2b-90cd-d20d7533f737",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b31280-b4a1-4c99-8f10-74a78caecc08",
        "cursor": {
          "ref": "334acdb4-bf0c-401e-8e8b-63e9fd71b123",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f569b80f-ff88-4026-ab45-653204dd33dc"
        },
        "item": {
          "id": "22b31280-b4a1-4c99-8f10-74a78caecc08",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a433533b-b20f-463b-b6dc-a0b843a9acd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ed21c0d-2ec9-4a55-8ccb-e003c995189e",
        "cursor": {
          "ref": "56a7b3f0-41cf-4406-9aef-2a097008d499",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "10efdc60-58c7-40f5-abd3-44f88ec294da"
        },
        "item": {
          "id": "3ed21c0d-2ec9-4a55-8ccb-e003c995189e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "57019037-8029-47b3-a9d0-cde490e90db9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bfa687d-b74c-4e64-b337-a818f7681152",
        "cursor": {
          "ref": "15969162-d2ae-4004-b2d7-de94ca981edc",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e5d8fb80-3cd3-4cb7-938d-d9167bee2892"
        },
        "item": {
          "id": "2bfa687d-b74c-4e64-b337-a818f7681152",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "7aa12c55-9420-4a52-821c-aa64f284ab6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b347d13f-3176-43cf-89a5-8da967eb9233",
        "cursor": {
          "ref": "f82e5b24-f489-4364-8763-9df71d224f27",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d2255e1a-effe-4198-b49e-cb3fd879eab1"
        },
        "item": {
          "id": "b347d13f-3176-43cf-89a5-8da967eb9233",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "844b4209-fae6-47ea-bc7a-71b33ded5721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08c3ed3b-0fd5-4283-be02-de158adc4699",
        "cursor": {
          "ref": "60bdf0a5-5a95-4f28-8376-8a9d167b5170",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "faa31337-0b53-45f2-a6bb-9bad3ec56436"
        },
        "item": {
          "id": "08c3ed3b-0fd5-4283-be02-de158adc4699",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a2911ab0-4024-4c70-8a8a-b64d61d9ff74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9321bf2-07df-46a7-8905-4543984b504a",
        "cursor": {
          "ref": "2023293e-25c5-4468-9b28-c8864f8c8060",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "07f5c617-3339-443c-9a1c-114363edbc17"
        },
        "item": {
          "id": "a9321bf2-07df-46a7-8905-4543984b504a",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f023e5f4-9757-4969-8773-e2f9fea0b46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a29e77d4-96eb-44fc-bde5-cf1d9104aabf",
        "cursor": {
          "ref": "39b0a2e3-8d4f-4d15-86e5-7c91a7c22eb9",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "2e23de47-0a74-478f-a13e-cf2a86ad3291"
        },
        "item": {
          "id": "a29e77d4-96eb-44fc-bde5-cf1d9104aabf",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4aa0362b-0700-4789-9bfc-ce7dba394777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acac3f6f-4f7a-4c64-a195-215b66c2903f",
        "cursor": {
          "ref": "254e1824-2f70-4a44-bb57-39d7fbf58ee4",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "5c8085f7-63b3-4bcb-87f3-cfd9c4aa384f"
        },
        "item": {
          "id": "acac3f6f-4f7a-4c64-a195-215b66c2903f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "44cb5502-dd7c-41f7-8a4c-577195e623da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99859bfd-bb01-493b-884c-997ae2cab243",
        "cursor": {
          "ref": "8afc43ba-7d31-46bc-9080-84865441c319",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "96b1299f-1856-4339-87cd-fe553799082a"
        },
        "item": {
          "id": "99859bfd-bb01-493b-884c-997ae2cab243",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2f142b78-1d97-46ca-af9a-b449cb7dd4b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d160359b-ec7b-4a5c-995d-3d2fcbd5c47d",
        "cursor": {
          "ref": "ad0c95a1-f23e-46dc-ac8f-1ac13b02ce6f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8a63bdd2-0b21-4221-b904-35c5ddca9ca0"
        },
        "item": {
          "id": "d160359b-ec7b-4a5c-995d-3d2fcbd5c47d",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "5e6fa55c-e76c-4636-8e18-dc720ed8ab56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca737448-ee6e-47b0-939e-e06bd634507b",
        "cursor": {
          "ref": "8155fe09-3252-4672-93dc-8fe7e91fac94",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c8215b58-6da3-4077-ae88-d891e163aa0c"
        },
        "item": {
          "id": "ca737448-ee6e-47b0-939e-e06bd634507b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "24b5ca90-a5f1-4017-8374-feba4ffeb211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b470fa-af29-4429-9852-40892578886c",
        "cursor": {
          "ref": "3ad75fff-847c-47f6-879c-1022d6c78e5e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cf2bda63-6a80-4387-b125-420f275cbcc9"
        },
        "item": {
          "id": "d3b470fa-af29-4429-9852-40892578886c",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "1d0da6b0-1465-453a-8d06-f6c9ee013510",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20fe346d-99d0-4ff6-abe4-84ca09941dc5",
        "cursor": {
          "ref": "8a28254f-9e66-452c-9524-84bfdb45d6cb",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "886762ba-b485-45b2-98d7-7ef9773ff144"
        },
        "item": {
          "id": "20fe346d-99d0-4ff6-abe4-84ca09941dc5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5eb5f8ce-6779-4e6f-937c-91fcfa283edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4437a249-79fc-4e9f-8458-3f121176d2c2",
        "cursor": {
          "ref": "cbef06fb-c28f-48d6-b8cc-333000980137",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "78d23869-acf4-4437-bf7f-f5b17b36dd60"
        },
        "item": {
          "id": "4437a249-79fc-4e9f-8458-3f121176d2c2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "11a111e5-d43c-48d7-9a89-ff0600e5f8a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ccad775-a810-40f6-b8de-5fd23cb8776a",
        "cursor": {
          "ref": "1c5f879d-d445-44b0-97c1-693762e24f2e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3011ae16-6ed2-47ec-90e3-1f7f75e16f0f"
        },
        "item": {
          "id": "2ccad775-a810-40f6-b8de-5fd23cb8776a",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "6e414c5f-3da0-4983-9e50-d71397d05a84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "966ffe45-d9b4-41d0-aa23-28282e355283",
        "cursor": {
          "ref": "fd377599-68fa-4571-b726-e95fe31e8bfb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "280b0f0d-558c-4178-9f20-d5d47906ae8d"
        },
        "item": {
          "id": "966ffe45-d9b4-41d0-aa23-28282e355283",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "c37a2ac7-5646-40d6-9900-3847a6dc1f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61bef188-9ecd-4e31-8301-167b132b6127",
        "cursor": {
          "ref": "192a5594-079f-4b8e-b451-b48ac002487d",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "4b429135-909c-4fb0-b503-a7919a8d0644"
        },
        "item": {
          "id": "61bef188-9ecd-4e31-8301-167b132b6127",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "baa746ff-4c2d-4792-8c71-c901c1f7375c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe68d95-2b33-4223-bca9-a81db1656ba4",
        "cursor": {
          "ref": "6722ddd2-f484-437c-acad-e39f7407ef33",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "fe76278e-e459-4e4f-8aea-72355195ea8b"
        },
        "item": {
          "id": "bbe68d95-2b33-4223-bca9-a81db1656ba4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "1e324201-cb57-4891-8522-62ed389b8575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab679a-6b30-49f1-813a-93dff00bfca3",
        "cursor": {
          "ref": "f4bf3058-13b1-455f-a0e9-9b60fdac602a",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "7a0ff308-4200-4f41-9bb2-ee4ad6d709db"
        },
        "item": {
          "id": "f3ab679a-6b30-49f1-813a-93dff00bfca3",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "c4632fd5-c945-4067-bd9b-3b99745e5b71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bdaf7bc-aee2-47f4-9a5c-925cec465d6e",
        "cursor": {
          "ref": "c2ec1975-f9ec-4d77-b792-991636585446",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "6d80f22e-5e64-4e6e-8c48-99116eb2590a"
        },
        "item": {
          "id": "7bdaf7bc-aee2-47f4-9a5c-925cec465d6e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cbe32f66-ec33-424a-b35a-3a50447c1dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bc79ffc-6781-4d1e-95c9-9c4edb6eeacf",
        "cursor": {
          "ref": "1fb21dab-bc66-439c-ad1d-81b5acbb39d8",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "265efc66-fb82-4545-94f6-6e5aa6150188"
        },
        "item": {
          "id": "0bc79ffc-6781-4d1e-95c9-9c4edb6eeacf",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "78163b6f-2d2e-4c2e-97a5-e57bf1bfdc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9f4d58-02ad-482a-9231-89eb94661fd0",
        "cursor": {
          "ref": "b1410a00-f3d7-456f-b5af-ea072922b3d9",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c34ce905-2dd1-4613-ade4-58ceb223a227"
        },
        "item": {
          "id": "0e9f4d58-02ad-482a-9231-89eb94661fd0",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "cca88d59-3d2b-4ad3-823b-c1cd4aa34bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc0e89f7-6bad-46ce-81f8-66a3c6e2fab6",
        "cursor": {
          "ref": "3a09f4f5-e492-498b-8f45-6ffaa0c8b939",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "b4e414fa-18cd-4409-abfa-bc10c3cca8cb"
        },
        "item": {
          "id": "dc0e89f7-6bad-46ce-81f8-66a3c6e2fab6",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b176c1e2-7a23-4bbb-833c-f0d6841544b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba87d3e-3891-4fc3-a6bb-4a200110eeb6",
        "cursor": {
          "ref": "2dcdf488-130f-4cee-bb11-9fc7b8c403a0",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "9722dff0-56e6-4579-8bb0-38c47e479217"
        },
        "item": {
          "id": "6ba87d3e-3891-4fc3-a6bb-4a200110eeb6",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c78c94e3-a628-4637-8fcf-7aed1f257b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d62765f-5ee8-4834-b47b-61dddc4f3e0e",
        "cursor": {
          "ref": "2fb69872-0e01-42f3-8866-3344c51298c0",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "8f8e29ad-9c96-4d47-93c1-80fce31324cf"
        },
        "item": {
          "id": "0d62765f-5ee8-4834-b47b-61dddc4f3e0e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9c71d879-e1a6-4c42-9fd2-da3ae12707c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa6f797-ecf6-4267-aa37-d2e6a47c3675",
        "cursor": {
          "ref": "d9e3c9cd-9571-4431-b81c-a5f874c3be52",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "cabd22f1-8e12-45d3-98a0-3eba9981b824"
        },
        "item": {
          "id": "1aa6f797-ecf6-4267-aa37-d2e6a47c3675",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "7d8bf832-c093-490a-a573-e6e93cabf103",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25926459-d0de-48f3-b350-dd49a9ab177c",
        "cursor": {
          "ref": "8e0b9648-a53e-40b0-80da-c074d832af80",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "c5c22c18-6d08-45d0-b061-53b586f138a0"
        },
        "item": {
          "id": "25926459-d0de-48f3-b350-dd49a9ab177c",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "074721a3-77af-4c64-92cd-70a0c5993496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "079dab74-a07f-43ef-a8b8-76c79919216d",
        "cursor": {
          "ref": "a1c3d118-492f-41ee-b8e5-767a45f3b9a7",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2c48462e-be22-4a25-a8ce-8fc2740a6e4d"
        },
        "item": {
          "id": "079dab74-a07f-43ef-a8b8-76c79919216d",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "f59479ae-126d-4b0e-9250-88a3785a1c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8564f5-c8de-4203-b9ec-38de9cdfb555",
        "cursor": {
          "ref": "82881630-dab0-49c4-803f-eb743fe19231",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "f927aaee-9bc7-41d1-b06a-87bebb2b6272"
        },
        "item": {
          "id": "6b8564f5-c8de-4203-b9ec-38de9cdfb555",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "42248fd7-b5e6-43ff-b793-a735e6c45a8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b4e0ce0-215b-4c77-9273-f65df5e50acb",
        "cursor": {
          "ref": "a489979e-0599-4eb8-a2f6-306df6f8295e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "db02a4b3-bcf4-4626-83ff-a8826c705cd8"
        },
        "item": {
          "id": "0b4e0ce0-215b-4c77-9273-f65df5e50acb",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "11d9e9a9-7686-40aa-8eaa-e430a1899360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f903836-be4e-4f3b-b193-854c170a04d0",
        "cursor": {
          "ref": "ba93697d-22d8-4088-b6ae-8d10e10067a4",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "733e541a-9420-48c0-a786-9d5fdbfc0768"
        },
        "item": {
          "id": "5f903836-be4e-4f3b-b193-854c170a04d0",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "34e310eb-c604-42bb-ad50-66c84ede0b90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32444f3a-bd79-4ea6-9a00-5be4169730ff",
        "cursor": {
          "ref": "f64fd2c0-4905-4185-83ea-7bc2e6f84a6a",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "a9c0a583-2ce6-48c9-942f-0b5180840f1e"
        },
        "item": {
          "id": "32444f3a-bd79-4ea6-9a00-5be4169730ff",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1ec4b972-2449-480a-97a4-52163a4b0fd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f225d2b4-8020-4f96-833b-eb43d88aa196",
        "cursor": {
          "ref": "f24e726d-00ca-4198-8f4b-045f37f38dae",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "1397ab3d-f3d7-4912-b4c7-235024f93844"
        },
        "item": {
          "id": "f225d2b4-8020-4f96-833b-eb43d88aa196",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "61d1809e-696e-453e-adef-ff8315843a7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c149232-2933-426f-ade2-52be1601d7d4",
        "cursor": {
          "ref": "84ddb613-ea4b-40f5-bbec-ea1b1fc24410",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "fe386085-e64f-4f0c-85b1-1c949798d5bd"
        },
        "item": {
          "id": "4c149232-2933-426f-ade2-52be1601d7d4",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "b3767bdc-b5eb-452b-93f4-1a45e77cc79a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdc40be-5275-41dc-93d6-80be900330e9",
        "cursor": {
          "ref": "efc94297-e07e-4bd4-8b19-0f481aa339e2",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5e2f2a5a-5d84-424e-9fd5-b56148a65083"
        },
        "item": {
          "id": "abdc40be-5275-41dc-93d6-80be900330e9",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1e03c7aa-975c-4c4a-8550-36b4b9f1c580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f86896d6-2d99-43aa-a66f-9bbd5f64bda4",
        "cursor": {
          "ref": "5d9d28c3-566f-4f1d-a2d3-cd398cf46daa",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1172235f-1ba1-404e-9bb4-75534136acf7"
        },
        "item": {
          "id": "f86896d6-2d99-43aa-a66f-9bbd5f64bda4",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "eb0006f2-06b1-4a74-a21a-7babe865701d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeb128d1-6e51-46ce-9816-aca778523fe5",
        "cursor": {
          "ref": "595b67bc-8a74-41fb-ba14-73182b937e59",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a8978db2-6a15-493c-925a-eeab2d5328c6"
        },
        "item": {
          "id": "aeb128d1-6e51-46ce-9816-aca778523fe5",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "de91cd7c-5d28-4614-aff4-73b1d1989a0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a276ffd-bbf0-4a17-8fc0-cf1c38625476",
        "cursor": {
          "ref": "2313ea7c-f1a9-48d0-a5ad-dea6687dfff4",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "303b7d4e-e469-4936-81d3-05a6822e8d14"
        },
        "item": {
          "id": "0a276ffd-bbf0-4a17-8fc0-cf1c38625476",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "6a2b23ad-01e6-443e-bb74-a8d0a12bb4c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b752c15b-014a-4b93-b98f-8bbdcd7cdb8b",
        "cursor": {
          "ref": "ea4aa8f3-f1d7-4eb2-b480-c2bf40acf8d4",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "8b43a8f0-ae10-47ad-bd2a-956ac4defba3"
        },
        "item": {
          "id": "b752c15b-014a-4b93-b98f-8bbdcd7cdb8b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1f278ab2-55a1-449d-ab44-ec4824869ef3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b63bd4d-50af-4752-b395-9281001d7bef",
        "cursor": {
          "ref": "31e98126-08e3-4a67-9c99-da011ee49e1a",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "2d8a943d-e0ec-4f2c-a500-208d6d58166b"
        },
        "item": {
          "id": "4b63bd4d-50af-4752-b395-9281001d7bef",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "26950d6d-cd86-4762-816c-22583569cab1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9bcd57-5378-49bf-9288-6265a166b814",
        "cursor": {
          "ref": "7bf17f66-5293-42a4-8dc5-892f5e6cc3b2",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "03399cce-75ef-439d-844c-be11aab77efa"
        },
        "item": {
          "id": "7d9bcd57-5378-49bf-9288-6265a166b814",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "f04183a2-c607-41d9-84f6-aa3d8b44eca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f1eb91-58d1-4459-9c7d-5d4f81118dc3",
        "cursor": {
          "ref": "12163dc6-3094-494a-b295-764e2eb93b08",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "bc53c389-d4c5-44f9-9c11-eef3420af4c8"
        },
        "item": {
          "id": "c5f1eb91-58d1-4459-9c7d-5d4f81118dc3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "925505ec-7e89-4853-bd2a-748ade0dadf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe36e16-532a-4be0-a97d-ef4ad5b4e85f",
        "cursor": {
          "ref": "7d2e84d2-a1d9-4b88-aa51-9d9bb19c229f",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "da205811-b12e-413e-a693-bb36b6223b92"
        },
        "item": {
          "id": "dfe36e16-532a-4be0-a97d-ef4ad5b4e85f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "c3659b93-0131-4cfa-bac4-e17d5b689477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fd8e09a-0bd4-40b1-b98d-10252e3c6ab3",
        "cursor": {
          "ref": "e4ad85db-0cd7-423e-b1a7-a48e8130ed2f",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "fee1027d-b1bc-4943-9a4d-1e6eb86e3f37"
        },
        "item": {
          "id": "6fd8e09a-0bd4-40b1-b98d-10252e3c6ab3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "55257cdb-43ef-4151-858e-a7a4a3c4d800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f326d8b6-b88a-4aed-b6da-40f493701dd2",
        "cursor": {
          "ref": "0df865fc-d281-47b1-9a5e-ac50a18ca466",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "cbb02325-a256-4317-8dae-6939b861808a"
        },
        "item": {
          "id": "f326d8b6-b88a-4aed-b6da-40f493701dd2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "17b1307f-575a-4c7e-92a5-805d4863f20f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e077e333-f6f0-4243-942e-0d09731e685d",
        "cursor": {
          "ref": "c82ed149-c48b-487c-8a7b-27e0980b4fba",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "855d754f-862e-4042-bc8a-54bcfafd5f1f"
        },
        "item": {
          "id": "e077e333-f6f0-4243-942e-0d09731e685d",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "5fb2f14d-4b42-4461-acda-340420451f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ea2242-7bcd-4b62-80d3-1228d707fdc7",
        "cursor": {
          "ref": "213da5f5-0609-4b7b-af5c-586b3f4ad950",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dde5f875-f193-48a1-858e-c51c474dd943"
        },
        "item": {
          "id": "61ea2242-7bcd-4b62-80d3-1228d707fdc7",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "9c149d8d-ca20-4a0d-b842-418abf507282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dac6536-d0cc-4156-beda-d26856e976d9",
        "cursor": {
          "ref": "5e5e2d6e-1b6a-456f-b5ba-ae6e5296d1d4",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "f5ce09f1-4780-460e-a35c-2f9cb2a01545"
        },
        "item": {
          "id": "3dac6536-d0cc-4156-beda-d26856e976d9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "547e1e0a-6bc2-4744-b7ec-aee915ccb077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aee4243b-0f0f-4f99-9559-025dcb6c3ef6",
        "cursor": {
          "ref": "eb464dad-7fbc-4704-a063-ef8ceb52954f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6baf72de-beff-483b-b712-c7a090b61dc8"
        },
        "item": {
          "id": "aee4243b-0f0f-4f99-9559-025dcb6c3ef6",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ec488094-e89d-478d-b209-9756e4e90e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e5b4f88-6e49-4707-a476-3101fbbbad85",
        "cursor": {
          "ref": "922f3d78-142a-4666-b3b4-22bfd92d46c8",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "fdeb151e-b607-40cf-9839-fd30af5a7422"
        },
        "item": {
          "id": "4e5b4f88-6e49-4707-a476-3101fbbbad85",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "62ae9f73-72a6-44c9-bf3c-9e44a6a83d11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8dd2bb-7088-4aac-81a8-c75ceba1575f",
        "cursor": {
          "ref": "0b71ca8a-07e7-4074-97b5-83e2aadb43b8",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "151f1667-d269-409c-8aed-b789034b23c5"
        },
        "item": {
          "id": "4a8dd2bb-7088-4aac-81a8-c75ceba1575f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "64b7acf6-5bd5-49f2-b316-0fc353b26322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b31ae016-cb47-4d7e-b053-aed66f584c04",
        "cursor": {
          "ref": "aceab794-6b14-4385-bf81-256e171d4b47",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "08c76fc8-7cf3-45c9-a5d5-ee679085bba7"
        },
        "item": {
          "id": "b31ae016-cb47-4d7e-b053-aed66f584c04",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d7094e60-8e4b-4d80-be76-4cc6fad23da6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d729658-75ed-4e6e-bda5-3e660d40a7d4",
        "cursor": {
          "ref": "a474e18d-9282-4fb8-a3d9-d7914510c0dd",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "002e0329-f0f0-48a3-a809-a1829cb36921"
        },
        "item": {
          "id": "6d729658-75ed-4e6e-bda5-3e660d40a7d4",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "e8ce6e36-38c9-4418-b479-715d4eb67c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7161dbf-e954-47ca-ad7d-065d43645189",
        "cursor": {
          "ref": "6b5150f7-77e8-4ebe-ad9c-7d9f613c3245",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9724fe77-1511-489f-b1a8-a25fe0305dbd"
        },
        "item": {
          "id": "a7161dbf-e954-47ca-ad7d-065d43645189",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "cca5a708-2a64-47c6-a404-b3cb7b673e73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e60861-e4a4-4627-b074-e220ad6e9557",
        "cursor": {
          "ref": "177e99e7-1b4c-42e0-8265-277bc7552360",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "d1f0f485-6ee8-4c63-837d-68a3bb5a9b52"
        },
        "item": {
          "id": "67e60861-e4a4-4627-b074-e220ad6e9557",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "29bec789-f7ca-427e-8c12-12ed450fa1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c661c80-bac0-4cfb-825a-2c7c9ded2fa7",
        "cursor": {
          "ref": "e6ffd736-77ed-4540-aa35-106146113169",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "d7e79b9e-12fd-45eb-a2cc-057ea7d39824"
        },
        "item": {
          "id": "2c661c80-bac0-4cfb-825a-2c7c9ded2fa7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "6caccba4-afab-403d-9ee9-701c947d7446",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28c4a654-3437-4418-92e2-ee25a162cd7f",
        "cursor": {
          "ref": "01809848-28d7-4475-90d5-c8f102f8ded6",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "bd5ae74b-1758-4042-a11b-d92b1be1b917"
        },
        "item": {
          "id": "28c4a654-3437-4418-92e2-ee25a162cd7f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "34d21b5d-bef1-437b-8285-e475c8c91d65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "339dccb1-0362-4b83-a4de-6077d81e8b6b",
        "cursor": {
          "ref": "f5ed76b9-7752-43bf-b099-88c8d0d7e360",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "3e181d0e-3fc4-4a93-817a-29bfb06ff787"
        },
        "item": {
          "id": "339dccb1-0362-4b83-a4de-6077d81e8b6b",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "82dd3034-d819-49d2-a0fa-7c58c9bbf340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e19e4dd-1048-48a9-8274-75ceee0508c2",
        "cursor": {
          "ref": "2e520913-f6fd-4d68-a790-95e8cbae673e",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "de4555fb-6972-4761-abf1-df43b3d9efab"
        },
        "item": {
          "id": "0e19e4dd-1048-48a9-8274-75ceee0508c2",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c1e392f5-332f-4d4e-af8f-4599dd61e751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2926f3e-659c-4e22-bb69-78364b3e101f",
        "cursor": {
          "ref": "6aa88d71-9a28-4483-9c24-717ea194ef06",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "2be2bce1-cf50-41d7-bd66-97d239bbd5ab"
        },
        "item": {
          "id": "e2926f3e-659c-4e22-bb69-78364b3e101f",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "4b154667-8090-4931-9eb2-1d4395b57d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfe9264-7162-43bb-8e20-330ed88a103a",
        "cursor": {
          "ref": "f41b0a01-620b-4b62-86e6-602ea3d3300d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "946a0479-302c-4696-8a36-47481d6ae8fb"
        },
        "item": {
          "id": "6bfe9264-7162-43bb-8e20-330ed88a103a",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "7147e5c0-b347-46d9-ac43-d635048fad50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9727ffe9-2068-497a-b43f-0567403c8629",
        "cursor": {
          "ref": "12421853-4f48-4c13-85e0-7167b9ce7203",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "cf36c3e1-4a21-40d7-afc3-cd2a335c689a"
        },
        "item": {
          "id": "9727ffe9-2068-497a-b43f-0567403c8629",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "1a2f832b-c29c-4993-9c8a-8dc809dd835e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27ac8670-1da0-4e78-a67a-35d36ca4e0bb",
        "cursor": {
          "ref": "7f40d656-ea1d-4dfd-8682-019ebbe86fbd",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "bccbe7f2-ad76-4a5f-9ae6-2d9d05086da1"
        },
        "item": {
          "id": "27ac8670-1da0-4e78-a67a-35d36ca4e0bb",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "33a4355e-60d3-4314-a580-bb882bda1021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a815775b-a01c-45ed-88e2-18143acf4894",
        "cursor": {
          "ref": "cab7028e-e4fe-4b12-b0d0-2c63209e87d6",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "a1e5097f-3536-4fac-95bf-db83d965d4b3"
        },
        "item": {
          "id": "a815775b-a01c-45ed-88e2-18143acf4894",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "cbb27561-77f2-45be-a465-ce57abfb03ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8b911-7593-4825-b335-3153b89df737",
        "cursor": {
          "ref": "d83a4c35-2547-45bb-8cda-7e9cc2467c11",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a433e3e4-ce25-46de-a302-0df263d35854"
        },
        "item": {
          "id": "8fc8b911-7593-4825-b335-3153b89df737",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9ae30476-90e9-478c-a161-41893f84a331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b48afa-8ecd-495b-8cb1-fa284a4b9c00",
        "cursor": {
          "ref": "72c253cd-2f50-4e2a-9d9a-870a9bc72f2f",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "43a1ee03-5b6d-4b65-9c21-d1793347340b"
        },
        "item": {
          "id": "22b48afa-8ecd-495b-8cb1-fa284a4b9c00",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "570feaec-8372-49d4-958a-46da87e349a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2497443c-ac45-40e8-b9c5-644a9ca47350",
        "cursor": {
          "ref": "6e0db39c-d81b-4179-b334-fd06bcd7f906",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "b88ce82e-ce45-4c2b-a2ee-449571d1507c"
        },
        "item": {
          "id": "2497443c-ac45-40e8-b9c5-644a9ca47350",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "302f2107-1fe5-4f19-b1d4-6d24b3988ba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be8d9b54-392c-4337-b8ff-f17e8199875f",
        "cursor": {
          "ref": "3cb89a44-206f-46af-b872-10d62aab96c0",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "0b53c854-a9ed-4338-8374-d45b4225d8a4"
        },
        "item": {
          "id": "be8d9b54-392c-4337-b8ff-f17e8199875f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "bf85c14c-bafc-4bb5-8b9f-47abd372bde7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708c17e2-e423-4115-a5a3-653ffbcf6a98",
        "cursor": {
          "ref": "0411fa1d-cf2c-4010-951b-69a00687fd62",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f0961a7e-6e31-400a-9eea-9d754a2882df"
        },
        "item": {
          "id": "708c17e2-e423-4115-a5a3-653ffbcf6a98",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0ada0d61-4250-4996-8a6a-63c98e9753bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b798fba9-cce4-4477-a7ff-2a7f1bdb3e5b",
        "cursor": {
          "ref": "29c13a5c-747e-4062-b32c-f3c569422874",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6cd2a746-fb1f-42c1-8afd-0a31579154df"
        },
        "item": {
          "id": "b798fba9-cce4-4477-a7ff-2a7f1bdb3e5b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "c2c15ef5-ede0-4132-9640-92f4d0b101e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c632400-5639-4cea-a606-e651dd8b5955",
        "cursor": {
          "ref": "68dac712-e84e-46bf-8117-7516e0591c6b",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "e17a8873-3ef5-4466-a7b5-f40e87ef7d1e"
        },
        "item": {
          "id": "3c632400-5639-4cea-a606-e651dd8b5955",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "35994110-7d78-4e2c-b1f5-21bde046aa10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e0fb3d9-d5c4-4f79-92cc-baf63a568d88",
        "cursor": {
          "ref": "9a917401-ed67-4583-bd80-9b68bcace9bd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "33f194a4-99f9-429d-a774-119d5066c941"
        },
        "item": {
          "id": "6e0fb3d9-d5c4-4f79-92cc-baf63a568d88",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "891ec93a-3c49-4db3-813d-aa682bdc4dcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33727d92-64d2-44de-a2a0-f3ad908ac552",
        "cursor": {
          "ref": "4f46384c-cae8-43c8-b82a-2bf22e6badc8",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d9b47da6-4c33-49a9-89d5-f5982942f3c3"
        },
        "item": {
          "id": "33727d92-64d2-44de-a2a0-f3ad908ac552",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "bde04b00-71c6-472d-aef0-fe4c3c35ae8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b84d5ce-b6d0-4947-b0c2-51fa0d69fa4e",
        "cursor": {
          "ref": "88dcbe3d-4843-442a-a23b-eb83347a4384",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "ea0d6a9b-79fd-444f-bafd-963f50135622"
        },
        "item": {
          "id": "7b84d5ce-b6d0-4947-b0c2-51fa0d69fa4e",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5bf5ab2c-c47c-419f-9a24-4d4f881bf95b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff025391-54f4-4bd0-90b0-0e0fd4a0b56e",
        "cursor": {
          "ref": "7b7681c7-3442-4a9a-9fe6-9459a679f62e",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "db880d9a-3668-48cd-bb9d-fa2f633fbd6b"
        },
        "item": {
          "id": "ff025391-54f4-4bd0-90b0-0e0fd4a0b56e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6d8cb16a-4973-4d7d-8394-a3d2d8e3f2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a353767c-2c3d-4649-8845-ffe5629a9eca",
        "cursor": {
          "ref": "7dcfa6e5-2c67-456f-ad1f-bf1cbccbdfb6",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3d37bf17-3641-41ad-bf01-ffe6a56d071e"
        },
        "item": {
          "id": "a353767c-2c3d-4649-8845-ffe5629a9eca",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "a8dd6ffa-37b5-4ef2-8112-078c07895142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07a548c6-e129-4d12-9453-c6ca2541d335",
        "cursor": {
          "ref": "8f48b740-d9a5-4ef4-b55a-a174ac7f3d79",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "628aa7b1-1d48-4568-951b-cb5702eb7fd8"
        },
        "item": {
          "id": "07a548c6-e129-4d12-9453-c6ca2541d335",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "627fa985-99a6-4328-8c1f-bbab3325e508",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c856d1a-957c-420c-9aca-62c49251cd03",
        "cursor": {
          "ref": "1e051578-43fe-4cb5-a8bc-e0b4a61adcfc",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "beaba9b6-6a60-4b8c-9152-69d54b4a25e7"
        },
        "item": {
          "id": "5c856d1a-957c-420c-9aca-62c49251cd03",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "be9ef740-56d4-4f14-9bf8-5e6cf1138f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "7ccb179e-f269-4ebc-a146-f39cae721474",
        "cursor": {
          "ref": "3ded4f5b-3c51-42a5-906e-05b7faa05920",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "be6524c5-aab9-4efc-9ef9-cd9f938cf1f5"
        },
        "item": {
          "id": "7ccb179e-f269-4ebc-a146-f39cae721474",
          "name": "credentials_issue"
        },
        "response": {
          "id": "4e46b0f1-be4a-4d7b-916c-f85610557b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "00ea9366-a43b-4563-bdca-a93bb84214b1",
        "cursor": {
          "ref": "6df2b0e4-52b9-4afd-b947-0c820e5bebea",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6a3d99d0-2b8d-466d-b41b-ac945fa84915"
        },
        "item": {
          "id": "00ea9366-a43b-4563-bdca-a93bb84214b1",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "e119a3fc-67c8-4dd6-8788-e3e63b3381f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "868789c9-c2e6-48cd-96ed-5e8ad78bb47b",
        "cursor": {
          "ref": "cb6d1d6f-0316-44ed-a03d-21d0496c4a5a",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "9d408be6-a85c-41ab-808e-c2c769631252"
        },
        "item": {
          "id": "868789c9-c2e6-48cd-96ed-5e8ad78bb47b",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "dcf42c6d-9def-47a4-9458-cbea2c1225ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "73fcd96b-890b-4ad5-a444-6dc41e86c91d",
        "cursor": {
          "ref": "2fa2041f-fcc0-490d-88c7-28e04907128f",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "4e7e497f-6501-4096-ba7c-d8016785c8bb"
        },
        "item": {
          "id": "73fcd96b-890b-4ad5-a444-6dc41e86c91d",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "dba70804-4bb7-4a16-9cdc-8ce6962d8274",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "42340d86-148f-42a1-8c60-04b1b8b6cec0",
        "cursor": {
          "ref": "62fd9918-adfe-4ae3-abcb-674ca09bc65b",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e8258126-6c58-4675-8918-e7fd6798b106"
        },
        "item": {
          "id": "42340d86-148f-42a1-8c60-04b1b8b6cec0",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "86580879-1819-472f-b70b-fd9e08a3053e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "587144be-00a1-43bf-95a2-1fb6a686c777",
        "cursor": {
          "ref": "d3ed2f6a-b149-409e-ac70-5391d1f02aae",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "62744798-cc76-4ef7-9c90-7f027be320f7"
        },
        "item": {
          "id": "587144be-00a1-43bf-95a2-1fb6a686c777",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "fe21377e-e937-4f94-a2b1-d79795201a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "e7889730-a4fa-49b4-a82e-ddf377601e20",
        "cursor": {
          "ref": "bf49a87e-1243-4cad-a862-27a6a4a3864a",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "c4baa04a-59d2-4312-95ed-d7b65fb324c8"
        },
        "item": {
          "id": "e7889730-a4fa-49b4-a82e-ddf377601e20",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6df85d96-e944-4be1-a546-628d45a6b30d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa30850f-a0e5-4cf8-977e-0180c3bf4ab6",
        "cursor": {
          "ref": "c8a415cc-1c96-4fee-9c99-292b92441052",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "a4ed0411-6734-4f16-a63f-9647e1af2304"
        },
        "item": {
          "id": "fa30850f-a0e5-4cf8-977e-0180c3bf4ab6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "145c95f3-d098-454b-9de3-a676e9b45195",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ff909e7-9a8d-4467-9bcd-e765f804400f",
        "cursor": {
          "ref": "c2d3bfc1-027a-45e2-95b5-d13d294e63a1",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5e5dd3d-a58f-49d2-b2e9-165f97bdafa4"
        },
        "item": {
          "id": "7ff909e7-9a8d-4467-9bcd-e765f804400f",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1623bca5-d695-4693-a83d-5709c22516eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b17f54f-2d28-43e0-b5e8-c5e8bca9cdd4",
        "cursor": {
          "ref": "f4a9dc8e-9c5b-4310-9210-897137093297",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "678c5d92-d59e-4fc0-a475-bc0c3165056e"
        },
        "item": {
          "id": "8b17f54f-2d28-43e0-b5e8-c5e8bca9cdd4",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4b82d5ef-c05e-4b6a-8b8b-17d43b8292e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a4c106-b5e2-4e0e-94d7-7aee4c813b14",
        "cursor": {
          "ref": "dedd1d87-88d5-48f0-abdb-2f81ad67837a",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "367e72d8-2451-4a63-9631-9417af8a9814"
        },
        "item": {
          "id": "84a4c106-b5e2-4e0e-94d7-7aee4c813b14",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3d2c9611-d4e1-435c-8e53-53abaff7a0bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1c3d8af-6d58-4c3e-bcde-eeb5f72bb899",
        "cursor": {
          "ref": "bead3535-0dbe-4983-8d1f-a8a71e82901f",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "81ea9214-c39b-4286-a56d-6b2434e820e7"
        },
        "item": {
          "id": "c1c3d8af-6d58-4c3e-bcde-eeb5f72bb899",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9090f0db-e14b-47bf-90ed-c87f824aa519",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d207a39f-2205-46da-99a7-c9b64f20ed86",
        "cursor": {
          "ref": "e5500427-9675-4b82-ae17-7a6cf4f214d0",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e4cb4b2a-60ab-4b4a-bc4c-16d2951b2697"
        },
        "item": {
          "id": "d207a39f-2205-46da-99a7-c9b64f20ed86",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "a921c411-4a91-4043-bfa5-2c0a7e50010f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12fb2cb7-15ab-4f92-9e78-ee60369f8d4d",
        "cursor": {
          "ref": "723c4896-ecad-49bb-b0d2-c8c566dba20e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "9ff8bf91-ee09-42c4-9150-c5e8ee3c892e"
        },
        "item": {
          "id": "12fb2cb7-15ab-4f92-9e78-ee60369f8d4d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c7d422be-0e6e-40b1-959e-bf2d83cf697a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "691b81f3-a56b-40a8-a735-c097403d6c60",
        "cursor": {
          "ref": "bd525576-a4db-42ae-8c6d-674e6f0a4e06",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8b6a14a5-db0a-440f-8d8e-32e442795480"
        },
        "item": {
          "id": "691b81f3-a56b-40a8-a735-c097403d6c60",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "21b90217-7e91-49d6-b6d8-2d796481b364",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecdcfe36-5b2e-44c2-8d31-282081a64c53",
        "cursor": {
          "ref": "1ac0ab2a-093c-4baa-a05f-9ee91d35e87f",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "70f1f29e-1b44-4392-af6a-5677316de107"
        },
        "item": {
          "id": "ecdcfe36-5b2e-44c2-8d31-282081a64c53",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "a1b4ff59-663b-46c0-afbc-90900626024a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcf0a43-d680-4372-b668-a769ce2a6232",
        "cursor": {
          "ref": "6fddfc4e-3ab6-4a1e-b2c1-5c0961ee9cb4",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "c2c1ecc7-6fdf-42f4-95f9-3cf959d534ac"
        },
        "item": {
          "id": "8fcf0a43-d680-4372-b668-a769ce2a6232",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "21573614-2121-469a-813f-c18616653057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ca3303-ce0b-4968-8e1b-cbcb96a7a060",
        "cursor": {
          "ref": "604f9dba-29a2-484c-ab6b-06e22f70822b",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "93d5368e-ab8a-4f37-8a95-4b063fa695f3"
        },
        "item": {
          "id": "44ca3303-ce0b-4968-8e1b-cbcb96a7a060",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "866f15fd-3208-4ef4-954b-4b4e9023909e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e118fa-5225-43c0-b516-1ac37984d03f",
        "cursor": {
          "ref": "c977bdce-3e68-4fe6-a259-3fe0d560d06a",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "feacaf9a-bc2a-4152-a887-5835f30279ac"
        },
        "item": {
          "id": "b9e118fa-5225-43c0-b516-1ac37984d03f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "5a118050-20fc-4f97-967b-55b4bb372394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb55fc2-a9b8-4118-be6e-592a8d1fec22",
        "cursor": {
          "ref": "65a730a7-e14f-4736-b255-4651e498ea1c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "08e95c40-f8d4-4fcd-890a-83e394e49fa5"
        },
        "item": {
          "id": "2cb55fc2-a9b8-4118-be6e-592a8d1fec22",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "4d6a9b60-1e8f-4e53-9c03-94806352c009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b82d906-fc3b-40f1-a481-0c35967909f4",
        "cursor": {
          "ref": "23a8e22c-c114-47d1-98ba-d2ac643981b6",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "43a57b35-6f02-404f-adac-41243e956a8b"
        },
        "item": {
          "id": "4b82d906-fc3b-40f1-a481-0c35967909f4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2200a59d-4259-4876-bd0d-4bce6f336765",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bae66ec-8485-4e4e-9a7a-44dcb47ef374",
        "cursor": {
          "ref": "df6cc13c-533b-4fcf-9e87-6a756ba02127",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "18149096-7612-4ab2-b01b-79680e0c2f4e"
        },
        "item": {
          "id": "7bae66ec-8485-4e4e-9a7a-44dcb47ef374",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "c63bc177-ec70-4eb6-ad33-5d5947b268f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4918b5df-13cc-45d4-9a06-7b68039fb2d4",
        "cursor": {
          "ref": "15fcdb41-e732-4fb2-9736-271e4b2a2dc1",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "368a949c-b957-4685-bf3f-8629038f8725"
        },
        "item": {
          "id": "4918b5df-13cc-45d4-9a06-7b68039fb2d4",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "68c0da68-ef3f-45d3-9068-d660ad27956d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c64b1183-8e21-480a-a265-105764b26edc",
        "cursor": {
          "ref": "4418dd2d-351d-4249-9a65-44fc34e7593a",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "555089f0-197c-4235-a057-da82098e17f5"
        },
        "item": {
          "id": "c64b1183-8e21-480a-a265-105764b26edc",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "41480740-c0eb-479b-bb01-6386abd94f3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d5e19f-9623-454d-a2d4-04992875b1fe",
        "cursor": {
          "ref": "8adc043c-fab1-4a14-b67f-6dd457b1940a",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "24fe4d30-ddd2-4e7d-acfb-0198cbb3ce5f"
        },
        "item": {
          "id": "30d5e19f-9623-454d-a2d4-04992875b1fe",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "86b37b08-91b2-4278-9023-fca1b17e4fe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b6ce0c-7391-4326-a508-9319394f627c",
        "cursor": {
          "ref": "273d9928-523e-466b-87c5-996280e0fbc9",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "8b34846c-29c3-4dce-8cc4-43988316a7fd"
        },
        "item": {
          "id": "e3b6ce0c-7391-4326-a508-9319394f627c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "44329c32-1f9e-4ba0-bebf-875faf5cc835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d64aed6-5261-43c9-8e0a-576f8aca394c",
        "cursor": {
          "ref": "07bc0c43-5225-457f-8280-0fa4ec15df94",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "2bd376a9-048f-449e-b2a3-4830b0de6c41"
        },
        "item": {
          "id": "5d64aed6-5261-43c9-8e0a-576f8aca394c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e91c24de-72b9-4e0d-99e1-e0fba1bd94d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0704c95f-4f79-4731-a9b4-7ff62f4c8886",
        "cursor": {
          "ref": "e444f6fc-4313-4425-9310-a620499069c6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "b6a84935-e456-4a30-9bae-77f855a5816f"
        },
        "item": {
          "id": "0704c95f-4f79-4731-a9b4-7ff62f4c8886",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "545c2006-0472-4374-9f55-d5734c229a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6ed86cb-5867-4424-8fb5-d5147d9eb5f0",
        "cursor": {
          "ref": "e2bdfb12-3d81-4daf-9a77-ecdecd700ce0",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8e1c3de0-076a-44cb-b09d-f404eb7c18da"
        },
        "item": {
          "id": "d6ed86cb-5867-4424-8fb5-d5147d9eb5f0",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "ed3d819a-b614-448b-a273-6410e10476e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e007a01-a752-46d1-8ab4-0fbc6326d657",
        "cursor": {
          "ref": "b74b0c4b-9f60-4a38-9ac4-f79d36b16755",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "308c3a9b-f95d-4585-9098-e18be0b55a66"
        },
        "item": {
          "id": "9e007a01-a752-46d1-8ab4-0fbc6326d657",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "54c617bc-3e29-452f-8103-aeb1354a9e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb0a3b92-a144-4092-87ab-bee8f4161d1f",
        "cursor": {
          "ref": "2f79dc07-ce12-4a54-abd2-abd611249493",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "afe04d00-f5f5-4778-b933-135b33eff2ce"
        },
        "item": {
          "id": "bb0a3b92-a144-4092-87ab-bee8f4161d1f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "a1d50f96-3fc4-443a-bb68-9e933176b561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d67b609c-3c60-4361-8d5b-686f65633196",
        "cursor": {
          "ref": "b053385f-9d9c-4087-b639-be3fa03a0401",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "0ccae029-698e-41c4-8d16-d06089ffeafb"
        },
        "item": {
          "id": "d67b609c-3c60-4361-8d5b-686f65633196",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c497a21-ff97-4c17-a648-3d2cb94c6c8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43722076-0819-49da-97c3-1fb403c90e70",
        "cursor": {
          "ref": "e56d2aae-91bf-4cd7-a9d2-1ea66a0db2f9",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "28a20023-451b-45eb-93e0-4e25e4072266"
        },
        "item": {
          "id": "43722076-0819-49da-97c3-1fb403c90e70",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "81977f36-99fb-4ae4-a46a-dc5c638e5bfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f9bed9-3028-41ec-9b80-7703759c01b6",
        "cursor": {
          "ref": "ba3afecc-3586-4df4-aaa8-b1f53c5ca904",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "c7074531-f00f-49c7-9bb1-d5abcd34f53f"
        },
        "item": {
          "id": "90f9bed9-3028-41ec-9b80-7703759c01b6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c788a514-527d-4e3b-8e78-5aa61f524512",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db10fff4-3a3b-486c-a8cc-2649f73a6fb5",
        "cursor": {
          "ref": "707c97dd-3877-4286-a30b-be1b3010b72b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d3f25f3c-c815-4469-817a-b6a2085a2ee6"
        },
        "item": {
          "id": "db10fff4-3a3b-486c-a8cc-2649f73a6fb5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "82a7b120-8ea6-4654-b62d-2dd768376389",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfac5d3-4aa1-4852-b2c2-b1ca668e98e0",
        "cursor": {
          "ref": "0bc55649-f9d3-4d4c-b3a1-3ac35f5e7d8c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "b367268d-9549-47f4-ba86-5fbf62dfd231"
        },
        "item": {
          "id": "ebfac5d3-4aa1-4852-b2c2-b1ca668e98e0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "38e043d4-d766-43f0-bb66-dd65b4402c65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc572396-b8cf-4813-abfc-4a8d60cb03b7",
        "cursor": {
          "ref": "3abd7d8a-3d32-464d-b789-2b42b212c4db",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "05f569a8-ee7c-46ef-b0f9-7068ea37083e"
        },
        "item": {
          "id": "bc572396-b8cf-4813-abfc-4a8d60cb03b7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9c11e3df-12e1-4de4-9002-4ac5f4b2d8a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8eb447c1-59c1-4aba-8cd7-2a128973c94d",
        "cursor": {
          "ref": "55b4fd7f-924a-478c-8d82-d59be772ae08",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "5b45dc08-29fc-4b59-a5a5-7dc220aee347"
        },
        "item": {
          "id": "8eb447c1-59c1-4aba-8cd7-2a128973c94d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7c0b182d-ef14-46b4-88d5-e60812e77bd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "219e5abf-7786-4c91-acd8-0437f2b75b77",
        "cursor": {
          "ref": "5d7af62a-376f-4ae7-85f9-29f734c92cdf",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "e891f9af-7774-4682-ba53-b4eb6ec23d94"
        },
        "item": {
          "id": "219e5abf-7786-4c91-acd8-0437f2b75b77",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "03277c98-d6d5-4412-a5b7-798b00bc3c62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 24,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a318e871-0a36-4225-81e2-8ce544987463",
        "cursor": {
          "ref": "876890ee-ea68-4550-b6b9-6709a66b1fdd",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d76ce7c9-8034-4915-8395-76f231873a51"
        },
        "item": {
          "id": "a318e871-0a36-4225-81e2-8ce544987463",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ad3a0c21-3d23-4f1c-b9f2-ff4eaaf5818f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d9b8e3a-4373-4a31-90cc-3023b217c04e",
        "cursor": {
          "ref": "5bca09b0-4b8d-4b22-8e6a-854fc994bef8",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "576dfc07-e31d-43de-9b39-bae0bfd0e05d"
        },
        "item": {
          "id": "1d9b8e3a-4373-4a31-90cc-3023b217c04e",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "3650db39-f8e0-4709-820c-b7fbd8e857b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f5f4aca-1bce-4e37-800c-14bbeb348331",
        "cursor": {
          "ref": "20f8dc59-b281-42da-9bd9-f622f0ab5d6e",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d02612fa-4797-4b16-a64b-2f8a1dd2bdfe"
        },
        "item": {
          "id": "3f5f4aca-1bce-4e37-800c-14bbeb348331",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1fc7e3d7-c314-4d31-b4d6-b97604b0b1ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4dbd1f-c401-4946-84f9-c8952cc8edd8",
        "cursor": {
          "ref": "cbe90c1e-bf58-4ed2-b488-4e70ba392af1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f0e60244-90d1-49ef-b90d-7a4b75a4afe0"
        },
        "item": {
          "id": "ec4dbd1f-c401-4946-84f9-c8952cc8edd8",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "89f8e607-ac27-42be-9600-67e932104e17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b9c2cf-5901-4eed-b3ea-28b760ec5170",
        "cursor": {
          "ref": "851f6638-3182-4a32-9eb8-6bd179d32ce6",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5d41417c-e456-4956-9faa-2c0e5422af9a"
        },
        "item": {
          "id": "86b9c2cf-5901-4eed-b3ea-28b760ec5170",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d5c4f801-eee0-497b-97b0-2fc1b2eaa796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5aa671d-80b7-4952-a8f4-45656bb17ccb",
        "cursor": {
          "ref": "e87a253f-1965-4dd5-acb2-c2059f9807a2",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b76ccf5f-7282-4192-9f12-afd2d622d15f"
        },
        "item": {
          "id": "d5aa671d-80b7-4952-a8f4-45656bb17ccb",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a73f50f3-a52c-4d33-8918-02af522466d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe27f19-aed2-4940-a375-bf02f159d6fe",
        "cursor": {
          "ref": "68106f52-a99c-4041-9ef6-29ab379dfa8d",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "218e1b11-dabf-4d79-91c6-736a16ecb6ef"
        },
        "item": {
          "id": "bbe27f19-aed2-4940-a375-bf02f159d6fe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "690da19e-8b57-48c2-9193-febf613c64a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf0d54-e2dd-404f-86d2-a75427bce31f",
        "cursor": {
          "ref": "17012ca9-e595-49f8-9f7f-fe8117ed3526",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "a71bae35-301f-4c57-9991-ae88792e5143"
        },
        "item": {
          "id": "57cf0d54-e2dd-404f-86d2-a75427bce31f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "bdb49487-7966-4d0e-8fba-55b5bd95c4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734d35b7-c26e-4223-90d7-81341cdc9f6f",
        "cursor": {
          "ref": "e4aabf9c-eda9-4a45-9f5e-0e7e9c1e26ea",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "915887fc-f5cb-4f69-9cd6-8234a8f538a9"
        },
        "item": {
          "id": "734d35b7-c26e-4223-90d7-81341cdc9f6f",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d42080ea-33a2-46e3-9edc-61d069b3636d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0055c542-14a7-42f5-a5cc-af327d0c08af",
        "cursor": {
          "ref": "b88a8f23-467e-448a-aae2-827605573d03",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "0db519cd-100e-46c5-811f-1ca9c8ed6dd9"
        },
        "item": {
          "id": "0055c542-14a7-42f5-a5cc-af327d0c08af",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "eb30880e-2a61-48f8-9375-84137ae05ae1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0ad4fbc-9ae9-4d2a-99c4-6a0fa2aa0e78",
        "cursor": {
          "ref": "9faf73bc-3453-42b5-9e21-e6c639463fdc",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "d5b5c277-6e4b-4527-b40e-227a60609de4"
        },
        "item": {
          "id": "b0ad4fbc-9ae9-4d2a-99c4-6a0fa2aa0e78",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "aa9d73f0-efb9-4fb7-b242-5988eaaa60a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea674990-22c3-438b-9b42-fea359655a60",
        "cursor": {
          "ref": "bea8bf8a-aaf9-45f9-8244-d2ce7261a06c",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "a9b174dd-d29a-4d2e-86bf-cee23cf8c4c3"
        },
        "item": {
          "id": "ea674990-22c3-438b-9b42-fea359655a60",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "4cdb1b6a-8ec7-434b-9f0f-35da85dd3335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "616a1804-2f6b-4c61-a4d3-e8c3d646cbb0",
        "cursor": {
          "ref": "5541d002-2f8d-4bf1-b768-2c5286929053",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ad4f7c10-262b-4a3d-a128-5af66b026e15"
        },
        "item": {
          "id": "616a1804-2f6b-4c61-a4d3-e8c3d646cbb0",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "acce52ec-6f6e-412a-b416-7382e213f071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e23dd8-44b1-4eb3-aa35-8970d5e94c41",
        "cursor": {
          "ref": "f685dddd-93e5-4aa7-9ed9-648bf641629d",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "753f8b1d-6cbe-4e8c-bbff-737c6594195d"
        },
        "item": {
          "id": "e4e23dd8-44b1-4eb3-aa35-8970d5e94c41",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "917968f0-db75-4869-8394-825d1c0b61a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55a07cee-76a8-4591-9028-ef0b4796843a",
        "cursor": {
          "ref": "c021619d-c307-4d36-a63a-f415ee376409",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "8387a4f2-1a2e-4822-9ddc-3ee50d52c2ba"
        },
        "item": {
          "id": "55a07cee-76a8-4591-9028-ef0b4796843a",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7b55b594-2a45-4390-b98a-c42927afaa4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6def3d61-c8f7-474d-a2c5-dea5777779d3",
        "cursor": {
          "ref": "3592c4e9-260a-4596-896c-ca9cdc463773",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "3d1692b6-d0ba-4251-89fb-dab53b7329a7"
        },
        "item": {
          "id": "6def3d61-c8f7-474d-a2c5-dea5777779d3",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "97b70da4-8e4e-466e-bf2b-68ab7f0524de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e0126c-9ac2-48f5-b203-c5c4736f7444",
        "cursor": {
          "ref": "a25d3061-f208-4021-8415-babce9af9cb5",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "46fdbec9-c298-48dd-9410-c3f62a36ca82"
        },
        "item": {
          "id": "29e0126c-9ac2-48f5-b203-c5c4736f7444",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "946e7611-c004-4682-9156-42695dd0fdf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4cb94a0-9faf-4451-bfa4-1c5256381dea",
        "cursor": {
          "ref": "bdce4002-d452-41e6-a5d5-f18bfd2722a5",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "f4fa900f-2475-4a68-9f10-64946858f98a"
        },
        "item": {
          "id": "d4cb94a0-9faf-4451-bfa4-1c5256381dea",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7154a19d-efe3-4f1a-8c1d-786805b28cc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7d02279-fc67-46d6-b210-ec05c6646535",
        "cursor": {
          "ref": "21c813c5-9fe8-49c7-a9f0-158629138d84",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fc251ed0-a46a-4f2b-94e2-6ecc4e779bb7"
        },
        "item": {
          "id": "b7d02279-fc67-46d6-b210-ec05c6646535",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a5545c12-4a93-4dc8-b966-e5e904d765bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecd0fcbd-b64b-4272-85f5-10bc0969101a",
        "cursor": {
          "ref": "3b659d71-6540-4927-bcf4-7f774d1065b8",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "c2b74df7-45a8-4b44-9172-163daeb5ce20"
        },
        "item": {
          "id": "ecd0fcbd-b64b-4272-85f5-10bc0969101a",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6379e770-e994-4ba2-8ddd-0a1e9a40d06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49d2c17-3b60-43af-87ec-efaf65f1119f",
        "cursor": {
          "ref": "0f1f56a7-7589-42e5-bd80-27cd4d1be4f7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5f8774f3-d68d-41e1-88d1-9b2975a356db"
        },
        "item": {
          "id": "e49d2c17-3b60-43af-87ec-efaf65f1119f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29b4695d-4588-4a9e-a2de-91b69329450a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c73dcde-03e7-4483-afa2-2116ac063a8d",
        "cursor": {
          "ref": "dbaf88eb-1670-4dfd-84f3-722b8ba6fb10",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f338a248-16b7-4fdc-9aa3-39fb189ecba8"
        },
        "item": {
          "id": "2c73dcde-03e7-4483-afa2-2116ac063a8d",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d4b6048b-e5d8-453f-86d0-f55a64d64be4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca61867-9745-4b41-8a80-bf8694bb689e",
        "cursor": {
          "ref": "47c7144a-af3a-4e04-a7e7-2f5d1c35b096",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "484b0835-8812-4a45-b0fc-bf1d49cb203b"
        },
        "item": {
          "id": "5ca61867-9745-4b41-8a80-bf8694bb689e",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2c1cbb36-25bf-4c00-95c2-d39ced612e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da26a521-491b-4ff7-b131-a9a38bbbd472",
        "cursor": {
          "ref": "ccb27add-2759-4f51-b077-988b5ad9f94b",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "ce7c7616-3070-4dc9-b39a-49925bc3b124"
        },
        "item": {
          "id": "da26a521-491b-4ff7-b131-a9a38bbbd472",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4a41935c-67d3-49ac-90d3-a5961ddff1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef21c3ad-dd49-4848-92a2-e24726858fea",
        "cursor": {
          "ref": "e092c4a3-7dc1-48dc-986d-98cd6190ad33",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "2d0f2e7a-d531-445f-97a3-cb96b9f62cf9"
        },
        "item": {
          "id": "ef21c3ad-dd49-4848-92a2-e24726858fea",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "524a81f8-de49-4b43-ad05-9c196fa75dd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eef9618b-b5d5-47bb-aacc-cecf9c83706c",
        "cursor": {
          "ref": "caaba9ac-63e9-4fb9-9b8d-726779fcbcfd",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "199cd962-87b9-40b6-8f5d-4ea46de92f23"
        },
        "item": {
          "id": "eef9618b-b5d5-47bb-aacc-cecf9c83706c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4cc9ad9a-bff7-49a6-bc3f-a93d7252e09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f7b8132-cc3f-4165-aa28-386240385637",
        "cursor": {
          "ref": "e7147d88-44ee-43cb-b4be-9dea05633c0a",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "91cd510b-f2a8-48ae-a3fc-b87c85b5a263"
        },
        "item": {
          "id": "2f7b8132-cc3f-4165-aa28-386240385637",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f1c9d592-70a4-4fc0-b3db-5739fc6547fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca5bb1b-6768-4718-9f87-d91685e97740",
        "cursor": {
          "ref": "43d8a3dc-7c84-40a4-824d-3046bb2ad320",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "5f8e6eaa-53a3-4403-88c8-92b70976abc5"
        },
        "item": {
          "id": "6ca5bb1b-6768-4718-9f87-d91685e97740",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3533834f-0947-4344-aa85-5233b713aa07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d205fb4-c215-4066-ae1b-40a14216b154",
        "cursor": {
          "ref": "f4652c6c-1242-4be2-8ebd-e08bbfac5ca5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "a9ad4f61-8815-4b33-8db1-af50dbc49e79"
        },
        "item": {
          "id": "0d205fb4-c215-4066-ae1b-40a14216b154",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "e8856cb6-73b0-49d1-a0cb-775d7f4c22a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4490a756-d67a-45dc-aff6-923e86a8821f",
        "cursor": {
          "ref": "7162bd68-8819-4dfd-ad17-a5a46db74950",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "b46a43fa-1f81-4117-bb59-0924d65bd677"
        },
        "item": {
          "id": "4490a756-d67a-45dc-aff6-923e86a8821f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "623de290-7d76-49e7-96eb-21f77acf857c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e76fe15-18b5-4795-b236-a4fceeeedd4a",
        "cursor": {
          "ref": "6bc1c015-6d3a-4237-963b-3363681f90c5",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "ede8cedb-c49e-4145-b310-1b4f92f9b851"
        },
        "item": {
          "id": "5e76fe15-18b5-4795-b236-a4fceeeedd4a",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "630fd269-cca8-4463-8be1-184c3d99d520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760f187b-2730-4082-9f60-0faaf655468c",
        "cursor": {
          "ref": "79251f15-fd4d-421b-aca9-17072a4f830c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "187bf3af-a58e-40f2-a878-94cfbcd17c81"
        },
        "item": {
          "id": "760f187b-2730-4082-9f60-0faaf655468c",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3ec5d7eb-4717-457e-b99b-516b29763535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "701fad46-813d-433c-8074-05f5cfb6f3f1",
        "cursor": {
          "ref": "c50dba13-d42b-423b-917c-9aa21fa22815",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "d57a05cd-a578-4c4a-90db-c2f198a418de"
        },
        "item": {
          "id": "701fad46-813d-433c-8074-05f5cfb6f3f1",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "9c1282b4-6fe9-4f0a-87f6-173e1bd08145",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cc6060-91b4-4de9-aeda-1ff136d75906",
        "cursor": {
          "ref": "6e7da245-9d84-411a-9dae-3cabf11b1222",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "63b0c38e-be60-4a85-967f-b4345bb09b4a"
        },
        "item": {
          "id": "80cc6060-91b4-4de9-aeda-1ff136d75906",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "71420113-01ef-44be-bfce-a337a938c126",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd57336f-225f-4dbf-ba08-5d5fd8c68821",
        "cursor": {
          "ref": "6338a9cc-a6a7-4d32-9205-ef8aaddbaf62",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "70f45044-6d9b-4f17-ba76-1b8a541125af"
        },
        "item": {
          "id": "fd57336f-225f-4dbf-ba08-5d5fd8c68821",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "740aa210-c26f-4244-b1c9-0eb9f3185fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ad6d80-f887-4b3c-9659-df333c2bd73c",
        "cursor": {
          "ref": "386cc6ef-01f5-4203-af47-245c7c68928d",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "ebfba007-8f82-47d3-9a7d-458187db073e"
        },
        "item": {
          "id": "d3ad6d80-f887-4b3c-9659-df333c2bd73c",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "4987e724-97cb-4bc9-a4c0-1d31e159cb39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acec0362-554e-4200-8e20-e8d757c882f8",
        "cursor": {
          "ref": "ae60263d-1a84-4026-99a7-caf9f62bfa36",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "e9c819fb-d1c7-4dfb-b011-45e67e4f9dfa"
        },
        "item": {
          "id": "acec0362-554e-4200-8e20-e8d757c882f8",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "51bf0442-87a8-4506-a526-bc0c0130c764",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85b8496-1edc-4b9b-87dd-cca4c5a47837",
        "cursor": {
          "ref": "3e2902da-0ac2-452b-9a17-9ba5f9dcf251",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "06a43ed9-d619-489a-a607-64ba7d66ccc1"
        },
        "item": {
          "id": "c85b8496-1edc-4b9b-87dd-cca4c5a47837",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a2f4b0c2-422d-4312-8026-a2761c521a72",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 23,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f3019f3-6b51-4ec3-92bd-be37aff58890",
        "cursor": {
          "ref": "f0e47ac9-8ede-4860-b6f5-3ec9a838a476",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "76fbb01d-c94f-48a2-8839-11f3a9b46151"
        },
        "item": {
          "id": "8f3019f3-6b51-4ec3-92bd-be37aff58890",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "fd8b5995-f032-4e81-81ad-9aebb53574e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee9ec1e-5f7d-47e4-908d-ec64fbaa9480",
        "cursor": {
          "ref": "4105c5bf-fe2b-41c7-bd0b-b5ee1c20cc99",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "59b851ab-0fdf-4ce6-b6f6-f65199c619e6"
        },
        "item": {
          "id": "9ee9ec1e-5f7d-47e4-908d-ec64fbaa9480",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "dd2bef9c-32d8-4366-9b96-4155f443bfa5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c48ba19-58b6-4c73-ba5d-5088fde6a853",
        "cursor": {
          "ref": "3c40a46c-5b93-40f9-b195-3c6b53725788",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "4fe252da-a8db-4b02-93bd-3c6b82ee6396"
        },
        "item": {
          "id": "3c48ba19-58b6-4c73-ba5d-5088fde6a853",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e230c01d-6c58-4770-8080-7500a188d31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3294cc35-8861-4b25-ad0a-a03189581d76",
        "cursor": {
          "ref": "07e9d9c6-ff18-4fb8-91b9-4363aa5acb1b",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e1905b58-0539-436a-a04a-eaa51ef9853d"
        },
        "item": {
          "id": "3294cc35-8861-4b25-ad0a-a03189581d76",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2c0bff43-bfd2-4ef8-831b-d8602b4c59ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bfa65a8-04e2-4863-8f14-786a7d2aa3f1",
        "cursor": {
          "ref": "bdba6ae1-d586-409e-a16a-8338c0f2322f",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b8e22d08-3cd0-44b8-99e1-209e4cdeeef7"
        },
        "item": {
          "id": "3bfa65a8-04e2-4863-8f14-786a7d2aa3f1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a0b7bf6f-4440-417c-beac-587cc35f4ce7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55c4512a-94db-48cf-aecf-a44ff7d6ebdf",
        "cursor": {
          "ref": "704c7108-d35f-4a1a-ae2d-1bca4c60bc07",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ef4c3de0-74b4-49f1-a0b7-27a4bdc7c60e"
        },
        "item": {
          "id": "55c4512a-94db-48cf-aecf-a44ff7d6ebdf",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "d034e7b1-bf7b-40bb-a0f6-597eb040f901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35ea676-dc34-4a31-85cc-61c327ddf19b",
        "cursor": {
          "ref": "1f3c84d6-80e1-4162-92db-9728dbfae585",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "fc3ce7f5-2fdb-4c19-b545-e0a330074381"
        },
        "item": {
          "id": "a35ea676-dc34-4a31-85cc-61c327ddf19b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ef9c7c0f-58b8-4ef0-8402-3f2b116d34f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb32667-b509-4652-87e8-4961c4538543",
        "cursor": {
          "ref": "5e84b788-c026-4cca-8e30-18dc6b01b3f9",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "382f2f1d-f80d-44e2-97aa-2a8786eda036"
        },
        "item": {
          "id": "0eb32667-b509-4652-87e8-4961c4538543",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "efc13954-9ae2-44bc-99ad-0ede2e4b4756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08a2812-ddf8-477e-ba45-cd4b15724bf0",
        "cursor": {
          "ref": "c289392b-ce0e-481f-acd1-c6490b5eddbe",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f1a40663-9caf-45a6-99c2-88ead1db0afc"
        },
        "item": {
          "id": "a08a2812-ddf8-477e-ba45-cd4b15724bf0",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "59b3760a-349b-4341-a69e-3889de41a718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd225f64-2ad3-4f70-b633-8d881c291594",
        "cursor": {
          "ref": "d6707a37-36f8-4c34-8fa4-080cd4ece065",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "1d9f30e8-bd39-4791-b466-3a08ded86257"
        },
        "item": {
          "id": "fd225f64-2ad3-4f70-b633-8d881c291594",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2a0f5d4e-dcb3-4c37-9455-efdcf45d98a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e657d6-f209-4e29-ad68-bb3a6af03722",
        "cursor": {
          "ref": "b8e5ed30-199b-4f97-9a81-cdff27469bc0",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "bacdd97a-6bc3-4aab-9ed4-6dc658ca9a15"
        },
        "item": {
          "id": "59e657d6-f209-4e29-ad68-bb3a6af03722",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "d73f02d6-22a5-4af9-b6a8-0fe27e595363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "989935f1-bcdb-44fa-8fbf-3d504b6f5dfa",
        "cursor": {
          "ref": "021a9ef0-783d-4c8a-8fe9-417df631ebd5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b205b0ee-3742-4ef9-bff9-07652f4efc09"
        },
        "item": {
          "id": "989935f1-bcdb-44fa-8fbf-3d504b6f5dfa",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d94d5ca4-7494-4e16-b749-5576e11b222b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f73f9b9f-9581-4a80-bfd9-b5009d70c05a",
        "cursor": {
          "ref": "74ad744c-9a76-4048-9743-788b9777fa3c",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "898f5c8c-7003-4bae-9b6a-8a49d1449916"
        },
        "item": {
          "id": "f73f9b9f-9581-4a80-bfd9-b5009d70c05a",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "59b979c3-4e21-4fa6-b358-64eec9f54977",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e63fcb2-7ec8-446f-bf91-e4a3a1682f51",
        "cursor": {
          "ref": "309ac47b-33aa-467b-ba8e-6546f3076dde",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "d34c48b7-9e2e-4b7c-8392-7cff46257ba4"
        },
        "item": {
          "id": "9e63fcb2-7ec8-446f-bf91-e4a3a1682f51",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f5cc9609-2e0b-415e-b146-ee8f4cbf1e4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62b81173-c267-4547-afdf-faee19e0b086",
        "cursor": {
          "ref": "72cee98e-9444-4ad9-8063-e7586f67c7f9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "24d1b9b4-c0e4-4802-b1b9-b4ad8283d15a"
        },
        "item": {
          "id": "62b81173-c267-4547-afdf-faee19e0b086",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "ef549a8f-45ba-4b7b-ba9a-228ee05a8a19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d235117-4048-4734-9027-190afd6c690a",
        "cursor": {
          "ref": "5d5c0900-1d9c-4a64-8828-72957e1abf88",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "0e775387-a8cc-4104-9429-560652d7157d"
        },
        "item": {
          "id": "8d235117-4048-4734-9027-190afd6c690a",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "b035ef79-1585-453b-bce3-eb350c84819c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5428c50-6fa1-4c07-af1c-7c14f26d4453",
        "cursor": {
          "ref": "4ee68267-cc70-42f2-9d8b-6fa7052ac7e7",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d64f92fc-a6c2-4ce5-b0b4-53ab5e3523c6"
        },
        "item": {
          "id": "c5428c50-6fa1-4c07-af1c-7c14f26d4453",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "2765b6d4-ccb8-4063-9373-f463870ecb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd1f5bae-ea70-42f5-b0b2-a148a0f88ced",
        "cursor": {
          "ref": "992ad8f7-d426-46e5-b176-fb8ce2f2fe02",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "87081b7a-bf2d-42cf-89b0-52b18bdce15a"
        },
        "item": {
          "id": "fd1f5bae-ea70-42f5-b0b2-a148a0f88ced",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6f7d93f7-2f1f-46fb-ba5f-9b5754d21ad7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a3fd16e-518b-4755-9ffd-551c2bdef787",
        "cursor": {
          "ref": "e0dfbfba-48c8-4b9a-960e-d091b03ba0af",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "b4130493-5af5-4f4b-91d7-ce53ac3f45ea"
        },
        "item": {
          "id": "0a3fd16e-518b-4755-9ffd-551c2bdef787",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "58a1f996-d7b9-43b0-b2dd-6d6faa1e8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e62222-ea56-42c7-a37b-4c45ffb12d0a",
        "cursor": {
          "ref": "887d9272-59f5-4d48-b441-845fb5bdc016",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "4e918999-da4e-4ba1-89cd-4de83e0f4d8e"
        },
        "item": {
          "id": "60e62222-ea56-42c7-a37b-4c45ffb12d0a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "64a1384e-4cf3-4ccb-9f68-861e42f85cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f11d1baa-564c-4a36-b002-08b1e73b25ce",
        "cursor": {
          "ref": "9b7de97f-8c5d-447b-a4a0-1049841a1e0a",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0729edc1-e105-4603-9b84-7ad24bf0896d"
        },
        "item": {
          "id": "f11d1baa-564c-4a36-b002-08b1e73b25ce",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "649b94f1-dfe7-4c21-b276-5a337ef2b1d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4233430-fab9-4046-8196-9cd85b0738ab",
        "cursor": {
          "ref": "d7b10b43-4d36-45b9-ad68-0f599be2c948",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "850985a6-46e9-441d-920c-cd53bd5620cd"
        },
        "item": {
          "id": "e4233430-fab9-4046-8196-9cd85b0738ab",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "80029034-378d-4ce9-9658-eac6e08d5293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93a4ecd-aa07-4633-b958-29b1e5231c26",
        "cursor": {
          "ref": "31507029-ca4c-4041-ad64-9d90c564b4db",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "258e7575-8f98-44c0-bf8a-92eb510a250d"
        },
        "item": {
          "id": "c93a4ecd-aa07-4633-b958-29b1e5231c26",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "8fe2e7d6-b96e-46ae-9f10-b5a64ac738a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29321efa-5de2-4c62-9fa8-86ac3e044a8d",
        "cursor": {
          "ref": "e571c831-fff5-4a45-ace6-0d92ccf0d725",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "3d392e45-1009-4450-9a58-34191d90d70c"
        },
        "item": {
          "id": "29321efa-5de2-4c62-9fa8-86ac3e044a8d",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "58c88021-7fc3-4e0c-a1d7-4b654f44f40a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17053b4a-e7e0-4296-926f-02e1968609e9",
        "cursor": {
          "ref": "26fc2b1d-b44a-4959-bc39-3c929131f381",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "b14b391f-579d-4d1a-accb-bdbf0e0f1391"
        },
        "item": {
          "id": "17053b4a-e7e0-4296-926f-02e1968609e9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "042e5c21-d426-41ce-a06a-6cd54429d886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb6a33c-418d-4c8b-993a-7cca8da25601",
        "cursor": {
          "ref": "f2b873ae-6ef6-49e7-82c8-4d16e009106d",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "dd6051d5-ffac-48c3-b695-50d25cd27259"
        },
        "item": {
          "id": "7eb6a33c-418d-4c8b-993a-7cca8da25601",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "cbf58f3d-c0b6-49e9-a210-a482b7b7f0ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf82e71-06d9-43f8-bbd6-50aaa41710d5",
        "cursor": {
          "ref": "6f441b8b-7834-4f7e-9376-eff280adf9b9",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0ba34145-2fdf-492d-b559-b4ccfff6236b"
        },
        "item": {
          "id": "eaf82e71-06d9-43f8-bbd6-50aaa41710d5",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "23f3caa2-e24f-4a98-92ff-db65f1ad0d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ec0e17a-3f98-493a-a9dc-70b7b1861095",
        "cursor": {
          "ref": "cf7cd28a-8047-4f60-98ea-b0295f4d859f",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "7a476f5b-55c4-42d0-8e1e-14a87a53b59b"
        },
        "item": {
          "id": "0ec0e17a-3f98-493a-a9dc-70b7b1861095",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "68f7a3bc-e1f7-4a1b-9df8-bb0b321be467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e358b14-6555-4544-981c-9747f682c777",
        "cursor": {
          "ref": "7b68e72a-e1e9-4968-8087-4b8cac1c23c9",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8beb9ade-1191-4fda-87b6-da4298fabb31"
        },
        "item": {
          "id": "3e358b14-6555-4544-981c-9747f682c777",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "769c9bd3-42ec-4ab1-9a8f-2c33ade63c28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4ada0a2-cc4b-4681-8f63-5aa97e64c76d",
        "cursor": {
          "ref": "1b3d7214-60e3-498b-9b9e-4790c97f0e53",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "5c73bf8d-1886-4df1-840f-0744d1ec6e89"
        },
        "item": {
          "id": "c4ada0a2-cc4b-4681-8f63-5aa97e64c76d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2b739ac0-10df-4abe-8ab4-b3b537188dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe73ef4-4e4a-4970-9f6a-66decc21167e",
        "cursor": {
          "ref": "242dd3af-d880-496f-b425-95af1662393e",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "40f6a48d-8e37-47da-b11d-5b9a65ab5214"
        },
        "item": {
          "id": "0fe73ef4-4e4a-4970-9f6a-66decc21167e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a5d890fd-59ed-4dfb-9cf3-5b94596967ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d69677c9-6630-4141-b1a6-a5d271ea2a9b",
        "cursor": {
          "ref": "2f3c18a1-f654-4203-894b-5f9a9c4096df",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2f5e70e2-456a-4622-a7a2-d4ea61ffb97c"
        },
        "item": {
          "id": "d69677c9-6630-4141-b1a6-a5d271ea2a9b",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "8851c696-1000-4b8e-a748-f9e0aadbc988",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69344f45-5c42-43d4-83cf-999e05f7f574",
        "cursor": {
          "ref": "37184e9c-9133-4092-87f4-9d6456da5314",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "01bba6e9-8cb9-45da-806f-7b59a0b14d37"
        },
        "item": {
          "id": "69344f45-5c42-43d4-83cf-999e05f7f574",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b7f940d7-b320-40f6-978f-52da01b45b85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6973d9-24d2-4f21-be60-71301b9a8017",
        "cursor": {
          "ref": "bb962f2c-82d8-4262-9ab8-1af21e7bbd2c",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "739f334b-ea34-4816-b44e-f2ab91df62ed"
        },
        "item": {
          "id": "ff6973d9-24d2-4f21-be60-71301b9a8017",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "83d4c882-d6ca-4f31-805a-31a24753175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393561e9-6834-4dfb-94e2-a13bc8b8572f",
        "cursor": {
          "ref": "64712314-b0f1-43fb-bb15-7a408bd550f0",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "98b1679b-e741-484b-8c38-e3f3601cb814"
        },
        "item": {
          "id": "393561e9-6834-4dfb-94e2-a13bc8b8572f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1507fcb6-778a-4158-854b-61a3e0996dda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00a9f5a-23d0-40dc-9d9c-29dc6a1be8d7",
        "cursor": {
          "ref": "3e4a3459-d432-42b2-9e07-55aa752dc391",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "2a3b26ea-5eeb-4db2-b064-9afde0d9d2bb"
        },
        "item": {
          "id": "f00a9f5a-23d0-40dc-9d9c-29dc6a1be8d7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "972ef12c-4a08-4dae-a45e-794887baed50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2e5ec8d-6a94-468e-853a-285599c0fd51",
        "cursor": {
          "ref": "88007eae-ffbb-4590-8231-74ab15a0bfce",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "587a93b2-17b8-4786-b600-b1a33c53655f"
        },
        "item": {
          "id": "b2e5ec8d-6a94-468e-853a-285599c0fd51",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "04e9bad1-4910-4e63-b64f-af30f323874e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd6d8600-06cd-4f5d-85ed-87845b3482b1",
        "cursor": {
          "ref": "baa1e219-3c06-4942-a65f-edb48295a2a0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "229074e4-c560-41c1-a615-01b04db8ee9c"
        },
        "item": {
          "id": "dd6d8600-06cd-4f5d-85ed-87845b3482b1",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "cc1937b1-e55f-4b68-ab8f-1a171696386f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da252c1-8f70-4fda-88eb-9d389af3fc6a",
        "cursor": {
          "ref": "5913ff16-3090-40e9-8ed7-1ee14448bcda",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "b7995bed-3adc-4263-b830-81e79ff48452"
        },
        "item": {
          "id": "9da252c1-8f70-4fda-88eb-9d389af3fc6a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "8232ba6b-e4d7-455f-823e-87bfed3fae4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ecc8de9-0ac8-47a4-bcd8-ad8e774851ad",
        "cursor": {
          "ref": "a270b887-8fed-491b-b35d-053033f33e9b",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "b79d7be6-58fe-4d3e-bb9b-6ec071c9fef1"
        },
        "item": {
          "id": "6ecc8de9-0ac8-47a4-bcd8-ad8e774851ad",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "06586b08-25b2-4742-a8fc-23bffa82e8c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75358c1c-935a-41a7-851e-e639f40b1c07",
        "cursor": {
          "ref": "7bfb9cdf-0b1c-45a7-80a5-529eb72c21ac",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "468f19df-3fa6-4f58-a5db-902b7dc2f2fc"
        },
        "item": {
          "id": "75358c1c-935a-41a7-851e-e639f40b1c07",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0a8c5d74-198c-4ccd-86fc-eccebb782398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "987deb4e-d6e1-4103-989f-231ac4732849",
        "cursor": {
          "ref": "439fb1fc-1b81-4143-bfdf-f6f50b10c408",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6c7a228f-aa24-432a-bf8d-98f282b23861"
        },
        "item": {
          "id": "987deb4e-d6e1-4103-989f-231ac4732849",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "3dbcf5c3-79f2-4b20-9a0a-eb5afd8c5225",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcd3224b-df82-4e4c-9ede-22fef1836b4f",
        "cursor": {
          "ref": "4d7d62e0-2443-4ce0-a67c-76e54096c2a8",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "6b054b87-f53f-44be-8a58-215d2ceafd9d"
        },
        "item": {
          "id": "dcd3224b-df82-4e4c-9ede-22fef1836b4f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "e6b981a9-4ddc-414e-917b-547c1cf6f751",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a878fe-e141-4d89-bcc0-c1f3a481f5b3",
        "cursor": {
          "ref": "f2cffd8a-328c-4605-9e08-edf9cd7e113a",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e142da39-83f9-4722-a35d-7ecb61f2c106"
        },
        "item": {
          "id": "49a878fe-e141-4d89-bcc0-c1f3a481f5b3",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5d0b864a-42b1-4dc1-a456-fc98ff4c4517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f16be0d-7365-4f97-becc-968533548f8e",
        "cursor": {
          "ref": "9122798f-905a-472a-bc4a-912cadb4cdb9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0e9366e4-d556-4cfe-8bd9-20fc7cdc123e"
        },
        "item": {
          "id": "7f16be0d-7365-4f97-becc-968533548f8e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8a6bd99a-e70c-4d91-b4d8-4f761c3e9836",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfa2c7e6-6765-4322-a884-7cc0a96d7151",
        "cursor": {
          "ref": "f99f235b-e6b6-426c-99a5-d11e17561b4e",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "699a12c5-a404-46fe-a929-57e820c3ae3b"
        },
        "item": {
          "id": "cfa2c7e6-6765-4322-a884-7cc0a96d7151",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "eda44343-6cc8-4c32-adfa-30a9e1ccf220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "064ecd16-1f60-43d1-8d5d-81279be51a3f",
        "cursor": {
          "ref": "71a21423-0e67-4360-a9c4-03c09f448c3b",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d13d445f-aaca-46af-9790-99ff101da894"
        },
        "item": {
          "id": "064ecd16-1f60-43d1-8d5d-81279be51a3f",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "332074db-c7c9-4cb4-a170-88550047f02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543cb967-5757-4e49-8740-de86ecc9e924",
        "cursor": {
          "ref": "84c82622-2a31-4fe3-90ed-fa93981fd7ca",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "9ac6c18e-338f-4f6e-90c2-c105855005a2"
        },
        "item": {
          "id": "543cb967-5757-4e49-8740-de86ecc9e924",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "084966f6-eaee-4979-a893-f9d4839964b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40893c93-e2a6-4871-8788-ea0823f8076f",
        "cursor": {
          "ref": "8de7b3e8-47cc-4b5c-b22e-7e5de709dc6e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "bfeecaa2-cf4c-4ab7-84d6-15efaea65d4e"
        },
        "item": {
          "id": "40893c93-e2a6-4871-8788-ea0823f8076f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "cc96f74a-c65c-4781-b9ce-94574ecba909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96bd004b-0125-45cf-a095-359eb6aae9a1",
        "cursor": {
          "ref": "592d9b91-2553-4b93-89af-4694f22743b8",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1e7db7b-8624-4349-9881-8c6c08e52277"
        },
        "item": {
          "id": "96bd004b-0125-45cf-a095-359eb6aae9a1",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "12597beb-bb74-4352-bca0-654c88b1982d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa11b67-361a-410e-b1d0-51bac776a350",
        "cursor": {
          "ref": "ca6e7993-1f84-45a3-a700-4c29e24c3291",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "372feaa2-e453-4dd1-ba2b-b09532702cd2"
        },
        "item": {
          "id": "9aa11b67-361a-410e-b1d0-51bac776a350",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "c333fe54-6168-4bb2-8aa8-5f74a7e6a558",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "57566cda-d978-4093-9a63-ce3936da9fb6",
        "cursor": {
          "ref": "4d7af11f-906c-4091-83b5-b3952ace2167",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "0ce7a1f0-5b06-49be-8ff8-9ff885635796"
        },
        "item": {
          "id": "57566cda-d978-4093-9a63-ce3936da9fb6",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "4757ce1d-c81b-4430-a134-b9b091a7b16e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf501ed9-908a-4e51-9434-dfabb8d24d30",
        "cursor": {
          "ref": "e1de661c-7e52-46df-9e7d-cd26a0edb3af",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7c006533-b565-4942-a904-5028fde000ae"
        },
        "item": {
          "id": "bf501ed9-908a-4e51-9434-dfabb8d24d30",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cef7d2b9-01f1-44bd-ac71-56eb4c412ad4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfe2786-3e63-46b0-a2f4-aff39d7eba83",
        "cursor": {
          "ref": "dcfbf313-6fc3-4efd-af53-20f0df5ad784",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4cba4cd0-9571-4ebe-be9b-f0cfc9402cfb"
        },
        "item": {
          "id": "ebfe2786-3e63-46b0-a2f4-aff39d7eba83",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d6ecc35a-2df4-4c4f-983f-c4bdeab68289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e996de77-7ac2-4a35-bd98-a106c33dd920",
        "cursor": {
          "ref": "7098ece9-557b-4569-a3d1-d881690a2ec7",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c3e42cce-510c-41e9-ada1-ec0f320e7b94"
        },
        "item": {
          "id": "e996de77-7ac2-4a35-bd98-a106c33dd920",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "48f23a4a-aeda-446e-98fc-398bcfce670f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ad5b5ab-fbcd-4f78-86a0-2a674a784940",
        "cursor": {
          "ref": "a980ae8d-f36c-4cf1-abf4-602faabe2643",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3df3bae7-5d33-46cd-9d41-14ba2bc76843"
        },
        "item": {
          "id": "1ad5b5ab-fbcd-4f78-86a0-2a674a784940",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "d9123818-08a1-407c-b13f-aa1aaf008a8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c0013b8-105e-4295-97a9-adf8fef4f660",
        "cursor": {
          "ref": "83238183-16db-46b6-abd7-df063cd382ea",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "3b550bde-457b-4dc7-8f85-92568e245aeb"
        },
        "item": {
          "id": "8c0013b8-105e-4295-97a9-adf8fef4f660",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "012969db-ec3a-438d-b151-d3a8af0d5ae4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49676b71-b8ee-4310-9ccc-bf65e6b46917",
        "cursor": {
          "ref": "8ff15d17-f8e9-4413-a9c1-f1ada894e4a8",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "01c916e8-f4cd-406b-9451-1ddd4200270a"
        },
        "item": {
          "id": "49676b71-b8ee-4310-9ccc-bf65e6b46917",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "70d49f6e-6373-4b1a-b432-16b1b226ada4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f8b040b-7fd4-4592-abf3-a86e6840d0d8",
        "cursor": {
          "ref": "99bb690d-889a-4153-8b3c-1ec87265c1c9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a44b9b09-c563-4356-a549-b66b49ba0a4a"
        },
        "item": {
          "id": "4f8b040b-7fd4-4592-abf3-a86e6840d0d8",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "cb9e629e-6812-4790-8472-6c5b3cae11db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a656f74-037c-495b-ac7f-59034208c701",
        "cursor": {
          "ref": "7debf6a9-7818-4a7c-ba8c-7d3b4baac0f8",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fbaa8415-2961-4d39-906a-7e716c26a4f8"
        },
        "item": {
          "id": "8a656f74-037c-495b-ac7f-59034208c701",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "17628555-e5e8-4ef9-ad6b-943367d32d91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d80c12-9ded-4af7-a5c0-d44db1936a5e",
        "cursor": {
          "ref": "29391db4-e1b9-4fb9-ba97-054170d7348f",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "0d0a5504-4c29-49f7-a7a1-f6104772673b"
        },
        "item": {
          "id": "c5d80c12-9ded-4af7-a5c0-d44db1936a5e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "a8754164-54b5-41d0-897c-21c2a44ef7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d3bfd41-a4c9-4185-9cd6-b0ae21e9daa2",
        "cursor": {
          "ref": "31ddd034-f718-434c-8d25-af3b329a8743",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "bc95a321-38fe-4c2d-bbf9-abcd6fc70e72"
        },
        "item": {
          "id": "7d3bfd41-a4c9-4185-9cd6-b0ae21e9daa2",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "3ca9b59e-05dd-4806-b211-ccdd6e567e47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e776b5-62de-4e45-a132-5fd176c26126",
        "cursor": {
          "ref": "9ec13842-abf1-4452-b3ad-6aec287af9bd",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c0c70b45-5682-4f6c-bad8-f7d3c5bab15e"
        },
        "item": {
          "id": "99e776b5-62de-4e45-a132-5fd176c26126",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "bcead779-1418-4b3b-81ae-3d0626ab705b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78a7c17-8c49-43c8-9aa3-68119d076341",
        "cursor": {
          "ref": "9033591a-7616-422b-b5fb-5bf4b5e1e817",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "9fa47808-2387-47f3-ac3e-96c4cb90af5f"
        },
        "item": {
          "id": "f78a7c17-8c49-43c8-9aa3-68119d076341",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e7907022-ce56-4f19-94ac-29ac3051469d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8de58123-5dda-4b17-b53f-c23325e8d979",
        "cursor": {
          "ref": "d2078c70-d0c4-4b2f-9b64-b2fbf323c5b6",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "46c03923-b049-4f24-a56f-ae67e9bac355"
        },
        "item": {
          "id": "8de58123-5dda-4b17-b53f-c23325e8d979",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "a918bd0d-0adb-4f62-a28f-769c6ccf51f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ec943e7-04fe-41a6-ac8b-c81a6d8e9d0b",
        "cursor": {
          "ref": "041bf812-3ae7-4404-9e69-59c44bb58fe8",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "447e13db-9258-4e0c-971e-fac3c7f43f20"
        },
        "item": {
          "id": "3ec943e7-04fe-41a6-ac8b-c81a6d8e9d0b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "cb80db6d-83a2-403a-8d06-92a0606f75ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cebd0d86-6da5-409c-abc3-7350c8fe8625",
        "cursor": {
          "ref": "ef870d91-35e5-4af1-b183-b5f1fc09a2ef",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "5aae767c-e2d3-4da3-b53c-48529723bd43"
        },
        "item": {
          "id": "cebd0d86-6da5-409c-abc3-7350c8fe8625",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "082faeb1-7cfa-404e-a391-7ac22eec553c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2d3f01a-bfad-4da4-9a81-f8d02ad21143",
        "cursor": {
          "ref": "f4204782-3119-4160-a7d3-8ab8f2ab671f",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "9f320ce3-7ce8-4d43-8993-dba9aa42785a"
        },
        "item": {
          "id": "a2d3f01a-bfad-4da4-9a81-f8d02ad21143",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "c3b8f425-e3dc-4c6b-9702-0b242f3842c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3598edd9-659e-4849-a1f8-ec619113d43f",
        "cursor": {
          "ref": "fb2e8980-d23f-4424-b45a-177260565e69",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e79e2502-8770-404e-b869-b8c2257e579c"
        },
        "item": {
          "id": "3598edd9-659e-4849-a1f8-ec619113d43f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "13b4253c-cb91-401b-adba-6374b4a2d580",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a708db5e-210b-478f-9d35-e4cbfdf9c9be",
        "cursor": {
          "ref": "e45da729-62e8-42e7-8a50-8049da44fef8",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "29aed7d3-b35e-4093-89b5-7c16a8d86caa"
        },
        "item": {
          "id": "a708db5e-210b-478f-9d35-e4cbfdf9c9be",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "7f5c3c07-f78b-4d04-bffc-2f9fb01d3648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9e6e01-ec3a-4e44-ae74-a738effed5e0",
        "cursor": {
          "ref": "274eac5b-d253-457b-a266-7bca4438c455",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "28e90070-5b39-48b7-8551-4e854cb6317f"
        },
        "item": {
          "id": "8b9e6e01-ec3a-4e44-ae74-a738effed5e0",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "1484d7da-fa8c-4313-ac90-eba3a94c4a2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254929d3-7625-49e2-856a-60915433ba4c",
        "cursor": {
          "ref": "f7905f57-4869-469d-8cc3-86d21c06d496",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "3796da82-215a-40cb-94dd-bd04ffd2fcf8"
        },
        "item": {
          "id": "254929d3-7625-49e2-856a-60915433ba4c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "fd9b9ce0-a8a4-4197-a4c3-60ee07eae3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b252de-dbab-47ee-af2d-52dee3c19d01",
        "cursor": {
          "ref": "c99bbf97-56cc-4d23-a392-bf48ce167f0e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "94ecfaa3-2d6f-4a70-950c-58d9f2752605"
        },
        "item": {
          "id": "c6b252de-dbab-47ee-af2d-52dee3c19d01",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "4b974c33-7ae1-46c2-8011-9c95454e226f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f795ef1-b0e1-4f9d-af65-90db343bd7ae",
        "cursor": {
          "ref": "2dabd399-a605-4c06-8cf1-47971ca9b1cd",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "09ba1277-a5bb-47f5-9996-49832a058ab2"
        },
        "item": {
          "id": "6f795ef1-b0e1-4f9d-af65-90db343bd7ae",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7ff00641-1ecb-446a-9090-964638fef4e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "189e037a-5353-4fab-8da3-5d87ab94d843",
        "cursor": {
          "ref": "90941219-f3f4-4378-bad0-a05ffa576af4",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "ca10c7ea-06d1-4e98-b04e-2985d0c87857"
        },
        "item": {
          "id": "189e037a-5353-4fab-8da3-5d87ab94d843",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "153c953e-33f3-4004-a93a-fb1b857706cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bacc2467-e2ea-43a0-87e9-a4413405dd4f",
        "cursor": {
          "ref": "1c76c6cc-ac4a-4e4a-aee6-50a197119a79",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "4832a420-b400-417a-a6c5-70de359e18b6"
        },
        "item": {
          "id": "bacc2467-e2ea-43a0-87e9-a4413405dd4f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5bffc11d-ce9a-4fc9-9447-5999c8ebf6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229dd1da-48f1-4cb4-be4e-8c80cb472cbf",
        "cursor": {
          "ref": "babab786-5b51-4e63-8020-878753ef9ef7",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "0f1fb66e-3c19-4040-9816-bd1707e05342"
        },
        "item": {
          "id": "229dd1da-48f1-4cb4-be4e-8c80cb472cbf",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "a3dd35e1-57c6-4405-81e1-b0c9f4a16098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8f1794-59bf-47b1-95ea-f16850b61c20",
        "cursor": {
          "ref": "f74896eb-b824-41e4-8e42-0f7236e244c9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "4d7a92b5-9281-4581-9699-7d9684af3da1"
        },
        "item": {
          "id": "9c8f1794-59bf-47b1-95ea-f16850b61c20",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2ed9b43f-b745-4e5b-8ef6-314111381728",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f90f705-19b6-4d66-ba01-1700590fe980",
        "cursor": {
          "ref": "ceef0e87-2b88-4c95-83e6-19145dafae57",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "f5a8103f-46ed-4632-b998-a9a3de7dd9f4"
        },
        "item": {
          "id": "7f90f705-19b6-4d66-ba01-1700590fe980",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ddadbf29-41e8-4953-9f99-6b6410c8eb74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affe039b-68e1-4e30-bdb1-01c868fc1462",
        "cursor": {
          "ref": "d4e56b37-6a5c-4fde-81c7-0bb46071dd9c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "168855fd-a149-4c07-943d-08b13c7f7736"
        },
        "item": {
          "id": "affe039b-68e1-4e30-bdb1-01c868fc1462",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "fcb6ff7c-5142-4f14-8a65-703bff16c552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33e573fa-e853-4a14-b951-6799a8f16b70",
        "cursor": {
          "ref": "d0968433-0a0e-48d9-89e4-57d3552f1eeb",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "d2cac5dc-b0a7-428b-842b-5834b93197db"
        },
        "item": {
          "id": "33e573fa-e853-4a14-b951-6799a8f16b70",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "8df4d8d7-c114-4a58-977a-16f60f4d3924",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db4bfd6-a115-4a13-a6cb-7db9ab026009",
        "cursor": {
          "ref": "914a1e35-e464-49b8-89a5-2c22db6b3b6d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6fcc7abc-005c-4b82-9f56-eb43316f09de"
        },
        "item": {
          "id": "8db4bfd6-a115-4a13-a6cb-7db9ab026009",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "6f2dc833-019b-4c66-9490-7491fc7f0f35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "784c768c-5a26-4204-bcaf-a8e9a5a55bda",
        "cursor": {
          "ref": "98a30bd1-8b25-40f8-8208-37a233f44327",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "5274a37a-ae5c-4e29-89e0-83651321fb2c"
        },
        "item": {
          "id": "784c768c-5a26-4204-bcaf-a8e9a5a55bda",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "ce84bba9-667c-4a27-89ab-713dfd880f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17fa3111-ca88-44f3-a8bc-0ae93d3427e9",
        "cursor": {
          "ref": "92366a33-f8f6-4284-9181-67ac416637ff",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "fecb5b32-eca3-40fe-bac5-e6f2dc13a422"
        },
        "item": {
          "id": "17fa3111-ca88-44f3-a8bc-0ae93d3427e9",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "2fe6701a-4430-430c-b094-55d917086081",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8ee753-cada-4eea-b0a1-e3258c9d51e0",
        "cursor": {
          "ref": "419a841e-ca6b-456e-813a-b8a41cd7e262",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "80fd884c-055e-4a86-a625-e4abedd263f3"
        },
        "item": {
          "id": "fc8ee753-cada-4eea-b0a1-e3258c9d51e0",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8d3e6fc3-0825-4f54-813a-d1f1e72edb35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24b7562b-77bb-494c-bafb-cb7f531c4c87",
        "cursor": {
          "ref": "5db4ecb3-551a-41a2-9bd7-4d5ec2972aa7",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "d8367dd9-30bd-4d33-943a-624d7664a78c"
        },
        "item": {
          "id": "24b7562b-77bb-494c-bafb-cb7f531c4c87",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1dd5f4a1-05b7-4758-8e05-0e5dc694ea19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb705f73-9d0b-4bb8-94a2-25792fa13a65",
        "cursor": {
          "ref": "01492cfc-d890-44b5-9de9-9e0b931b014e",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "0f573931-2082-4eed-918f-88fb5f85fd48"
        },
        "item": {
          "id": "cb705f73-9d0b-4bb8-94a2-25792fa13a65",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "b3088abc-d482-4886-927e-6a74cbe85f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b3fc98-21b7-4779-b031-aa2275410548",
        "cursor": {
          "ref": "6f1a8898-9fa8-437b-951f-2e1421dabbb4",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ae5fe51d-8440-482a-abe7-493fe8e4a6fc"
        },
        "item": {
          "id": "57b3fc98-21b7-4779-b031-aa2275410548",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "4fed2e7d-2e64-4f27-a47e-15a2d0fd799d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f275886-11d4-4a49-8229-a82c5be75725",
        "cursor": {
          "ref": "5ba55fbd-a482-4250-9880-754821ba4240",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "a07da049-ba36-4bf6-93c3-a2a398f61c60"
        },
        "item": {
          "id": "2f275886-11d4-4a49-8229-a82c5be75725",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4a2cfec1-45ab-42c3-8666-7eadbe333af2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c30f47e7-e455-47bd-9e32-7b50512395f7",
        "cursor": {
          "ref": "ffccb436-a72b-4f24-9b5b-89c8c654e372",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "29e83b43-31fd-47ce-9bf1-3edd067c1fb1"
        },
        "item": {
          "id": "c30f47e7-e455-47bd-9e32-7b50512395f7",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "336c20ec-f733-4791-9726-b90215b04349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f96ea58-0c4a-4a34-935c-e3ce7d2b2d49",
        "cursor": {
          "ref": "8840b4a3-7fc6-4a43-962e-081928aa7843",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "ca5831ba-abd5-4f96-b711-efca7677e27e"
        },
        "item": {
          "id": "8f96ea58-0c4a-4a34-935c-e3ce7d2b2d49",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "f4526973-0d25-4c4e-bbff-5366ef1c2f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d7c6ca-90f0-41d0-9dde-775416f49cee",
        "cursor": {
          "ref": "1ee8d09a-82ed-4bc9-b02d-6861dc1e7a27",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "87f1bb53-96c3-4465-9f7a-67b8b65579f7"
        },
        "item": {
          "id": "e8d7c6ca-90f0-41d0-9dde-775416f49cee",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e71cff91-876a-4b3e-9be0-e74bdf1e323e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b82cc803-50ce-4903-838a-f4c69375aea1",
        "cursor": {
          "ref": "6dfc9dd3-b5fd-4045-a143-4a6ae7368132",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "fa036a86-c7be-49a4-8d11-f3eaa17e5964"
        },
        "item": {
          "id": "b82cc803-50ce-4903-838a-f4c69375aea1",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "4a6d37d9-4bef-43f7-90fd-8c6238525055",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27011db7-8a6f-4de6-bf5d-28f717b75321",
        "cursor": {
          "ref": "40affb2f-34ba-4faf-9257-2e10eb62fea5",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "a7b055cd-3d5e-46fd-8f84-525f9d49f46c"
        },
        "item": {
          "id": "27011db7-8a6f-4de6-bf5d-28f717b75321",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c118bf99-d730-45b3-b2a0-07837fe6b9aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724f9e7e-9c51-4cbf-a31d-4d6935b3a4e3",
        "cursor": {
          "ref": "8bd795a3-c4ee-4f74-952d-1790aaba69aa",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "29ed8cef-ccbe-42e8-971a-da01a9a044b8"
        },
        "item": {
          "id": "724f9e7e-9c51-4cbf-a31d-4d6935b3a4e3",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "51625462-9710-4751-ae89-2889fd1774d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce24949a-1bc3-4736-b225-226de94f10dd",
        "cursor": {
          "ref": "eb665b11-6975-4a2d-9736-178b42e2c948",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "37efcadc-0311-435a-a707-0f0e294cc3e6"
        },
        "item": {
          "id": "ce24949a-1bc3-4736-b225-226de94f10dd",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "7d99ff00-5e30-4113-bf24-a3dc497c6953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59c95549-15ee-41c2-b1c5-6c0058aab0f7",
        "cursor": {
          "ref": "ff16d695-6806-47c0-a174-da329c9c715c",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "ec2c196f-2052-42b8-a842-4081ac3607dd"
        },
        "item": {
          "id": "59c95549-15ee-41c2-b1c5-6c0058aab0f7",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "a6c39416-a65c-416d-89d4-c647ab44f8f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33ad736c-60dc-4f41-a18f-ab45f2c6f4d1",
        "cursor": {
          "ref": "9edcd06e-3356-459c-b564-d062dbd8dbce",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "14547a4f-5235-4017-bbe4-a7c3ea582104"
        },
        "item": {
          "id": "33ad736c-60dc-4f41-a18f-ab45f2c6f4d1",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "53f50961-27f5-4add-af87-23218b018c0f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3866971e-5bd2-47a7-b345-b33f7a07e27c",
        "cursor": {
          "ref": "73ac2a39-7d0c-4164-b946-1d6d6d527af3",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "381f3f8b-142e-446b-9e6c-d2200e49ca86"
        },
        "item": {
          "id": "3866971e-5bd2-47a7-b345-b33f7a07e27c",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "f1376e46-f8ee-4fa2-8e06-db62c330b8dd",
          "status": "OK",
          "code": 200,
          "responseTime": 27,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e90cb255-689e-4d74-b86d-0ff02483bbd7",
        "cursor": {
          "ref": "6e5ea3f0-f14e-4bc8-9ec5-5ec9706b1884",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "a28c62d2-2c7d-40a3-8b38-5bfee32978a4"
        },
        "item": {
          "id": "e90cb255-689e-4d74-b86d-0ff02483bbd7",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d32d24bb-5cac-4ae8-b09a-83250ff491c2",
          "status": "OK",
          "code": 200,
          "responseTime": 39,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c086a137-14c8-4ffa-8535-f20ba514903b",
        "cursor": {
          "ref": "f01bf550-7237-4f9f-9d1f-ac3242e6045a",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "cfbab14e-e72f-49f4-9efa-69f50d4c3e1e"
        },
        "item": {
          "id": "c086a137-14c8-4ffa-8535-f20ba514903b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b5a84b03-384c-4fb0-ac5a-ce4e4b44d022",
          "status": "OK",
          "code": 200,
          "responseTime": 41,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18d1cc2-1b90-49ce-9fa1-ddd5bdcdf878",
        "cursor": {
          "ref": "f9eb06b3-2d8a-4a4b-829d-25fe972e05b3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ab0d07ac-2277-442e-b70d-552485ae20a7"
        },
        "item": {
          "id": "d18d1cc2-1b90-49ce-9fa1-ddd5bdcdf878",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6a7d9cb7-f893-4476-8f60-ffa0ea6dfbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18d1cc2-1b90-49ce-9fa1-ddd5bdcdf878",
        "cursor": {
          "ref": "f9eb06b3-2d8a-4a4b-829d-25fe972e05b3",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "ab0d07ac-2277-442e-b70d-552485ae20a7"
        },
        "item": {
          "id": "d18d1cc2-1b90-49ce-9fa1-ddd5bdcdf878",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6a7d9cb7-f893-4476-8f60-ffa0ea6dfbec",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dff31c43-e49a-49a1-a7fa-07be10052433",
        "cursor": {
          "ref": "6e93d32f-ccf1-46ef-b80b-4f5bc96037da",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9ff3178f-6472-4c9c-8723-8e665debf5a5"
        },
        "item": {
          "id": "dff31c43-e49a-49a1-a7fa-07be10052433",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "40b43b60-3340-4c1a-811c-38bccb95462f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 25,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94b52aad-1fea-4f6d-ba90-d4cb33129dd2",
        "cursor": {
          "ref": "8d62d84d-6bad-4dc3-9e23-7444f8598b7a",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e952ccb9-756a-435a-abbe-95440e10ac81"
        },
        "item": {
          "id": "94b52aad-1fea-4f6d-ba90-d4cb33129dd2",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "bfbad2a7-c735-417a-8c6e-a3f18b2e2f50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 26,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}