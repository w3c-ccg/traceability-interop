{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c41271f6-ff77-4228-ab27-3234022db54e",
        "name": "Clear Cache",
        "item": [
          {
            "id": "c298717e-6523-497d-9919-234d4518c594",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5d068abb-ec38-4e71-aa05-1504c3b334dc",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "5b0a4cda-f6e5-4e5a-a0c8-0e039e3a9216"
                }
              }
            ]
          },
          {
            "id": "a48a02a2-3e76-46b1-aec5-cd85e54d4d48",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "275f6385-4915-4f0c-92ba-1c4ca7c920e9",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be141969-21a5-4e6c-9799-79ae32aafc34"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fb4f401a-4ac3-4b10-81d5-22998f36637e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4e26549e-2c09-416a-ba20-8e2a896b882c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e7d8aba1-09bc-44bc-8d10-36afa5dad5c0",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "534530ad-c20e-4ef7-8cdc-1cd4bd120bdd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "28af9177-3cd1-4a24-80bf-acda51f60593"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "efa456f7-3258-431d-9713-97b8bf111071",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "efb41737-b79a-4d7d-bd47-f15d4ebf6805"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc794a20-e7f5-4217-ab20-b52ce62c5919",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "32e6ec0d-ba0e-4dd9-9de2-4b4c213d49e3"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a65ebb4d-a2d1-4b38-89a5-5e96ebc9196c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f743e2b6-1f41-46e7-8643-664ed26dbae4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1c70923b-ee0c-418d-ae6a-b548b0cd7248",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b569a456-36e6-4887-b9b4-d1400b5df77b"
            }
          }
        ]
      },
      {
        "id": "e38ff53c-0aea-4ac8-9540-868dff098510",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae55688c-d8ae-4c0d-9300-417eccbe7ddb",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d84018f-36ea-422c-8119-35ffc18361d6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "a26980d7-a669-4d46-bea0-781d04f5303a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de52847b-9e0a-4ab7-a2c7-f3bb1d17394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bb0c179d-49d2-48e8-8f93-8b27bd0312b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6f8568d-9570-4290-8a85-426956654468",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "955419b3-c216-4c9e-8ac4-f99f6d77de1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb7a10e2-2065-4458-a169-1d55f1d339de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b017469d-4947-4a08-b418-488023e8b287",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2074e47c-34c3-45b4-bdd9-5c36b504c3a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a300c28a-4884-4c49-9fff-8e756871d41b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2c969fd7-cbe6-4c43-947a-9eb3a6158b71",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b1b389f9-7b34-4f32-a9df-0079080c865f",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b815cc62-a116-4894-b49b-58c11275eb73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "99f1e332-f631-410b-b0d7-0db762c961ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e6cbc32-742f-4f11-90ef-4d4e37e46a42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5600b6c4-5edb-495c-b95f-5a0294b7ca8c"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "479cdb0c-6912-46d3-af0d-3a9699959c1a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "99962164-fa21-4581-8821-c2cd12562757",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "52259919-a00a-48fc-bb32-3f5f7ea008fd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "344ccf7c-a0c5-432b-9ab2-bc9d39df6661"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ef6a2639-1249-464f-a8c7-c591f9149700",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "b7c0d590-7331-4e2e-89f7-cc22c7d52905"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "568ff289-018e-4372-9c8a-fae5df0dcb04",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59ec1021-eaf1-470d-a4a3-eb91ff7fed3e"
            }
          }
        ]
      },
      {
        "id": "07b4de05-29fb-4ac5-87f5-ac971d0d11d8",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "a2931d35-fd3c-4ec9-9f23-a0179c4c2da5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9ef99b26-ed41-4461-b464-c2e0ab3c07b1",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4cf1831e-a661-49a2-bd41-e0d2beec133f",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ff92944-fa12-4f7a-9c79-d8b6f5309bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fd66652-da76-4f2f-aeeb-07d48e902cd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7e2a26-7b39-4fa8-a12a-008d1992dd44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f35731bd-279b-4049-9601-2485bfe35f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6bdb306-6037-4be7-9e6d-9e4bf5e0513f",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "323a814b-ffa0-47b7-b3b2-6a1aceafefff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ff66caf-34c2-43b9-b9ff-96eedfa78d7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f31da8e3-9234-482e-84ec-614012a4e1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e58e804a-2804-4bb4-8458-92367d1eaee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd2ce967-ab8c-44cd-8bc4-8bd2c11c83e0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "020f7f09-234d-4f98-b482-71fec498d93c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5cb78f-6a75-4f81-9707-19f179384503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db59e2e7-2df7-4763-bf1e-764de27abfb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c9fc97e-fee4-491e-9c3f-2d4ec20ccf4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "affa1a59-d891-4862-85f5-8a8f4829c714",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c840a453-6db3-403d-9a20-1cab6c1d0a94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1ed556f-a531-461b-a91b-4d8ccc91b5e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72ffceba-5801-4421-a6ec-d0b068a1cd21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7eb8c5a-4b84-4e09-8b46-3ca2878141ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ab54d1d-c024-44c3-a695-8ffe5682960d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8a09ce9-d410-4eb6-abe2-885abff29738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2701e23d-5f4e-4d6a-b2e3-cc828e9d4ff0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8062952d-a992-4030-b5a5-2cc7ca2080bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "94fd51b3-e42d-496d-b9d3-cc8a86b105b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd39e36-7c83-4132-ba14-a5de55fcef2c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69dd5771-37de-4fea-a8d7-6469b8e0d885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0fa1325-3f96-4fa7-b0f0-1cf647540890"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "332e9f78-8d6b-4091-8016-5a31d1f2bc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eda31f77-f1f1-4270-adb2-c51502cfcea3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "170a399c-c65a-4820-b0d8-e786f4057f73",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ced4f7b-7125-405a-9a87-ad37c0a6f64f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e800884a-2506-4520-af76-39f0233772d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "409d54d7-a32a-4caf-8256-c031f6d81b20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d5e498e4-d2ea-495f-9b11-e6b577f3028d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c669efe-923e-4834-bcbf-865ab86edf26",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcc720d9-eca8-4005-8d29-0dc82e0c7201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57d76735-07a1-4af6-af11-cfcacdc6592b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "488a4f8f-54d9-47cb-b1c7-283554eaef29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1475bd72-9000-4835-bcdb-c6a2132b18e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a037c0ad-c65b-4e15-b75c-7eb83b911193",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05fd4603-f475-4f9c-bb61-a96b74023dcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b70131-e732-4ed9-a949-743190be7f3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a68e09b9-c5cf-4dff-a966-b8ac2c288a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a18eb919-3164-42ce-99e7-83f5810ea15a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e24e97a3-5049-47d3-8135-06b91890c813",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c5d0572-ccfa-4ef8-b0ff-45c04a63a46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98686225-769d-4b1c-8043-57fac9c3d248"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8dec5a8-622d-440a-8337-4843657456c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e54285a5-e46a-4d46-b020-017008ba799d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e39d30b-d406-4c35-8481-351192ecf592",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ef83278-0c30-4b7b-8f67-20dcbf8c9d19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba39ace-30b4-49e8-ac49-3dcf885cf7c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4669aad1-2182-4cb6-9777-1470ca733eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2dedf986-2648-430d-a7db-d03566c7fab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b281ee0a-9c0e-4b54-a185-9b68e479e9c6",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8ce4b92-c3e2-49b6-b6f2-44838ddbc6a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d375b7f-a305-4acc-a120-7d30f25191f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3905d0c2-2d9d-429f-be9d-9d5b3b583297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f5b28f7-f4ad-4351-8ce4-8729bee4f112"
                        }
                      }
                    ]
                  },
                  {
                    "id": "645a2804-0a5d-4944-aa0c-bb71a4176ee2",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd2df9b0-4e3d-4489-a66c-5a1ed2bbc1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb541af4-5d1f-491f-b69c-feedb133911a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b610a2-1f5e-4a4d-9c67-28305393a152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b6818192-5281-43bc-95b2-31afab5e4399"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd31012c-9ca9-4c7e-8863-6fab6f8819ab",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679481a1-0c85-46a4-97c5-835f67282057",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff40969-3785-47f6-b1f7-0acf9c0b5ca4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab3ff38e-f08b-485e-a364-141fef73329d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f4ba612-4512-4d79-8b1b-65677b1b4898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59cc2790-d041-45e8-9137-e249d6f0c7f8",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6f09881-04fa-488d-ab2d-04f84b76a4bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d8d3d2c-26c2-494d-8284-fb83efc2554d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e6dede-9b15-4ead-8a63-56d75e7440bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "27d1aad9-ddb4-467f-b15f-e91cd018615f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad9c6052-10f0-4243-b7ea-99755cfb50f5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94fb6f7e-25d0-491c-a286-99dfced50056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e7293f5-7121-4718-bb18-7b087c33b70e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "addae564-735c-4370-ba5d-0367aa0655bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0b8dadd7-f977-47dd-a3bd-64fafa306243"
                        }
                      }
                    ]
                  },
                  {
                    "id": "480fc5d9-981e-44e1-97db-cfb1db852043",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba483e0-3f40-4706-8b88-7eff16649ec8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86c4a8-70a6-4d91-a297-d87bbf221a83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641385ba-0b35-4da7-b365-a5b5e16f34c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7b16bdc0-124f-4490-8d46-f31cbf839ae8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3cf2bfc-b698-486d-ab1e-6932a36b9897",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "507d7a5b-6410-4184-9936-2f9ebe0cb7ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af8d001-0ae7-4866-aec4-f32208d47005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e1f1c41-658e-4b5d-8c56-1059db9ad8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7471f41-b904-4851-afc5-dae4e955594f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e71681f-51ae-4310-a008-2f4c07cb501d",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64450516-764a-43cd-86c7-eac24d39908b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a2f4710-7cdf-4354-b291-3f2053d584dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79897d5f-d992-4e33-855d-63dcbaca2d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ead8e88-5834-4e90-acb5-160931c6bdda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3a6b238-a1d0-4f3d-b65c-8f2e6a4cd9cb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c0707b-c354-4599-a7ce-483b21321468",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2bc36ae-e835-41b7-a54c-0a130bfcb948"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbc935d-a6d3-426d-8cd5-95820316dd48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "682b99f9-2fe8-445e-9def-2f1477089ac7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b25796eb-8d14-40a2-a539-ae616e55ec25",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d13a4cfd-85d0-42bf-81f4-44388c8b1b3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af69def9-0750-4a28-b96c-0220ef13ec2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed262f59-71ea-4b94-a26f-cda7806a0ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "01bac686-2f75-46d7-9454-150b7f691c83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c3fc2-d286-4e78-9063-28fe521aa4ff",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "643dd1b4-5bba-4d1e-a7a0-36f58c384fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f53262-1905-47f5-906a-57c4ce6c5b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db3ab1f4-9529-4aea-9cd4-18269ae9968a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0649ed-e117-4a96-9ffc-de324787785e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d3fbff-6a96-45be-9290-7c4d266cb3e7",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db3a3b19-c296-48b7-8f5c-64c638a7619b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47aca292-0e30-4ac9-9dd1-dcd08f397498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbbc3499-393a-49bb-a5b9-ff3ea1880034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3a340bc3-dbcf-40d0-9acb-158424fb0b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed04080a-f855-4bf0-a95e-f0ceb2a36bba",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17fcc6f3-0502-42ff-aad1-7b7f8dc3ec16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10ac60c3-5a97-4cf8-951d-2969357ba772"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c433b7-5a99-4961-bd40-d213540d6a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "25449a44-d860-43c3-bf9e-45bc63da3631"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6373522-54de-4d1a-9943-04b6e42516ab",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd8bb3d-b7d2-4a72-8da6-4fe0e2232899",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75dc0598-66c3-4b34-8f55-d5f73819f746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4183a658-aad5-498d-affc-e20d2fe2bc54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "940be202-4b16-450d-9a78-20f9dae1366e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4809df58-bbd0-45a8-be4d-f7f2ad0d5779",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9ff756-350e-4d7f-96f3-59cc96012433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8355d0-37fb-4602-b6d2-96f5bf794693"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03947f70-61dc-4902-a8a4-a08c97ac84bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca4ddcfb-3d86-44ed-870b-f77c45073a54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25b606b0-b539-4c10-aaec-c62be98e3896",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c38aa73-2ebd-42f0-bee9-54c29b45f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "256cda3d-296b-4d49-af06-a3263aaf00f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "896eecbc-8e44-404d-aea7-7766ffb001f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "763b35aa-2301-406f-b616-9a2d2d850bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af89f4e3-b114-4af7-b516-66ef5d78696b",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00b06f9f-1895-41f8-841b-a11f1aafbff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0125f06-b575-4220-8000-909193636d98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cb4e293-484d-43da-a488-fff14effe913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a75aaded-6229-42dc-b8da-b74c3043dca6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45ce5eef-edd3-4171-8f74-f1638beef97a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "024886be-b27a-444f-9cbc-c0d3d04f65a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec8afd8-e8a3-4226-ad83-3acd06ce9691"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ab9da50-6a3d-4aed-8a03-4012b0bbc6ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b42940f7-9b21-450f-9687-ee2619bb304a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f015420-8f20-414b-b4e5-75b197ee67e1",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e851e8d-7c6a-45d1-8b76-788148c15fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27a38009-2662-45ae-be23-033ed7eda1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "405f5d84-f3e2-4130-80ae-10c466ad7671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53cae405-ca13-4c3d-b555-a2c2e6076a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118fd706-5ff8-4b09-bfdb-f18283623f3e",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5e8d9e3-b056-4185-96e7-f5f6ca2b5c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fd78c28-8cf1-4e38-affd-ab0e93946d59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d438ad5-e014-4de9-b4af-30d2d6aad6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ccfccb2-afe8-42fa-af85-06f7d80aa12b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a59502c-c3da-4a86-9f6c-5939976823e5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61af60a6-eb95-491d-8e2d-ad97089569b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54a369eb-9ae6-4154-ab38-a0c887677e14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75dc136f-a97c-42fd-bdcc-0bcf2a780d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d13e27c-642f-45b6-b417-6f683ab01ff8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19ca39f9-9794-4d7a-ab22-58c6712e5c01",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f397012-7186-4d2d-9029-21f8f6eedcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53dc8e30-1797-409f-813a-67635799ba0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9d610df-0915-4dc8-a2b7-f076fe12d08c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9665e8ef-b989-471d-825f-340a13fffc65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ffd458f-8731-49fb-adf4-93cf0b3bea99",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f75aeff3-ed3e-4c3e-a3cd-c4772e221aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33f752af-0492-4233-8863-f084501650ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e1cc26b-6bf7-4631-91c5-5118cf9eea7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12a7efcb-3800-4818-bd9d-04e3ef6113bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d9cec9f-9e5b-4ae4-9703-db771b3e1594",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51ea5572-240c-4455-b28b-6b948d0366e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6da01719-c568-46f4-ba5b-355b136ebb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a19078-6cd0-4724-9692-c90475d96e0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "668c0b64-a657-4415-9547-06610c4e255a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb36d66-293d-4e27-91ad-8f48f598f7f1",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b89e806-674d-4b17-af05-1f13d0e1f3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9fdb9c80-c058-48a2-b9ab-eb2e9347d8ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e0acfe3-d370-4dd4-842c-cfd522eb6b4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ebca77b7-42db-4450-8c26-e00120574503"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bed79298-7e6c-4627-8193-ed1b3e284bfa",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "894dcc61-6b2e-4598-8120-08d238905534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b0edc94-694c-4201-b83e-b39f600d8a25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c84b83-e8c2-42bb-ac93-ffd56fcdedc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe857cd0-e0ba-452d-8878-5a29715519ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65b4608-a677-47f4-acee-3a6553c12eb7",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b8fdac9-339a-4784-bb18-978c21bc8648",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80b3c0a3-302c-4d1a-924c-49f287fa64dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf239fbd-23ae-45a9-a633-4b45bca5bb39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "24cecbf1-1c82-4fba-a062-3d3cc0ad2239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4991492-5ea4-4229-8f59-642cd491244b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "611b9d59-e49e-4a3e-8fb6-3d54b952ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d90a563-16e5-4562-88a4-e00df41a1401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a022e4-1202-49ca-bbfb-6ddc461ac33b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d46b8922-fc2f-44b7-8e62-672098d153a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04edd0e-6942-4c4e-9cce-c771c49c1135",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ee81661-e9cc-4384-9d64-7108a5c92811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e897921-15ef-4591-aa52-0e45fb7105e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8fcd3dc-7153-4169-8fa2-5ea95abae642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7005931e-f38f-46a7-9887-4c6d6aa7dde7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a5e2ae-6224-4788-93e1-b49d2f62b994",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "268b8e45-7a5c-49a9-b722-5842cc7b2bb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bb8de3-3900-4fd6-b213-c6ae32f885bb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eff2dd0a-a92a-4fc8-9774-7c693501e1cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "51b1612c-2a37-4c13-9324-ddd623bc2c47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8210375-42d6-4e63-9c29-b6e99cf7db04",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cb7c52a-4e82-444b-8816-098aa4874882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d68f91b4-286d-449a-83c7-0d30cf9200a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba396ed-aa40-4773-a10e-887ec2e64c9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5214e7dd-1130-4054-a50d-30f8f913b359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4a74ade-4b1d-4fc8-a6b7-69cc80a57ab2",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca28697c-ef57-4cc7-8e15-f0980957f347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65859701-bee4-43f6-aac8-820d0fada2bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b4794-9d2f-46f4-b0af-7dc2e698e65b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9abefb8e-a7b1-4c25-87ec-b5be10d9a7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d615b766-cd75-4313-b2a9-a57bef4099aa",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c547d8f0-c631-49e6-baad-8b5b7ead0046",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff066172-8b3b-4dbd-bdfe-67253fd17225"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6532e4ef-1eda-4732-9086-f2e08c91de1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a22c0a-7e7f-4919-9642-a11670811c14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5d6b5df-001e-4132-b7dd-c87197255115",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1b6c90-f7b2-424d-8bba-6cde0a72a3ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044b016f-2c25-4007-8a6b-83a9088760ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd52ee0-2810-40e5-9e4e-a4e9c4b380b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5eb2281d-af8b-4b41-a2b0-5286a9c46eef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98df5f8d-25e3-49df-8d45-f6dc979fd82f",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c07ae7-3aae-4cfd-8942-8309b3b0b2da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072a85db-5207-457d-aa54-88b9d6203899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0166ffb-8245-471e-b5e6-5223632bc343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f1c224f-ae12-4634-866c-50b5bed4c9b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a223580-ebee-4319-bdf7-e2a133339291",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f9806ee-3e4c-430a-837d-cd0ef2e27d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e604d1be-86d9-4574-bc1a-686d8d64d4dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f56fadf2-522d-4fd0-9a5a-361c3f5faaa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c4283f12-0c44-4aec-b092-fa2b89ff049e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02e8b249-e50b-422d-9a0f-264b8fb78f51",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff906c2-61c8-4ba7-8c91-d6e0a5540885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44e5bea1-4cfd-4f9e-a164-35762c44db6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0909f5d-8474-426d-9a9b-5a9b7a566a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "994c1ac5-97fb-437a-a588-840557c4553a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f259be24-7ac6-4572-8fe1-df2c8fa69d9c",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2083f4-0115-44d0-bb4e-98a081268c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "add080b9-1e63-4906-9047-e0a7d612a978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58475ded-e750-46cd-9c6f-55368ce64c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32adeab2-1ee8-47b3-8f14-d8baffafd14e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e1c8011-8a98-489e-b18b-2b0afc459871",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5116bb1b-1dd1-4cf5-8893-e27458fd969f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8a40d2-b716-4ed1-8292-23f9d8f93861"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24d2ffcb-1cef-4feb-b323-60ef2f9c384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bbbd7f08-9ad0-41eb-86ce-3218ba4657ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab7dba31-12ee-4132-ad51-b9fe87cb2d7a",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b37e81bc-7da2-469f-b113-0f7963306cfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08ef0d4-9c7c-4f73-9b3b-f93379c246bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb957f1-721f-4d95-b8c7-464000e1faec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbe8e62d-ed45-4b12-9520-2001c04aeb8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9be7255-7249-4f44-8d44-9df00c3af350",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4affda1-8ef6-404b-95b0-6b7a3523b78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19dc0a71-a31c-4f52-94fb-a168fb8898ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee765f3-3373-4f39-a44d-5c7187c65696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9607ecca-ccb5-4dd6-916e-0fee605782e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48908892-e0f7-4675-b2c5-ce34b7e5dd35",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c2c2d0a-b847-4bf2-b9b5-6fa6bf5ea774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df4caed-6c83-4dae-b492-ea596cfdab63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f939a855-830d-4524-8ac5-cdd1fc38294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f722da83-6c75-4638-ba20-5e047db4b2ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b35b370-83a6-45be-963c-0076d10e9217",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8f6ffc5-376d-4139-b20b-0247be11781a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9d5b6cc-b78a-462c-ad71-98cb7c04d911"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ca8358-3038-4260-a0d4-c74d396f82f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2793ff82-47da-48e7-b4b2-a144c58a40c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "043dc065-ae8f-4250-bded-b8e32fb1e242",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6311e1-215f-40f1-892a-6ec57fab0cac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e1907a7-33da-49b5-89ca-5aa3b0eab1d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64946dfe-68aa-4cb8-bc75-94fff7e888cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "239ba038-c466-4d7f-b7a1-eb9e39c20262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cb0e0c0-61e8-4b1c-9155-ac6182628bb6",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46f5c5e2-cd3c-4484-993a-13c197642835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10a40ad0-495d-4b86-a9e2-3e2441ff4cf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14a3eef4-767f-4323-94be-12483af0c4af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "50c4b2ea-56ed-4db2-97b4-2af262854839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c049f1b-309c-479e-9590-9264df5ee264",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b3e9d8-1238-40a8-afb3-6122bc612d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9eeecbd0-96f5-467f-95f7-ecb73cbcc90c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d983176-b3c9-4a27-8740-75a05ba0536c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "cee5ad23-e4e5-4270-8a49-1c61d092e682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a2ef88b-02ad-4a12-acdb-b1b81bec77be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "205d18de-8484-45ee-adf7-71b1b74fe248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ebd405-5651-400d-9e7a-7f1872556aba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68e58344-6a76-401d-a743-a6ec55fd0e12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27f91033-e290-4c72-b7d2-55f0954841f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc1f197-9ee9-4465-8d9d-73f7839c6099",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82db9ff-0a78-4ed5-a764-1c27ad39f6c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0da2819-11ea-44f5-af45-58caced04e6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2777a2-da9b-43f4-a881-164901624475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "994cc2b6-67eb-44d9-bae1-604fbafc7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bbc30a-1888-4a74-9346-465c11e43ff3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb2e6ce9-0527-4953-82a6-5bd1afdbd0e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f791f1-a659-4e66-adfe-e058f837083f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d15f5a3-97d6-41d7-a97a-dad924365a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "19cfb109-59a7-4929-a5c6-863e9423abab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ea23d97-2b9f-4dc2-96c6-aa16f37879bb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05cb61a0-a1ca-4cb0-b642-c16e4b8fd06f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b2b3c9a-1c5a-4bd5-9d32-f08040e923e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4715fb70-267f-402e-ae87-8d4f86f44e76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9bb603e-b48a-4268-9fd2-4ebdbda40ff5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46518f60-7c56-4f68-a43c-e680b9c40340",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a0d67d-05bd-4e2c-bce7-38bcd647d96d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "739c89c2-47ed-4a26-9587-7dd24615220a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea47ab5b-7f53-487f-b395-0682d5a7b033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8865418-aeec-41a9-9953-764ff8ccb1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750709e3-4625-42d7-96e4-49b5cb4eac43",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9628743-d229-4074-b16a-5c131c565534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2cdcf0f-8c2a-44ec-9ff9-33e9ac07ad32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb528be7-d041-44dd-9e5c-53c24ce6bee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6112c3a-80aa-4915-b239-74efae271472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9a7a76-a0f5-4b52-870a-ff0fbb97f896",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44a9d93d-66e2-4907-8b9b-e1d2df323c56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cad91af0-93aa-41c0-b2cb-f8d17352ae60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68a9bab7-506e-4916-9bc2-2e342ed6e98d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "baf2b3e9-24df-4d37-9465-a6ca4263cc03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afbc57ae-abda-4394-a61b-734665da59e4",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d41b682-33b5-4310-a632-da91c51d49a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfafbfc5-84e2-4dff-b379-c5f0279a7614"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a76ff1e-589c-47b0-971e-6fd0a8c6d193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d32de64-1f7c-4602-b555-fab5be1948b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51edb942-fead-420a-a213-8663206ff58a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9ac17e-10d8-4f2e-bac9-0cbaa4a594d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d841bbd-f928-49c3-b10a-ce5db63e167d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09f29f06-820a-4648-9695-b9dd3ae7dc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8cb9f0c-fc0f-4a2a-8a7a-32bf54ab3bb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "213dfa32-bf04-4b1d-9c33-12b59850d974",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f57c9b-440f-4e77-bbed-c8f6dbedc809",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7da106bd-754e-4fed-863f-7910a957fd2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4fe5619-41a3-4f60-ab8b-fa2f8932f280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8a178920-ddc5-403e-a0e3-0a9da21d04fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "472fc3fb-1ecd-4d17-8bf8-d2a0bda1f2f4",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a519078a-db93-45c2-be0b-436d780938d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107440a6-c25a-48be-8b7f-208f49e481e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b08c9a-3679-4ce4-b7c2-f38d658a056b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5648e33-44ba-4819-9e97-0b1e9c46af27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2e5fbde-0132-40b4-abd2-b623ec3833df",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e14a04b0-d30c-46c0-8a17-b6621bbb3642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7a438de-341c-404f-97d7-77d6e0879e04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6c3330b-9a84-4d5d-81e1-3f6fe40e1eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ceacabfb-49db-4f9d-8014-86e6d64bf5dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8613bb71-388a-4b37-a191-321b0fb431e3",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "013afc24-cb1d-42b4-a91f-527a7bd1417b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a659a6cf-7e36-4b86-ac75-a89ae034cb86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c195620-16be-4880-971d-b5328a53b886",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "574bab3a-f4cd-4449-aab5-5c21c8d13ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e521747-92a2-4c56-b767-59bb621caef2",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b4f854d-1468-4af4-928e-3c475838716c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3876b92a-0c68-447b-89e7-f60909c28e86"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c88d9e3-2d88-4db1-8974-74eb5857b32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dee7e999-3303-4cfc-a126-174bd0f81413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93bd967e-4977-4aa0-b9e9-b115d488c589",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d1b9b2-2426-4485-9c9c-6a88de325768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd01b00b-5814-4418-8dd0-22495b19e2aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdb7dd0f-f655-4beb-8fa4-e589731d23e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "903acdaf-e09b-4cdd-993f-495fbde4cd59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7ee32de-24ba-493c-838e-19623e00d64d",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "065f21e4-c208-4f00-93eb-b902916ed91d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3aa9bcd7-89b9-477c-9412-8a12464af9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7269c8b2-49e6-4898-bb29-e4a26b68af9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "355bbfe2-08b2-40fc-b8b1-1bac6ed775ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ecbe92-b76a-4534-84fe-74d9e417287e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e64d891-979f-40a7-9488-14769ccfe6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91566813-e7bb-4609-81ca-62a0fe671d90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f402b078-8c59-4836-b459-3e1517f0b136",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "34868860-f9b2-4853-b29c-12b36a04e659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87fce360-6591-4d01-9a81-d5718ff7c3f8",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4367cfd-4eae-4da9-89ed-80284c8539cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc37ceef-ad7b-4434-b717-53a42edf5205"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75523353-94f5-4850-a878-9fc4081386b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "afbc8d50-d478-4c75-adb6-e6a941e27c44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17d399f-db9b-4c74-8655-070f8959b94c",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a964857-9045-4b4c-a1ab-4ad1e70dfe37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4563a639-1474-4d63-92da-1a4038bd3190"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "640af9fa-2cf2-406c-b03f-dab31e63920a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf5ec9c-2825-4f28-a0e9-38b71554b43a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3606ecbb-517d-49bd-b81f-108911eff95f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92c5852-633a-4b4e-9662-04028539e541",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b834bb79-1cbf-470f-8750-9e50f7cd2b08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf470eea-a46c-4b70-a8d7-e446882f76ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "52dd362e-27bb-4e81-b6d6-259193669cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8b7f410-2871-4e1e-9281-cff3827290c2",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba4fedd-c571-4ae3-a3e0-c0cb797af54c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccede8b0-9c18-4075-a7dd-0b77667c255c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57f11ca8-f545-4840-a277-f685d6060e88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd5d3c1e-d8f5-49c8-97e6-3d45b90f1197"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44d24e49-a17f-496e-bf5a-7e10b0cc7c3c",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f537e76-5477-4848-8434-9130c0571863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10518291-aee3-46c8-9514-d96dcb9eb74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48825f41-7117-45f2-a5f6-4bd912c8c71c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "44bcce50-e68a-4b59-a909-f5e5b4a70ca1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3347e4-351c-427d-abf9-18cdf0378ea6",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "468f9d6b-170f-44af-aaa2-5ac2695804cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dc32d98-bd18-40ba-a4a3-edf6bab8bc5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de3d4223-85ac-4292-b8ef-87250cef452a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1a82e8-482a-4702-9dab-22d305b8302a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98a0f48-4260-40c4-9c8e-a9225ec6877f",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc84c395-d43a-4237-8af1-3970df4bc2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "428cfefc-2a79-41ac-8617-3d23f364a085"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27ecf28e-3fc3-4ba1-9fc0-8dceca9a30a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "edff71eb-4dc8-45db-bf26-748e55fb600b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff88555f-03b0-4364-ba59-b9a76564ad13",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b451e9e4-7649-4fc6-add0-82a4944714eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab36b5c-8621-49c5-b568-e291173467b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45a2967e-4d74-46e3-a76d-3351a0bb54ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6be3ff-bd16-4247-869c-53c98ca28d7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd202410-4c9b-4f3d-842d-353198b6497f",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4f2c7e-5426-4888-84f6-7b665452a4e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce25a8c9-b1bd-465c-b626-0265fdfbba05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69fe04b1-00e0-4f9a-b0ca-d692e123c92f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef6d05ee-f1c3-4ef0-829e-242543229d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95ea065-e509-474d-872d-dbedbc8f7a2f",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55270c35-f79c-42a1-ac3c-f15d9ecf9dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3a4f04e-c860-4891-819b-d0d48e4e7751"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86ea7636-575f-4393-9a3c-5d0b0e43ca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "04b91286-0951-49db-a427-87c42b6b7c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc060e19-53bb-44cc-ac5c-b836ae885838",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6070a198-d711-43c7-b0c5-8ab196c1fa05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1027464b-e98f-44cc-b480-eb191a64649f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aace71fb-95ad-434f-a5ec-33acaaeef9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f04954e6-f3b6-4774-aaab-5a08c1c5dce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ba074d-0459-4b86-8310-26cc37374f82",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12477062-5567-41ec-aa8e-28d5d776a232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e51361-655a-491e-aea7-f25a9e2aab7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e9047a-6890-40b8-9518-390c2cfb7fb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2722cd0a-15f4-4968-bffb-0f9b825d4d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3950ab67-b853-4795-9989-cb6706f04e25",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "481c6b81-dd45-4975-8f17-3a2efbaa2eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dd52508-c951-444c-9c7b-b79cf82ac8cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ebdaa8-216a-4d43-9341-269caf440fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "435666de-3362-4dbb-85ae-81144ad66e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9085f6b3-a579-4fd4-9bc4-b4cd9e5f93ee",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32c9c4f4-4449-472c-a2b0-73cbd0480b0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4faf425-fe26-4f57-b7ee-4028b9ba14a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed3d690-2188-472a-a63d-d348cd0bf270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ac9d21e-e8ef-4c5f-9a2a-b28788b51089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07b26fa9-5d38-4e75-b196-eacf53901225",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceabd99e-57cb-4dc5-962f-c5031a83e70f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22b476a6-c904-4796-b289-0bc8b323294d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c381452a-2d07-4972-8330-0410243a2c19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c919f2c1-c191-4e02-b865-55cfddbccd5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5e5ecd6-89a7-4206-acc9-d0f9034f2299",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ffa0e6e-89d9-4a30-9949-0c22cd897466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e89bb7a6-1324-4357-a519-bbc1ef06e43e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35772ec4-81e1-4bb1-9a1e-03c48ec48543",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1cb5bfa-5834-40a2-9815-d36be5ca0c8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8d637a-ec83-4453-b17d-4bbe2b9d1003",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1bf09b-7d6b-4d40-9725-fcc12d63b546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82b23381-690c-4b76-9e67-0a34938846ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f4139ee-5d81-4864-82b2-42256c4067bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "12b43139-fd72-4acc-a1bc-da0ab2515f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa9c9e1-de0e-483e-9ada-a73e362aebb1",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338fe3b9-5e0d-49e6-a1ed-39522e484497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "65bded80-09d1-4bae-bcd8-ef1179c58a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22832e08-172a-4484-af78-0e6c881a536a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "74df449a-d09b-43aa-a90a-5d8575ff9c51"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d82612b9-68bb-42fa-b03d-2f207ae3c83a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c140e698-ed3d-4546-942b-642f0b7400db",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32694c80-b669-431b-8ba6-206f996e5662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6e4e24c5-3d43-4e9f-9a0d-3cf2607e6488"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e55922-743c-4ae8-89f1-5a1225735162",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9bce8de7-711d-4fc0-8b01-aedbafe37bdf"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2709c615-60c1-46af-8377-cf157a1c2d6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c44483-c2d0-48e1-8c65-5ea26126387d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d11c5a3c-0f59-4a59-844d-815bd9daa708",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "11cd00eb-63cd-43ba-9805-962c6a406674"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6604b04c-d8a3-44c7-8fbb-e5ce1761bb2d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ef546815-0ae2-40de-b157-d3e16cc61b4d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2c3a4318-62ac-4b15-9052-ec089978b5b1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9880b458-7c6c-4592-9392-4342c45ae5a1"
                }
              }
            ]
          },
          {
            "id": "12ae55ff-a2f7-42a4-82ad-af8368d00fcf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "3f3ac82f-2e9d-4027-975a-1f25fbc28709",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7337c665-be5a-45d1-95ff-4a4633c1f139",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6190420-7e3b-4b8a-9fdd-07b71f3e3dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "1cae9366-69dc-42f1-a140-eeafad6ec632"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9bfd09-60fd-4a5f-841d-8a671f15e6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c1db39a-935b-423c-a6d8-8e08f4a6487a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "698499c1-b66a-4bc9-b032-bd131cbabb7e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5a07c59d-a355-4a5c-9c69-2aa6317ec7e9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "eb81d020-6e85-4778-bf36-e9483f72e2b6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cf4d5d07-b1f0-48f3-8124-62629b42ec58",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "71181b4e-bf0d-4217-ada5-9d48ba57e7bf"
                    }
                  }
                ]
              },
              {
                "id": "dc77a261-1e56-4f5e-af9c-dbeb357c12fa",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a36b2fd8-493a-4c3c-9b93-5411a0e87f04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "515c458e-ae10-480a-a3d1-68dd6403818f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "940a52cf-5797-4eca-bac8-66a12392f8ef",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5dead0b1-f631-49e3-8d47-98f65ff19bfd"
                    }
                  }
                ]
              },
              {
                "id": "a561ea8a-05eb-451e-af73-e7a0184e5b93",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "346b3338-459c-4ded-9ed1-04a123a3ae61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25429ad6-56c4-48c5-a35f-3222667421d8"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b71c2377-5377-438b-a7c5-435a430ef7af",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "409c6146-ecf4-426a-a17a-1d44e94ae80a"
                    }
                  }
                ]
              },
              {
                "id": "69303df9-2785-4c2c-95e6-f99d726dfb8a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "349fefd4-f895-4f92-a9c4-b7d64e834afd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "b83223f6-9fa2-4379-aae4-63f7c682714a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0b40525e-92b3-4316-a0c1-4a604487c145",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "2ba1c0e4-1dda-4ba9-9e08-1baea9573e31"
                    }
                  }
                ]
              },
              {
                "id": "f68de72c-d106-490e-875f-ee953e098762",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "34855976-637f-4227-8605-77c4aef7522f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "153c9cad-fe5f-4667-9934-2ba0babf662c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5e2dd669-37ed-45c9-b48b-264c43586d02",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "c3ad6770-af68-49be-ac67-91aaef98c01a"
                    }
                  }
                ]
              },
              {
                "id": "5bdde2b4-e512-4d67-821f-8599d59c5fa2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9aaf3c3e-83d2-462e-bc7d-ceb586a80cf5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f9883f22-060b-44ad-afc5-c09f1256cd57"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e7e7a1c5-8d77-4ff2-9b88-12c586a0a533",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1a766bbb-b4bf-4b15-ae78-a5f3945104a4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bbb0898e-6901-4be1-bbba-fce4fb39147d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "66e5f864-d10a-46a8-9b46-7c81b3697682"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5cab7224-e8e7-45a9-b556-638201cd6d84",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "68f1e4d8-7dfe-40c3-aa2b-1d8e62565d99"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2c337871-1790-41d4-928b-1843715ce210",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "1a930c51-261f-4c05-977e-cb5f1dcf128d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9bc072a2-227b-48d8-bd9c-5a6b9fa42ec4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0829ede8-85dd-4eb4-8518-9e7fc353aa9c"
            }
          }
        ]
      },
      {
        "id": "ba453c00-20d6-4bb4-9a37-03a6caf67f53",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "cb24a18b-2ad4-462d-840d-24c1c5232306",
            "name": "Negative Testing",
            "item": [
              {
                "id": "26cebf5c-318a-49b6-916b-1f2813a0148c",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f70b2bbc-a0da-4dcb-9685-9a6b20e84ff4",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "937844d7-4c2f-4827-9a76-2944a36377db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f99a2ea7-b6f3-4ef5-9b57-a8c64f48fbdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d4a4b8-8a9a-4b49-94e1-f693aa8de59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "80d19adb-d104-4c88-bcef-3eb0e14d41d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5cebd16-7dfa-452e-abf8-e1c4ca7da6c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9084e323-1c20-4dff-917e-fc56cbe2bcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e05103-7fb8-4b29-9fe8-8884b4ea19a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f135d33-b83a-4225-a402-87875b1d9213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "565f8999-76c5-402b-8383-fd5475dbf599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9e31c0-d2ac-42ae-9e1b-af9b764c0615",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33afda91-a24a-463a-b14c-1a887e82755c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a08cb0d-7458-45d6-ae5a-0923603a5db4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8b7b0d4-3024-4e98-9362-a3474ddfb2a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea650168-7e8a-4205-abe2-fb3ef445ba75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212ed056-cffb-450a-a983-521f779e5bc5",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30fda373-5124-417e-989a-7bcc0d175bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95ba9f59-3392-4249-a943-4c0774625a09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "347e0edd-66ae-4110-b1ba-1b6c1b879a4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dadf97ad-7ffd-4643-b98b-fd40148db519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c480e56-9fec-419c-9a1c-431497cdc48f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28e619a0-c4ae-4507-9cae-30b93b6bf50d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f175c452-0297-424b-ad72-9cbae69da2ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd6b0c-685c-4a32-a461-1369301d1dca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b02628-fec5-4b11-91a9-1f23644e692b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413c678b-59e2-4423-9104-f4f9ad8c1da1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d6e4bd-88ae-40c1-a438-3bb7afd41115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "039e2dca-deca-431b-ab5f-956841b8f262"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e0f097b-753c-470b-9940-b6dde6c43aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6d56bfcb-cf90-42fa-95b5-0cabcf546e52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0aee725-c8be-4f6b-9e25-26347cc60063",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6836f3-c53c-4bf8-adbc-e13fc92bb5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69fd76ba-9868-4734-889a-72e77390e9b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "319ef931-2396-41e4-8637-d3c168163aff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "32e7b7d3-eb88-4e5f-a9b5-cea336892144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6926c15b-1f68-42cb-83f1-18b0ca6dadfa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b85d8b4-f9a2-42c1-b510-73288175309c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71a5911d-e793-4b6b-95fb-b71387ea1810"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9039afec-490f-48ba-b3ad-33e8bdd16693",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "819ca603-520a-44c4-a164-63950e4dceca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76e9f053-76a1-4bb9-818e-e71649bd5759",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1cbdf9-ed60-434c-a099-9c266251cb22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24294c8d-8e5f-441e-a272-b650d931cd4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f49016f0-acb4-482f-abe5-dbfb1188946a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "711d1c98-65d9-424d-90d5-56ad8ff17683"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640fa02c-d0f9-4263-bbfb-33251c732806",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9730b688-f366-49ed-ae6f-2b5960a36ce0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81efb8df-ebde-4100-8d45-634492abe308"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "686529bb-62fa-48fb-ae12-785170750abe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3621e8c6-831d-410a-b713-1917f39af76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "451dad41-e9ae-45d1-ab4e-28b4de8f0a3d",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2823d7ac-ed27-49de-8874-723c3e0c924a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed2cc6fa-7365-4077-8173-af6115f6e5c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99e5b92-aa5e-4196-a3e9-620da5e96c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3cb330e3-a9e9-4e7f-9f46-3483a90e7b24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caaff0ee-eaa5-4ed1-b385-7ef3c2e7f449",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99a66872-8359-4283-9ec5-01049af7338c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9093b927-7caf-400e-a7c5-a05c6109ec78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77f4e40-44be-413f-963b-b4336a3a33f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "959c0128-4484-4fc2-9267-2c6dbd39a6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2411143d-a5d2-4bc6-a2bd-afd09a1571be",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9862c47e-8bca-4970-b0d0-76586d61ec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f1b55ac-f45a-4513-80a4-65746f47ac56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83b125d6-b8d9-43fa-afc1-f55e4e16ee22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0bdfb8f-4e72-42e0-9851-ec22c8bfcac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a79218f-f3ca-45e2-bfa0-2c41f64bb96f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94332980-a63c-4410-9508-9cdd2fd97fdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f899e1b-c263-4347-adbb-3524a622cef1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b78a76f-5654-4fdf-8c75-de7ec31be10b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0befe5cc-59ea-41d0-8904-09a0bfcee003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44ab9dac-1fab-4a5d-9e5a-c536d001713d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e9af9e-de7b-4b2d-a5f3-c35530a17ab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d08317-8a8c-471c-b5ed-882ec07a574d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5ecaea3-a0b1-49cd-9d84-73fd50befc73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ae14371-e82b-43ed-9614-d0350255e425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721feef7-9819-4b5f-bed9-21289f848664",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e38f72e-d209-487a-b7d4-67eaf7fb86eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9b3b366-528b-494d-8af1-eda39fdf04fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3281d9a-bbee-47ef-b659-3d9520d3f039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d0cdee5-5dd8-4982-ace8-897fa1a43a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96f48837-55f8-433e-9d78-06ec4438deb9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8abd188-a30c-42d2-b28d-0ba2937c168f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99af3474-50da-4690-9c96-8818cad4f313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2d5d138-1c4b-4c13-aba5-09ede92ea013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "045857ac-8e5e-4e31-8df4-80a1467b51e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f4a56d-f6cf-49c4-b4d0-d46725da246e",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e1665b4-bd02-4146-97e7-df4c905972e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c3846-3d41-4b55-b934-fdce00412c75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec48176-e03f-4537-9b3d-add6da2762bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "e12bb397-5e7a-41a8-9838-23cf38e06f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcefbfc8-b786-4dd0-b837-7b401e0dd5fb",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a5782e-fdf4-43f0-8aa2-3f5435806b5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0eb736f-def4-4dc2-8196-97ebfd624c95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbf70dee-d01b-447c-93a8-0eb4c374cc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25556c5d-6f1c-4462-8d04-78fb5acf44cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f69a56d-b700-4d41-af1c-4b1697a79c91",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e02527-0458-4ab1-bfca-9292c4c0ef21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a03843d7-cac4-435e-80b8-fe1bd9e7a056"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4073184-bc07-4676-b5a0-25751bb3a860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00b9e295-b95a-4a37-8fd6-c4cc2cf3315a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5416e6f5-d0d2-4ef8-9cb3-09b26a9e56f1",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eff80c-0f5e-401e-bee8-c781e8c6d033",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0055d048-1b29-43c7-a0c1-9de79c5e1a28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba38359-2897-49ad-bfce-dd6d81ffd7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "158debbb-4a00-4cc7-b5ce-eebc1a8c70f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "476dbf3a-d3dd-4009-97b1-2e85e65c505a",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b26c393f-742a-42eb-8088-f50687c337ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83785635-f067-4ef3-818e-9104745bfdf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54bdc15e-37ba-467b-9a5f-a985dc7227cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e4fd7fc-bfb2-43b7-b0b4-54a266d3012e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73abd931-fc15-455c-83bd-ef3d0c5d7721",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fb7f0a-68e5-41ee-a2ec-0f33039ec993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7392f368-b70f-49e6-acf1-a1d075039fa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a927ccf-2dd9-47e5-9f46-944597f395ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a695352-4136-43dc-a1f7-37a8e2bf9761"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45af7da6-a3db-4d33-9557-cb02307e7c0b",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b1b023-4619-4f89-ac7f-73a875f14fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a84ddc6a-04af-49ff-93cd-11ebcf33cda8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "490d069f-1b92-4d67-9385-b4b458842d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dcea9a5-49f1-4521-abdf-d06b7e661aa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "670da4ef-f4f1-4553-b84f-3efe17e4107d",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e07c4604-9c1f-494f-9a92-3a452b93b3fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70ee53e6-a1c6-4c59-94b1-b2166450ed3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65647972-b6d2-48ff-8ab2-2a3509f48ce6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc4cbc05-c437-4085-9a45-1ccf36947882"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be3a4b47-8e1d-4a31-9062-8b0c3dcceb93",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c45797e-caae-4e4d-98c8-9f58ef92a749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ca34cc1-6cbe-4871-a4e1-55e65b616f1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afb2124a-c8f4-4bda-8f65-88e5e622f4fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2341bebb-bdb0-4e12-9802-efdac1f46ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77a0dd68-3c75-4cae-b67d-1e750efba427",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73ba31c2-8943-49c4-9b39-75a309e1c879",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a38c74c7-a293-42df-8dc3-6ae4d9a4b00e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b28e181e-1f18-46fd-bed6-ffd432d9c411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59017a7f-5d90-4361-ae27-3cac951a18fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddcc71a8-d783-4316-8f84-332a146e7945",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ccb5c01-009b-418b-8875-c0332f814f94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8f87bfd-ccbb-4b5c-92da-5084c436b917"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "237d7c5f-f85a-4dbf-98f7-88cda8050d9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0dd7f99-c969-4f35-96d8-e0c7860d17b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07239d28-aec1-4d03-9cbe-8c1406562edd",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb8e2f3e-251a-409e-91ad-94ee7910ba01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05deacfd-7292-414a-8c5f-80cddab1c83d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a903d01-9a58-41d2-9e68-26c6171378ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "732ab3c9-275a-4b11-bf7b-1ad0a9aca8b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2050b9-704a-4fa2-8a00-1470f1965b7f",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cca2c7e9-3d31-44b3-8f8e-e187f5a53330",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95e9703b-b3aa-4fcf-89b3-f4696969fe2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c75b6e-8a01-4c01-a6d1-c2c5e4db928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c2046a8-5fa5-4b9c-b035-1034faef3841"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3cd660c-b084-4e56-ade4-8c7c38764c06",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75250484-3e42-4674-a8eb-f6a49885be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0b8a688-dce1-4575-92b3-b5236bbd8aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0706efde-2880-46ab-a7d1-bca8b53a6aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0436739e-1261-42b7-b515-5c5751d66d89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5160e87f-bb6f-4122-9e2e-3615219441d3",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed1c192-b964-42c7-9102-51dc50b7cf1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "208ca2fa-c800-462b-9ec4-b5819f869fec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c987c01-6cdc-42ac-a8e3-bffad9f71860",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77d6251a-cbb5-410a-9d8c-f62238f5e7f1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "89d0e3e4-636e-4611-be55-896f7b03dd8a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4db2bec-27c6-43c2-88da-9fee756388e3",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ccf246-5f5e-457b-b3f6-d591c0cd10c2",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d085cb2b-3def-4d5c-99d0-17c8e3eb97d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "16214c1f-f2e9-4e95-bfa4-c4b8dfc0185a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f996e0ef-49ae-41a9-ab9d-97a03d8fd226"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2a0a54bb-dd6d-4e85-b49f-af9213582882",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c558564d-cae1-46f8-b2ac-234821c9daf7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75b1509b-f654-4e37-bb82-c4bd26d3ca0d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a57bb810-0dd5-4f86-aa6b-2878cb3ec7f1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3b47e76-71b8-45ed-b7c4-46ad816ebf41",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6dac812c-5d88-4de2-bc27-b3e369addbf3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "671584a8-ec35-4784-8a4e-8841a510cf17",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dc4b1e49-f2a5-4d41-a2f4-ec14698ef4ce"
            }
          }
        ]
      },
      {
        "id": "0dbf5b01-d52e-47ef-a726-655b9a4a7ace",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "cf978bf9-b8ba-4eed-9cc4-10c9765508a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a801867-ca11-4741-b47b-a0d6296cdaf1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "78baa06f-a7f3-4307-9b47-8a0310cd0c45",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9437161-6042-4766-b2c8-6321fd1abeca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0183f355-704f-437e-b57e-e958b49285ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60cf705e-443b-49b4-b61a-88009a7c6f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f22f9c2-bc8a-49f9-a001-b37a57e485ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abac3d62-7eef-4e11-8ac1-0f53eb719fac",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c82290d0-af7a-438e-9bc6-3bf9f9e251c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4500fad-555e-4b10-bfe2-5904a0cbafe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a11c32c4-9c17-4256-be2e-18c58bda9b3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a944e05-cb9e-4e00-829b-b72b40fd36fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee3c31b-3e19-449e-b1da-ccec2b2d4ac2",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7e693e-7b87-4cf5-a951-c52d381d2c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fc2c17a-3950-4228-a89b-382da5a1af4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4ad03de-ea3c-4d40-a8b9-bb1f14eec3d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "935adf20-f12f-4833-a8f6-3ea617375025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bec1f8e-059a-4e60-830a-bb9897007fc7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a02ef50-4a3f-47c1-a8f2-3e72c3601ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c13675d-7132-4d00-8635-b2b6d73968d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386a9416-753e-4646-865f-869d60c24049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab826776-f22c-48af-8eb9-27c62ed9cb38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11427410-248b-40a4-aa3a-4ad3313aff75",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db5b90d6-d28a-400d-a27c-b6807bccad48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8078cf6e-8040-4aed-b480-75aeaa176781"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628c73a6-df99-469b-8344-4ae4c8a7164a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41dad2d2-971b-49b1-b110-75d9121b1f3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77d647f6-da5f-406b-97d9-f13702b0a8ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fca20713-c032-4465-8777-ac67edf4b077",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48aa3559-13ab-4b89-9bb1-65ddb43e60fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c49dde3-f444-45d0-b3fd-767151b2c73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "07cf486b-dba7-4f08-a99c-6bd12c6691ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b5d4491-a83f-4ce5-8cdf-dad29af320a2",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52298128-c8de-4b35-9d7b-19e2311755b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "379ef727-5be9-467e-8f03-8cd9336c5f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab2935e-13c0-4714-bdef-2f1b372bb9e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5f631aac-858a-4a6d-9142-3a90e0941735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a00fe62-e14e-45cf-b590-a52bd0c42e33",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4424be8-296a-4c45-a08b-aeada0314342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942cd84a-ec2a-489e-85dc-3c52c72c3672"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca032bc7-937c-48ca-bbf1-c37018263f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c32bd1a-e5ff-4908-836a-034d0e8fd4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "054ea68d-db72-4e7d-925a-7aba67c5da97",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4e970c2-2068-47a8-bc7f-09e1591c49da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13467edc-81bb-4a12-a254-c5c8b6d26926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab228a1-95e5-4ec9-babd-bce39e4007fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "31d486fb-bcdf-41ac-8ed9-dc37b3b0d984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9131e2-7a07-4c57-9e0e-a2c07863cfcb",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "530fc915-5788-42b4-b4c3-c04e21201349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4c08974-d09c-45af-b3e6-74f744a58a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b14281a5-948d-43b8-b34e-62a74ee8c363",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a012cee-ad44-4fa8-ae99-ff85c09f4563"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3811dbdd-6849-45fb-96d1-ed9eec7ec0d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b263bac0-b23b-4a7a-a521-2c00801f5b00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3196300b-6294-42f5-9f23-db8953bb3838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d3ebd17-411a-4004-92ad-13a729c57b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb67fa3-0a55-4968-9bab-bc7c2ed3c2d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b71011ee-39fd-4ce5-aafd-c42c2ccdf1e6",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30ddc1b9-d7d5-4057-bdef-bd6636df71a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d8f1713-8f23-4d46-9f72-d9a8fcb5ef52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5259e397-d996-4ed8-b042-670cc0f1b6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "08083aa8-2f1f-447c-81b2-945960515b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0a9274-345f-440f-901d-693355124ddc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a979ce6-6eb2-4aae-a22b-5b2a680fd994",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1c24ead-a154-4246-ba4d-bb4c7bdc55c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "119aa613-654c-4a2e-b2a8-151cca5eb810",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d469b593-13c6-47e5-9d1e-5bd43ff866c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e686ca-e5e3-4452-a18d-2240fbbf0479",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347cd1cf-9ea6-47a3-bd78-77967d037a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d44f7b0-4062-478d-92b8-386ba230cab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a664bfd-e030-4c84-8d9e-0a4f030908a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0f877ac-a449-4b25-bb4e-e0dba14b4386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3feb0915-63a9-464e-8f09-a1a98e10aa99",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0b59899-ca35-45ac-933c-19d369036b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "881272a2-a7a0-4046-9869-30416d14df5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0060ee0b-c4dc-4d56-812e-faeb0f7fc986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "06191367-298b-4fa6-99de-23b83b928b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d9cb800-1fa9-42e6-abec-81893782eafa",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d14547fc-10cd-41aa-a3d4-2275ba53e05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df9521f9-e8cd-4180-bfec-6c5c4e808da4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9bb68c-80cc-4ef1-8423-a3c44a355641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "90267382-5109-4c61-843c-c827ffb320f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c68f03c-d4b0-49da-8edc-588c388db73a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d608473-cc97-404a-a902-9244e8707d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5075958a-62eb-4db6-9d29-5cf4628a896f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "253c3c8b-c30a-4cbc-b752-8fc49c88a72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "4948d1bf-1040-4a15-af6e-c9ec0c9d6d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "939fe73d-05d3-455e-ab66-14213975833a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7a9479b-6192-4fb0-9a59-12f817808adf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e75f5c9-0e10-4796-b8e2-f1499e436c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6d89b0b-ab06-4636-992f-2207b1fed935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af448fb5-d1e5-45ff-a1c7-d8f28541dc49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e65bfca5-4df6-4933-b018-fb11858098aa",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b817a3-57ef-4924-a62b-a9f3639f3d81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669ca384-9c9f-4e7e-81b6-18f7a520a92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8d64d6-be62-4e9e-ae2d-7ed28708479b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3999d7-26e3-4312-a002-a05e95247ea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c083245d-6959-45e8-881c-1f2949995172",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d917568b-f447-4878-aebc-0cffc115a145",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "565d6130-a234-404f-9fc0-1d1547811f91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "567b189a-55dc-456e-a45a-e3d996af7575",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc02443-031d-4ed3-9019-4887e8ce6186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "692c0b47-b789-44d6-9409-05f62d57840f",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4699decc-5798-46c6-9fbb-b0892283989e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc84b19f-50b2-4379-97db-c65265dad96f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0de4d190-284d-492c-bf71-b6974c8fbf49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5fba3058-8557-4f46-9596-9a038fdf63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46200e79-cea1-41ad-bc57-6cdd36645016",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3af6b89-6166-4d86-b66e-8745d052170c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8839b178-cc1b-459b-9377-d4910b067c07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdbf619b-726f-424f-9aaa-d86a6a1f0380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3db5f36a-f595-4431-a390-287f7ab0dc4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a75c2a9-a71a-4949-b53f-d42bbbe60dcb",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a93b60-3599-4375-a5e7-029b4df88a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "799b4313-8d33-43cb-af9d-229e71551758"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c847f251-a9ad-4f84-aa3b-141b4106d9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0afa88d6-559f-49a8-a033-ab4e0dcefc67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1f2c10e-a010-4d92-8b56-968683e397fa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95020d7a-0795-48b7-a84c-f4e3b10e520c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0c83b2-f05d-4470-9449-d8e316cf8807"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c818c5-7d06-4313-93a7-6922c3fa4bc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cb8fcc7-399d-4200-b177-f8b66ca8ecd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e8ba4e5-5d75-4358-9c92-8f3a70504465",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d264834e-0b83-4db4-846d-3b432c0239c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3474ac92-466e-4f15-9c8d-25646ca1edb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dd6e9ad-ab90-4777-91c3-9badda10c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f4d7776-b9fc-4931-b456-7315a5235bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5f94583-a2b9-4c8c-b596-8e28fb1c61d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21aae536-e48d-4ee5-9f95-914cc5b0d730",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "350e4f34-081e-4b80-b7ea-c401a0e4443c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fee58851-536c-4ee7-9931-62a47287237e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b09063a-bf2d-4854-b8f3-750b0814e356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3126c1ed-148a-417e-b78e-583d86bad016",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54e20278-4c16-48fe-b4cf-743a2d0c96ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f897d30c-991d-43d0-b1a8-5079a6d25acf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68b7b1d-48e1-4a17-be0c-54873cf9d619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7fbbf772-6fc7-4c75-94cc-8c909c89b782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "946e3820-f0d2-4dad-98ef-be195db268e0",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73697b17-81f8-406b-95c1-2f074cd1b985",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b25815f1-d692-4cd2-9db5-3de47109af29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30404fc0-91e3-47f0-ae84-22742e6654d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0a7a1672-2ee6-48e2-b0cb-679ad244cabb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a07ab1-6dab-4c8a-a94f-ba7aae94993f",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36084c9c-ebf7-4220-912f-d9651584aea5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "189e53dc-af5f-4612-8e93-4e2dd7916812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab46bf22-f093-4a78-9d97-4a4b29aaa774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d1217b-7470-4397-a8e6-a3dd66a020f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47110c6-28f2-48ab-a4e9-39a552af9176",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1334a860-d646-4d62-b43c-e63cc852de19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ce8be6-e0a7-4cf2-af03-d9763994611c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc17c4-a6fa-498a-8554-a5779654076b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b6f5a7dd-02f1-4a86-8ab5-cf188b70ca0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6db76c14-2d2f-42c1-9dc7-b171fc01e22b",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "768cc43f-a8a8-4df4-a9a6-5618e8acb5ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d67d733f-1a52-467e-b980-690606e9778c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78f5b543-16ed-400a-bccc-5d42a4413bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "67289d59-c9a0-4eb2-8a75-738cae9d41f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51507acc-2ac5-4e98-a2fa-08be4874e6db",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ddf981-b435-49cb-a41a-805996891c7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc2980c2-89d7-4d51-9004-03afac4d5172"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb02366c-82cc-47f4-926a-d0056b33817f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "87a6b3cf-42da-4321-bd2e-a463b83e40b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efe38c27-9ffc-4e67-874b-6a4f04c5847b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b6e7b1-0bff-48b2-a222-ef370d51c7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c083c58d-f8ad-4de2-828c-d521b63cfad6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "849071a9-7e70-4937-9046-763884fc315e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b8112cd-394c-48c0-87c5-77950d2ef42c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "041ef938-3841-4ec6-9473-638761d723d3",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d465eee1-8e25-49ae-b062-a63c1ebdfde1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dd137a-a981-424f-a6fc-ff81b0db5292"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e58fe1c7-7584-4c84-bfee-fdd38c333a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3c85c2-3623-4a65-b46c-e05fb99e61f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "271bd791-e1ed-4b8a-b280-4be20b2529ae",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fe412c3-b64b-4fae-8dd3-039da599c2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7866da25-d415-45d4-8a4b-89b3bb0e15fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "651736d9-6005-4a10-bd74-932d46538830",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "50192d8d-2932-4af7-86ae-6ff46b7c0b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22b90ebe-4fb6-4c5c-bd88-b1f8c68c3af1",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd94001c-cdea-4662-9e08-ab54c6e290b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb75eeb-645d-45f5-878e-82b2cc663577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90727be5-d2ee-42f1-a7c7-7ae7052f3952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fc4a8b-1c58-446e-94e7-9f7c21c96cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a35bbea2-2fa1-4e8f-b6ea-905fd99692cc",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38dd998e-0601-4cb8-a409-483dbe75e39b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "951766a1-c883-40b7-92af-f08101b0c6ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482a41c2-2472-4f07-ad83-46aae7308af8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4ff281e-8323-446b-bd91-c871ee593a4f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b02e53dd-be77-4ccb-9e9b-43a1a809aff4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "459fade2-8a97-48f9-8155-6ae0d2cd9d57",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26668a59-b555-48ce-94e5-62ffe63c6138",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fdb487b8-0bd5-4848-8469-d802604e79ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbc3466-e571-48aa-a416-fe8dcd6ed883",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f2b0e84-beae-4593-a944-506e2a580015"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c724cdc1-78a8-463f-8fa1-41814d323d1a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "81badae3-c624-48e9-a660-fd704f0d6619"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bc2820e-060e-4e4b-affd-07368fe6a099",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "576df748-6d8f-40de-af07-1553e04bc8ac"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e1f5908f-b0a0-4dc2-b33d-a39d96f1b803",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "fbad2df6-3e6f-4a26-899e-6d51f24e3be0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9f2a8ab4-7aaf-4788-b814-0fb27126d982",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "adaf505d-f6f7-466d-a060-7eab9ee50558"
            }
          }
        ]
      },
      {
        "id": "9ea5150d-b034-4daf-8ad3-4b40c22b4d61",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4dd38591-6d1e-4b12-9b54-14ee97e2578d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8b06b26f-914c-41ad-84f7-98c2d19d6b2e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f9e041fb-f42a-45e4-8b56-fd871f2092b9",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d29470ce-8af7-4032-89e5-4bc8a26205ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebc02797-8dc2-4b1c-bb12-b5045a529c3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8664c7ce-db32-48d8-82ae-e959d235be05",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81586aa8-b4c8-4691-91e0-503b6d4efa20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1b55e3f-466c-447b-8394-ca36678c2838"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a153ba1d-4964-4c84-9466-65a5d20200b5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "662ed143-1403-40f1-8474-bafd57014999",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d1563c5-8efb-4d1d-bae1-8f64003035ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbfd8c2-e693-4ddd-9ad2-276296af5713",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c390dea3-96eb-4c0e-bafa-1a0c173b4d0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbaa54e-7a7e-43cf-b072-c018906b55d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7441a875-c29f-4697-9133-a3baac5f686d",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc52dbff-43db-40f9-a8a7-aac127a87c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cb227e2-3df3-4efb-87d0-eb3f19efccc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ec5356-b6b9-4531-b4bf-f9957abac9a6",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19dacc3-3d38-4079-bfe9-599f32929c49",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2315d64-60f5-48fe-aa5b-75da6423ca1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51af8142-9d00-49b2-8f14-47bb400b9993",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21e02e80-f3ba-4f9e-b46e-49e975ecfe9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0703b541-f82e-4e0f-bb38-e9b98f6246bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a2a8d9-0e37-4886-8da4-c7d3cd546e98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6286ad9b-f63b-4679-a066-266b2e8509ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18fc8f0b-5958-4adf-a6f0-80e337377bca",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c4fd3d-8912-4290-9dbb-882162db8c0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66b025c4-73cb-44e7-9d4c-dcc4aa9046b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4068eb26-497a-4bd6-bedd-94caa691ee17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "249326e5-c299-422b-8ae8-c36bf02250a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a1dbac-2550-48d4-ab7b-12ee4ae9d62f",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cef9cf62-b041-4ce0-8b83-c6fea3a45919",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "84cb23f6-0238-4ecd-b458-e164d90996b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a10d77ca-63d1-4b93-adb5-84f09ca6c15e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03334c93-3d92-4deb-a9f7-dfe140255ffe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "492907b0-d5cf-44c7-91bf-7dc91de02034",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd59f167-0df2-4de9-8946-7c1346aab0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1c2313f-d9dc-4301-9207-fffda8ef6d0e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5c203a-788c-47f7-9b2b-13a6ebd4f649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe325ec6-167d-4bac-bf8b-5e26640f2e63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bd496b1-b08f-4970-9ea6-8d2093f60e30",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82e3df90-51c4-4e6c-a20d-7447e5f9a809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b6cc0a-26fe-4131-8f9d-4d36d41605a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db49dfc-fd0e-40ea-9b06-1e28be881993",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ba7256-40a9-47ba-8532-9c35bf63e898"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaea42c-c7f1-4db2-9a8a-c2e5e8555201",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b72a1e-968b-4dd5-8eed-b689c998a617",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e220702b-7567-4619-9606-a0b5ac17b4e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "652fa130-d321-4c9d-a232-fca507f1f285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c482f64-2b67-4d39-ba3d-7eef47ea9719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17f62375-471b-49e6-bdde-9a6756c6c717",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1629bc32-aa3c-4a9f-b09e-aa29687dd49a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46b35e23-ec28-4708-aa1b-f8e8c5cd1ee2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "468aad61-2b5d-4bb7-8150-4753f6c4fe23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "275c7f00-59fa-443a-becc-42e3fdf26196"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2a89dca-ef25-4e7f-8302-9dca1ede3735",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e970f75-a5f4-46f1-aba8-713e35bf1162",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f6747b5-b4e8-4459-8a95-07be94d3bd2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac0fa4f-3e2d-4be1-a4fc-644e8ae2b099",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d2d9bc9-800f-446c-9795-e3b9816dcf00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da21d9e6-608a-452a-bd51-077f6fe70b8b",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44271c0d-263a-480d-9d61-4e77cf8d342c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cd4a2f9d-aca8-445b-b99a-a0cbc9c8bab9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "678e01cf-15e7-423d-85d3-66a560e74783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81b8a068-0800-4702-aeff-2f1f269633aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04bd8e10-4b07-4fb1-90ac-2c1fdc0c0404",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f19c2e4a-7b30-4377-acab-2804977e9aaa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c25413f-7efd-4049-a08f-6b1e24d9599a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b816407e-8b5f-4344-932a-af8c05067738",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6d39829-8d7d-4ebe-8f6a-525d6c09b760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e90d703-a8c2-408e-a615-3163ab45e26d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f2e549-ef15-476a-aef4-260352c434df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4a2e10f-d6fa-4e87-919e-3a088389636f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ffcd443-8602-4920-bb8e-23e131e4fef1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c648a91f-409d-42ec-ba11-0111ba467fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013367f9-81ff-4adc-a452-a96702d1367a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4832b2f-22ea-4238-8fd0-c2ed6582bcbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b481ecf5-45b0-428b-84e1-d6d1da790eae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bb028ae-fd85-4e2b-ab9e-3d0ea3443465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac984dd0-6508-47e5-b97f-99690122e26a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcbbe7d4-f144-4321-89af-e27aa9d6422e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a09134-c2c0-4491-bf90-71e5d60fe8c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8308e2c-b41d-46c1-9e70-063527153119"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3801f697-c244-4474-aaeb-7ba07111f276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82f458a5-7473-4de2-8dd3-b88ee7b0e965"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c15ef88-6a86-44ee-8e8b-262382b803c2",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aa89e59-e631-445e-8900-eb9f822bd8b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "697e93a2-6124-49ab-9f4d-b7cb5fd79efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0486aa8-747d-4f68-b1f4-668b48bb3ef6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "291b77ec-37eb-4cb4-99fa-2cb80c51e0ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd724b70-9147-4870-859c-57950564fe75",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49cc6c5f-cdf2-42e9-a931-67b008cdb903",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "239bbf97-5bfb-4fd6-8af5-368e6c83a009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfcffe5-91be-44b9-bdac-b013478ed10e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fd9da29-8380-4a42-bb41-a4d2ce588b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ed12b7f-fdfc-40de-a3e5-3f675e2954d8",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "342446c3-6de4-4131-80af-7f343d83819a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3165e4b0-c0d5-4348-8806-0ce32c6313ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82aff217-4d30-4c43-9129-873b2f56d182",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ac37b8-2be9-4884-9a6d-8d8c81309e0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed9ad5f1-8d2e-4872-9a50-143f1e2829cf",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f0969d4-c1c5-4e38-a721-d5ebe1660162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e231762-fcbb-47bb-93d2-7b241e433a54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1dafd3-fcb1-4f7c-b30f-b072b85cf00c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960fed4c-a2ae-4ad2-9a15-9fe6cd5577f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39914c34-1ac1-4b1c-8683-c778625cc3e2",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626d323a-de49-463a-8be5-033fe18cea3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c371b029-3b7d-4346-9322-65f175ec6d54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a8c5b5a-7a8d-411e-b3a9-84a9c305c033",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d57c6ad2-680a-41ba-b236-f5f59829f8f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99a0c7c6-9705-4474-aa91-d41bf93e6c8f",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7713ff09-611a-469b-814e-76be2f7c7a8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ded308b-fc05-4b07-b1cd-5629dec85609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c4e23bf-8024-4ed9-b457-f2bfe805c677",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34633ef5-47ad-4b4a-b533-8ef68b4972b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f001e66-5212-4a9e-8b1f-362ccdc72e4f",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cacf5f74-b03e-4b88-b2f7-f403d449af4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abb508a6-f812-415c-a99e-e49295d4016d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cc9780d-b9a9-40b8-bece-4618bdf07e19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd6f27cc-bcfe-4c6c-aee5-97f5e8e23052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a44257cd-cd43-4655-9e17-1358b29a45b6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207a9d6d-d7b6-447c-bf13-6bdabb7e3954",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e6b6e14b-092b-4458-b571-4f22a985b58f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4bf095-4dbb-4536-ab7d-854b457ec6a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b46c26ac-b10a-42d0-82f4-27f4c7f7bf88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7746bd71-4924-46d5-854f-c846179c820a",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f144a-29c5-4640-8c8c-9e6984c1bb9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b9baff5-f249-4628-b876-e6a14031ca12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5aa8523d-177b-46fb-8328-5f2942aebea9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "755a3463-e9c0-42f2-89df-a7f32f356b2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bf51e3a-6a8e-4135-8e24-3e3a81160b69",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcee1e7c-4fbf-4db4-bad0-969b41fb45ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "54e9b396-330e-42f7-a05e-3dcf36e885d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b1e880b-1f35-484d-98c8-60a4988e4035",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8aecd1e2-02fa-46a3-9824-f8fe22fc8289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600d0c30-d08c-44f4-a19e-fd95d1448dc4",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7cdc31-9172-4a07-af3d-b72b8f58249e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a286fe5a-df63-4996-9a7b-6d1470432925"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06329d46-6ed5-42b7-afd9-9b9e0daec1fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a15ab8e-0ae4-4b76-aec9-b910c87e5205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e286cba-2910-4ffd-96ab-25a563a05f24",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16eddfb-62cf-4bb7-b332-b7ec4d589509",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6db25aa9-1bba-43e1-8f56-6e29ddda1a66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e9401-1e00-452f-a0bb-32cc2578d879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "732e07b6-b385-42cc-9e7b-ee3541c0c1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab8a58df-8501-40f9-95da-83fbe3c39c31",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6dfb3fa-9736-42b4-93ad-58ea0c1c2977",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e6a56ca-b53d-4084-b912-cf232d29d846"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e85166-f958-4e40-afa7-33ee81180a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fa947e-c598-4692-a96e-453310a4dcbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c70d86-828a-4bfa-9cd5-31d4c4f332c6",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "391d7993-4e7f-488f-986b-7c54083dd5a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1ad8fdb-c8ad-4d3d-935b-201876614fc8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cba8b7b-58b0-4370-961c-6d73a3386499",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd261337-3228-49da-8aad-f1cfa7db109b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3080bc50-ef50-41c1-8e51-88301484d28c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b54ff30b-bbf7-4a24-86a5-305fc57d7b9c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e62a4fcf-c30c-4a6a-a753-5bbbce48c9ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05d466b5-044c-4d5f-816e-243b7b837ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71d31ed5-9115-485a-b103-8b8a9a0fb4ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94116bef-8f06-4c31-b749-5d1be810ce80",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5dcf6d22-8ec5-48e8-aa10-86d82f8fc100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "064f7092-427b-4e74-b6e8-ae9ba51c334b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0b36128-68cb-40b3-874e-c00d4633b906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc5f62e0-0c28-4c10-8056-54b2d5287faf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ed07c0f-3c45-4772-a81c-8f60ef61984f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69a9c75-22fa-46b2-83d3-3a434940b539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7d5d4fb-5a56-4046-9449-c23f4bcd22c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6fb563-3942-4a9e-8b93-79f60df584ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bcee056-011c-46d6-b082-60033115bf28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90c854ca-5421-49a0-b19d-a93c24e462a1",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a952171-eace-4716-91e0-f8699860001a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d43df3-70c6-4f71-a6b0-c5d0dc7087df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b95502a-8b1b-4ab8-a485-966b32987ce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cdf00f-9c01-431c-9c69-4090cc0936fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a08722d7-ff49-4d70-a912-fa0234da7978",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd2a826-14d4-4038-9c80-790f94527355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddde4089-b438-4e5c-a9a8-b948a6c7c886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea085001-58d9-4856-89b2-2a7840766b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9137be9c-da20-4877-aa13-2cd69960a37e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f14a0517-ffca-4181-917f-78b660fa3aa9",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cb99eba-5f32-47c5-99fc-b689cd1a0290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "960a5cdf-1ef6-49f0-ba13-6b2473ea0a6d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ef5ac5-9bdd-4e2e-a215-ade435e70d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bde7ebf-a81c-4dde-a6c1-c72723066790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9f3752f-19e1-4d20-abee-70e055a07822",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f0a2a8f-6270-4ff1-ac42-b7a8f98304f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "811ce9c8-15b5-4b49-8cd9-4381fe60d568"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c14acc9-f664-4c52-ae85-2c8f335e2b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002948ba-d762-494b-91f2-4686acc20e78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0767db72-e719-4f74-89cb-415a87833b81",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b4940cc-b2e2-47da-a9e8-70044645a2e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8a2df60-d211-4caa-8cea-7e5fc94629bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf0ea01-7ef1-4143-9b2d-2b96948f7420",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bc3833d-6b10-448c-aa62-53efa89c6db6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1c8b757-7a29-42b4-9619-7cb82c4f02dc",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "462ede92-be90-46ca-a8d0-692b6c52632b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbd928fd-6438-4eb0-9961-b0a2e2194ea9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bee139ae-c4a8-4aee-a264-8aa1c5f97dfb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36eacb4b-f57b-4a61-817c-7df6eee1b821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf1863e-0270-4094-a4b6-572e3ed6b234",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "942658ae-a56b-4628-9333-a82e8ceb85ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9b6e947-c565-413d-b4dd-961ca99c5c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f78133-658f-468a-80e5-3f5e7125f4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d491551d-46da-4d89-890f-6f1d25238fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2002e91-4713-4e92-af82-bb712a397b6e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7b7380-4950-4274-a68f-bd2b48b8aa23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e38f2013-a390-44b1-a4ec-87deefc082a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0080c7-2d43-4edb-afdb-5bfdb8ab499e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fec1ab9b-f179-425a-bcd8-82fe85155020"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9034a01e-df13-447c-9566-8680c904ade4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f229420-6bb7-4bad-8f49-86328214a898",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4f5eb14-2242-45d0-a0ad-bafeeedd1bb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aabca71d-a2d9-4263-9e29-39e730ea2e90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be9c7897-0f6f-4a7e-a81a-8f77df88e767"
                        }
                      }
                    ]
                  },
                  {
                    "id": "675dce7c-d663-43e4-b256-02be023a0140",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c84017-9959-4e1a-a392-9814f3815d84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9da3fbe9-3835-447b-b22f-06fca35c8814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f79d24dc-67be-43e3-8b51-c376bea12dcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71e1c861-d482-434d-9789-f2d820072b8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "863b6e70-81c5-46cd-a5fc-d7871c804988",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71defe5f-ae37-4f74-904a-caf9d2a00bcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cd22e9-ae63-4c05-9cc7-92a585718696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a9b63a-3ea0-4c4c-a2fc-502cc87da06d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a518751-3e00-4f94-806b-01774a4254e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9f7f0fb-49e7-4d6f-897e-8fbc276ee0f6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "029aa61d-9e2d-4086-b02c-5060e2960482",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b937afd3-575f-4437-bacd-b1da0ccd6f6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38bcc46-c89c-46f5-9a94-edb18c51cfdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b648633-55bb-40fc-a2df-30efdc81601c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a04a9029-ed53-4b6a-8f91-1eea55945db8",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a83aaa-9b46-4b33-94bd-496bb8ae7c0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66439487-1cc2-4b97-bc3b-6ffc070b459e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d15e81d3-6600-4174-8d8b-d3691eb6cde6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "522ca4e6-7499-494d-85a1-93c20492746f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd0ff08-802c-461e-89d0-9cf7d33562b9",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd8cfac1-4ee3-4e04-a54d-3e21e41276be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e927cb5a-e746-447c-889e-41a832b056b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2627ac5-b6ca-4d31-9b75-fb15e6803f54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46d16dc6-d175-48cd-8846-8d4fdfef491b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f638f64-7f80-4d0d-bd2b-3aeae89b953b",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edb3d2ab-baac-45c2-85e7-a676bf60a267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36f36f88-4524-4f2d-81c6-5ca753341395"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9dabefa7-e06d-499d-ac7f-ff4cbfb4c7bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6417e844-245e-425a-90ca-01fe7c12dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e56f15-29b5-43d9-aab0-4c826bf2abb5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47c31b74-7c10-4944-8c1e-81aaafcfa298",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "430489cf-c2bf-45d6-a578-a4e8142cb6cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b910ba8-0473-49da-bbe2-0e6846f701ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547132db-c15c-4fe8-8372-6650634ed755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae2c0f6c-e1b8-4a43-ad38-66f54b0e65f0",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf8c042d-0564-4f8b-9227-19149cd24e7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12f28c7f-215c-42d4-8aab-603f99b1db1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "344810e2-2e9f-42ab-ad81-00933096d507",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "349a2bcd-70c5-4169-bf6b-b7efbe2fd031"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea46f103-4296-4e9e-8d12-241895ae6888",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "309ab1c7-6207-4bb8-9ec9-753fb6e75607",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e8509c6-8dbb-4d86-bb5c-dd9f137821a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "691170a0-7c1d-468b-a13b-75508060dce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd70e80-e4b6-4a17-854b-75d27740328f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d6c148e-ca1d-4983-b7d1-3c4fcdcfa915",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec9cd431-14c7-4220-acc5-2033fa21aeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02a5c027-7fbd-4f2e-a499-ecfa6d1a7491"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6197114b-2be5-4bd3-9c99-5bae92fe0414",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8c84a92-419b-450e-b8b9-0df607b23bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "020eb23d-1ebd-4a56-8089-1da923352583",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "666edb73-ab18-4f6b-82e8-0aa610e3065c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247ca113-92f6-46c4-8460-0a486e61854a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33d28cf8-8350-48be-b59e-f5550e407370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d269993-9cad-4a0a-a543-42d1791499c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40efcf3b-1057-49dd-aea1-649eff69af3a",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "930fc046-df74-484f-a6c2-edd5c8829c5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "598f2208-ea4a-4c82-b20d-cc6b0c2650ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c6b627-be8f-46e7-93fb-69dcb2ebbabd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b936afd-3183-4e70-b51a-eb2b82a0f29e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aa84ba-7cd6-4516-b19b-558871b688c6",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22dbdc76-e58c-44d4-bd08-b88aa49fe85b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b07b37-dee1-4047-8e36-ee525de6b56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "828037e5-13db-432d-8437-3eb6ae44d7ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8b5fe3d-55d9-4997-9e80-175f70605a97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2449db3-0417-489f-a69a-059787f41648",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e6c58c-1687-4320-8f6e-11d53ef433da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0170778-aa53-4006-8e4c-6c6a3192485c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1a3316-5891-4941-8e94-5cc3160a24a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbcbcd0f-b886-43e1-9349-6b3e9af1dd04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb8f1a9e-3d3a-47e7-8c68-f990104d0bec",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85f685b9-5670-4d67-a09c-27428be4ed44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f021b5-a6b7-4fcc-8df9-4343814d7c2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92bba199-8a23-46a2-9d8d-b73c45a76227",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac381cf-f458-4b0e-a9ef-f1367a8ff048"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b073135c-2294-475c-a550-7ebd872cf001",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4d5b51-1bae-44a4-9800-bed70e62dd6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29d47666-00ac-4a93-9d4d-d970413302d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca6c60e-8a98-440e-a6e6-43ed40bbff60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd90a89-99c6-4ae2-bcad-cc1ba9c1c867"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50e563d7-0efa-41fe-8028-9803516c47ae",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063666a0-95e4-4f10-8791-2993a3356d5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88eabdfe-a236-406a-af8b-f3b5b175f04d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "060c8ace-06d1-4820-9e09-bcbdf4f0cdc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3608003-36ef-4c06-86bf-890acc946b38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32b9fa0b-dc9a-4940-aaf4-0c49ccbdfc6e",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4d57aa-eefc-492b-b52a-d105bb2c8534",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06f09a4e-9b1d-405d-b2c9-81324af63ab8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b3261a7-bfae-4519-b018-6652ab816a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9886e87-6a3a-4758-9139-a5b3f1c70db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef83fa5-11c1-4b4b-8c1f-6d921a3a3afd",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "750310ba-6cd1-4f39-a299-94c5b8ec356d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04484038-172c-4c31-8025-d8bcca24f793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6aafc00-8178-437d-a16e-95cd211095b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa154ddb-c603-45b7-99af-466e6e809175"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19c6715-d8d3-47f8-a2db-0c6ec1e71941",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ce97d6-93d5-42da-b5cb-ecf41bb7f87a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a095ed8-bb24-4e9e-af94-8ab58d79e6a9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65ea6d01-b6cb-4555-9283-54b0e3736280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0dc5b1d-2e72-43b6-8f6e-168c1343b1fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "380eeaf9-982c-45fd-a420-2ffd003bc435",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc5172b1-5419-4c1f-8b94-2f9c032c629b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d4de3d7-b92b-4e75-9bc1-3f6406d545e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38ca26f-7dea-4525-a43d-fb9d59636ee7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84ae5a6d-54a3-47eb-b2b9-fdafe590f65a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fb65eea-5119-4590-a075-b96fd449bcdf",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c226c9b-932d-4840-81b1-00be729863df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f04f86b-0876-4c9b-a43e-592613d411fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43eec501-6b11-40ef-819c-25275fea1b79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a59f05bf-809c-4017-8e9c-dc0dc08c6dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0826943e-2caf-4ef7-8c7a-76795c8fecb1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906fb88b-34ed-4b39-a18f-8c3eed675261",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fb45c10-044e-45ae-8d96-5dbef0c21ae8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a5bf62-c6cf-4169-9a43-c5a6ed38314c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "485756e4-d946-42cd-a64b-75f529c9e08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5df8aa0c-5abb-4fcc-b9fe-719513070795",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b1a6d35-c657-447a-9362-4ed2fd68ee03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0b954933-ea86-4776-9111-a5c0768f9c3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "994ee32d-2761-4d6e-82b9-b4c6b91767c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3394f944-9e18-411c-9dfc-6c2229ab25ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c7a5d73-c6af-4a16-98ce-14c9c262121c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7832538-c22f-4eb4-acdd-07604784309a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f294ce8c-4e39-4924-91ce-66bf25903b4c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfadaf49-ae22-4fa9-a226-1fc950dcea32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ce01bcb-a2de-4eb0-8886-847b867ab01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1abc773c-6fb8-44cf-a599-2f90834e32a1",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080158f-afd2-4378-9b52-55c2fd8f8c23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de56cfb8-d1a5-4c07-85c2-b45c1d5aabea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b17952c8-d5dc-49fe-8d7a-83103fd28792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6662b9-e5cd-447a-9e69-e37b25d82dc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db88e181-9dbf-4d65-8537-f591190c7243",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ada37c-f384-4483-93d8-a2c00f5d1e10",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5adfb70-adfc-4150-b76b-c4031aae5542"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b23c17-42ae-4269-9d1e-3e3bcb51a1b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6eae7e-fea3-4357-b92b-32313c6b87eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35af39aa-1d8d-4c9c-ba99-be25673498b1",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015f9a73-98ff-44dd-88ba-aeec51326280",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61823e50-d839-4361-bbe5-540f5c8d4d6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d4c11b-1788-4099-8f1f-947ab2582890",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d92f240-103a-4859-b772-61a1458ad8de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6b68c53-bc80-4fdb-86b0-36b8b7758642",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2492cb-beb5-4441-b2ae-c1e4de71a141",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bed4f22b-eb20-4630-b888-4ce013d80f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1b183ea-82a1-4ec0-b60d-5649bb2e285f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f51c0029-fc17-4838-8d36-5e634c6b7dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560496b7-465b-4438-b78e-75d96bbf0a38",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4eeb7c19-ecc0-4495-a87e-92fd15507087",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8eb64e9-b724-4cd0-8134-b68b7e9890d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ceaba539-0ca4-4de9-9bcd-536b260448df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33fd9f42-2210-4faa-a7f2-1e1949805a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5f534e5-7c8e-422b-8baa-f57b16954ee8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "832529c1-eb57-44ba-b5bc-99645149bb15",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c067022e-6d7a-4f14-be72-757b65ef5985"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad8a60d-8b0b-4fa1-b351-2339386a3fcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d874d370-41ef-469c-b1b0-4ed0424b1021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4669402e-6c67-4332-8736-054ea6b60ac1",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62fdb20a-a6d2-4856-83c9-8c8a1c53c6e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "593834e3-bf46-40d6-8ee2-5bca458426ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69cd3f8-2336-4d66-b208-5dd990f56ba4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2243e9f6-c96b-4f14-9507-c24e688637bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46522fe2-fb0c-4ee1-a253-4ba5e94d612a",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3861ce63-83b9-4897-a10e-2b69b9c9af74",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab345bee-645f-42ea-a31d-d745040de060"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf10066-91d6-40ce-975b-24102e90bc03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39107520-1f16-4977-9cb7-7a730de17f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7e2e46-2e4a-4d9a-99d8-32903f3fe965",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fa9616e-353e-49a1-824a-af3e60c90937",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5b933625-a11e-4c97-9a55-dba165b5ab3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47339c64-3355-4bb7-a390-5d7e7862af74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0f9f85b8-d94e-448e-8c11-bd172a37dfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96abbe14-9f56-4e70-ba90-e8c3a5c1acfc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2739d7ae-f4d1-4a06-9b33-945ecb827e4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d7d7d56-a7d8-4095-8765-9eb04b400d1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed6abb04-a7a1-4494-9445-4eb8638116e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1190584-da96-43a4-9f60-71cb78714a82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bca52c9e-3baf-4901-978c-370072dcf621",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e72dc80-51d8-41b3-8767-865639de3b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de062a1-7741-4c3b-8a38-22b5b6f461f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51666c8c-8a13-423b-bfdb-b13daf2af802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17cd9275-52af-4632-a2b7-2cac4df62f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e79e41c-9e46-41a0-8960-99ba4b44399f",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7b3fa6-3010-4419-8c4f-bb5d8db7ee3c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e9b78f1c-612a-4fd7-b0b3-d08fe533ceb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08221b8b-4c91-4713-b7b1-e32f5b2c35f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f656e2fb-2891-4cff-8d90-1cf0be7d42ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0484489-e82a-4576-91c1-05222d4865ae",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a19f3b6e-8c05-43dc-acdf-562a9c0e1884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77bcad6a-ccd4-4e66-a145-ccbf2943de78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42337176-cbef-4c7d-9b30-baac18546bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6276758b-41e8-4195-a3a2-2a44d20bb1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e62e96-d7cd-4bb9-a80c-bbdee5525283",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c316c208-69f2-4a2d-99a4-6b80b10223cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "41c4f6a6-0fca-44eb-adbc-046c18c5f975"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae21b45d-8181-43f1-b24b-b0b008bfd371",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc513186-eff6-4ea9-bc19-84917e9dd237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb256bc-d411-402d-a265-ab31e943407b",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "751f4179-4ff0-4c00-81dc-a5eb860003ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06f2665d-9dcf-49fd-ae29-54f9658d4ef9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f274595a-4634-4914-808f-c5874db47496",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a075c382-6a20-48e7-91d9-99cf6b02251a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7d1bd9-1e6d-42de-a282-87eaed880cee",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66ebf1ea-748f-4e76-8488-6d79621e28be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97c67b8e-dda7-4ba6-a9ff-166e599a568e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a71bfe08-23b7-4a3f-b30d-b0e0dc5c28e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90975cbc-7e0f-4001-8e87-d4f1e64f5647"
                        }
                      }
                    ]
                  },
                  {
                    "id": "201b291d-fd35-4498-8666-cf20fbc23b14",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e7a5d9d-8418-41a9-a426-ede6a282b00e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9bb14a91-9e6f-40a1-b293-349d56bc16cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce89bd8-e881-4cd4-b13f-4252b43b2a25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cddc00d0-c626-4686-9497-d6cff4faed41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0caea05-e5f3-45d9-89d8-cc49e747873c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "232b42dd-b1b2-4ea1-b4ee-6b7aeaf26b0f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c0f426d7-6e7b-4fc3-b8ce-371ccbb5eef6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eade683-6702-4345-8e5d-55d31de8fcfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f8ec312-bc2f-4a36-a4d9-4ec5f05bb732"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61130a2e-396d-4057-80f9-61e77e9210c0",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c846b62-11b0-4d8c-b8bf-5efb7c3592ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13748ae7-097c-4b23-b171-e99927073970"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c999a193-1f15-4b00-b33b-3e812774544b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e4f193-83ad-4dac-9ff5-6a9a6029d02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3713fb7f-7075-47fe-a667-bc8b3baa11aa",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16632b9-dd70-4438-94c4-4f5d82f9469c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "66673f50-5233-4d8d-baca-052675f255ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0f99a7b-001a-4cdc-842e-c0bcc028ab6b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34acf928-fd3b-4873-a91c-07bb1fa469f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da3ce69c-9fd8-48a6-abf8-e14d94b98cc3",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f142a6b-9b36-4d3d-b0b4-87ab192f5747",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba66147f-1bf1-47b6-8ae7-6dc41fb8e771"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66e0fcd8-128d-4eef-ab20-ee2175d1449e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d5771ab-af24-4500-8b66-a9431146e775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3b8ed5-a7ba-4435-996a-4e8a2e20de08",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88eece71-76aa-445c-a357-a398a89972cb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885801af-0c7b-467d-8073-34388f7125c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "150057d8-6ac0-44de-8c3c-965a5be1042d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a728a148-f794-41f5-87f7-7394ed5193b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5346171d-768f-4437-ad37-f76cf4932f61",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "867316a5-9b37-49cd-88e0-3acd4f9cc370",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8cc92c55-9253-4226-abed-0ec7c1fe2988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15be7116-1218-48bc-b25e-d772ef6e07b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "059c7c0a-a67b-49a3-b9f1-d346b3a742d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f6f0dff-943d-4f54-8866-2e972273983c",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "492668a3-5433-4cd9-baa6-68e0e9e6d988",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1dac07c-8ed4-4b55-bc90-880e91a1010e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dff5d9c5-c325-4da5-8c65-f14463d568f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e6fcf1f-7a4a-4ddc-a366-40fc598dc949"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f0bff11-aea7-41df-9b0f-119fb3689aae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64e5d935-5dd3-40c7-ad00-d59dbde7fb3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9314cf1d-e68f-41d9-9c43-f871eb3c4e5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1047453-df82-44f7-a3a2-85e4fb1ae58e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96ef869c-987d-4b9b-92aa-d71890e413cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88ea0561-678c-441b-9d6a-35f6e8da52c0",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b011c6d0-ff6d-49af-a2cf-9d2853feb545",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "88112c56-b732-4f42-beaa-595dda9f5e6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0bdefdb-5dce-49a4-afa6-0f24bc79ec5b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f4c165d-20b2-423d-b9dc-18947b1114a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0659e25-379f-4a46-8583-4956c5fbcccb",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d2521a-dc51-4274-9e56-ee70e53cf3cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "715b5965-fa0d-443a-a2f1-9c55a0172028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9db3ac-4827-4bbf-b637-fba7e5f75eca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1927357b-2a68-431d-b626-04422a9b6f23"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7247b430-782d-47fc-8455-fa8cb64e714a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "db763c13-a359-4763-b262-a56b76702261"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d4aad779-75ab-42e4-b527-2d3eef4ffb6b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8fa90104-0d25-494c-83da-cba524550695"
                    }
                  }
                ]
              },
              {
                "id": "442d6649-03c9-4e92-9992-941e46e3523e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a21314a-3269-46b7-82b6-22d931cc2bd5",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419b6302-2d20-406a-9ba6-acf479cb01a3",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "328b56ff-81d8-4d3d-baf7-63c69307b109"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b89e77-ddbb-44fa-8a23-626bb4ab7fdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bc87238-a8c5-4b4c-925d-ee43081bd693"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "02563ceb-a1da-4a3a-b321-5c69c6c7d454",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "015c02de-b162-4d35-83e0-c33dce833c1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6ea75a44-dec1-4d76-a803-ee1576fd7970",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cc8a9cac-c8eb-4b37-8743-c8896b4c161c"
                    }
                  }
                ]
              },
              {
                "id": "a996327b-baa2-4781-8314-f7e751774772",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "bb85b1c1-be9f-4318-8b68-ebed0347e3b6",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d402eca7-0be2-4425-8340-5930c9b4b2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f0251c32-313c-493c-8e29-2982765570c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c54a98-7b18-4e08-a53f-54014e613322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d67ee4f8-e194-4fe7-b970-a648ef562693"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b0294b74-78d6-4013-96c3-21174ac15959",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7a18ddab-fe39-4f35-a4ad-15c000cd5975",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ebf3ad83-42b8-4474-80bc-b1e90dc541a9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "39a07252-997d-4e79-8270-37b53a326955"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "12447c71-ac0c-41f0-8a4a-976d026039bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "fcbb880f-6c27-4c29-a534-92ac192bd7d0"
                    }
                  }
                ]
              },
              {
                "id": "ed23dbc5-f4e4-4c77-a58b-5af9b58e5db5",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d272146a-8ebc-46aa-b832-52f3e3231463",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "5fd6a972-f8ad-4060-bf80-9600b0868c02"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56dadcf5-252f-40c2-a863-d870fa130604",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ee7e31a-ce03-4d78-ba33-07ac4857e268"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ea7adc9-3294-4d11-bbb0-d0ce0967c31f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "6216e6f6-6593-45f4-bc58-38ce79723597"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "519fc8b7-9605-4f7d-8f18-39a05d56303d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "97ff9d85-1f9d-4027-a389-85394105dd3b"
            }
          }
        ]
      },
      {
        "id": "afa8661b-42f8-45ff-9f1d-d400656df54a",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f85443aa-af90-421d-b14f-3a875758075b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3aa2d67f-7ebe-4658-858a-16bc77fa8fd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ec1248c-e677-4901-a0e1-cc447a382b4e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43ccc403-6324-438c-9c36-476149a20c36",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c1a5b930-5b90-460b-9445-fdd4fec46693"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71e0827c-4038-423b-afb8-bcd226830926",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4fa60187-d3b9-4200-aced-ebb7432bd52f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf029c4d-724b-45a8-9dec-0c447568da45",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c09d67b6-f8bf-4bce-ad8f-9a46bf64169a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0caac704-7ab1-49a0-b526-1bf059da0d67",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ee3b0231-93ee-4b26-b0d2-df278b350598"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "19e3a179-537e-405e-84ea-f554b94bb149",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "da981dd6-9e94-47bd-8f2a-64243b4086bc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "829c7c56-5d5e-461d-a6a7-8828c1d5142c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f9e9b579-364d-42f4-83c0-cd3f07be0b80"
            }
          }
        ]
      },
      {
        "id": "85491852-9a34-483a-845a-b1c19518445d",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "99906482-1911-4742-9021-b998e5e1c47f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "724c2f6a-96f9-4ebd-83b8-62da99910332",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2ee4a3ef-3cdb-4e3d-a645-4e739eea4ab9",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31a60ab5-c806-49d2-a275-c38329fcc400",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e3bb862-1f18-4298-adb4-4d05c163c6ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96d2126-6770-4610-bf3d-3413f839386a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5457412a-6e49-4d15-bc36-b57d0ae24912"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "848188d8-18fa-4654-93a1-61ee7c0cc319",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "33829d4a-5eaf-4c83-a5d4-6e50a23f323a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9892124-a984-4ed5-b5fd-cb405c476c62",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf1e744e-0a44-4f18-b000-696466c904dd"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7ab71721-6106-495c-a632-e42424d615c4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3cf53776-c1b1-4fe8-9c55-17b320967c4b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b1ded2c0-22fc-41bb-98ae-fa66ec7cbd59",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c470ee11-8dbc-4c13-8b9e-6517bb2375a6"
            }
          }
        ]
      },
      {
        "id": "105fb40f-1a6e-4d89-8d78-753bae3bd519",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "1a7df5b6-2c5e-43fe-95f5-6ac9b08f30de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2be09eff-e3ea-4253-87d0-538f2b21df6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d0366d64-c78d-41da-a6f1-ff5d4a5ea309",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a270b187-d9ac-48ab-b0f2-f7119fb07bee",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "72373fdf-c898-43c5-a7de-c1a8224f0009"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "08facb8c-f40b-4ac9-95da-8bf0eb50aaa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b509b0c2-36d1-4c5c-9f7d-9ea3fbc88503"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9177f9e2-6bb8-4ddd-b7b5-31b0a310ea8f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff27b3a6-bf17-4ae6-a267-0ccedece0e06"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dec40f6a-3d49-4760-826f-657548af01a1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b6eb5650-2bae-4085-981c-c2d467a7211b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "247c1d5a-3b54-4757-8cb8-e4ec33c8dda0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "331568ff-b13d-466e-b2d3-175fa39a8d35"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2e787791-dd5e-412f-9fa5-7aae564fda82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8e5b58b1-44f1-48b9-8792-00ed4d29d82c"
            }
          }
        ]
      },
      {
        "id": "169d872f-2484-4eb9-9ac7-5ef7961430a8",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3c6ab45-5290-4bde-be24-0b5fd9afa9b8",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f917fe0b-b9dd-4eda-abcd-07c83d6f33f9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "3bf50e9e-f586-4547-bda5-d43e1f1fed02",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df56cdea-3405-4b7e-92a6-8f152c7d600e",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d5d89dff-b029-4dd9-a5f2-201d7e687599",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 10
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 116.26666666666672,
      "responseMin": 8,
      "responseMax": 3494,
      "responseSd": 339.907664104473,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706056627112,
      "completed": 1706056669698
    },
    "executions": [
      {
        "id": "c298717e-6523-497d-9919-234d4518c594",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6dbbff34-b012-4cd3-869a-0bcfd0c008b9",
          "httpRequestId": "42ac438c-d044-4ed8-a555-bc8d7a82dbbb"
        },
        "item": {
          "id": "c298717e-6523-497d-9919-234d4518c594",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "374d00df-804d-4c72-b5e1-d87988882dab",
          "status": "OK",
          "code": 200,
          "responseTime": 53,
          "responseSize": 0
        }
      },
      {
        "id": "a48a02a2-3e76-46b1-aec5-cd85e54d4d48",
        "cursor": {
          "ref": "41cea48a-9340-460f-85d6-4e4145d9698e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "3c500ffe-253b-4796-8baa-407e1520c062"
        },
        "item": {
          "id": "a48a02a2-3e76-46b1-aec5-cd85e54d4d48",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "48681d6c-e541-4b67-96a0-7392c38b9615",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "e7d8aba1-09bc-44bc-8d10-36afa5dad5c0",
        "cursor": {
          "ref": "94b78509-c1b7-4c74-a865-cbb9e8a83d79",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "35461f0b-e100-426f-b3fc-498a63591aa6"
        },
        "item": {
          "id": "e7d8aba1-09bc-44bc-8d10-36afa5dad5c0",
          "name": "did_json"
        },
        "response": {
          "id": "f7c2eb0d-10ca-452c-95fd-47e0249c8b69",
          "status": "OK",
          "code": 200,
          "responseTime": 592,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26980d7-a669-4d46-bea0-781d04f5303a",
        "cursor": {
          "ref": "18b36463-e991-41da-8576-a296a32dd4f4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2913a3-a843-4233-b51c-172b36eca35d"
        },
        "item": {
          "id": "a26980d7-a669-4d46-bea0-781d04f5303a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9abda8e-863e-411d-a8c2-033ad9d0f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a26980d7-a669-4d46-bea0-781d04f5303a",
        "cursor": {
          "ref": "18b36463-e991-41da-8576-a296a32dd4f4",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5c2913a3-a843-4233-b51c-172b36eca35d"
        },
        "item": {
          "id": "a26980d7-a669-4d46-bea0-781d04f5303a",
          "name": "did:invalid"
        },
        "response": {
          "id": "e9abda8e-863e-411d-a8c2-033ad9d0f673",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6f8568d-9570-4290-8a85-426956654468",
        "cursor": {
          "ref": "6cefa137-8a2d-48c6-ae0d-67888dbe8fd1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a8248d19-245a-4485-b790-b4598f9f1dda"
        },
        "item": {
          "id": "a6f8568d-9570-4290-8a85-426956654468",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "ad7d8654-b183-4934-b569-c09b0babfcb1",
          "status": "Not Found",
          "code": 404,
          "responseTime": 117,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b017469d-4947-4a08-b418-488023e8b287",
        "cursor": {
          "ref": "b8bfb632-8840-41a8-984d-ecbdf53d908b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c5faf696-a1f5-4f76-9daa-3008c279e017"
        },
        "item": {
          "id": "b017469d-4947-4a08-b418-488023e8b287",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "5ebc40ba-c8a8-4c9e-9e7e-6235c5220031",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b389f9-7b34-4f32-a9df-0079080c865f",
        "cursor": {
          "ref": "8a4d8edc-0833-4783-8c6e-90a042d26579",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "d4db4b90-4896-4878-8a13-0c05fe845d04"
        },
        "item": {
          "id": "b1b389f9-7b34-4f32-a9df-0079080c865f",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "8f363dbf-0033-4a5a-a557-5b466896cdc6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99962164-fa21-4581-8821-c2cd12562757",
        "cursor": {
          "ref": "a4671a32-5007-4739-bb90-269509602015",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f1e71b5-32a8-4054-ac1b-2aec04e52441"
        },
        "item": {
          "id": "99962164-fa21-4581-8821-c2cd12562757",
          "name": "identifiers"
        },
        "response": {
          "id": "d79a57e3-fd91-4188-9d21-1346ca486b2b",
          "status": "OK",
          "code": 200,
          "responseTime": 305,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cf1831e-a661-49a2-bd41-e0d2beec133f",
        "cursor": {
          "ref": "26b8187c-56f8-4bed-97f0-ac4523530312",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "8b6bb0ac-b094-46dd-a106-18f82332d7f0"
        },
        "item": {
          "id": "4cf1831e-a661-49a2-bd41-e0d2beec133f",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "a50a90eb-2b20-4847-9193-9590a094b317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6bdb306-6037-4be7-9e6d-9e4bf5e0513f",
        "cursor": {
          "ref": "659cfcf2-f1a5-4e09-83b9-e9f3648c9b89",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "38bfd915-d54c-4c5c-9784-4c6d1944feef"
        },
        "item": {
          "id": "f6bdb306-6037-4be7-9e6d-9e4bf5e0513f",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7f6cb16a-5062-4137-9ed9-96619b1dfcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd2ce967-ab8c-44cd-8bc4-8bd2c11c83e0",
        "cursor": {
          "ref": "3b0c1e1b-1312-4658-8ca5-79ad894277aa",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "ebc755f8-33a1-4441-8caa-d6ee174e2538"
        },
        "item": {
          "id": "cd2ce967-ab8c-44cd-8bc4-8bd2c11c83e0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "c362fe76-ce9b-48ed-8500-f3ea630d1ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "affa1a59-d891-4862-85f5-8a8f4829c714",
        "cursor": {
          "ref": "7ca3d953-59b7-489d-90f9-1c9d05f6925b",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "ab4f20ae-ee80-45a1-87f3-b420e6a8cbd6"
        },
        "item": {
          "id": "affa1a59-d891-4862-85f5-8a8f4829c714",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5952f4fc-ab43-446a-bcaa-ce3c66551342",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ab54d1d-c024-44c3-a695-8ffe5682960d",
        "cursor": {
          "ref": "bd95c94e-52be-48ca-829d-bec6bf68c265",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "186ccfc6-1a3b-4b17-be39-60b19ec6844d"
        },
        "item": {
          "id": "2ab54d1d-c024-44c3-a695-8ffe5682960d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "db487feb-a334-41a6-997c-b7cbef6cb732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd39e36-7c83-4132-ba14-a5de55fcef2c",
        "cursor": {
          "ref": "6d763b68-ae54-4788-91e1-a8899b6f7490",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "55cfc280-63e4-48d2-a66d-d653ca6f9c65"
        },
        "item": {
          "id": "5cd39e36-7c83-4132-ba14-a5de55fcef2c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "3e65674a-4539-4b77-b1fc-4d9c67f0a210",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "170a399c-c65a-4820-b0d8-e786f4057f73",
        "cursor": {
          "ref": "c342a4ad-5e28-42a1-b342-a1fc2a7bde08",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "8856ebac-6b18-4ae3-879c-696290975662"
        },
        "item": {
          "id": "170a399c-c65a-4820-b0d8-e786f4057f73",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "28bf9dbc-c7ca-4f07-bc07-46f3b3f0b1ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c669efe-923e-4834-bcbf-865ab86edf26",
        "cursor": {
          "ref": "cffbc0b8-5076-4c1a-8a1c-4602c8d7ecd3",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "0086e125-59e7-44b3-91ec-8c556a52ebcd"
        },
        "item": {
          "id": "8c669efe-923e-4834-bcbf-865ab86edf26",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "0cba5b35-6bc4-4565-8244-b0916b8b7af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a037c0ad-c65b-4e15-b75c-7eb83b911193",
        "cursor": {
          "ref": "dd19c4dc-46a0-4545-a9e0-978e86b4aa10",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "d82300ba-c117-40a9-a7f9-85b3ebd00e1d"
        },
        "item": {
          "id": "a037c0ad-c65b-4e15-b75c-7eb83b911193",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "99e0e4b8-e6bc-4e4f-a517-c49ad17de5f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e24e97a3-5049-47d3-8135-06b91890c813",
        "cursor": {
          "ref": "2996bb45-ab92-4679-b6de-0026556e9ffc",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "1176e131-5128-4856-80a2-b718a2ee7462"
        },
        "item": {
          "id": "e24e97a3-5049-47d3-8135-06b91890c813",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "44fd32af-e9bd-49fb-b915-57ac23fa6c20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e39d30b-d406-4c35-8481-351192ecf592",
        "cursor": {
          "ref": "bde9fcb3-db4c-43ab-af65-8842cc20634d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4d021065-edc4-4d0c-997d-215955983b78"
        },
        "item": {
          "id": "6e39d30b-d406-4c35-8481-351192ecf592",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e4eed4a2-f472-4492-b4d8-758b5bbd9c63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b281ee0a-9c0e-4b54-a185-9b68e479e9c6",
        "cursor": {
          "ref": "48923d95-b174-457c-8c27-bf9c7dc543f3",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "80da01e0-3ce3-427b-a5fe-834c1f34d169"
        },
        "item": {
          "id": "b281ee0a-9c0e-4b54-a185-9b68e479e9c6",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "56a34679-8d8c-4331-80ba-098ef29d3c0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "645a2804-0a5d-4944-aa0c-bb71a4176ee2",
        "cursor": {
          "ref": "afcf5b4c-c2cc-4684-a302-f9f6d9cc082e",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "29622844-f688-4763-b948-e2297d6e2c87"
        },
        "item": {
          "id": "645a2804-0a5d-4944-aa0c-bb71a4176ee2",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "806f9892-5b48-48be-8142-2f06307a32de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd31012c-9ca9-4c7e-8863-6fab6f8819ab",
        "cursor": {
          "ref": "cf10fb6f-90cb-4d2f-9a72-f8f6b7d1be08",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "de67e873-90b4-47fe-9e34-93457bc409f3"
        },
        "item": {
          "id": "fd31012c-9ca9-4c7e-8863-6fab6f8819ab",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "5dcc2855-bd96-44f9-9701-ea6acaa2a1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59cc2790-d041-45e8-9137-e249d6f0c7f8",
        "cursor": {
          "ref": "a09e0c46-c526-4731-b1b5-fd3175189cda",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "87b85869-8a37-4670-b087-d79fa2c6168e"
        },
        "item": {
          "id": "59cc2790-d041-45e8-9137-e249d6f0c7f8",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "6a708999-7bd8-4145-b3b1-7945981ec4ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad9c6052-10f0-4243-b7ea-99755cfb50f5",
        "cursor": {
          "ref": "a7adcde5-a1fc-4a7d-a696-01e83b9d6a7f",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "0398d86d-4646-48fa-bfd0-e05e0a659687"
        },
        "item": {
          "id": "ad9c6052-10f0-4243-b7ea-99755cfb50f5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "f7a65fcb-701e-49ae-b748-3c21758f53e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "480fc5d9-981e-44e1-97db-cfb1db852043",
        "cursor": {
          "ref": "6a9df7b0-c6db-471e-998b-e390e1e45862",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "53656f6f-142f-482e-a1fb-edeb372b101c"
        },
        "item": {
          "id": "480fc5d9-981e-44e1-97db-cfb1db852043",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6029c817-91de-40c7-946a-c991028b3476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3cf2bfc-b698-486d-ab1e-6932a36b9897",
        "cursor": {
          "ref": "872f7c2b-096a-4736-83b2-74b3903ec838",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2458b4ca-a2ca-44df-ad42-0854b4a211a0"
        },
        "item": {
          "id": "b3cf2bfc-b698-486d-ab1e-6932a36b9897",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "ddd42fa1-2bc7-44af-9e8e-240472675a70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e71681f-51ae-4310-a008-2f4c07cb501d",
        "cursor": {
          "ref": "f6846d19-7ec9-438f-960a-c8a839a8bcdb",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "812ea8b8-1970-4d44-b7b0-7a781e8a3ecd"
        },
        "item": {
          "id": "1e71681f-51ae-4310-a008-2f4c07cb501d",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b52f5c44-64c0-4dda-8fb4-1cf86e3a87a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3a6b238-a1d0-4f3d-b65c-8f2e6a4cd9cb",
        "cursor": {
          "ref": "a303acf3-4fab-4728-93c8-3eb8045bd598",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "d6dfdfe4-98db-4970-afc5-175a3337865d"
        },
        "item": {
          "id": "b3a6b238-a1d0-4f3d-b65c-8f2e6a4cd9cb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "dd422aca-ce80-4fad-87de-bf2a57f7e48d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b25796eb-8d14-40a2-a539-ae616e55ec25",
        "cursor": {
          "ref": "18466777-b4d2-4e22-a8cf-5f08c66c3ac0",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "357b58cf-9289-43d4-a2d2-0120c79cc42d"
        },
        "item": {
          "id": "b25796eb-8d14-40a2-a539-ae616e55ec25",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "6d7b7a13-298c-4480-8eae-5c3e91590f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c3fc2-d286-4e78-9063-28fe521aa4ff",
        "cursor": {
          "ref": "fad383b9-8ee4-4d97-8a65-7db2bcd1cba6",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "95201e0b-c9ac-48b5-93c4-37949d8c1c46"
        },
        "item": {
          "id": "3e2c3fc2-d286-4e78-9063-28fe521aa4ff",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bb74f347-6b47-4bec-a6eb-bd8915597317",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d3fbff-6a96-45be-9290-7c4d266cb3e7",
        "cursor": {
          "ref": "cdd65d72-6ae0-43a2-a4bd-35f4d7f62b84",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "038a55da-3957-4628-8ec1-5902e7bbda19"
        },
        "item": {
          "id": "36d3fbff-6a96-45be-9290-7c4d266cb3e7",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "b7a65a4d-da71-4051-92b1-ac8e164d661b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed04080a-f855-4bf0-a95e-f0ceb2a36bba",
        "cursor": {
          "ref": "c43ffc34-97f4-4c84-a899-f15a13a63ecc",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "0c5f3d64-b7d1-4c64-a178-a0158c1226f3"
        },
        "item": {
          "id": "ed04080a-f855-4bf0-a95e-f0ceb2a36bba",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "5d7e3b2c-4e1e-46c7-835f-b0a36f73834e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6373522-54de-4d1a-9943-04b6e42516ab",
        "cursor": {
          "ref": "30b1b4c3-88b4-4d34-a65a-33eb92333ac8",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4551aab9-a27a-4cea-a2e6-de0ba2f81fb1"
        },
        "item": {
          "id": "d6373522-54de-4d1a-9943-04b6e42516ab",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "a4579b07-2fa8-47ff-afe5-3dbb88b0811a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4809df58-bbd0-45a8-be4d-f7f2ad0d5779",
        "cursor": {
          "ref": "181f14cc-f74f-4ec5-99e0-6b9f80fb5ca8",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f7a35135-6d59-4ab0-86e2-c8b2df2b8183"
        },
        "item": {
          "id": "4809df58-bbd0-45a8-be4d-f7f2ad0d5779",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "d69aa1c8-c40c-44e5-b1e9-4ec2be2f22e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25b606b0-b539-4c10-aaec-c62be98e3896",
        "cursor": {
          "ref": "ac85198a-f2cd-4e43-a99b-945956b936d4",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "bd00c6fd-b0a6-4dd4-bb7a-07cd3a813c85"
        },
        "item": {
          "id": "25b606b0-b539-4c10-aaec-c62be98e3896",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "92912d63-5193-40da-88e3-1a019f7ff457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af89f4e3-b114-4af7-b516-66ef5d78696b",
        "cursor": {
          "ref": "b88bec03-6249-4802-ac53-8edc1980d90e",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "62a85673-b12b-41c6-bfde-53d8a529039e"
        },
        "item": {
          "id": "af89f4e3-b114-4af7-b516-66ef5d78696b",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "f8cb1c02-7e5b-41e0-8640-c2f4a5244246",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45ce5eef-edd3-4171-8f74-f1638beef97a",
        "cursor": {
          "ref": "42b849a3-9547-43a4-bb2e-be7e31ace0c1",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "11505fae-70cb-4aa3-9407-702c80e7d549"
        },
        "item": {
          "id": "45ce5eef-edd3-4171-8f74-f1638beef97a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "c64dd6cd-8fd0-4b91-9835-1c342993c926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f015420-8f20-414b-b4e5-75b197ee67e1",
        "cursor": {
          "ref": "8caf8977-202f-4734-b2d9-9769ea439a90",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "fb936c84-ed40-4ffc-99bf-4a0496bc7fa9"
        },
        "item": {
          "id": "2f015420-8f20-414b-b4e5-75b197ee67e1",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "18f5e8a3-8948-4c11-a23e-aed1a2f11449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118fd706-5ff8-4b09-bfdb-f18283623f3e",
        "cursor": {
          "ref": "b7c7c095-a998-43bb-b1b9-e9649545ab12",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c6731b39-9101-49c1-b57e-deffbb7a67d3"
        },
        "item": {
          "id": "118fd706-5ff8-4b09-bfdb-f18283623f3e",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "11df35dc-9533-4093-84c4-ec11dd94dd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a59502c-c3da-4a86-9f6c-5939976823e5",
        "cursor": {
          "ref": "12bc72e8-fcc4-4ce7-9e5f-2157c3d5bfb8",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c8703171-f21d-4f63-a811-cc0ba48928a1"
        },
        "item": {
          "id": "8a59502c-c3da-4a86-9f6c-5939976823e5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "f604f54a-870a-4e47-828e-61c25c492fcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19ca39f9-9794-4d7a-ab22-58c6712e5c01",
        "cursor": {
          "ref": "c2d3e4da-cd71-4015-b425-f5e86801c781",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41f0851f-bf0d-4f59-91ae-b8fdd2b2926d"
        },
        "item": {
          "id": "19ca39f9-9794-4d7a-ab22-58c6712e5c01",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "2d48610c-4acc-4eaa-9c18-cbd1e81494ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ffd458f-8731-49fb-adf4-93cf0b3bea99",
        "cursor": {
          "ref": "e556e65d-ba7a-4226-881d-ac8abdabc6a5",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "d975e81a-4740-41b8-987e-087100427fb8"
        },
        "item": {
          "id": "8ffd458f-8731-49fb-adf4-93cf0b3bea99",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "3dc41c35-d7e4-4672-ab27-98d7b31409ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d9cec9f-9e5b-4ae4-9703-db771b3e1594",
        "cursor": {
          "ref": "d142a570-57c3-47ea-9a31-531a174cb33b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "8087304e-572d-46fa-84b5-12221d576c39"
        },
        "item": {
          "id": "4d9cec9f-9e5b-4ae4-9703-db771b3e1594",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "80df72f2-7f3a-4762-b378-9a796b0ddedb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb36d66-293d-4e27-91ad-8f48f598f7f1",
        "cursor": {
          "ref": "ac77a1cb-5e70-43ae-bac3-680f06fb9eab",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "d6d5b1cd-c469-47d4-8924-e566092b6be0"
        },
        "item": {
          "id": "ebb36d66-293d-4e27-91ad-8f48f598f7f1",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "402dfcbd-4025-40b7-8b1e-57c0f2e59690",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 326,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bed79298-7e6c-4627-8193-ed1b3e284bfa",
        "cursor": {
          "ref": "7c6f8279-b9aa-4145-87f8-d4899f0d2e9d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa5de619-196a-4280-994b-0b37ec128fca"
        },
        "item": {
          "id": "bed79298-7e6c-4627-8193-ed1b3e284bfa",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "38ec3c97-d042-4836-b6a2-3993e5b934b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65b4608-a677-47f4-acee-3a6553c12eb7",
        "cursor": {
          "ref": "84d110d3-c5de-41a7-aa6c-d4fd26b485c0",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "87431183-988c-4aa8-97cc-20983dbdaf08"
        },
        "item": {
          "id": "e65b4608-a677-47f4-acee-3a6553c12eb7",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "3734408c-d3dc-4daf-9ae4-bb712b44367b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4991492-5ea4-4229-8f59-642cd491244b",
        "cursor": {
          "ref": "e0d990f4-c983-4716-9379-1ce7e396748b",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "33527928-51b4-4096-aa05-f5c616435df2"
        },
        "item": {
          "id": "a4991492-5ea4-4229-8f59-642cd491244b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "4d63bfa7-4ea2-4e95-a21e-7cd3d6d5d61b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04edd0e-6942-4c4e-9cce-c771c49c1135",
        "cursor": {
          "ref": "5c358710-2804-47c6-be5b-60bec7f3b5f9",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "29b08eaa-ed70-46f4-91f1-acdd848aab1b"
        },
        "item": {
          "id": "d04edd0e-6942-4c4e-9cce-c771c49c1135",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "63f28d13-de20-41b3-a329-29db2babb229",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a5e2ae-6224-4788-93e1-b49d2f62b994",
        "cursor": {
          "ref": "6817ff3d-1d4d-46f1-adb9-ebe4a75a282e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "2f4c9318-c02c-42ef-91d9-b50b13cd192e"
        },
        "item": {
          "id": "a2a5e2ae-6224-4788-93e1-b49d2f62b994",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e7a459e6-b115-44f1-8432-a01fc9698d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8210375-42d6-4e63-9c29-b6e99cf7db04",
        "cursor": {
          "ref": "7ba2b234-2ec7-4e8e-8a38-927a37b91dcf",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "bf6adb8e-671f-47d6-9b12-0911829d95b6"
        },
        "item": {
          "id": "a8210375-42d6-4e63-9c29-b6e99cf7db04",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "b630b838-339b-4070-a02f-6eea585b376b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4a74ade-4b1d-4fc8-a6b7-69cc80a57ab2",
        "cursor": {
          "ref": "ecc45b35-54d2-4ac3-bda0-aad8f0e15c49",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "eaf0bcaa-54a4-4a4f-9f45-c3f081be4408"
        },
        "item": {
          "id": "a4a74ade-4b1d-4fc8-a6b7-69cc80a57ab2",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "fb8722bd-7cdb-4fac-87a8-4262cfa27ca3",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 328,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d615b766-cd75-4313-b2a9-a57bef4099aa",
        "cursor": {
          "ref": "55e18ec4-2fa2-4a8d-af62-26da9d123cca",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "7c66146b-397e-4efc-8079-50f94d0e40d1"
        },
        "item": {
          "id": "d615b766-cd75-4313-b2a9-a57bef4099aa",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "b9b7cf5c-3786-4e79-a59b-0ef67061b1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5d6b5df-001e-4132-b7dd-c87197255115",
        "cursor": {
          "ref": "9037d671-c1af-40b2-9024-c4e0299987b5",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "5a4a6528-1624-4575-a4a9-5fe9901b0575"
        },
        "item": {
          "id": "e5d6b5df-001e-4132-b7dd-c87197255115",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8c9503bc-c5b7-4b42-bff5-5dc4f3d84007",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98df5f8d-25e3-49df-8d45-f6dc979fd82f",
        "cursor": {
          "ref": "5368027f-2b35-4ac1-8a67-43bd25b2efab",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "7be8299f-5a4e-4df0-b671-5b98e265317a"
        },
        "item": {
          "id": "98df5f8d-25e3-49df-8d45-f6dc979fd82f",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "4466d215-50dd-4e37-9b6c-6faad72dd641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a223580-ebee-4319-bdf7-e2a133339291",
        "cursor": {
          "ref": "1665c101-a5ff-4b2e-a257-bb7758385044",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "a8d3c832-1665-44ee-ab01-52b982d816b7"
        },
        "item": {
          "id": "8a223580-ebee-4319-bdf7-e2a133339291",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "807daf2c-c016-4557-ad57-cea4da2279d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02e8b249-e50b-422d-9a0f-264b8fb78f51",
        "cursor": {
          "ref": "e8cb3c61-ab8c-46bf-bf82-84c4f8b7b9a9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "625833b7-b738-4007-ab40-036f17a2eaf9"
        },
        "item": {
          "id": "02e8b249-e50b-422d-9a0f-264b8fb78f51",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "f9df306f-03c2-4cb0-a431-feb6cbbf34ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f259be24-7ac6-4572-8fe1-df2c8fa69d9c",
        "cursor": {
          "ref": "d0214214-18cd-4ed9-8007-829fafcec3a9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "91f354c9-1a53-46da-a5c0-9f06846efa17"
        },
        "item": {
          "id": "f259be24-7ac6-4572-8fe1-df2c8fa69d9c",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0e0f0340-fd14-4821-985a-7722deda5545",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1c8011-8a98-489e-b18b-2b0afc459871",
        "cursor": {
          "ref": "3879488e-3218-4163-b6d0-b2d7dc8e8e51",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "19016903-e77b-4e86-a533-d9323e1e3142"
        },
        "item": {
          "id": "3e1c8011-8a98-489e-b18b-2b0afc459871",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "cfaae012-a513-425b-bd17-9a00afe36cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab7dba31-12ee-4132-ad51-b9fe87cb2d7a",
        "cursor": {
          "ref": "7f8fdf57-b1dd-4e80-a90c-06227dfca621",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "97c37999-cd66-4ec8-a10e-b3e56a8c3b5c"
        },
        "item": {
          "id": "ab7dba31-12ee-4132-ad51-b9fe87cb2d7a",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "ffedc051-2cb9-4873-a483-c9068d80309f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9be7255-7249-4f44-8d44-9df00c3af350",
        "cursor": {
          "ref": "c2adec90-50de-43b0-ba5d-824f5dca5a98",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "485224fd-5bbd-4497-aa0d-c3cd76379c3b"
        },
        "item": {
          "id": "d9be7255-7249-4f44-8d44-9df00c3af350",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "ef225ede-d702-4e2a-ab56-84e99ebbb86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48908892-e0f7-4675-b2c5-ce34b7e5dd35",
        "cursor": {
          "ref": "5553b97d-293b-4c05-a6bb-8616897943cb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "9468af7c-c42c-41bb-a43d-7e3a9586f384"
        },
        "item": {
          "id": "48908892-e0f7-4675-b2c5-ce34b7e5dd35",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c8f4593e-3c72-436d-a017-e8e5c7b333bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b35b370-83a6-45be-963c-0076d10e9217",
        "cursor": {
          "ref": "06aad602-7767-4e96-a39f-516a800ca5dc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "2769d22f-2d69-493f-b36f-e5ce69b0e9d8"
        },
        "item": {
          "id": "2b35b370-83a6-45be-963c-0076d10e9217",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "121db65d-14fd-4d0d-905d-15ea038bb81e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "043dc065-ae8f-4250-bded-b8e32fb1e242",
        "cursor": {
          "ref": "a2403817-b315-4dfa-a6e3-6a476ce9cf97",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "d4063fb3-67e5-455c-a907-ffced7dcdaad"
        },
        "item": {
          "id": "043dc065-ae8f-4250-bded-b8e32fb1e242",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "6a51a7fa-8908-4a07-a336-f5a3c5a0189c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cb0e0c0-61e8-4b1c-9155-ac6182628bb6",
        "cursor": {
          "ref": "e8261ca7-293a-4b7b-9fc0-a25a998878d3",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "383f035c-8eb7-450f-8d05-0bbc9aea5d91"
        },
        "item": {
          "id": "1cb0e0c0-61e8-4b1c-9155-ac6182628bb6",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d58604f3-f435-48d7-8cb5-f2e93554d44a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c049f1b-309c-479e-9590-9264df5ee264",
        "cursor": {
          "ref": "92104b46-d162-44fc-86cf-dec7b308a74a",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "6167d585-15c2-4085-b303-2a9e02b6c5ee"
        },
        "item": {
          "id": "1c049f1b-309c-479e-9590-9264df5ee264",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "3f6d96ae-6324-4580-82fb-decb281a863d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a2ef88b-02ad-4a12-acdb-b1b81bec77be",
        "cursor": {
          "ref": "d667944e-ab1d-43d1-b0e1-40418c69c153",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "dbd65099-d087-4d9c-b52a-fc84243400b7"
        },
        "item": {
          "id": "4a2ef88b-02ad-4a12-acdb-b1b81bec77be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c56c3912-33bc-4f13-90ac-7c2af32606dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc1f197-9ee9-4465-8d9d-73f7839c6099",
        "cursor": {
          "ref": "b3735627-7a53-4f51-9b85-252a587af048",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "eb668638-e3fe-4911-a87d-e8fba2dbf925"
        },
        "item": {
          "id": "0fc1f197-9ee9-4465-8d9d-73f7839c6099",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "08183f3f-236e-4b54-a4ce-2d26b29636ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bbc30a-1888-4a74-9346-465c11e43ff3",
        "cursor": {
          "ref": "fe82103e-2bfa-46d1-9002-9e6b28075444",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "91c9b724-dd9d-4278-a269-9aace2ef4c73"
        },
        "item": {
          "id": "b5bbc30a-1888-4a74-9346-465c11e43ff3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "73a2f4ad-3929-4f4b-b2b2-c693ceea79f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ea23d97-2b9f-4dc2-96c6-aa16f37879bb",
        "cursor": {
          "ref": "423ea223-9738-40d5-8ab5-deeb42da2108",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "9798a683-d59e-4ca9-af5b-fec6c09956ef"
        },
        "item": {
          "id": "6ea23d97-2b9f-4dc2-96c6-aa16f37879bb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6699eeeb-373c-45fb-949d-75db566af188",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46518f60-7c56-4f68-a43c-e680b9c40340",
        "cursor": {
          "ref": "e1223761-00a5-42e3-a0c4-439d1a322567",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "71222baa-3d46-43dd-97ee-3a7876afe8d3"
        },
        "item": {
          "id": "46518f60-7c56-4f68-a43c-e680b9c40340",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4e6334a1-6df2-46da-8338-151bbcb3a720",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750709e3-4625-42d7-96e4-49b5cb4eac43",
        "cursor": {
          "ref": "6482d093-e88f-4db7-8d39-39fbc94eac76",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "334cc0a8-f1ee-48c2-bfe0-cbf52d912bc0"
        },
        "item": {
          "id": "750709e3-4625-42d7-96e4-49b5cb4eac43",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f5b3208d-4a46-4659-9ba2-27dec61af86b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9a7a76-a0f5-4b52-870a-ff0fbb97f896",
        "cursor": {
          "ref": "da285e1d-776e-4fcd-9ac3-522e0da03f2c",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "033ba830-f994-40a2-88e4-a8f67842509a"
        },
        "item": {
          "id": "1e9a7a76-a0f5-4b52-870a-ff0fbb97f896",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1665143e-674e-46d8-9f2d-07f7313cc165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afbc57ae-abda-4394-a61b-734665da59e4",
        "cursor": {
          "ref": "240fb965-2fe8-4b81-ae9a-bbd7f5cf7279",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "0128f613-3d48-4864-9f81-12f5177d6314"
        },
        "item": {
          "id": "afbc57ae-abda-4394-a61b-734665da59e4",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "ffb0ea59-ca53-450f-b840-2234c7425dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51edb942-fead-420a-a213-8663206ff58a",
        "cursor": {
          "ref": "8b49a9af-a504-4deb-97a9-818bc40596cd",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "7d722c73-2a86-4c97-96d6-091261380704"
        },
        "item": {
          "id": "51edb942-fead-420a-a213-8663206ff58a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "b373aedd-f36b-41a2-a619-cef916e0666a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "213dfa32-bf04-4b1d-9c33-12b59850d974",
        "cursor": {
          "ref": "bd547a92-59ab-42a2-a836-589db6f2ea44",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "56e6a796-510c-4065-98b6-3a59b7e7699c"
        },
        "item": {
          "id": "213dfa32-bf04-4b1d-9c33-12b59850d974",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "89f38b26-9b5f-40aa-98f3-f379dc395a2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "472fc3fb-1ecd-4d17-8bf8-d2a0bda1f2f4",
        "cursor": {
          "ref": "632ca58c-beac-4822-a12c-29857874dbb9",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8db12186-8bd1-4a1e-a65b-cd67c01d284c"
        },
        "item": {
          "id": "472fc3fb-1ecd-4d17-8bf8-d2a0bda1f2f4",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "d71c93d6-2187-4248-8899-6c5b451dc75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2e5fbde-0132-40b4-abd2-b623ec3833df",
        "cursor": {
          "ref": "fe1e6727-fb49-4c03-8ca9-e6ded99f5a43",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "61e03067-cdfb-4e77-966a-77759c07bd8a"
        },
        "item": {
          "id": "c2e5fbde-0132-40b4-abd2-b623ec3833df",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "358281f5-1338-4325-94d7-815c4914dad5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8613bb71-388a-4b37-a191-321b0fb431e3",
        "cursor": {
          "ref": "12c1aa5e-89da-4456-a2f2-90acb0594c08",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c9ab62cc-3511-4b96-913f-20a81ca18b53"
        },
        "item": {
          "id": "8613bb71-388a-4b37-a191-321b0fb431e3",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "32308ec4-dc88-4537-8904-f96bfd167539",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e521747-92a2-4c56-b767-59bb621caef2",
        "cursor": {
          "ref": "f95dcb1b-7082-49d7-b09c-da4c0643420c",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "e976713e-da59-44f3-92c3-94429d33ddc4"
        },
        "item": {
          "id": "1e521747-92a2-4c56-b767-59bb621caef2",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "b0666d35-c62c-4a13-a8a4-6aa3b853376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93bd967e-4977-4aa0-b9e9-b115d488c589",
        "cursor": {
          "ref": "26233dd6-8db7-48e7-8e38-03e24e9b957d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "fb060e52-b9f6-4709-beb4-1cdd5c143333"
        },
        "item": {
          "id": "93bd967e-4977-4aa0-b9e9-b115d488c589",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "fdf25143-c0f0-4acd-b273-b4b30c76bbae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7ee32de-24ba-493c-838e-19623e00d64d",
        "cursor": {
          "ref": "368454a3-8a49-4851-a06e-df7ca8873f9d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "7f1688b8-bbe0-4196-aac0-83ff7eead9fb"
        },
        "item": {
          "id": "a7ee32de-24ba-493c-838e-19623e00d64d",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b8604b7c-2bb7-4107-8a60-854641750557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ecbe92-b76a-4534-84fe-74d9e417287e",
        "cursor": {
          "ref": "e55b2ab4-a031-469b-9015-655c32de9b4e",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "2e773c61-fe30-4b96-a97d-cfa70cfe927b"
        },
        "item": {
          "id": "e9ecbe92-b76a-4534-84fe-74d9e417287e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "a7963222-06ea-431f-a926-3b217fe2434c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87fce360-6591-4d01-9a81-d5718ff7c3f8",
        "cursor": {
          "ref": "60e630b5-1eb2-4209-9ecd-539cdc88d527",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "997725f0-2bbb-41f9-bd63-4d48919937b5"
        },
        "item": {
          "id": "87fce360-6591-4d01-9a81-d5718ff7c3f8",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "4415fb33-ad2f-409f-93d9-2554948486d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17d399f-db9b-4c74-8655-070f8959b94c",
        "cursor": {
          "ref": "8f30d2fd-3928-42d2-bbea-6883af4d691b",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "872e8281-7b5c-405c-aae5-5f7b5d6be69b"
        },
        "item": {
          "id": "a17d399f-db9b-4c74-8655-070f8959b94c",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "e75dc1ee-d658-4acc-ad4d-80d47876bfd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3606ecbb-517d-49bd-b81f-108911eff95f",
        "cursor": {
          "ref": "9acf1866-425d-4ed8-9c2a-b5090f01b45c",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "f37498ef-24d5-4bbc-8b52-b8c7d4243f33"
        },
        "item": {
          "id": "3606ecbb-517d-49bd-b81f-108911eff95f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "664d7d0f-726c-4cc2-b377-74471aeebfff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8b7f410-2871-4e1e-9281-cff3827290c2",
        "cursor": {
          "ref": "43d8c75e-8c69-458e-b865-7e53d5879835",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "46824b2c-8cb4-41a8-915e-42150e18ae31"
        },
        "item": {
          "id": "a8b7f410-2871-4e1e-9281-cff3827290c2",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "dc19763a-1580-4eb2-bc38-57277a2c7b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44d24e49-a17f-496e-bf5a-7e10b0cc7c3c",
        "cursor": {
          "ref": "33cb5025-78c8-4011-b0d4-9e34edacbe9c",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7d22ab2a-7480-4ac7-8066-4d4ed78cf3cc"
        },
        "item": {
          "id": "44d24e49-a17f-496e-bf5a-7e10b0cc7c3c",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "268fa73b-face-4eac-92ab-89538cb3bf68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3347e4-351c-427d-abf9-18cdf0378ea6",
        "cursor": {
          "ref": "05cda35d-3a8f-4a7b-8723-eac122307631",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "c346d785-a0c5-4053-a39e-ad7eb0c7b660"
        },
        "item": {
          "id": "2d3347e4-351c-427d-abf9-18cdf0378ea6",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e18c5108-5d5b-48c1-9d6a-b2df1c8962d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98a0f48-4260-40c4-9c8e-a9225ec6877f",
        "cursor": {
          "ref": "f63a1bed-8888-42df-ae31-d4f21dc73132",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "7bc9247e-4d29-4fbe-a029-659407b43168"
        },
        "item": {
          "id": "f98a0f48-4260-40c4-9c8e-a9225ec6877f",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7a52e82a-7c82-4086-83b6-f0e1f146bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff88555f-03b0-4364-ba59-b9a76564ad13",
        "cursor": {
          "ref": "3a24f73f-6590-42f8-a999-2844663289fb",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "5964b1b3-99a6-4faa-b3a9-99106f96d4b2"
        },
        "item": {
          "id": "ff88555f-03b0-4364-ba59-b9a76564ad13",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "e635962d-be2f-46a2-87e7-1c8aa1ed08a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd202410-4c9b-4f3d-842d-353198b6497f",
        "cursor": {
          "ref": "d9b12048-35a5-4a6a-83d8-20a1eb333d5c",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "67807f0c-e40d-484b-ae58-07c0c7773ad5"
        },
        "item": {
          "id": "cd202410-4c9b-4f3d-842d-353198b6497f",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "eaabb659-71ee-483a-baa1-9a066f06eb69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95ea065-e509-474d-872d-dbedbc8f7a2f",
        "cursor": {
          "ref": "2aafdc8e-68ff-45ff-a212-6164ede4eefe",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "88972885-fd2c-415c-a543-520be739188b"
        },
        "item": {
          "id": "d95ea065-e509-474d-872d-dbedbc8f7a2f",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "ec6c4e39-4f2e-4d94-903d-490996e7d485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc060e19-53bb-44cc-ac5c-b836ae885838",
        "cursor": {
          "ref": "3ff3a725-f87d-4f5a-8e9e-780e74069c36",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fc5511b9-df14-4cbb-af26-9f4df7fe7253"
        },
        "item": {
          "id": "fc060e19-53bb-44cc-ac5c-b836ae885838",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "fa7c9859-b638-4232-b35c-7275a1d523d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ba074d-0459-4b86-8310-26cc37374f82",
        "cursor": {
          "ref": "2aa50dbf-2b9c-4cb4-812b-5daa41479d87",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "308b904c-7296-4ebd-8ed4-8bb55ba81c13"
        },
        "item": {
          "id": "88ba074d-0459-4b86-8310-26cc37374f82",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "063a6c4c-8dd5-4137-ac4f-4f71c10a4edc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3950ab67-b853-4795-9989-cb6706f04e25",
        "cursor": {
          "ref": "1fddac24-f338-44a0-8455-9c3068b97f82",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "6bbaa5d9-5528-4d6d-9353-ad987512f696"
        },
        "item": {
          "id": "3950ab67-b853-4795-9989-cb6706f04e25",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "beccb04d-90e8-4e62-8c96-1f7b78752def",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9085f6b3-a579-4fd4-9bc4-b4cd9e5f93ee",
        "cursor": {
          "ref": "94881247-8ce3-4ab5-8f6b-d87d693062dd",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "230192f9-6071-435f-922a-1bb0efb20c84"
        },
        "item": {
          "id": "9085f6b3-a579-4fd4-9bc4-b4cd9e5f93ee",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "5d666bf5-c35f-4aa4-987e-7ba30dd27575",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07b26fa9-5d38-4e75-b196-eacf53901225",
        "cursor": {
          "ref": "3790d74d-92c9-4a3d-80f9-fcd630ee4d47",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5854c7d4-d0ca-4f99-a083-09cd2ca4ccee"
        },
        "item": {
          "id": "07b26fa9-5d38-4e75-b196-eacf53901225",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "aa4b060b-00d4-413e-8a66-69ce483b99d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5e5ecd6-89a7-4206-acc9-d0f9034f2299",
        "cursor": {
          "ref": "c2a79298-7117-453e-a3ad-c9c852ddb8ad",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "31390a4e-70f3-465b-b54e-a0b63090e217"
        },
        "item": {
          "id": "e5e5ecd6-89a7-4206-acc9-d0f9034f2299",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "99f31f78-b3c0-48c6-ab99-75afa8051548",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8d637a-ec83-4453-b17d-4bbe2b9d1003",
        "cursor": {
          "ref": "560ee048-1431-4b0b-a73e-2be9adc6bd52",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "170e74f6-841a-4748-9f86-0652314179a7"
        },
        "item": {
          "id": "ce8d637a-ec83-4453-b17d-4bbe2b9d1003",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e2071e21-e006-4f49-a6da-dd34baa504db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa9c9e1-de0e-483e-9ada-a73e362aebb1",
        "cursor": {
          "ref": "bb8353d8-e827-44cd-a4c8-86d88241e8b0",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "d298b9df-9240-4fcc-9bbc-cc5c88ce5387"
        },
        "item": {
          "id": "8aa9c9e1-de0e-483e-9ada-a73e362aebb1",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "402f2f49-aaaf-416f-8213-12a9ae874d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c140e698-ed3d-4546-942b-642f0b7400db",
        "cursor": {
          "ref": "1df4954d-145b-49de-b38b-59a2ab12815d",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "2d56b083-20a3-464b-b84d-f59f82b4994b"
        },
        "item": {
          "id": "c140e698-ed3d-4546-942b-642f0b7400db",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dd670b1f-c561-434d-bddf-666cf43d999a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 55,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7337c665-be5a-45d1-95ff-4a4633c1f139",
        "cursor": {
          "ref": "93ccc985-5c5e-45d9-b276-39516abb7116",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "3c4e5182-9ff9-4c32-bd17-0c99260b20cd"
        },
        "item": {
          "id": "7337c665-be5a-45d1-95ff-4a4633c1f139",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "56dc65e9-d2d3-452f-bd8c-79d7693ce0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "698499c1-b66a-4bc9-b032-bd131cbabb7e",
        "cursor": {
          "ref": "8c75078a-bbab-4032-9547-5016ca46514e",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dbc7b915-a252-4780-9005-c7c1784bc1e6"
        },
        "item": {
          "id": "698499c1-b66a-4bc9-b032-bd131cbabb7e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "aa4873bb-6011-461c-b6fa-8ebc4fb72f5c",
          "status": "Created",
          "code": 201,
          "responseTime": 3494,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc77a261-1e56-4f5e-af9c-dbeb357c12fa",
        "cursor": {
          "ref": "f8e26b8c-fe03-4391-ad19-8935a9278cdf",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "5776e404-59f8-41a8-a1b5-8409ed723cae"
        },
        "item": {
          "id": "dc77a261-1e56-4f5e-af9c-dbeb357c12fa",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "bdbee8aa-c831-4380-b321-edb5a9735ac1",
          "status": "Created",
          "code": 201,
          "responseTime": 2121,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "a561ea8a-05eb-451e-af73-e7a0184e5b93",
        "cursor": {
          "ref": "76254811-2344-4ca8-9cc3-7cff6b1f2cf3",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "0a0c9f9d-cd27-4608-9c68-0260e0defa17"
        },
        "item": {
          "id": "a561ea8a-05eb-451e-af73-e7a0184e5b93",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "04c4145d-e81f-4b8b-bf80-c73a687b4ae3",
          "status": "Created",
          "code": 201,
          "responseTime": 2187,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "69303df9-2785-4c2c-95e6-f99d726dfb8a",
        "cursor": {
          "ref": "962b15eb-40ab-403a-aa12-de8b0d88574e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "6c720569-066d-42b5-893f-a9feb314b94b"
        },
        "item": {
          "id": "69303df9-2785-4c2c-95e6-f99d726dfb8a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "8550e074-1fb2-4f83-856c-ffdd0a21601b",
          "status": "Created",
          "code": 201,
          "responseTime": 2235,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68de72c-d106-490e-875f-ee953e098762",
        "cursor": {
          "ref": "87b62637-0939-4ce4-87ce-066909585db8",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "31e7cb47-2cb2-4315-978c-42567701cb0f"
        },
        "item": {
          "id": "f68de72c-d106-490e-875f-ee953e098762",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ec4fe1f9-6a6e-4fdd-bdec-1405749fb769",
          "status": "Created",
          "code": 201,
          "responseTime": 2145,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdde2b4-e512-4d67-821f-8599d59c5fa2",
        "cursor": {
          "ref": "f4a04187-ec42-455c-b72b-a17d8f613e08",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f25ee473-cc42-44da-8123-a48c66461fe9"
        },
        "item": {
          "id": "5bdde2b4-e512-4d67-821f-8599d59c5fa2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "38106b6d-0fbd-41fa-8c02-06ed4c9f266e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "f70b2bbc-a0da-4dcb-9685-9a6b20e84ff4",
        "cursor": {
          "ref": "80bd37a6-7242-4d67-a696-2b6672b7171f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "0f5395ab-66b3-4736-a656-cadcbe6e060e"
        },
        "item": {
          "id": "f70b2bbc-a0da-4dcb-9685-9a6b20e84ff4",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8a3bb883-b98e-4483-97d2-162ac4479453",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5cebd16-7dfa-452e-abf8-e1c4ca7da6c6",
        "cursor": {
          "ref": "90dc8828-559b-4d35-a94c-f339d224be96",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "da78d072-ec2a-43bc-bb74-523e90ea51ff"
        },
        "item": {
          "id": "f5cebd16-7dfa-452e-abf8-e1c4ca7da6c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "774ac98e-5cf8-403e-8d6d-c032428bb0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9e31c0-d2ac-42ae-9e1b-af9b764c0615",
        "cursor": {
          "ref": "c3d18793-948e-4fa6-865e-f111b5e8fcd4",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "da2b691c-4f77-4e7c-ab27-b98503fca9c0"
        },
        "item": {
          "id": "9d9e31c0-d2ac-42ae-9e1b-af9b764c0615",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "6aefff2f-16c7-4014-837f-8f3208aaf922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212ed056-cffb-450a-a983-521f779e5bc5",
        "cursor": {
          "ref": "967e4010-835a-4c2d-a4aa-aba305671552",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "58feff4d-d025-4465-9985-552073eba3bb"
        },
        "item": {
          "id": "212ed056-cffb-450a-a983-521f779e5bc5",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "247956d0-066e-4bad-ad8a-f5e35097208e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c480e56-9fec-419c-9a1c-431497cdc48f",
        "cursor": {
          "ref": "5824b6b4-9b05-4424-aa40-ba7bb74f2913",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "30553036-bca0-44d9-a359-b355fa878099"
        },
        "item": {
          "id": "5c480e56-9fec-419c-9a1c-431497cdc48f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "6ff37c07-c498-4c0b-a49a-f86f49c0feb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413c678b-59e2-4423-9104-f4f9ad8c1da1",
        "cursor": {
          "ref": "7e64401c-7497-41a8-ba7d-d44aec5bc3d8",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "0548feec-34e6-4691-9d5c-25b6dc482275"
        },
        "item": {
          "id": "413c678b-59e2-4423-9104-f4f9ad8c1da1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "370a24de-18a0-45e8-9e8a-7a728ad15665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0aee725-c8be-4f6b-9e25-26347cc60063",
        "cursor": {
          "ref": "128a3aa8-7b49-40f1-a532-d07e89426443",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e6063088-0feb-42e1-8bde-8882a107f208"
        },
        "item": {
          "id": "a0aee725-c8be-4f6b-9e25-26347cc60063",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "6d726495-9de2-47ef-a86b-3e4190dc19e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6926c15b-1f68-42cb-83f1-18b0ca6dadfa",
        "cursor": {
          "ref": "27bd1c3b-4c68-403b-b419-274679796f79",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "f5febf2d-44d0-471a-8537-0d6bc1c4233e"
        },
        "item": {
          "id": "6926c15b-1f68-42cb-83f1-18b0ca6dadfa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "984e9c64-ce2b-47c6-9689-aab803251fab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76e9f053-76a1-4bb9-818e-e71649bd5759",
        "cursor": {
          "ref": "731f9b18-5404-436d-9645-edbddca6db46",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "6e909e39-a5d2-48eb-be66-8f8cf2c4f115"
        },
        "item": {
          "id": "76e9f053-76a1-4bb9-818e-e71649bd5759",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1c8bffe2-cb11-4264-b811-f3e693205349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640fa02c-d0f9-4263-bbfb-33251c732806",
        "cursor": {
          "ref": "ab918493-ea61-4d86-b10a-61c23f0f50fe",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "e9bf62f9-bc9d-4086-968e-239647724e5d"
        },
        "item": {
          "id": "640fa02c-d0f9-4263-bbfb-33251c732806",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "53700ce7-0500-43ee-82f0-5c474b0ad98d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "451dad41-e9ae-45d1-ab4e-28b4de8f0a3d",
        "cursor": {
          "ref": "66d465b9-6b6e-4078-ab9e-acaea4f66613",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "6b4f6615-a833-4f3a-8f69-74f3840ba6de"
        },
        "item": {
          "id": "451dad41-e9ae-45d1-ab4e-28b4de8f0a3d",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0330635c-6f41-4035-9c7c-3bc759a9aaef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caaff0ee-eaa5-4ed1-b385-7ef3c2e7f449",
        "cursor": {
          "ref": "7cbc71cf-200e-4bfd-b427-e94af8bbf7e9",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "aef62bc5-9aa4-4609-af90-9dd3ea85b19b"
        },
        "item": {
          "id": "caaff0ee-eaa5-4ed1-b385-7ef3c2e7f449",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "12ac9a11-1b1d-4256-a349-b23dd662a7c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 414
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2411143d-a5d2-4bc6-a2bd-afd09a1571be",
        "cursor": {
          "ref": "643b81ce-bc92-42a8-90a1-edbb1670bcf1",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d212ac53-5bc9-4b7b-ae7d-0cc14b9bc837"
        },
        "item": {
          "id": "2411143d-a5d2-4bc6-a2bd-afd09a1571be",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c14452a4-bfbe-4bd8-a82f-83904dfb9aa0",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 124,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:121)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a79218f-f3ca-45e2-bfa0-2c41f64bb96f",
        "cursor": {
          "ref": "5e4866a6-5620-469b-ad63-c3b860b5684c",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "607c4498-5a1a-4bac-993e-e8fef9dd1b43"
        },
        "item": {
          "id": "6a79218f-f3ca-45e2-bfa0-2c41f64bb96f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "2a5f3267-731e-4d75-8ea2-6ff5a9d98183",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44ab9dac-1fab-4a5d-9e5a-c536d001713d",
        "cursor": {
          "ref": "ba332997-e96f-4692-ad98-f9eec1bbf143",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "3bbbf629-c62c-4847-adcb-206f2c12c24a"
        },
        "item": {
          "id": "44ab9dac-1fab-4a5d-9e5a-c536d001713d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "a600022e-e52b-4f21-bdf7-aa7843df5c3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721feef7-9819-4b5f-bed9-21289f848664",
        "cursor": {
          "ref": "5590f887-fc40-44ef-811e-fea81f7ca00b",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b99cc45a-1c5d-4181-8e9f-d8adf1e49796"
        },
        "item": {
          "id": "721feef7-9819-4b5f-bed9-21289f848664",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "87c7f6bd-5ded-481c-8e41-e171100c87ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96f48837-55f8-433e-9d78-06ec4438deb9",
        "cursor": {
          "ref": "19414fdd-ce6a-4938-8717-c99f7ad7aaac",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e8c4d66d-5ca1-406c-99fb-6b3a7039f6a0"
        },
        "item": {
          "id": "96f48837-55f8-433e-9d78-06ec4438deb9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "397ee6dd-f4dd-4b99-839b-2601030227b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f4a56d-f6cf-49c4-b4d0-d46725da246e",
        "cursor": {
          "ref": "1f739a34-0b24-481d-8955-3794ab3fc72e",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e834ab9d-6f54-491c-a54a-49e0e37d943e"
        },
        "item": {
          "id": "67f4a56d-f6cf-49c4-b4d0-d46725da246e",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e5bfdd6c-370a-4a41-801c-c1f491b69926",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 426
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcefbfc8-b786-4dd0-b837-7b401e0dd5fb",
        "cursor": {
          "ref": "51d15a5d-086f-4ef2-b296-1ee6a38c06e6",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "7c28b9f3-43e4-4b71-b7d2-dbafe2bd6812"
        },
        "item": {
          "id": "dcefbfc8-b786-4dd0-b837-7b401e0dd5fb",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "c39ea5c2-73e6-4e3a-869c-86f3747c3a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f69a56d-b700-4d41-af1c-4b1697a79c91",
        "cursor": {
          "ref": "7db6f746-e434-4953-b566-a6c7dc710390",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "7bc05b16-a4e1-4a9a-8313-2ccad056def1"
        },
        "item": {
          "id": "3f69a56d-b700-4d41-af1c-4b1697a79c91",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d4d4a7cd-f357-4a65-942e-a777ef3740ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5416e6f5-d0d2-4ef8-9cb3-09b26a9e56f1",
        "cursor": {
          "ref": "e0edf17f-e373-4ccd-aead-49392414a05d",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "8202b929-3709-46a9-a105-f68824bb775a"
        },
        "item": {
          "id": "5416e6f5-d0d2-4ef8-9cb3-09b26a9e56f1",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4ff1438d-ecb6-4ce1-a95d-464d913879bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "476dbf3a-d3dd-4009-97b1-2e85e65c505a",
        "cursor": {
          "ref": "f2a53db8-e98e-467c-8f6a-9ae82e8e307c",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e42bd21-c072-4424-bd64-536572c639c7"
        },
        "item": {
          "id": "476dbf3a-d3dd-4009-97b1-2e85e65c505a",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "119cffe5-fb6b-4009-87a1-0e5816f73c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73abd931-fc15-455c-83bd-ef3d0c5d7721",
        "cursor": {
          "ref": "8b82a871-8247-4a48-b9f3-171cb159b7ba",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4905ad45-de97-4458-aaa4-32e05948f825"
        },
        "item": {
          "id": "73abd931-fc15-455c-83bd-ef3d0c5d7721",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "9c3256b1-a605-4f12-b779-80428b477004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45af7da6-a3db-4d33-9557-cb02307e7c0b",
        "cursor": {
          "ref": "a7564fb3-f591-44a9-9b30-fc1307ab639e",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "d479ed8e-c36b-4bc7-8f8c-fd9dd40671da"
        },
        "item": {
          "id": "45af7da6-a3db-4d33-9557-cb02307e7c0b",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b84e79e2-6083-4c32-bae8-f6a8172db0a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "670da4ef-f4f1-4553-b84f-3efe17e4107d",
        "cursor": {
          "ref": "536588af-568d-4dd6-9e63-f72a7e6bbeeb",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "9d403c47-e15b-4a23-a91d-e812e0c9a2ea"
        },
        "item": {
          "id": "670da4ef-f4f1-4553-b84f-3efe17e4107d",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "08171ec9-b3ad-4615-914b-50ddb1ce9fc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be3a4b47-8e1d-4a31-9062-8b0c3dcceb93",
        "cursor": {
          "ref": "eff0d180-3022-4b82-955d-0bc810ba6ec6",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "5d61f35e-4041-4446-9899-09454417c9ff"
        },
        "item": {
          "id": "be3a4b47-8e1d-4a31-9062-8b0c3dcceb93",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "85c2211e-ef1a-4d5f-9235-554b2cfbd3b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77a0dd68-3c75-4cae-b67d-1e750efba427",
        "cursor": {
          "ref": "fdcdc404-7d86-4115-b56d-bf8608536136",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "770f8935-c250-4c81-b088-f427bb61e3c0"
        },
        "item": {
          "id": "77a0dd68-3c75-4cae-b67d-1e750efba427",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d2712bfb-76dc-4ca0-89b6-05b6bbc8a712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddcc71a8-d783-4316-8f84-332a146e7945",
        "cursor": {
          "ref": "f412f7c9-9c3a-47af-a72b-ed888de5a080",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "469570cc-01eb-4e55-97b6-b12243b1d85a"
        },
        "item": {
          "id": "ddcc71a8-d783-4316-8f84-332a146e7945",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ec094c8e-87a9-435e-a255-8340e17bdeaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07239d28-aec1-4d03-9cbe-8c1406562edd",
        "cursor": {
          "ref": "a6338967-5936-45a8-9247-dc489e569c88",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6beaf220-a742-4325-9865-4fb516413e58"
        },
        "item": {
          "id": "07239d28-aec1-4d03-9cbe-8c1406562edd",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "181e71cd-58dd-4cc8-b33d-837b4e2e9dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 752
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2050b9-704a-4fa2-8a00-1470f1965b7f",
        "cursor": {
          "ref": "5c854b8f-e7ae-474b-bd95-820cd4b885fc",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "fddaf40f-79e0-4d83-873b-19afd818ff4b"
        },
        "item": {
          "id": "ed2050b9-704a-4fa2-8a00-1470f1965b7f",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "b8f4f6a0-9213-4240-911a-d792e28fc8bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 755
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3cd660c-b084-4e56-ade4-8c7c38764c06",
        "cursor": {
          "ref": "811bd8fa-e210-4b0d-9816-35d19d26ebda",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "a84510ea-26a9-4ba2-bf88-4d4a2dcf09a4"
        },
        "item": {
          "id": "e3cd660c-b084-4e56-ade4-8c7c38764c06",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c9d53d28-e5d1-4a38-8dea-4fa6fa463b8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5160e87f-bb6f-4122-9e2e-3615219441d3",
        "cursor": {
          "ref": "256cdd9e-a2fe-445d-a699-452f4944d380",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a611f309-fe80-4d62-a1bb-07c3f31801cd"
        },
        "item": {
          "id": "5160e87f-bb6f-4122-9e2e-3615219441d3",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "3625dad5-6a1b-4872-a6c9-4a7593542649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4db2bec-27c6-43c2-88da-9fee756388e3",
        "cursor": {
          "ref": "9d272c14-82ad-4b6e-acf8-1b34ffa2b94f",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "a61bfdbe-f1d8-4f6e-96a6-f5406942e85c"
        },
        "item": {
          "id": "a4db2bec-27c6-43c2-88da-9fee756388e3",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "810eb312-d2ea-44cd-8d6b-e5f94d3838b1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 58,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78baa06f-a7f3-4307-9b47-8a0310cd0c45",
        "cursor": {
          "ref": "b14a4d9e-725c-45b6-9c5b-334352c3b490",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "a5e2ff61-5f83-4cd4-bd3c-4f901e8568cd"
        },
        "item": {
          "id": "78baa06f-a7f3-4307-9b47-8a0310cd0c45",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8ee04f10-71b6-400a-b56d-47ee805a0656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abac3d62-7eef-4e11-8ac1-0f53eb719fac",
        "cursor": {
          "ref": "54413922-ee73-486e-aaf8-c65c1d6d4637",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "c9d4be6f-d293-4d92-b12f-5886f0d89d1d"
        },
        "item": {
          "id": "abac3d62-7eef-4e11-8ac1-0f53eb719fac",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "43afbf52-f1ba-4168-be51-0de6ce379c3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee3c31b-3e19-449e-b1da-ccec2b2d4ac2",
        "cursor": {
          "ref": "4a51c532-dae0-4dba-800f-73cc39326d62",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "d9aee3fd-0ded-4893-9e76-7b4caafbb1c1"
        },
        "item": {
          "id": "1ee3c31b-3e19-449e-b1da-ccec2b2d4ac2",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "37b05657-15e6-4822-8aa7-c16355ac6460",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bec1f8e-059a-4e60-830a-bb9897007fc7",
        "cursor": {
          "ref": "50456d0a-e106-4433-b4f2-e8d043a13e10",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "8ece5093-b022-44a8-b1d3-afca6771682a"
        },
        "item": {
          "id": "1bec1f8e-059a-4e60-830a-bb9897007fc7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d57bc82e-a6ca-4b7d-82b8-dcfe27e1815d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11427410-248b-40a4-aa3a-4ad3313aff75",
        "cursor": {
          "ref": "90446fab-71cd-409b-b6c1-dcf65feb9f93",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5a6fd09d-421b-4c2d-b552-75b412526a1a"
        },
        "item": {
          "id": "11427410-248b-40a4-aa3a-4ad3313aff75",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "734a1c55-73cf-47ad-b2a9-436684f07e6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77d647f6-da5f-406b-97d9-f13702b0a8ba",
        "cursor": {
          "ref": "4afbdafe-8ae2-47b1-87fa-2c3a590a4ec0",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b06851d6-587d-45d2-ab2f-b07749e1316a"
        },
        "item": {
          "id": "77d647f6-da5f-406b-97d9-f13702b0a8ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0dd8432d-890e-451f-9efb-d0f140051f8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b5d4491-a83f-4ce5-8cdf-dad29af320a2",
        "cursor": {
          "ref": "de6c4009-8daf-4d2e-832c-bd5ccfd381b0",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "8f37e0f2-860b-45f5-b7a0-d401227c5feb"
        },
        "item": {
          "id": "8b5d4491-a83f-4ce5-8cdf-dad29af320a2",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "3457c8b1-c917-407e-9853-684fc19cdaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a00fe62-e14e-45cf-b590-a52bd0c42e33",
        "cursor": {
          "ref": "6b6bbd47-cd18-41db-acb4-560c639968c8",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "451b8d71-1383-4cf1-bdeb-a1049bfe1675"
        },
        "item": {
          "id": "0a00fe62-e14e-45cf-b590-a52bd0c42e33",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "61c7ba94-1c3c-4623-9aca-42efe6f7d1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "054ea68d-db72-4e7d-925a-7aba67c5da97",
        "cursor": {
          "ref": "443485b7-0811-4542-b96d-d0002b08d03d",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "a554e32c-d183-4df0-8832-be14e38271b2"
        },
        "item": {
          "id": "054ea68d-db72-4e7d-925a-7aba67c5da97",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6e23de21-0230-41b6-81fd-c06f6c489f61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 390
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9131e2-7a07-4c57-9e0e-a2c07863cfcb",
        "cursor": {
          "ref": "57f390ac-36c0-4ae3-be3b-8476e53fd8df",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "fc69f04b-410f-4fdb-ab4f-4fc02c4d4225"
        },
        "item": {
          "id": "6e9131e2-7a07-4c57-9e0e-a2c07863cfcb",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "835f20f5-092b-4c8e-8c29-c8ece4855eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 392
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3811dbdd-6849-45fb-96d1-ed9eec7ec0d9",
        "cursor": {
          "ref": "ea78c023-5c3a-4940-aab0-28751af09006",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3755fe3d-8e61-4e07-a91a-28665ebc189e"
        },
        "item": {
          "id": "3811dbdd-6849-45fb-96d1-ed9eec7ec0d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "94b684a4-5573-4bc9-b55f-245bf636ec19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b71011ee-39fd-4ce5-aafd-c42c2ccdf1e6",
        "cursor": {
          "ref": "0f760c5e-f28c-4f09-98c9-9dc438487be3",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "64804f7d-3ea5-4884-abd2-6afcf624cf4d"
        },
        "item": {
          "id": "b71011ee-39fd-4ce5-aafd-c42c2ccdf1e6",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a3b6df9e-06c9-46dd-b12d-3736b18992bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0a9274-345f-440f-901d-693355124ddc",
        "cursor": {
          "ref": "31434d6a-0ae7-412d-8797-18eead1571cb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "3ddfbf8d-a624-40ce-b712-3b843e051eb2"
        },
        "item": {
          "id": "0f0a9274-345f-440f-901d-693355124ddc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e0ceed27-968e-4641-a260-7ff8960f21c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e686ca-e5e3-4452-a18d-2240fbbf0479",
        "cursor": {
          "ref": "132a5467-0131-4cea-934a-92d1a47ee93a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6756f7d9-8abd-4fcc-92c7-cbb39d902d47"
        },
        "item": {
          "id": "09e686ca-e5e3-4452-a18d-2240fbbf0479",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "863ecbe3-a952-47d1-9f6c-dee873982a97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3feb0915-63a9-464e-8f09-a1a98e10aa99",
        "cursor": {
          "ref": "23756d21-f909-4f57-922f-707b20fcb518",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "170636ce-e922-4664-8e35-74dd69f385c8"
        },
        "item": {
          "id": "3feb0915-63a9-464e-8f09-a1a98e10aa99",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4173f6bb-7cc1-423c-98c0-67a263fc87f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 405
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d9cb800-1fa9-42e6-abec-81893782eafa",
        "cursor": {
          "ref": "d93e6214-7755-4237-9064-04d642600401",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "65b01abb-ae43-41c3-b922-5d8d03ef5124"
        },
        "item": {
          "id": "5d9cb800-1fa9-42e6-abec-81893782eafa",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "a35cc60b-5e59-4295-9f65-4bffc3680020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c68f03c-d4b0-49da-8edc-588c388db73a",
        "cursor": {
          "ref": "ccf04b2f-0dfe-4892-b70b-812df7c7e911",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "cd3b370d-e0e9-4a7e-9203-e1ee2909b2a3"
        },
        "item": {
          "id": "6c68f03c-d4b0-49da-8edc-588c388db73a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2b166995-3892-4595-8841-fffd85010326",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 404
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "939fe73d-05d3-455e-ab66-14213975833a",
        "cursor": {
          "ref": "d28c318c-1e5b-4589-88bd-f67874406c32",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7752ce9d-0301-4da9-9da1-15d756cc3e40"
        },
        "item": {
          "id": "939fe73d-05d3-455e-ab66-14213975833a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0f7ed0a3-c6d8-458b-ad75-7a564fa0133a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 421
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e65bfca5-4df6-4933-b018-fb11858098aa",
        "cursor": {
          "ref": "bfc74a01-cf92-44e2-b853-a00602695142",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "09d6cc2d-0292-4173-9b40-551f529668c3"
        },
        "item": {
          "id": "e65bfca5-4df6-4933-b018-fb11858098aa",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7200cc89-9ea6-4e46-abbc-01141045333c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 451
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c083245d-6959-45e8-881c-1f2949995172",
        "cursor": {
          "ref": "17d859ea-6212-4388-a27e-321fbabc0bef",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8bb3aba7-75e2-4e37-a65a-7b3363d8b8f7"
        },
        "item": {
          "id": "c083245d-6959-45e8-881c-1f2949995172",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "64ff7300-da75-4707-b704-c776a2da1710",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 791
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "692c0b47-b789-44d6-9409-05f62d57840f",
        "cursor": {
          "ref": "412a0c05-d76f-4711-a4e3-432d831e4b63",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "166cfe5e-2781-4a45-a452-1f06252790b7"
        },
        "item": {
          "id": "692c0b47-b789-44d6-9409-05f62d57840f",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "fd992e37-1474-455b-87ee-28167df5175b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 744
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46200e79-cea1-41ad-bc57-6cdd36645016",
        "cursor": {
          "ref": "620dcb6e-ea92-4dd9-b8d8-818ae132aa46",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "70363961-c5fc-48df-80c2-75c4f6e52d3d"
        },
        "item": {
          "id": "46200e79-cea1-41ad-bc57-6cdd36645016",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a630029b-9169-4692-8771-68905922b4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a75c2a9-a71a-4949-b53f-d42bbbe60dcb",
        "cursor": {
          "ref": "5bc3b01f-18e5-46ca-ad02-1a876ca76288",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9230ba65-3ca2-40ee-9e2f-47a52a2ccc24"
        },
        "item": {
          "id": "6a75c2a9-a71a-4949-b53f-d42bbbe60dcb",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "8fab1849-cc29-4c38-958d-80e009d11257",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 743
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1f2c10e-a010-4d92-8b56-968683e397fa",
        "cursor": {
          "ref": "4bdc11ac-c499-4bd0-9a72-b07ecf2024ea",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "c3473d86-a798-41d5-b035-d5666c1ee9eb"
        },
        "item": {
          "id": "c1f2c10e-a010-4d92-8b56-968683e397fa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4aab449e-86cc-47af-9c6f-ce3a93f70a1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e8ba4e5-5d75-4358-9c92-8f3a70504465",
        "cursor": {
          "ref": "7e80392e-becd-4a62-a55d-4a64a451e63d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "38e8127b-a650-4306-91d0-8332d67ccb5c"
        },
        "item": {
          "id": "9e8ba4e5-5d75-4358-9c92-8f3a70504465",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "0937635b-824f-4e2e-a1be-37f445d9e3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 515
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5f94583-a2b9-4c8c-b596-8e28fb1c61d2",
        "cursor": {
          "ref": "f5b5ef24-1ba5-43a6-afbe-eefd00873bdc",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "3fc853d8-867d-4049-b6fb-38e66df157dc"
        },
        "item": {
          "id": "d5f94583-a2b9-4c8c-b596-8e28fb1c61d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "bb4a531c-2d9b-4ed0-9186-ab1386b50f3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 790
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3126c1ed-148a-417e-b78e-583d86bad016",
        "cursor": {
          "ref": "12bd624e-4e53-4978-8217-fbcdd5f6a885",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "1639eae6-cf5b-430b-ba04-847e96d058ac"
        },
        "item": {
          "id": "3126c1ed-148a-417e-b78e-583d86bad016",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "dedd8861-bd10-4251-8e89-c9c23a448de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "946e3820-f0d2-4dad-98ef-be195db268e0",
        "cursor": {
          "ref": "dfe761ce-a034-4944-95bb-b87aea929af8",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "d5fd1465-acea-4520-ad42-0c76b50822df"
        },
        "item": {
          "id": "946e3820-f0d2-4dad-98ef-be195db268e0",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8d5abc89-67fe-4f42-93c1-81f5723a2ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1070
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a07ab1-6dab-4c8a-a94f-ba7aae94993f",
        "cursor": {
          "ref": "5ab6be3a-4203-4a43-8220-83a2f0e36162",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "7c79f102-1f9e-4471-85d7-638856114f7c"
        },
        "item": {
          "id": "37a07ab1-6dab-4c8a-a94f-ba7aae94993f",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2cf4dd84-0229-42e1-987c-4f40d9e26456",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1066
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47110c6-28f2-48ab-a4e9-39a552af9176",
        "cursor": {
          "ref": "3efd29fa-ad1d-46b1-8f40-0830caca671d",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "a8335f13-25eb-45ee-80b0-215b38171627"
        },
        "item": {
          "id": "f47110c6-28f2-48ab-a4e9-39a552af9176",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7d4d6d57-0a08-4445-9846-07a5b95b3082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1069
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6db76c14-2d2f-42c1-9dc7-b171fc01e22b",
        "cursor": {
          "ref": "8d271147-e349-4b53-88e8-3e5f4bcc84ab",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "c90f9326-ca60-4b3f-8fe4-b46f2a1176df"
        },
        "item": {
          "id": "6db76c14-2d2f-42c1-9dc7-b171fc01e22b",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6a028ed3-0a0a-4ceb-ae04-c464a67b9657",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1067
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51507acc-2ac5-4e98-a2fa-08be4874e6db",
        "cursor": {
          "ref": "cc029be6-6bfb-46bc-9c57-bae70721ee1e",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3221a7bb-778a-49a5-8ee7-6311548e5716"
        },
        "item": {
          "id": "51507acc-2ac5-4e98-a2fa-08be4874e6db",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "18f25dd8-af89-417b-84db-b227467fa513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efe38c27-9ffc-4e67-874b-6a4f04c5847b",
        "cursor": {
          "ref": "cf9a735e-ab2e-4289-aa98-4303ece06d29",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "7357ed30-d490-4ce3-823c-8b3309eeedfc"
        },
        "item": {
          "id": "efe38c27-9ffc-4e67-874b-6a4f04c5847b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "aa345b68-f08c-4eb3-8700-714f7a45b915",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "041ef938-3841-4ec6-9473-638761d723d3",
        "cursor": {
          "ref": "2d93556d-f894-419a-95ee-9233b1bb955f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "58c9e2b7-f609-4b45-8294-08cea5694a2d"
        },
        "item": {
          "id": "041ef938-3841-4ec6-9473-638761d723d3",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "924db54a-71ed-469a-bac8-37d67d23a521",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "271bd791-e1ed-4b8a-b280-4be20b2529ae",
        "cursor": {
          "ref": "e0d70e88-29ab-41f9-b65b-6d4c7526e5f2",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fa15b4d3-6bfd-4a43-a2df-7d3aa14f9364"
        },
        "item": {
          "id": "271bd791-e1ed-4b8a-b280-4be20b2529ae",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "4718c154-d77d-49b6-b1c3-f47815d70b42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22b90ebe-4fb6-4c5c-bd88-b1f8c68c3af1",
        "cursor": {
          "ref": "a9ead09e-0735-4730-9803-bb0c808baaf8",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "02397ddb-7e4b-459b-a378-a5e7f56ffcf5"
        },
        "item": {
          "id": "22b90ebe-4fb6-4c5c-bd88-b1f8c68c3af1",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "e12df3fd-9050-4507-a074-457b0ad3122a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 536
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a35bbea2-2fa1-4e8f-b6ea-905fd99692cc",
        "cursor": {
          "ref": "e96af955-dc2f-4d28-867f-c86469257750",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "62127e1e-a23f-439e-808a-dc756d06d2ef"
        },
        "item": {
          "id": "a35bbea2-2fa1-4e8f-b6ea-905fd99692cc",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "962d7013-6ea3-4307-9a3a-a57c08ff23a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 534
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459fade2-8a97-48f9-8155-6ae0d2cd9d57",
        "cursor": {
          "ref": "6ab914b1-7bd9-4ee4-979d-647e7754ce54",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3dc48636-551a-450b-afd1-ce7da43f90fb"
        },
        "item": {
          "id": "459fade2-8a97-48f9-8155-6ae0d2cd9d57",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "758706ab-d251-4322-84e1-0a77f11a55b7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 75,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9e041fb-f42a-45e4-8b56-fd871f2092b9",
        "cursor": {
          "ref": "97f47d1d-22d2-4a8a-8ad3-d22fb32a0a69",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "1a46a53c-5881-4a4e-ab86-cd9737fc4787"
        },
        "item": {
          "id": "f9e041fb-f42a-45e4-8b56-fd871f2092b9",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "819b6969-85ea-4588-9917-7a0cc885a276",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8664c7ce-db32-48d8-82ae-e959d235be05",
        "cursor": {
          "ref": "415d38dd-78c5-4c62-ac11-6a2cfdae1214",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "98549fa1-35ff-487c-a313-a7cdadda7c41"
        },
        "item": {
          "id": "8664c7ce-db32-48d8-82ae-e959d235be05",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e9be5c06-05b2-4d97-ae4b-ad79e661cad8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a153ba1d-4964-4c84-9466-65a5d20200b5",
        "cursor": {
          "ref": "e17645e7-1f06-493f-bd34-dcb3747f57bc",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "56c49ac0-5c34-42c0-9f1c-9d360929af7d"
        },
        "item": {
          "id": "a153ba1d-4964-4c84-9466-65a5d20200b5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "122ddd3f-85f2-485f-88ad-12c06c6658af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbfd8c2-e693-4ddd-9ad2-276296af5713",
        "cursor": {
          "ref": "b5325f40-50f8-4880-8ddb-aeb7d190b803",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4726492a-c9c8-40a4-a879-f1baedc14089"
        },
        "item": {
          "id": "cdbfd8c2-e693-4ddd-9ad2-276296af5713",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "357df5f1-bd4e-4657-9985-dc730c11a4df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7441a875-c29f-4697-9133-a3baac5f686d",
        "cursor": {
          "ref": "a874cc88-461a-4fee-b198-ff7d1b729744",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b06edf5e-e713-41a9-87fc-3dd1abc96c02"
        },
        "item": {
          "id": "7441a875-c29f-4697-9133-a3baac5f686d",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "01d4020d-f879-44ae-ad29-db2455525953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ec5356-b6b9-4531-b4bf-f9957abac9a6",
        "cursor": {
          "ref": "8fe6fd69-a270-494a-bbec-0b893032bd32",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "ac824055-b922-4726-a771-a87ee7cef7a6"
        },
        "item": {
          "id": "f6ec5356-b6b9-4531-b4bf-f9957abac9a6",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "3f292b8f-3f17-4b15-943b-0a093decabac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51af8142-9d00-49b2-8f14-47bb400b9993",
        "cursor": {
          "ref": "edfc1178-85a3-47ec-a9c8-b19693701004",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "e4e458b7-84bd-40ee-8a7e-afb3c56c1ac7"
        },
        "item": {
          "id": "51af8142-9d00-49b2-8f14-47bb400b9993",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8ab5891d-0d09-4db9-8900-d56b70c76762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18fc8f0b-5958-4adf-a6f0-80e337377bca",
        "cursor": {
          "ref": "0a744e65-b458-42c7-a0c9-474f6ea20285",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "84901ed6-2c95-42bb-ab63-2423b6874b35"
        },
        "item": {
          "id": "18fc8f0b-5958-4adf-a6f0-80e337377bca",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "333d0c24-1d13-4e45-b1e0-15eaf651a8e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a1dbac-2550-48d4-ab7b-12ee4ae9d62f",
        "cursor": {
          "ref": "8888a01c-c385-4da1-8026-0b958fb2ef0f",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "87812dba-a4b2-48e2-be0e-a72f20c4f9b1"
        },
        "item": {
          "id": "37a1dbac-2550-48d4-ab7b-12ee4ae9d62f",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c4151ddb-b3a9-4e95-8053-88a7f03f4f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "492907b0-d5cf-44c7-91bf-7dc91de02034",
        "cursor": {
          "ref": "e1313446-4d5a-4804-b099-aa63c79d72ec",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "0285e807-7997-4665-ba57-9cafb5548c81"
        },
        "item": {
          "id": "492907b0-d5cf-44c7-91bf-7dc91de02034",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "76a28704-0f3c-472e-984f-e2a42ca77240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bd496b1-b08f-4970-9ea6-8d2093f60e30",
        "cursor": {
          "ref": "32f9edd6-2d56-4d71-b78a-5ec73ce2dcae",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "1700accf-576e-4ca6-9b13-c13f663a0988"
        },
        "item": {
          "id": "8bd496b1-b08f-4970-9ea6-8d2093f60e30",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "dc204900-e84c-4e3b-8194-8ab1ff8db1bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaea42c-c7f1-4db2-9a8a-c2e5e8555201",
        "cursor": {
          "ref": "7d3cc9a0-d73f-44e0-96db-bdde539b42a5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "edfbded7-2888-4e76-a633-fea113dc307e"
        },
        "item": {
          "id": "feaea42c-c7f1-4db2-9a8a-c2e5e8555201",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "47769776-dfb7-4c5b-85a8-ec70dc381b6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17f62375-471b-49e6-bdde-9a6756c6c717",
        "cursor": {
          "ref": "32b4ec8f-437f-4869-ac89-46db1bf57b44",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "caab3187-43c4-4e3d-940c-1392fc4f759b"
        },
        "item": {
          "id": "17f62375-471b-49e6-bdde-9a6756c6c717",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a5afe9ac-d19d-4574-b0b2-41c02a8fc3cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2a89dca-ef25-4e7f-8302-9dca1ede3735",
        "cursor": {
          "ref": "37131d89-1d47-46aa-b4dc-f2812a832791",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "dec78ca8-117c-488a-8609-0bb25f824100"
        },
        "item": {
          "id": "e2a89dca-ef25-4e7f-8302-9dca1ede3735",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5e70a65b-4604-46cb-94d1-918718513a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da21d9e6-608a-452a-bd51-077f6fe70b8b",
        "cursor": {
          "ref": "e6f81e94-67ba-454b-9c81-87ae9ac2373b",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "b783316a-9bf0-40af-b498-255dffc1e580"
        },
        "item": {
          "id": "da21d9e6-608a-452a-bd51-077f6fe70b8b",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "0c9854ce-acae-4fef-b4b7-c9e47d334e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04bd8e10-4b07-4fb1-90ac-2c1fdc0c0404",
        "cursor": {
          "ref": "86660152-7bcb-4ade-aaf4-3c74b2e4f868",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "3e84564e-f0f5-4919-b4b4-69c17e21f907"
        },
        "item": {
          "id": "04bd8e10-4b07-4fb1-90ac-2c1fdc0c0404",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "5c264105-e769-4f83-ac8f-68d5f849e615",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e90d703-a8c2-408e-a615-3163ab45e26d",
        "cursor": {
          "ref": "015e4a71-8058-4361-99f2-59ac6dbe3010",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "36e5bbbb-565f-4ae7-9282-25448818f323"
        },
        "item": {
          "id": "4e90d703-a8c2-408e-a615-3163ab45e26d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fe7cf1d0-331f-43b4-a7ea-1b4bb3b53387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013367f9-81ff-4adc-a452-a96702d1367a",
        "cursor": {
          "ref": "72f07a3a-e81c-4f38-a8b6-546c23091634",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "c8b6beb3-0225-452b-84d6-feb2f9370752"
        },
        "item": {
          "id": "013367f9-81ff-4adc-a452-a96702d1367a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2f96e476-7538-4e19-b967-f8d9b64890d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcbbe7d4-f144-4321-89af-e27aa9d6422e",
        "cursor": {
          "ref": "1cbd4e26-d335-4403-a6e7-be52ad58940e",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8c32ac22-38b9-479b-9bba-799b1d648f20"
        },
        "item": {
          "id": "fcbbe7d4-f144-4321-89af-e27aa9d6422e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "ac06142f-fd66-48c4-9fa9-d4a4e33dc4f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c15ef88-6a86-44ee-8e8b-262382b803c2",
        "cursor": {
          "ref": "992b3766-9849-40cd-82e5-47812d657e72",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "26881cce-821d-4f7f-999b-195038de0901"
        },
        "item": {
          "id": "0c15ef88-6a86-44ee-8e8b-262382b803c2",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "44dcc68b-1c43-442a-9502-222536d59b16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd724b70-9147-4870-859c-57950564fe75",
        "cursor": {
          "ref": "b86a1616-2146-404e-be1f-61c86b98044d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "051f3ce6-d993-428a-92a1-cab3dce572a6"
        },
        "item": {
          "id": "fd724b70-9147-4870-859c-57950564fe75",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "702b6070-69ef-4a85-9003-24c9491c1b1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ed12b7f-fdfc-40de-a3e5-3f675e2954d8",
        "cursor": {
          "ref": "ea0cf645-bf2d-41ed-bc35-7cdb21b96238",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "d5a2b9a0-a85f-432b-b065-c35cc1923b3e"
        },
        "item": {
          "id": "7ed12b7f-fdfc-40de-a3e5-3f675e2954d8",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4b0f4970-b3c8-4847-8858-aeff1d6c3472",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed9ad5f1-8d2e-4872-9a50-143f1e2829cf",
        "cursor": {
          "ref": "d0a8106a-aa04-4d14-8bb7-05b7136822c5",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e8d176fa-cf66-452f-a84f-cbd55ea95ba4"
        },
        "item": {
          "id": "ed9ad5f1-8d2e-4872-9a50-143f1e2829cf",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "a6551678-69b2-4627-9ee4-1ea0c6425e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39914c34-1ac1-4b1c-8683-c778625cc3e2",
        "cursor": {
          "ref": "03e7bccc-4bf9-4039-8683-84a9c487b0d7",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "d3c14838-708d-4626-8d03-0a09e18b2739"
        },
        "item": {
          "id": "39914c34-1ac1-4b1c-8683-c778625cc3e2",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "48ca3818-6aa3-438a-8b14-7059d32e6186",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99a0c7c6-9705-4474-aa91-d41bf93e6c8f",
        "cursor": {
          "ref": "a55c28d3-256f-4db6-8d52-a82dcb44468f",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "f663ad3c-8597-44a6-baa5-5ce9c0b70059"
        },
        "item": {
          "id": "99a0c7c6-9705-4474-aa91-d41bf93e6c8f",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "521348ab-740c-45ed-b610-11f3efb53cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f001e66-5212-4a9e-8b1f-362ccdc72e4f",
        "cursor": {
          "ref": "fee4e9c8-3a57-4bd6-9c41-ecb397c6c8fe",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "9fc97301-05cd-428e-ae80-45bd9197f53a"
        },
        "item": {
          "id": "6f001e66-5212-4a9e-8b1f-362ccdc72e4f",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "14e7273c-a866-4f0f-ac99-c295f1f85746",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a44257cd-cd43-4655-9e17-1358b29a45b6",
        "cursor": {
          "ref": "d1c954f0-3635-47b8-92b8-effed9d8c200",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "43053657-b1a6-41fc-9560-e1afc4e7445a"
        },
        "item": {
          "id": "a44257cd-cd43-4655-9e17-1358b29a45b6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "ce8d557e-e4b5-406f-b05a-067b6a1dece5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7746bd71-4924-46d5-854f-c846179c820a",
        "cursor": {
          "ref": "f62b7150-0e2e-4060-82ff-55d624d60f5b",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "d73c0744-3deb-496b-b559-5df0c93ac453"
        },
        "item": {
          "id": "7746bd71-4924-46d5-854f-c846179c820a",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "92a2aaa2-ad3b-4e1e-a52e-2173e0d2da9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bf51e3a-6a8e-4135-8e24-3e3a81160b69",
        "cursor": {
          "ref": "cef1ba07-3997-415c-a152-3967c64c13de",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "0cd7c066-3d97-44eb-a6e0-03c55a60ede6"
        },
        "item": {
          "id": "1bf51e3a-6a8e-4135-8e24-3e3a81160b69",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "9f39305a-84bb-44a0-b78c-0b4f6308f4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600d0c30-d08c-44f4-a19e-fd95d1448dc4",
        "cursor": {
          "ref": "a28bdc1e-eb6f-4d85-a91b-4c312b61fb56",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "6c498f88-d48c-488b-b7bd-3d8f3ca73c40"
        },
        "item": {
          "id": "600d0c30-d08c-44f4-a19e-fd95d1448dc4",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "ff0d79a6-791a-4535-9d5a-345f49786f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e286cba-2910-4ffd-96ab-25a563a05f24",
        "cursor": {
          "ref": "63661ca4-1d3e-46ef-893e-cbbe51852c02",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "06575265-b754-41d1-ab18-c9b1baa5845f"
        },
        "item": {
          "id": "8e286cba-2910-4ffd-96ab-25a563a05f24",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "970a0b2d-bc55-4f31-8a85-1f8dc0b0ff1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab8a58df-8501-40f9-95da-83fbe3c39c31",
        "cursor": {
          "ref": "f5f29d5a-5f9d-4603-834c-2aa4faba0429",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9b10c440-12fc-47a9-943d-5acc2c4f7ffe"
        },
        "item": {
          "id": "ab8a58df-8501-40f9-95da-83fbe3c39c31",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "b749394b-3d45-409e-afbb-696f90ff1b1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c70d86-828a-4bfa-9cd5-31d4c4f332c6",
        "cursor": {
          "ref": "bb3c51b1-2448-42ec-bbae-ee395649767f",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "592fc357-992b-43cd-84e5-ce1f7c7108a9"
        },
        "item": {
          "id": "a8c70d86-828a-4bfa-9cd5-31d4c4f332c6",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "52b08306-6f3f-4ae7-bd4a-99b9b10c9697",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3080bc50-ef50-41c1-8e51-88301484d28c",
        "cursor": {
          "ref": "bd314f00-a274-4bbf-a4bf-21b1c4aad87d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "14bdc7e6-f1dd-4bc2-bb06-2a126e708e54"
        },
        "item": {
          "id": "3080bc50-ef50-41c1-8e51-88301484d28c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "ea82b904-d494-4022-ab54-8ceb981ff355",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94116bef-8f06-4c31-b749-5d1be810ce80",
        "cursor": {
          "ref": "3a949250-6c9b-49f6-8452-a2c4e351995c",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "45eabce0-15e6-405b-9e12-200fd29ff1df"
        },
        "item": {
          "id": "94116bef-8f06-4c31-b749-5d1be810ce80",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "61661a34-3a99-4af2-9a2f-3b1e18cf08fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ed07c0f-3c45-4772-a81c-8f60ef61984f",
        "cursor": {
          "ref": "cd285eaf-2500-4b95-8992-6b7198d47071",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "d1696297-2b3a-46a0-8f92-e755ad422cc2"
        },
        "item": {
          "id": "1ed07c0f-3c45-4772-a81c-8f60ef61984f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "d780f36a-f510-49a9-9132-7fc0001a60ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90c854ca-5421-49a0-b19d-a93c24e462a1",
        "cursor": {
          "ref": "93bcd189-9a63-488a-9f31-914c52737857",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "135198d3-2ee8-4258-90c1-6774c3c5f5c1"
        },
        "item": {
          "id": "90c854ca-5421-49a0-b19d-a93c24e462a1",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "87eccb08-5a1b-4cfa-bafc-7086f7060393",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a08722d7-ff49-4d70-a912-fa0234da7978",
        "cursor": {
          "ref": "a024ba52-4c9c-4e91-9deb-272d7f805096",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "9e36ed45-fe5f-4325-bad0-c5c3eca815c5"
        },
        "item": {
          "id": "a08722d7-ff49-4d70-a912-fa0234da7978",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "6812cefb-6cc3-4399-908a-0362a7ccc4cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f14a0517-ffca-4181-917f-78b660fa3aa9",
        "cursor": {
          "ref": "c15cc5e3-cfa2-4c98-8c05-64cc04828500",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "d68063a3-ee88-4cc3-8997-a07ad01ba04c"
        },
        "item": {
          "id": "f14a0517-ffca-4181-917f-78b660fa3aa9",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "1ec59a4d-8421-4bd7-ac77-a6af96053e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9f3752f-19e1-4d20-abee-70e055a07822",
        "cursor": {
          "ref": "c3a53fa5-ccf9-419d-9472-a729a7ad249f",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a41c5d74-c267-4a20-aef5-16f89e83ee62"
        },
        "item": {
          "id": "b9f3752f-19e1-4d20-abee-70e055a07822",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4930a4f3-c8fb-4893-a09f-0b08f0b16ab7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0767db72-e719-4f74-89cb-415a87833b81",
        "cursor": {
          "ref": "aca05f05-29be-401e-ae2c-bacfd3ac7f9f",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8edc6c52-c2b2-4698-ba22-e19c4e31c2a1"
        },
        "item": {
          "id": "0767db72-e719-4f74-89cb-415a87833b81",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "129f9269-67be-4138-bc9d-3492d5d1f1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1c8b757-7a29-42b4-9619-7cb82c4f02dc",
        "cursor": {
          "ref": "6aafbe32-d368-4533-b097-7e01830a64fd",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "7fb280b8-6f2c-4632-bbc4-bbf815977894"
        },
        "item": {
          "id": "a1c8b757-7a29-42b4-9619-7cb82c4f02dc",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d532ba3d-ae41-4a2c-a994-d4597cac5766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf1863e-0270-4094-a4b6-572e3ed6b234",
        "cursor": {
          "ref": "a1ca5d0d-5a08-46db-8d81-ed6b9405819c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "95d608a6-4415-40b6-8313-8753334cf4e5"
        },
        "item": {
          "id": "2bf1863e-0270-4094-a4b6-572e3ed6b234",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "77ea1893-5b10-4d39-a4f8-fbb3c75697ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2002e91-4713-4e92-af82-bb712a397b6e",
        "cursor": {
          "ref": "01bd0feb-918c-4421-9f07-0d085141edef",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1f48d67b-29fb-4da8-8a55-4811c6a93421"
        },
        "item": {
          "id": "d2002e91-4713-4e92-af82-bb712a397b6e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "5d5a346c-612e-4f36-89c9-856ac290e000",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9034a01e-df13-447c-9566-8680c904ade4",
        "cursor": {
          "ref": "ed80aec6-51ac-42e9-aea0-ae043f637700",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "cb22c3fb-6915-4b8f-90a0-082a8f3c0bc6"
        },
        "item": {
          "id": "9034a01e-df13-447c-9566-8680c904ade4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "4f737a33-8db5-4dd7-a02f-215bd2e2c174",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "675dce7c-d663-43e4-b256-02be023a0140",
        "cursor": {
          "ref": "1d021d66-e506-4b1a-99c0-1b7d8c522370",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "16a0c284-59a5-4719-a4e5-58d2416affa8"
        },
        "item": {
          "id": "675dce7c-d663-43e4-b256-02be023a0140",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "b8d1a521-6bdd-48fb-ac94-bd07072bfdc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "863b6e70-81c5-46cd-a5fc-d7871c804988",
        "cursor": {
          "ref": "6d6c25f9-dd8c-4153-9eb2-ab4168dcec2d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "60d3e1f3-dbec-4e41-93a7-7b81db34ff67"
        },
        "item": {
          "id": "863b6e70-81c5-46cd-a5fc-d7871c804988",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "7bb8a3c3-4b97-41fd-8f5b-fcabccc04bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9f7f0fb-49e7-4d6f-897e-8fbc276ee0f6",
        "cursor": {
          "ref": "f8345817-fa5c-4472-bcbf-0dfd6fe942d8",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "5738d05b-f341-4f7a-8462-26387a9784c0"
        },
        "item": {
          "id": "a9f7f0fb-49e7-4d6f-897e-8fbc276ee0f6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ab62ed49-34e2-4d7e-b319-c38dc3a6f3c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a04a9029-ed53-4b6a-8f91-1eea55945db8",
        "cursor": {
          "ref": "4ec1996f-89be-451a-b6ef-ea125cf69a0f",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "0879be40-afca-4db7-b15a-bba710161a3b"
        },
        "item": {
          "id": "a04a9029-ed53-4b6a-8f91-1eea55945db8",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "12b75906-00f3-412e-8ed8-5db8f2dc203c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd0ff08-802c-461e-89d0-9cf7d33562b9",
        "cursor": {
          "ref": "23688683-3a80-4555-a3dc-9b88f0de4ee6",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "7c482042-b72f-4886-bad1-859cf40da9d7"
        },
        "item": {
          "id": "5cd0ff08-802c-461e-89d0-9cf7d33562b9",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "27f88421-06d6-46b0-b500-553d643ceef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f638f64-7f80-4d0d-bd2b-3aeae89b953b",
        "cursor": {
          "ref": "54170fb4-5849-49a4-8bd3-68690c89bf7b",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1c3d4d7d-4cb2-4601-b444-59a91c0d4f4a"
        },
        "item": {
          "id": "0f638f64-7f80-4d0d-bd2b-3aeae89b953b",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "fa8e2dcb-6d81-4871-85a2-b7d9d9046760",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e56f15-29b5-43d9-aab0-4c826bf2abb5",
        "cursor": {
          "ref": "c5b154b4-4ea0-4f9b-a263-740d48835a17",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "e95f0b0d-197a-41a3-b7f1-65cd41f82b47"
        },
        "item": {
          "id": "69e56f15-29b5-43d9-aab0-4c826bf2abb5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "442d9786-b533-4fd2-8e8f-93f76c5522d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae2c0f6c-e1b8-4a43-ad38-66f54b0e65f0",
        "cursor": {
          "ref": "469e632e-457e-4bc6-b569-aed3262c929d",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "232f3bb1-9bcc-4c9d-a734-59400ba05562"
        },
        "item": {
          "id": "ae2c0f6c-e1b8-4a43-ad38-66f54b0e65f0",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "3e3d6564-b522-4bac-a707-5351df863430",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea46f103-4296-4e9e-8d12-241895ae6888",
        "cursor": {
          "ref": "6d60ea20-dbf8-4364-81ce-619e4d266f99",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "96a8b7c0-ef87-481b-ba65-e1f0cd22130c"
        },
        "item": {
          "id": "ea46f103-4296-4e9e-8d12-241895ae6888",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "4fdedd72-9253-4dda-a5ae-3ef5aeec0fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d6c148e-ca1d-4983-b7d1-3c4fcdcfa915",
        "cursor": {
          "ref": "46c31ce1-2c59-44d6-b977-3b7565a5deba",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "4fa5f85b-a3ab-4b23-aea5-89afbf2f6702"
        },
        "item": {
          "id": "1d6c148e-ca1d-4983-b7d1-3c4fcdcfa915",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b70697db-c87e-42ed-b33a-dcd63c46b495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "020eb23d-1ebd-4a56-8089-1da923352583",
        "cursor": {
          "ref": "bb005b58-5088-4f8e-b942-70c9eb50e056",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "f7162296-7e37-449e-9225-7fc017d6f583"
        },
        "item": {
          "id": "020eb23d-1ebd-4a56-8089-1da923352583",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fb933b59-b04b-4811-a727-9ffc102eb487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40efcf3b-1057-49dd-aea1-649eff69af3a",
        "cursor": {
          "ref": "05c88e71-24b3-40e6-a77f-b29a77447354",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "b750dc9e-692c-4076-9118-661d2f48f384"
        },
        "item": {
          "id": "40efcf3b-1057-49dd-aea1-649eff69af3a",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "bac8b45c-c5aa-4db0-9dde-22ea2fe6c7e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aa84ba-7cd6-4516-b19b-558871b688c6",
        "cursor": {
          "ref": "cec8360b-fb76-49c1-9ce8-4b1e7d8e10a1",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "4e9b0631-8784-4100-8315-865faa6fce1a"
        },
        "item": {
          "id": "e4aa84ba-7cd6-4516-b19b-558871b688c6",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "e8e48748-d337-485d-aa2d-35ac2d3c059f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2449db3-0417-489f-a69a-059787f41648",
        "cursor": {
          "ref": "d9268ce4-4999-493a-aecb-9d2bb9af8327",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "d7c3c8a9-81a5-4670-afa6-5982112eddf5"
        },
        "item": {
          "id": "b2449db3-0417-489f-a69a-059787f41648",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "792d1630-43c8-437d-965a-f3acdaf2d3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb8f1a9e-3d3a-47e7-8c68-f990104d0bec",
        "cursor": {
          "ref": "3bc11591-10e5-4f75-912b-0b41da1bb35c",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cfb58715-2282-4a23-972f-324be777f9a4"
        },
        "item": {
          "id": "fb8f1a9e-3d3a-47e7-8c68-f990104d0bec",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a28b830a-bbfb-4cd8-ba6a-bff52390f782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b073135c-2294-475c-a550-7ebd872cf001",
        "cursor": {
          "ref": "ec3324db-0748-4ae9-961b-f14dd4bc96cc",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "506ac69c-0336-4561-8a61-f9f6f77a2205"
        },
        "item": {
          "id": "b073135c-2294-475c-a550-7ebd872cf001",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "7fc5f7fa-f337-4043-88e0-97040eb91ca3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50e563d7-0efa-41fe-8028-9803516c47ae",
        "cursor": {
          "ref": "e37604f0-31ae-4bd5-a162-a43792ef6774",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "8ca2110a-fa47-4f06-ac85-6bd01793c3e1"
        },
        "item": {
          "id": "50e563d7-0efa-41fe-8028-9803516c47ae",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ecd78a7d-0e6c-495e-a247-c35bc29474c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32b9fa0b-dc9a-4940-aaf4-0c49ccbdfc6e",
        "cursor": {
          "ref": "7ec593ec-1e45-45af-84ea-2b8274bd477c",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c873afa6-d690-420f-a759-8fa4389f534f"
        },
        "item": {
          "id": "32b9fa0b-dc9a-4940-aaf4-0c49ccbdfc6e",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "3484e236-082c-4f0f-bb00-923de8f528f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef83fa5-11c1-4b4b-8c1f-6d921a3a3afd",
        "cursor": {
          "ref": "280b1ca8-7296-4731-8d77-b8db44b8c49e",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "ccd97efd-4581-46d5-bd73-ae5e1333c797"
        },
        "item": {
          "id": "aef83fa5-11c1-4b4b-8c1f-6d921a3a3afd",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e2e7c840-48b7-4052-b00c-d0e53291cff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19c6715-d8d3-47f8-a2db-0c6ec1e71941",
        "cursor": {
          "ref": "e4489119-0566-498a-bd54-6d30b23aa939",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b39e538f-af99-4a08-8dab-6cda870aed6d"
        },
        "item": {
          "id": "f19c6715-d8d3-47f8-a2db-0c6ec1e71941",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d37f0d53-88d1-4487-8973-b22e95c867fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "380eeaf9-982c-45fd-a420-2ffd003bc435",
        "cursor": {
          "ref": "dbad6b87-ec2f-44de-b931-c247f97d12de",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "d5313cf5-6c74-40c0-a8e0-2b8580e0c7d8"
        },
        "item": {
          "id": "380eeaf9-982c-45fd-a420-2ffd003bc435",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67c73fe2-4396-4b67-a869-91b2c042a244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fb65eea-5119-4590-a075-b96fd449bcdf",
        "cursor": {
          "ref": "94bf7db7-80c0-467c-88f2-fbd33e024220",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "6b27c3f0-9b5a-40c3-9ee1-c4f14cd218f3"
        },
        "item": {
          "id": "6fb65eea-5119-4590-a075-b96fd449bcdf",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b7d31e71-faa3-4a3e-94d2-2062e324605e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0826943e-2caf-4ef7-8c7a-76795c8fecb1",
        "cursor": {
          "ref": "f2b544b8-367f-4046-ab9f-ed8a2f9f8559",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "c9f6d57d-158a-431c-8e83-16da54f06893"
        },
        "item": {
          "id": "0826943e-2caf-4ef7-8c7a-76795c8fecb1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "a7f0d429-c458-49e3-9cc4-b73104c39bc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5df8aa0c-5abb-4fcc-b9fe-719513070795",
        "cursor": {
          "ref": "8522ac88-0dff-486f-92ed-35bd7b13ff0c",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "3dbc3a70-8f0c-4b07-a91c-f66cd1b0fb54"
        },
        "item": {
          "id": "5df8aa0c-5abb-4fcc-b9fe-719513070795",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6faa92f8-44e6-4ea5-95d9-b87eb700615d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c7a5d73-c6af-4a16-98ce-14c9c262121c",
        "cursor": {
          "ref": "d908ff24-4354-4ee8-bc06-9a41c2ffecd3",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "a63fc307-32f2-4d3b-8e24-2da2ae1b62d1"
        },
        "item": {
          "id": "4c7a5d73-c6af-4a16-98ce-14c9c262121c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3e50d40c-1b74-4d41-a05a-79d1b0983a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1abc773c-6fb8-44cf-a599-2f90834e32a1",
        "cursor": {
          "ref": "f941982c-a269-4cc2-82fd-1378294044d2",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "566fc4dd-9d19-42c4-baba-e1c4db645738"
        },
        "item": {
          "id": "1abc773c-6fb8-44cf-a599-2f90834e32a1",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "0d6bca05-0d6c-4e5e-a2dd-1ce613587381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db88e181-9dbf-4d65-8537-f591190c7243",
        "cursor": {
          "ref": "3f7227fb-6c0b-44cb-a853-11c76aa61c40",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "6c013e78-39a7-4de7-852b-6006718e23ce"
        },
        "item": {
          "id": "db88e181-9dbf-4d65-8537-f591190c7243",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "34f86af2-0c05-477d-8655-32ec39279c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35af39aa-1d8d-4c9c-ba99-be25673498b1",
        "cursor": {
          "ref": "0684dc8b-8c25-4200-a250-1d80d4f4c825",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e8aa6f2-6e40-460d-a4da-8b9415e2f99a"
        },
        "item": {
          "id": "35af39aa-1d8d-4c9c-ba99-be25673498b1",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8ce079cb-4567-4479-87c5-1b2fdda3b37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6b68c53-bc80-4fdb-86b0-36b8b7758642",
        "cursor": {
          "ref": "543ccc22-7ef9-4c72-85bc-e22bdc6e44d5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "d20e1e57-3f9e-457f-a6c7-d487f550ceb1"
        },
        "item": {
          "id": "a6b68c53-bc80-4fdb-86b0-36b8b7758642",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "b103fda2-8dc9-4506-96a6-e9077b51e63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560496b7-465b-4438-b78e-75d96bbf0a38",
        "cursor": {
          "ref": "325031f6-11e6-4193-842b-e6fad1f41199",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f0bdf5bf-5de7-41b3-8304-2c4c7a09e6a3"
        },
        "item": {
          "id": "560496b7-465b-4438-b78e-75d96bbf0a38",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "ceaea1c7-9770-4781-9393-a068b249629f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5f534e5-7c8e-422b-8baa-f57b16954ee8",
        "cursor": {
          "ref": "5588ec72-0ce2-4a2b-bdbc-d79356e87dcc",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "d4c96bb1-71a7-43b9-b14e-3ba8040cbae7"
        },
        "item": {
          "id": "a5f534e5-7c8e-422b-8baa-f57b16954ee8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2245d406-3577-42a2-8a74-c6d180c70387",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4669402e-6c67-4332-8736-054ea6b60ac1",
        "cursor": {
          "ref": "f58293f6-0562-4df3-b618-5cbc586a61aa",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "f92beced-8db7-4088-8bd6-bde9e56e3058"
        },
        "item": {
          "id": "4669402e-6c67-4332-8736-054ea6b60ac1",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "d49d16fd-9568-4364-b343-0535ae92f11d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46522fe2-fb0c-4ee1-a253-4ba5e94d612a",
        "cursor": {
          "ref": "62dfc284-81ba-4b2c-b971-0e941c14cf48",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "6e8004b9-9480-4b54-9db3-8acba48f6fb9"
        },
        "item": {
          "id": "46522fe2-fb0c-4ee1-a253-4ba5e94d612a",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "2849d928-33de-4bea-8962-9d5ff9529439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7e2e46-2e4a-4d9a-99d8-32903f3fe965",
        "cursor": {
          "ref": "1d7e171c-692c-435a-943c-0d57dd75c54c",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "9cb0e9fd-30b0-4263-80c1-5cefbac6c99f"
        },
        "item": {
          "id": "3e7e2e46-2e4a-4d9a-99d8-32903f3fe965",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7d1b67ff-e683-4ee9-abb0-83d5535748ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96abbe14-9f56-4e70-ba90-e8c3a5c1acfc",
        "cursor": {
          "ref": "f7c3695b-7b10-4f18-ae98-f1e57a8c3ea4",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "bc14cdb1-ecc4-4524-ab56-cacb53544b7c"
        },
        "item": {
          "id": "96abbe14-9f56-4e70-ba90-e8c3a5c1acfc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "5833932d-4181-48f8-bd9d-4319c768e372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bca52c9e-3baf-4901-978c-370072dcf621",
        "cursor": {
          "ref": "1b5b16c2-4581-423a-adad-78c5fea15d6b",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "f60f3112-204b-4d2c-b6e6-699a5bcb1821"
        },
        "item": {
          "id": "bca52c9e-3baf-4901-978c-370072dcf621",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "59e3e2bf-7146-4b60-bfb2-303e2a6c6483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e79e41c-9e46-41a0-8960-99ba4b44399f",
        "cursor": {
          "ref": "2195dd61-4c47-46b4-89f2-67d54353eb3a",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "6684a39c-9a67-4c80-bc9e-cdf7175fc303"
        },
        "item": {
          "id": "0e79e41c-9e46-41a0-8960-99ba4b44399f",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "82d9daea-8911-446d-be1c-584f13afa586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0484489-e82a-4576-91c1-05222d4865ae",
        "cursor": {
          "ref": "3db92a54-8c53-42db-b2d4-fe0b8cbb4c4c",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "6d8b0e16-1e2c-4ceb-b09f-f37f721d8c76"
        },
        "item": {
          "id": "c0484489-e82a-4576-91c1-05222d4865ae",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "3de5dbbf-9158-487a-a5e5-6675f5520c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e62e96-d7cd-4bb9-a80c-bbdee5525283",
        "cursor": {
          "ref": "4aee3988-d5e1-4527-91a6-6e0c43422643",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "339bc7f3-30b6-47f0-a091-241bde1a02cf"
        },
        "item": {
          "id": "79e62e96-d7cd-4bb9-a80c-bbdee5525283",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "3741c99d-359b-4b57-a36a-800187004b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb256bc-d411-402d-a265-ab31e943407b",
        "cursor": {
          "ref": "8bbf6e4d-2985-4084-a8e2-3a7e741e86da",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "12eef05e-077b-4dad-9fb0-d3c86cbece32"
        },
        "item": {
          "id": "cfb256bc-d411-402d-a265-ab31e943407b",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "ddc176cb-5326-4c20-bf99-7156181dbe8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7d1bd9-1e6d-42de-a282-87eaed880cee",
        "cursor": {
          "ref": "84ee9dce-7a95-44e5-babc-1330fc70c370",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "12fb8d61-aa89-4065-b9b9-ad09388f5f17"
        },
        "item": {
          "id": "ca7d1bd9-1e6d-42de-a282-87eaed880cee",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "333cf8c0-dbd5-4c82-a319-667b164be28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "201b291d-fd35-4498-8666-cf20fbc23b14",
        "cursor": {
          "ref": "1b4f446f-eb6c-4a96-b629-c09ca0112194",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "770ea90c-0cdf-4e9b-ae17-8ae8c2dd4561"
        },
        "item": {
          "id": "201b291d-fd35-4498-8666-cf20fbc23b14",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8fb15a2a-79a1-4339-9cba-7d60e8ec50f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0caea05-e5f3-45d9-89d8-cc49e747873c",
        "cursor": {
          "ref": "a7762da0-a065-4f71-91b0-c1ca4ad9dbe2",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "918cb251-b52a-40f5-8292-580c89d39fc9"
        },
        "item": {
          "id": "b0caea05-e5f3-45d9-89d8-cc49e747873c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "84832e4e-21ed-4a33-950f-a880958b0b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 55,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61130a2e-396d-4057-80f9-61e77e9210c0",
        "cursor": {
          "ref": "341c0de3-d2c9-45ea-9bb7-bb1f482f19cf",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "256e9236-fac4-42b0-9dce-58b67a687d11"
        },
        "item": {
          "id": "61130a2e-396d-4057-80f9-61e77e9210c0",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "5a559458-386f-4cc8-a942-76dee14ad166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3713fb7f-7075-47fe-a667-bc8b3baa11aa",
        "cursor": {
          "ref": "a8cfec1b-e9ff-4a3f-8cc6-646af129781f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "cb0eed26-bdb1-4553-b63f-a3501d1099c7"
        },
        "item": {
          "id": "3713fb7f-7075-47fe-a667-bc8b3baa11aa",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "7e2fb29f-11bf-494d-b65f-fc2962a66bd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da3ce69c-9fd8-48a6-abf8-e14d94b98cc3",
        "cursor": {
          "ref": "be181661-5156-4b39-a6b3-a30743bebdfb",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "8998948f-0699-4434-8221-87ea0cc04516"
        },
        "item": {
          "id": "da3ce69c-9fd8-48a6-abf8-e14d94b98cc3",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b0c36d5e-0c0a-4efa-8a21-560bf0ea5531",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3b8ed5-a7ba-4435-996a-4e8a2e20de08",
        "cursor": {
          "ref": "9c2dacb0-452a-40cf-a3cb-2613e9daf2e5",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "a31b8154-0941-4d86-b69e-be92f822baad"
        },
        "item": {
          "id": "ce3b8ed5-a7ba-4435-996a-4e8a2e20de08",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "bceadd14-1c8b-4dab-b0ea-3e24e4dd1e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5346171d-768f-4437-ad37-f76cf4932f61",
        "cursor": {
          "ref": "f1f96486-46c9-4c52-975e-5b52a16e0abb",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "61c4ddea-d722-4247-a364-2f7f2eb8740d"
        },
        "item": {
          "id": "5346171d-768f-4437-ad37-f76cf4932f61",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a0657035-76ff-43a0-a430-c104b7eb1dd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f6f0dff-943d-4f54-8866-2e972273983c",
        "cursor": {
          "ref": "df49a897-ecff-4608-90ed-e13d8feaf25e",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c0671bdc-1bd0-477f-a9fe-4bb485306690"
        },
        "item": {
          "id": "7f6f0dff-943d-4f54-8866-2e972273983c",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "f57adc2e-5601-476a-aeea-56bbdaf87b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f0bff11-aea7-41df-9b0f-119fb3689aae",
        "cursor": {
          "ref": "b272afa0-e30d-4bc3-8eb4-6d69ae9a7e18",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5d8b8ce2-72f3-4c29-977a-8bd6a6699c53"
        },
        "item": {
          "id": "5f0bff11-aea7-41df-9b0f-119fb3689aae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "65e80c96-e8a3-4f8e-a98d-374d0cab47cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88ea0561-678c-441b-9d6a-35f6e8da52c0",
        "cursor": {
          "ref": "32ec6439-4051-445a-a205-f754e928de7d",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "66fa56ab-56d6-4a14-8f28-3b41b73461b3"
        },
        "item": {
          "id": "88ea0561-678c-441b-9d6a-35f6e8da52c0",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "c26b4dfb-2452-4d47-8343-d1cc7e8379d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 53,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0659e25-379f-4a46-8583-4956c5fbcccb",
        "cursor": {
          "ref": "9502bf60-e9cd-4cf1-a441-b9cfa444f27a",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "a7355908-0011-4ed3-a231-044e2befa1cd"
        },
        "item": {
          "id": "f0659e25-379f-4a46-8583-4956c5fbcccb",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "ae8dabea-4b63-45b4-97f3-32e08cdcc250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a21314a-3269-46b7-82b6-22d931cc2bd5",
        "cursor": {
          "ref": "c8e8a378-442b-4aef-8606-38c8122e2659",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4d9529bc-2c85-42cb-9c74-cd8f8c5d30d8"
        },
        "item": {
          "id": "5a21314a-3269-46b7-82b6-22d931cc2bd5",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "ac5ae4d7-d769-4e84-bcb4-b722d8839e50",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb85b1c1-be9f-4318-8b68-ebed0347e3b6",
        "cursor": {
          "ref": "25054750-594d-4feb-9dc6-65e3474fcac7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "23d64962-22a0-42a4-b558-8e9aca6fc918"
        },
        "item": {
          "id": "bb85b1c1-be9f-4318-8b68-ebed0347e3b6",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2e3445f1-43f0-41bb-b1ea-f7ac43394f5f",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a18ddab-fe39-4f35-a4ad-15c000cd5975",
        "cursor": {
          "ref": "ef35baa2-eef4-4b25-9ae9-14d527758625",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "062d00c3-8395-4c98-9b77-80a6e713a4ac"
        },
        "item": {
          "id": "7a18ddab-fe39-4f35-a4ad-15c000cd5975",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d1459019-5800-4881-a8c1-0c5a87075b09",
          "status": "OK",
          "code": 200,
          "responseTime": 1373,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed23dbc5-f4e4-4c77-a58b-5af9b58e5db5",
        "cursor": {
          "ref": "caa18c8f-6450-4aa2-a89d-c671d2723865",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b543a36d-dac1-4bc6-b856-97aeb5d52217"
        },
        "item": {
          "id": "ed23dbc5-f4e4-4c77-a58b-5af9b58e5db5",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "33b4e7f4-637e-4c74-b273-3328198a3ad0",
          "status": "OK",
          "code": 200,
          "responseTime": 1321,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec1248c-e677-4901-a0e1-cc447a382b4e",
        "cursor": {
          "ref": "c61b4f0f-549b-4c62-a2fb-05d5a2254417",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e5d8299c-ca9d-46f8-a133-70046f14e5a2"
        },
        "item": {
          "id": "8ec1248c-e677-4901-a0e1-cc447a382b4e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e92baae-85fa-4913-b139-ab9b307017e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ec1248c-e677-4901-a0e1-cc447a382b4e",
        "cursor": {
          "ref": "c61b4f0f-549b-4c62-a2fb-05d5a2254417",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "e5d8299c-ca9d-46f8-a133-70046f14e5a2"
        },
        "item": {
          "id": "8ec1248c-e677-4901-a0e1-cc447a382b4e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "6e92baae-85fa-4913-b139-ab9b307017e0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 59,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee4a3ef-3cdb-4e3d-a645-4e739eea4ab9",
        "cursor": {
          "ref": "1d88628b-7c5a-4b21-a2e1-f2eda9423f03",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "f194ffc5-a005-44a6-bdd5-c026401209b3"
        },
        "item": {
          "id": "2ee4a3ef-3cdb-4e3d-a645-4e739eea4ab9",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "acaab37b-ed59-4eaf-843f-9838bff73a2b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 57,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0366d64-c78d-41da-a6f1-ff5d4a5ea309",
        "cursor": {
          "ref": "497a9cfd-8d62-4bda-baec-d27c3133a6e7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "48a09122-9ab8-4ac8-9143-6f3da85392c7"
        },
        "item": {
          "id": "d0366d64-c78d-41da-a6f1-ff5d4a5ea309",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2f3a4991-4dff-44d9-b178-2e58a0cf0e27",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}