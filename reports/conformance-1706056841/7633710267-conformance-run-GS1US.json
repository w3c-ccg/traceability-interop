{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "690cfb46-9701-4cb0-aadb-a2528cbde2de",
        "name": "Clear Cache",
        "item": [
          {
            "id": "1b9701ea-861a-4a7d-a4fc-61936749302f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "15c2cf96-6b82-45ed-bf98-fe2d5c359207",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32cdebb9-e802-4a2b-8a84-3a3e82b67bd0"
                }
              }
            ]
          },
          {
            "id": "4006fa01-2ddd-4583-b6e4-b7536f72510b",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8a1e4953-d4a4-4e86-af6f-76a351a2a0e4",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "c17b5145-eb06-4edb-a5b1-9b6a0f6b7496"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a1e01e76-9711-4eda-a5a6-84a14955758f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "03bb9f56-f105-4d72-ab20-8b0d7b2a6a2a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2a5b42d3-4256-4843-9e70-7897ed8b4b2f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e740290-08d7-4739-82c1-a62681dfd5a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "7c7dfe9e-e923-4bd6-bc95-92d3d821a189"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d00c85c6-119c-4fc9-b94b-af6d9c9893cc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4689e1a6-3d61-42e2-a8ac-6427cbf8480e"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c6d1231e-cce5-4468-bec2-0b00a311a4c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "3058d7ee-fc03-4644-8fa5-5285024f5552"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89fd7a2d-a675-4458-bb88-45180905d97c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "e046c372-8b50-47c5-bc80-6941a4b1196c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eea3b896-c1af-4a35-a701-1b3a97240a23",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ecdbd2ec-5116-4b38-8a8a-64bd27be35c1"
            }
          }
        ]
      },
      {
        "id": "6c655cad-3469-4867-8150-880138551942",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "04eaf9c2-0f0b-4739-a778-b2852c073919",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d80feec5-eb3c-4880-bfc8-2b68535bd75e",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "dc86bce1-b442-4091-b985-33d992722eef",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f4a4b70-b070-4ab7-b5f0-5e0293cf8c99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "741a28dc-36a9-4e6e-97ec-9051ab1a3ec0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2e0ea0e-ff8c-43af-adcb-7e364737fcf2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47390de8-6226-428b-a5ad-210926de2be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4f76097b-b6dc-48a4-92dd-c6100f4c5b03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e31b65-14c9-4ceb-ab99-07124594b724",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65291f6d-9764-44c8-b005-8f7aab789c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0404a19-9351-477c-a820-b0b0803485bb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8f6f7ec0-da57-4b3b-a0c5-e61d4adc3dd0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3e1a1481-7761-4068-9ff0-daf42ceb07a5",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2a55fb0-695c-4b52-9ecd-08bc87217953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "777c7ca4-72ae-4793-8d6e-13bfa375f5d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e10eed9-2f2c-43bc-b719-8a8878550854",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "313dc419-7f3a-4dda-b947-d83a7900515f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8c2c9946-4f5a-4e7f-857c-fe9a3f1f9905",
            "name": "Positive Testing",
            "item": [
              {
                "id": "90f31062-e197-401b-9bb4-fdcf966f8706",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c9c89ea5-e4e5-4704-8978-2d7c3db2338d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a567d376-a177-4f48-b2b9-f7196b8947c0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "556d16e7-27a0-456a-bb6f-d9148aa9112f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e6a502db-e1fe-44ca-90aa-89c5fe9d8a84"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "390c8902-baf3-4469-a44b-d33c489d24b3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da5be533-09f9-47eb-a43d-c760e46ee667"
            }
          }
        ]
      },
      {
        "id": "90de0b55-6609-44a3-b1b4-cc34d06cbcaa",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "e8d3d877-38de-40d2-9130-af355f93806e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcbbfbc1-99c7-456d-8ff8-a8ba05ab883a",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "83f8dd9b-8cd5-4f35-b68b-2fae73a0ac9c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c5f6506-5fa6-4813-982e-c5d415a2e56b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "444d5855-c636-470d-ae4e-d157fcfe2631"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a71fc576-853a-4a56-9c27-54ef02a150f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24a495db-0772-45fb-b8b7-df39043fca4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9abf6c1-48ab-4e02-8abe-672466de0de8",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47262010-e65d-4806-9b58-6057d1ef1432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44d1ba12-0353-4f42-80c7-7e85d420b4fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91931d0f-8849-4a00-9072-494824b0bba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a87096d-3a9e-4764-a1a3-1ca125782aaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a79e660c-829e-435d-8072-03f28eb42fc3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ed9810-fdd5-4610-9701-7579ced15195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19e732d3-6aff-49c1-b92e-fd80d5dc1272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02177d6e-2029-436b-bebd-dd9084d94ea3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fe35fe3a-a3ae-4105-8923-7c4bbe797094"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf280c26-49e9-4cc2-bc3f-4d697881d61b",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a6db683-9d0d-4e8b-949a-27d7cfa915b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ffb9d4d8-2e49-4967-91b3-22b84b066401"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa09068e-f708-40c8-a31b-bbe8459295cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "74fcad82-aaf3-4203-8e52-5a0bcbd1320d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9370f2f2-1d8e-46b2-a1e6-0d656bcde450",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d9526ba-5cfe-4e10-a352-30a7ef00e49f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0970a0fb-3e62-49c3-859d-d9f452e61cda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ca5abdf-74b6-40a3-867d-20b2efbe1d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "def1d9ac-312f-429a-b59a-a1fdf1d28329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9162d6c2-7659-4b7d-958a-1b7c67a74474",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f2d45a-ea83-48ab-9f72-40bae6251dc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "173e5439-313c-4196-8ecf-d8044bee1602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9146df8f-2156-4585-af6a-8d40a4986e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eaa79be0-d8f9-4571-ae36-cacce68a5984"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9a8af93-0116-42b9-b653-8b43c05ebaec",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af60dce-d86c-4d31-81d8-b6d232e6182c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d2f81e2-bd65-4c09-ad86-a27ae4c7a798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f372da1-185e-41b5-87dc-5b0cd29c1334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "60235f80-03b7-45c3-8ffd-b3bfe644fa84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362911c7-7588-4a21-bb2a-f285e6709dfa",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d79b908-6651-49e8-a8d1-c73739f379fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "528936ac-a3f8-44bf-82f6-939c234d070b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2584593a-0dc3-432a-88a2-4bb436a5ed47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ef81532-3d8a-49e2-bdd6-5d739dbe2061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0664c5b2-b267-4054-8ca0-50f175c218dd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d8c8eca-0130-4223-9363-b7f914b2f401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1a208e8-0ce4-4a66-aa4f-8cde7808fce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a39ce4-931b-4e47-b0d3-d8f12bb4a195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ed2b7f8f-3870-4ebc-8662-695fb970e6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d58b91a-6433-4f19-ae2b-d4249d988569",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73924f4f-7e26-483a-a28f-58f826fb1025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18bc7cf2-4637-4de4-8aad-8d5f546b9bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "008d426a-7681-45b2-8bf7-6e98b6ec1edf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "89170a58-8d3f-4f9e-94a3-3779867a6f83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56c6390c-5046-474d-b383-800008bf45cb",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b765d49b-f0cf-420b-b74f-1130ceb09951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1fd7da-e4e4-4ec2-a7dd-7a1bde676d79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30a0e282-a673-4961-8fa5-b327bdb6f4a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aba6d53e-ba79-41b0-8037-09631829fd8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7a3fcc-9566-4f79-9437-e7b24a654ec5",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9db8ac0a-4ec5-4e64-b467-7aad47edd010",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86a3b64f-06dd-4d78-9d50-3ea9bd0ec1f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe3822a-38c8-41ba-ac09-f2169040bc3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31bfbdc8-7060-442a-af97-bf06f7edc095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c574e49-8dab-4454-85ad-8336784113bc",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad0d7a46-5803-4396-b2e6-91d0d1e5c3b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3bdae6e-98cf-4a29-a1d3-165e73124f05"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35e1fe81-af45-4a4f-a704-a6b51eec0105",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "005f9f2c-be46-466b-834c-d9485e23e305"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9304df63-b63e-4c6a-a6da-86910acdbfe4",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7b83ee-ff5d-4155-b571-86010284f1a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12788a7-4749-495a-9035-81652612e638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83e2ac27-58fe-427d-be7f-21faeba44fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a80a58d-99c2-4e05-a7a2-f99e0d92dad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df468692-03c0-4c22-8860-7641b1a46496",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb04862-2f2f-41d6-af2f-1c49078549bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9ded26b-68b8-4513-a0fd-02bf921f5ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6008587-ce54-4db0-8018-367e5d88e78e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf66d92e-e6a7-4e9d-b581-4c6d92dc6902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191685d6-dd4d-455e-b267-4ba28770ada9",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39195c2a-37c6-4a1c-bfee-5511e7f4f359",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61b01fac-3046-45b7-9f07-7b1a71aaa47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c8c11f1-bdfe-4223-9d19-3f0196512b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d0d6741-2d37-4b68-8d05-ecbecd1eac6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b42826-5b35-4e1e-b883-fbae3a5f5c36",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9602774-2163-49e7-9d8a-3f6a011c9162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015f3c99-e5b4-436e-884f-058235eea411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "227f7a27-53ea-4332-b2d8-1ca052910769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd19f32b-4057-4f20-bf63-11be9f15749c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8e49884-70ed-4a4c-95b5-25178d78e86b",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6748abc0-19c1-411a-8288-d6ac4e3d288d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "015e23ac-c44c-4a3a-8a09-080630095efb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a920aac-9ed6-49e2-aa6b-66324b726d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "04048db5-7a97-49a5-82be-dba3a3d22657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a144f6c-b4fc-4e16-8c7f-cbcafc2a2999",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac43356-066a-404a-8927-8fe3bf955e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31fdde56-c8b9-48c2-a986-8a048df4714b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f03f229-1053-4304-b7e3-25196e22319f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3f5cf38-1c2c-4903-96cf-5a6d8bd13386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159010eb-2b13-43ea-a46c-89ca9063b3eb",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e9ac8d-4319-4050-9763-51344a9b218b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5275c8f6-30ba-4638-be17-5bbfbfa4ace5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04eb56ee-b428-44f4-bcf4-5861c9eee48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "147df7da-bcd2-4100-92b1-5780d819e624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71bb1d6a-eedf-4659-adfa-7d042d099fe7",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c519c8e1-1bc1-44dd-8da8-0f4e537dfa1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef1c5685-2d61-4ec9-8ba5-a1de34af81a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "498b4380-8d79-4b93-b67a-0e1c6e7227e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ff6bd0-36da-4faa-b3d9-f4e74f82697f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3b1d95-dbe3-4d37-9a39-bdb6545111ad",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51bb1bb-6aff-42b5-85af-3a8f7c413a82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04c41e49-410b-4218-9e18-4656d897cfdc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f9ffd61-2b86-403e-9be1-0adef10c1e83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2e9e79c-5bbb-4328-8e45-526fc9270784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6baaae30-6fcf-4237-9ca5-c1ac3875bbb9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e839016b-3716-46a8-90e2-5a3f2473c386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c71ab1c-614b-403f-94cb-aa7528736df7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44060fb-bb92-437c-b13e-7ea8e2917887",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "aa7dbc23-a4db-417c-b52b-38176507f0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9e1f78-a478-48cc-a214-f995323bd29c",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ff0d593-a42b-4cbc-a569-0a497594e542",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f7eefc-7d08-42d7-b4de-d3ed1c560eea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e01dd9f8-327d-4f86-83c2-f1982e1432f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb98268d-5604-4576-b8b9-2b3336a678ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99fde7c5-05bd-4204-a0e9-f70d168e9d4b",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7b67f1d-afdd-498c-8a08-79a4bd0ba7f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efa62510-ed4b-4083-ab70-f5871ce545b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f99a626-cb2a-47a7-b976-48cf6a968ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2886d55-32c4-42fd-8009-ecaa0ff66a05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e86af3c-2ef2-42a7-8dbd-80aba8b433ce",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f6058f2-c6d8-420d-995a-1aadebc1b054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70559f7c-e7a7-4211-bc19-667682becd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b01852-eb48-435a-b3bc-f1ab796acf62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "156c9842-8343-454c-a6f9-85306bf790fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5b23fa5-cbba-4271-9bbf-b29de67fcf1b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b91ce4-8d43-471a-9cce-80441d52aeaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f238189-853d-48d3-8641-1f8828cd8ce5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14eb1a2a-89cd-42c9-9252-b25b15f490e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d98c126c-8403-4405-a7c2-2e68644b41e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db82f053-9f67-4687-8b46-c4307c476d36",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac593ad2-41bd-4ed2-80a2-bffb2878a20f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1f19065-a1e6-4a68-89aa-d79613b50096"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87cd58ad-db28-4086-857b-bf2b66828acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1711d5-f3d0-42e5-ad3b-3c8c6a3cbe9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3ff3a0b-904e-47c3-9177-bc07287e15da",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da696fb3-0c2c-40eb-892a-b832cc0c8e64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed016523-e05e-4856-a96f-42d05f5de7c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d09b015-953c-41af-b2f9-1dcdc0c515eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac1f00ea-02d8-4d26-87ef-b9bafa21a6e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aab7475-0012-4847-bdd8-2bd28fb25f6d",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbe40a8-2ded-465f-9f50-8fe8af41e828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfe186ba-b280-430a-96c6-d335a2e07717"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99cdb7ea-eccb-4a57-b8e5-d3d58aef69ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3238e0f8-87bc-49a5-8afb-e4a32fec3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea5e0a2b-a91d-4d71-a3b6-50c72880c4f8",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1817fbad-3e25-47fd-86c3-a5cf2267f969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d2e484d-4a7f-4b4a-8d34-8b4a0db96ff4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e7109c-75ad-4c53-86a2-944e098fc24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "59f533f6-1c9f-4a43-a0f0-d7b796f9be31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e880700-7718-4837-9c28-d35156d4f638",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa7a1241-61a9-485e-a248-d77addd04f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85d716a4-9425-4427-94e0-a4accd7347fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cec63c-9877-4c41-aa3a-df40f7fba224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d1db18b3-024c-45d4-b742-c18f11d370f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b41d0d-9dfc-4629-b722-04aba2298ffe",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c69248f2-90fc-47f3-bbac-18506514540a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca405123-97b8-455d-9df7-c42ff5c48c11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5041a9a-7575-48bb-8a0a-f23401654bbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07ba5330-8a28-4c87-aa68-cb986c466162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564c1595-3ba4-4a76-8507-e07209ca8eb9",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3241ab4-fa3d-47f0-954e-69e5810989d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26383564-d098-4c85-8a35-fe698d7c77bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "536c7dd9-f8c8-4082-909d-f3ccd9620ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "248a1a53-1bf6-4586-ab5b-a620d20d2290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e7f2781-825a-4592-9ab5-e4c9dbc08639",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ad8b2b0-e44d-42e5-80bf-64e182fb234f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "534569e5-0b54-4131-832b-859b011bc670"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55efeeec-8ffe-4511-9667-e12a394a25b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "48e67273-1048-4c5f-902d-c3c0c92f9507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dfc6267-edb9-4461-9d60-3219ed12f585",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0ed6eeb-ea29-477f-ade9-07f7c6366a74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "26b337b1-787d-4ea4-a756-1fcef5aa0145"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e42cfd3-516f-4673-9818-041e0c854963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59576e3f-249f-40ef-a109-d9a9ceb1804d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a7becb2-0f68-4e20-90b1-4ce1ac42733d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99432a9c-7326-4dff-888a-85284882f5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ea16c3-9f13-4a72-866d-26a24dd7dbfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478691ee-626d-4831-bfce-9adb4574bcbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0766d2d3-4c05-47ae-98eb-9ddefe4e2171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc43f384-73a0-4b53-ba79-40f672c4a472",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ce8ff95-a28f-4edc-9754-c98d9106f9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da71e2f9-d8dd-4180-8413-58b4609071fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "daf8c7c2-4032-4735-b659-199a006d9dd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a7de0e67-1abd-4fd8-936f-dd5939fca33c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f29e390-50b5-4cdb-815a-ac8e75484fab",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d92a9cb7-08bb-43bf-9ad6-25d2aae4783c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250323d7-7ae8-4173-afba-007079340793"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "172b08a8-3abf-47c9-961f-193924cbad68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b47a306-65e2-4de6-967f-2feb30369d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ccf9520-34d9-46c6-8fe1-936cbbf3846e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6cc3cab-48d1-4eb6-b81d-1936eb9efe33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c98e23-df2a-4c07-b058-ba86c0cf0aa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1027c71-9059-429d-abe8-34a81bee78a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf9ef938-ee0d-4791-93ea-88e4af0ca9db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc4a990-e926-481c-a930-72ac3ec619d7",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c552d812-7a0b-4820-9ba4-25a502fb4999",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a0ad8e9-3464-4d56-bc27-8dfe35da77ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8282225c-5439-4fed-984f-fee2e999e021",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9271668b-14e4-4b0c-b6df-1ad0627f1081"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08a204e0-07cb-441a-91be-ec411d4351f2",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d7bdb2-b5a0-4f7f-b4fe-a34f27268382",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6d324b6-b8f0-46ba-bec8-0da303d7fd15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e883dc39-e3ab-4665-aaa8-de248b3b3d24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "995476b2-c9eb-4bc0-8c1e-864365a6b53b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce601cf0-b837-40cf-9bd9-d5b77d665201",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad39612d-d654-4e99-9351-82fabfd0dd8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fdf831-ef41-4954-9315-722c9f64836a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94f25c39-c3ea-44d9-951f-1aac129e36af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f502edd0-6aeb-4211-9c85-24daf468544f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "929e23dc-ef52-4603-8e29-4a3b9b023172",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f5957be-1f69-4246-a2f7-4204d93e67ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2369a341-c5e4-40c3-a3dc-b68e79921cdf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d9e545c-311e-4cdc-bb99-e786285f2a3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e736384-6b0d-418f-ae41-17b42ba49b25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13de0f0b-6a0e-4df9-93be-bfe04196a1e8",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b89d1d-483f-4910-b7d2-d921793bc4b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "806ac4cd-d568-4523-9701-d84049d63f6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb9d0bb6-d845-4bf6-84d2-0fe4d6590600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9f871d12-37fb-4549-8ab1-cba440abfc74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7d862c-b221-4b73-8f49-6be9a513b46c",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2740a0f6-6fd9-4ebf-be64-629c3586212e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2495c208-7eae-4e6c-bca7-66aac005a458"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0401fe3-7d58-4f4a-9212-b90e12af0f30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "492a76af-60a1-4cf6-8341-9192aec752f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca65b523-0480-4936-b1f0-0da6a3ed9abf",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "693891bc-31d7-4679-87a7-ec88dd83e19c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa964d1b-5e8c-4a79-afc7-9aac998bbca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d5f94fd-f046-4b88-9f8a-e5aa8a1e3dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4286c90-488b-4a28-a0e3-45af02e9deae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98593038-df55-4478-b5cc-0a464823da45",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1484199a-8652-44b3-a0f4-c438705d6813",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f764a42a-64bd-4b6a-80d5-d4252a5004c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d8e9e40-ccf0-424c-ac6e-3c2660e88068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "63a3d2b2-4a03-437c-81a9-ff0259f570e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a70cd8d-dbce-4ec7-8af9-79b4e861c554",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4fec847-de99-48f1-b0b1-37558f287e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9249bb47-3483-4139-ae35-c46d96f860a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c5a62e-bd09-474d-be4c-cc886527a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d5f29860-c4eb-4a6d-a998-34d00337490d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c54dcc-9b56-4fb7-91e7-c125d9c39ffa",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "419ecd70-8f37-4f3c-82e3-36f6313321be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38bb6d36-3fbd-4f3b-afee-1290a1bb040a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a52da2-dcc0-4f88-8d9f-c3435ac5c204",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "af98657b-618f-4f58-b665-3b6efb55a36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de02050a-0215-4568-a84e-b918617a1243",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcad91ba-a608-45f0-baad-706dc762b96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de867e27-51ec-4302-9292-06f9e43b2c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47fe4c6d-2316-4ff2-861a-515ed8c62ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "8faf4f4e-c46d-42b0-927c-ae3000cba808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc39cb17-e294-451c-9c25-816ba45fbd16",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41291387-b2b5-4c8b-8ce1-d21de5dcc32a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c23a296-cc9f-49e8-849f-b3cc20c2c462"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dced5c18-1e79-4656-82aa-cd0776f5a14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7da38392-a280-4cb6-8b4e-a7dc0d22aadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c95bd6-1b0d-4314-b033-1618df4d0cb4",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "254af0b2-07e5-4dd8-87a4-463bea81f6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dedaf606-66d2-4791-a52c-d8eeb99e3e4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bca82fa1-9c85-4f7c-b522-52f307e81cf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec8300d2-9625-4e5c-b133-b27220beb0c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59f4b2b-e3ea-478e-8467-b5b6cf7495dd",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a496486-9c73-4985-bf25-524f25461298",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "432c1fd7-8afb-4af9-a5ed-e3f698c56cd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3160d5f6-95ff-4623-b33a-5fc7c87d824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ad02928-cec2-4f3b-ba6b-61f1b2539a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e55b0048-52b2-4b22-916c-93df36fd624b",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9271722-e52e-4aff-b592-32c50d8bb168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede4f330-b54c-4d7b-9cce-df714041f905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4937f108-1027-4b79-a025-9494b7f93c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7abd53be-cea5-43a8-a162-b4ac11f8f53c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9ae56e-fdab-4ceb-98b3-2b297e3f118d",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "250df937-36a3-45f6-be3a-2da472969b37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7135bc69-5552-4034-a7db-337321b610cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0407fc3-fb5a-4cb1-be6e-27ec7a1dae50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "f6144d5a-1166-49ce-8903-7ffeba86a540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ba60930-cf1f-4d23-8625-16e97e899156",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b30e4ec-3e67-4e29-a8bc-ece87353f857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c7acf95-2303-45c6-a004-6d2e15b849af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863e1f3-be4e-40b7-ba18-b0d5968bb63a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "a70d2e52-2ece-4228-8e3a-90dfda42a354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1d26093-96f8-4819-8ac4-730d20d51619",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a34453b-6220-446e-9e31-2e126656b666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8579b1e6-1dfa-4a58-83d1-1f2ac0b7f384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09783d4b-9ec1-47f0-9d0f-bc24d799534b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "fe66b686-ea68-4116-ab89-0a554af1254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f92fefc-13c4-4e98-a8db-99940f80b21f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b9b3601-ff66-4501-b06f-42812c887143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36df6bc1-5a6f-4ea3-9c36-fe10f8197446"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75c3f0c7-f968-4882-b0f1-66b2ac06744f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0e3a5df3-eebc-44c1-9768-2be61ab3e800"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74216c94-4cb1-4f72-9b14-1570105c166f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c9d6e04-601d-4e0e-bf13-a55e57fae921",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f2c007-8114-49c8-81c4-42f4b02e118a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "870cec06-c765-4680-a414-fb2c9dc00084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "02ca43b1-506b-476e-8bcf-04b1febaaf79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a9053c-9304-422d-9478-e27922ebed26",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a76e5db-295a-4d90-8c62-b719697039b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2416909a-a058-4c67-9c46-f8d79ddbc6e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "551de545-e2e8-4f69-a6a2-f80940673e81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "dcb02d2a-8384-40e9-8078-63c293158050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6261d89-b274-4ea2-a0aa-369460774981",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "453cc9f7-308b-454b-a227-104b33c32110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56b17e0-c3fa-4d96-8d41-118e83894ef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08bc6ba-b597-4770-8dbf-9ae78bf24b14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "329d7584-7720-40ca-906f-4e556e040acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00d6168-f2eb-4eaf-93f9-9ca6debe22bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d153a604-e3c4-4692-89bc-df4d4fb4012b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a291814e-b02b-4ffb-a3fb-17546e8bf779"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "feb3c9e0-47e1-4a46-a5a0-f275ed2a1c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0cb2898-8159-478d-a48f-a0a2a6696757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e5e6006-4c60-40a3-b685-7807cd5dcfdf",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675b0732-b830-4e11-a0c8-68fc6a81268c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff30be2c-c81c-4203-885d-5306bc90327e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c09b15-4860-4dfb-ac9f-0c0c1c93550b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "82870bc9-fad0-496d-aa20-09b78b727fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b41dc2-8ecc-461e-9bca-fb27da510ead",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32342815-9f75-4453-a5b5-f5101a63352a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1eb3544-32b4-47fb-a937-dc84a05750a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e15dec-8f45-4a0b-b868-657313e562d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "67906c6e-bd21-4e96-a728-8d1bc02985ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fabdc09-444f-426d-9fbb-f04403598bac",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10ead4e7-99b6-4ff5-b5a6-fca0e5277bf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4f4555-9fc3-454b-8f6e-67417750fccf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfd3ae9-f342-42ea-9af8-7884cfff26f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac9cc06-02fe-44ee-aff5-c63202500d75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a6432b1-1522-40a2-b18e-be78c8f6694a",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98eb9bc-eb57-4a16-aecd-00af0f05b590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1cf028cb-baeb-4cee-a9dc-6f2e487b7876"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846e1aae-a7a9-4e76-a9f8-b2befa87f0ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "79361361-297a-4807-8f5f-9bc3b1436121"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56923d81-1446-4331-a5f7-b19a212424c6",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "675dedc5-16ec-440d-85a3-017950c684af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ea1e930-d1eb-4364-bc20-3470736c7b50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fca9ead-233a-4712-b15c-c3976db52528",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f39429c-5d8e-4ed9-aba5-62feeed4db4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "296ec67d-6cb3-4ae6-881a-78e45e90111d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b945ed54-afa6-4b32-a1a5-c6e02e1b5396",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97a3793-1ef9-4ab9-9b17-154cd155fd8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08543290-9e73-47c5-916e-e42f1054c0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5f2e66-d5f8-47d7-9e03-79e30f498a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56cb93ff-6856-44a5-9061-5542dbe51b95",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7af54b00-f3e1-4d78-93c3-5f690065b25b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d01d471-da38-4330-9af7-29505ab639c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d03ec17-ab37-4ba7-aed4-64ade7de862c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdebfeec-7cae-4c0a-801d-afbf5331f2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b4f50f6-cb5b-4b43-a939-4528d498281a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4519082f-22f9-4a0d-890e-fcc1725001c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c592fb8-b1a3-43cc-b669-b57abb0771e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1e1a173-ac61-4bcb-9287-e04398e034ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "23bb9a8f-6f4e-48a8-8727-c5e3ac969ce6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98f2aca3-e3f7-4957-bd25-f2784c397912",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96409274-fc10-4757-9fc7-8e5d00cdef18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "167f7686-0a3d-4320-9b71-9381aa84d3bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "738473e1-6104-410e-b894-13f805bc64da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fb403d86-b204-4baa-9847-385fab6b19f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037ea05b-6f6b-4fba-9220-efb4199d2792",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b95ef37a-9020-46b6-93f0-2d1b3aa1a91f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b276aff5-c291-41c1-a9cd-c5283cc4c6c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce013d02-7919-42f9-bba3-b02aa1ede743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "aacc07c2-6937-4668-801a-0d5038935067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "accf9ad7-de61-4743-a28d-1991ee6ce74d",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae57c52-5c0e-41cb-b4b0-229829a394e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30aeb115-640d-4aea-a524-34888379dafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cbe6b7-c9f3-4c53-90a5-3fc750c39170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5ce6e10e-9845-45b2-b402-01990f1f1d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c391809d-ec7b-47af-a167-779b482e5dba",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c2f9aaa-66bf-46c3-9400-bcbc83c9926a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7de675b0-e453-4b83-a76c-8ec983aa9dd9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60740bee-74ec-4346-b2bf-9df20d0934e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f4dfb9c0-578c-4900-b3d1-9b5c04827d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b72cdaf4-21a1-41be-b3ac-ac0a00b31273",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "192bdc02-49c6-4b60-b106-f54c320625a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e94389a-0a60-4289-ba46-c99433ef4e56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6daa557-1b32-46af-bae7-9f3dae1fd70e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f75b2015-229f-41b4-b1bc-480aed8b8284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52dceb3e-1ccf-4073-8891-d164496a0783",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e542c748-6d55-4fa8-bf04-3f8d95e85e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61e03957-6781-4649-842d-c412fb9d4eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb08af8-df56-47f3-93c8-4f104863a02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3f9c036-7e59-4a54-b0b6-41d50aed2a19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0d8afd-d8fb-4fc7-9cbd-4b711a7a421e",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1559cf00-a6d0-442a-8647-fac119859902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54765996-5ffa-4b05-bd72-81e19abdf97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "074509c5-5a8e-4882-9989-5674a0eea645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "094c60e3-9e1e-4aa3-96b5-38b75dc511df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b923aa5-61bd-46df-854f-57f5a64467bd",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d1d3ce-f47c-4599-b3c4-990f445236e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26acfcf-4b6e-4a37-94bd-7cd3a9ffcc0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2102a34-94fa-4ca5-a940-a4a338570b23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c6f9994-3974-4fbf-996d-5c7277e7a28d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbfd72dc-7aae-44d7-8679-faaa212ceb98",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad5f7408-e11f-4e1a-a96f-5801fdf7ab26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e3e5763-ba69-44f4-a2f1-d908b284f47d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4cfb267-3957-4c5f-9d2d-83f8bc2e8497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9831d589-3037-4c2f-b60b-1c452cdd3fe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea451485-e1a1-4b19-a281-c12d90257f2b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f342660b-208d-4c85-bf43-603c65478d4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02dfb6d5-af03-4222-84e1-d1c8882ac86f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cec7af5-6c19-4085-b950-ca2605935897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5746738d-16e5-43a5-bb8c-1cb640bbdfd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ae63cf8-7c82-4ace-b967-a238629bd7fc",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad59eaf-f1d1-4347-a6e4-b97ed043edab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f12c07a-d6de-4303-a08a-e5445d21d251"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc490bdd-d311-49e0-9a78-86c8a4e97f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b25829b-2076-4945-8f9b-bdba8959f718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "214ad9bc-b20e-4c1f-a345-daca75db7108",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28cbe4b1-950a-4e1f-93f2-331690473a51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43eca9d4-1e10-4df9-a664-2302a2eb9a29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d018cc6-c8b6-4e54-8dc3-e650af668b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "df7e443e-31d2-4325-b900-10af5672e570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9824d1de-2a99-4943-ab86-2a398dc7ba6d",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ce88df4-07fd-40ff-807a-5fab8c085e8f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "471a8c78-51eb-48a7-a651-8867aabcf24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23cd650f-506c-46e8-bd9f-b85cf246c9a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd09c445-743c-4460-8c85-04378f012886"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f20982-42c3-4a92-a1d2-235bb635f990",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98740d3-39f8-49aa-a978-1de22aea67b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d27ae9-a99a-4336-9f78-328c84c03c17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af65a49-cfba-4dbc-8cf2-ee537f2b1aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "14b595dd-5b24-44de-8618-6603c4afe3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6171f725-47a5-4127-81c7-ddb2080e0d4c",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "719710bd-3b0a-4fad-a8f1-83662194821a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab9c1753-fce4-4711-99aa-8ef2c3fac799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abe371c-1273-4933-9872-865d7ba6a9d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a402223-17ba-4735-ba44-798178d9acc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25cc822f-fa5e-4129-ba20-390a38dc80b5",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b7796d3-137a-4aa6-a091-0fadeff7fb2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b949f80-4156-4183-8bfe-551b1bcca7e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674bf43b-38d5-46af-a8ae-f3b957f88c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c439212-3109-4579-b896-a567d54d3d66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9554233-a28b-46b7-8234-e14062fc1ead",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0986ef7e-cbc6-42e8-9a29-8322e0f464a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee7369d9-df5d-46ca-b6cd-de0844d62a4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "937adaaf-2952-450f-9f45-02617162a3b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "47d0b053-7484-4386-acdc-c81c3a2859da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf9d5974-a81c-45e4-803f-7a2821446132",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "45ba6a03-e713-4dc3-9e76-518621f63919",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd317de7-b096-4036-bd09-54c63a6ed85a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "337609bb-6b9e-4d5b-99e5-95c4dcae1cf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "b9c27f88-cfae-44f9-841a-2ce9a72e86a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37ba423a-d2ca-444a-988c-ef532fecee97",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a0bec0-2586-4d05-bacf-df754b5c722f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "733cbf02-0bd5-4ce6-aff9-912cb2ee8de2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8e2c9f4-8e56-4fb2-8aa2-636c5581d3ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8714ae21-abae-466f-8ccd-79735852d493"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9202d851-ed8d-41cc-bc21-91cd07e43d48",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e35a4d2-0e56-4dbb-82c4-2bb47b87e7c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a01fe696-a179-4027-b489-4f900d70d860"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "502d8f90-9e7e-4272-a967-37c7fc272333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c43ffb79-3355-45b4-b3af-1862a502b248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3a26b9a-8645-45fb-88f3-19319583bd69",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a8a930-fb50-4982-a587-3d6570b75209",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "873243c7-f4f0-4f12-9927-5706a750183c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0a0940b-8b2a-48aa-9bdf-0a8e1a364a0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a358e3f-e445-4b74-bc50-78bb9bdb84f7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a69993ab-7e89-4d10-bb7c-371ccade7dc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15bad438-4dde-4ce4-8158-e83c110a28ed",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31fa5fb-4bc3-4601-826c-5be9ffc1178d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c683fc33-cd17-4652-a4be-3eed55c15a18"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279be07b-9a5a-492d-bbef-8ccbad2fcbd6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e6ff3f8a-7ca9-4ac0-b63c-edb0eb5e822b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29ba6051-a4d3-4030-abdb-2507f548d28d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ae7dae66-a4f9-4660-808f-011c2b923605"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd153f8c-6e61-4b0a-927e-387892b4e1e4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "74f39aa4-7f41-4761-8830-a99978a9770f"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4af1fb72-143e-434a-88ae-0f4acc71ea0d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "47160492-2134-4d6c-b6fb-8a17d75b4f71"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b9f61849-3c1b-45ae-b919-9c04fbb22a79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "95ba7c80-0a66-457e-a09b-d21b1f1d1bc8"
                }
              }
            ]
          },
          {
            "id": "11db0b27-710c-49a2-a3ec-05ff61ff09f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ab68b770-53c4-49bd-8a24-c1f594ca9212",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "14175e14-eb4a-44e3-9a43-b22f7b287a6a",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79e3b3e9-db15-47df-9a24-c0ad3a6f4dfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "af18d579-0df6-43a0-a23e-58f1af43c4bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc4d98b-7592-4fe5-8d21-dffe97978cc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e47ac3a2-584d-43ef-a614-593d8311f009"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9d373e5f-2f75-4025-af9a-57b904cd0495",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c6a68c83-d7d4-4cfd-920c-f312e5aa7fb1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "311e3361-a84f-4e59-a3b6-09be5f2a1c31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "39f44bcf-45dd-4a00-ad7f-251de33b128c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5a38e34f-5381-48b5-aa56-eb5a29d7e8dd"
                    }
                  }
                ]
              },
              {
                "id": "2ef923a3-f980-4c22-804e-cb4b930c27c4",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "406fd43e-d463-4ebb-9532-12e5d40cebea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5e8ae303-eb05-47c7-891c-46e9fe07ced5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "482ced33-1b44-4682-9851-a0c74b7afc99",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40e9d909-ed53-44c8-ba2b-3192fa51cd07"
                    }
                  }
                ]
              },
              {
                "id": "dd4ae4c7-3829-4ae5-bcbc-599255051d46",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be54b327-b9c0-4009-8be4-b899cde587c9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0b8b469f-ac73-4d6e-b184-4803b2134e3b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c6ee3da4-be4d-4292-b77b-98d58b75354f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "4ad80602-bfab-4cb0-a111-b68ee064a94a"
                    }
                  }
                ]
              },
              {
                "id": "16cbc531-cd36-426a-9193-e9508cf084b0",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7cc512e7-8f67-4c99-8f07-910686476f39",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "78864a2e-08f6-4abd-ba89-3e1b727fa3e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "21c51357-64ff-402e-aa1d-42340d887793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8c6f3964-0e0b-480a-b457-df06a5169030"
                    }
                  }
                ]
              },
              {
                "id": "624ca208-b034-4210-9efb-2c89e10dce50",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4311f7b0-0e23-4aae-831c-0dc63576f57b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "9532ca87-0137-4be5-8f32-1803aab1eb62"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "023103fd-2244-4711-9f0d-628f04827bd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "65449213-e827-4a92-b82d-449a2561bef1"
                    }
                  }
                ]
              },
              {
                "id": "94906856-5e9d-4276-be8e-6ab4d908cdd0",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "938a53ac-d953-46e5-968b-f4c09428f6e2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75e8593a-8c5b-4d7f-b54c-09b282eaeb0e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b980ecf1-29c9-4a44-b4f0-c7b01675d0e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "808d77b2-f57e-494c-a7e6-91c58a491dc5"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "776b1e4c-d1b1-4045-a505-90674a6b8478",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f52f13a7-0a8d-4c7b-becc-00156e859c65"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "32211086-015a-41b7-b712-36872b706cef",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6a471c77-8576-4c5e-8307-0efb9aa74553"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9b904373-6c95-4752-9f6a-902c9a2d73ff",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a4a1d925-5058-4296-b0ae-9af2695ba5cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9da8a404-add0-49c7-a58f-177392e22e57",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a109e1c6-e8bd-448a-b050-5b851262c061"
            }
          }
        ]
      },
      {
        "id": "1eb24ad8-17df-46ae-8f3d-4adeaf999a6f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "3f62dbda-0cf5-4824-b7b3-131bcb111b58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7aba46fb-7f3a-457d-96e1-0ab92f16dc16",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "18bec91e-47fe-4908-b678-e35fb318645b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "644e9bbf-1939-4218-916e-49261c9d5a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "862ef186-be3b-4f90-a3c4-0beec7d420b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d9b311f-be22-4d64-89dd-acb44c33a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "5975fd7c-07d8-4ca2-8dc9-0940d8da2337"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6635ea8a-c09e-42ca-9c30-b3baa7857e75",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "332fa02d-8b63-4872-8b0a-8c3108bb3f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c230371f-30ee-4ac0-800e-154f0c31749b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81293162-0039-43db-ae63-9735ef7e8602",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d047717-4e9e-476e-b825-84600fc1ef87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a85194c-6bf0-4473-9b14-32df24d490a0",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ca6ba5f-2638-48b1-b3f0-864d643d78a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92a36224-3456-4741-b307-131e53d9049f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab7413-b188-46d7-a23b-21b269b1c912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b8abb4d-3150-46af-89ec-e4b78052c724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a1277ac-51a9-49aa-8e27-0c7c46214dde",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dab136b3-08b3-4a82-817e-592e942d9ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93b4035d-4bd3-4947-a927-3ce212ba4d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffb77cf9-5649-40e2-962f-9e5e96a0cc21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "14842932-13d6-4f90-80ad-8f2575378f7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7935dd8e-7598-4d9a-9510-cb204d418582",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "936fc8a4-22c1-4d83-9442-bb72324a1fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b493aa1-a1f5-47f3-8ec0-e24d6ad4cc20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "636e4113-55d7-4aa4-95e1-3eaa72ae8dbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c78601c1-9aa1-4126-9efc-5566d95dc2d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f80a4fe-9111-4d82-b8ac-72db3616a2af",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "538e35e5-1991-4be4-88d6-6d2d3d8f2e53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adaf8fda-c826-4b98-b839-7a65fadf4086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bcbec2-1619-4313-9ef6-e965f53eeb8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "83424b45-1875-4823-a3f6-109796fb7609"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b58c575f-47d8-4098-a079-b1e5eeae4db5",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf70f4e6-d693-4e4b-ae59-b3f3e4299748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba45a08e-8749-4f0a-948d-119d97a8c451"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c7b3fb5-f62e-45ca-a1e7-cf39a275422e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e699646-5360-4008-a66e-df338bc81fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1bd193e-34a3-4685-971d-c0787e9a2b2c",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b647e28-ad34-45f1-a98d-44ece141b2c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df8ad8c0-e7f6-455b-90d0-fba5b1e43ab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e80eeb-8940-4820-bdd1-48f827db3dc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "428c47e6-60f9-4244-8ed3-c79b0cfe1a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0dbdb02-722c-47f0-8592-90761fc71e22",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddfecf59-ec73-4363-b334-493bb7daac4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47bdf73d-0062-4730-81c2-5a54f53d2ad1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0265d551-3543-4948-ab42-80a746faf92e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce55e8d5-006c-4265-8dde-b6c6fbe26903"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c402c4b-4373-4b76-9b23-413cf8bcd591",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a662c54-e690-4062-aa40-2988988827a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23085d6-8ed2-4969-9c1a-296af276ba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3112bcd9-af5c-4e9c-942a-c8574231b3cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "12493cc3-a998-41bc-aa75-6f85235daac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c519941-0293-4fe9-9478-cac9cc89ab41",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0effc7d0-cb68-4b57-9905-6ca2420c5ea9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a7b7181-f39f-448d-8458-d31a2ef38498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1173ebd2-f3e8-4632-b386-287f9c936e1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "ba416d5d-a14f-4bb5-adf9-69e9865942b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5460492b-67c5-4f89-8147-bd054d4bfab3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f2f8008-a4f3-45e5-a198-6926433f3748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "384db7b9-8ce7-487e-a065-ea4549414a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d51b81d5-f42e-4227-bfe1-f1928a0228c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ddde4292-2b52-4a9b-9b66-7e946e0d6f55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f02a9261-ba1e-4524-873e-19364ed9710e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a51c22ff-ba06-4a91-ba69-33e726f2d428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7944b64c-176d-4e35-9d0d-ab4d2880e7db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b59e09-4847-4ce5-ba0f-f7ffbe07216e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c767d69-05ed-46a2-be0e-3b5ce8ebc1df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bbab833-9f37-41c9-af1e-d3bb3bcbc124",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6e1fec-0e0b-4092-92bd-14f995bf17d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4caa36-69c8-46b4-a4ee-916b9a3544c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82d5919f-6291-4718-b60e-51fec47215aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe805470-b05e-4623-b551-a2056f89fb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865be786-93c4-494a-b57e-cab84166817c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e203cd0-5662-4b92-9508-3e8d0f18cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acb48c1-e646-48eb-abb2-30fc67a19725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7a5697a-402d-4c2c-89f7-16ba9aa7293d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "61993969-6a20-42d6-bb87-e46b9a1858fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a33f00f-49a7-4854-b7e6-7289e4639460",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753bf9e6-1029-4f83-9910-7951ab50d09e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d39c73e8-009e-4f9a-9dbc-fa7827573611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfe8d583-8949-44d1-ab54-efa14c5e3c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "15431346-6b45-429c-add8-96eeabda6d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1f5c0e6-3ae9-406b-b1dc-6144337692de",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11d64299-f71b-4bcf-8aa6-f60b1a0bfaff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "086bf317-53e5-4ae0-8f04-d0a0c2dd8f8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "458b2828-fc10-404a-a257-10b68baa0c1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6f2531b-928d-4a41-ac98-590901caec8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cfc09c8-48e4-4c71-8c08-008bac6c5f02",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "137a2716-16cf-49d2-b06d-b0bee5736ac8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7851d75a-1f96-4a0c-94bb-264c8ff88ab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bded47d0-5d0f-4456-a36b-d1f81356cccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "13b78d5f-ca4d-46a9-8542-8b0bc9012f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20056666-19c5-49bd-b2d5-7d9d41f1e1a8",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd638460-2416-4dc7-b21e-49c81c8aab6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaad539-3c4a-4e41-8bc4-c1f841a1c79c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde1219f-f2c1-4f3c-847f-c8f85e817db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2aa2da67-ba90-4c5e-a559-e2f34f7f75e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6420f84-c280-471a-9d8d-4987aa102f3f",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b9f639-1f6e-4dfb-925f-47c989317a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b894a5b6-f572-4858-90bc-f39fcbbbf93d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "503b6598-e807-47de-bd2e-087e5bdd4b8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "499fcba6-b4bb-42f3-993e-2bfb996679ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4abe7a-1a80-499f-ac1f-e223402d9c34",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580f6372-4fc5-4aee-b9a5-30f599e180a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0f1bad7-5947-4dbd-aa16-0efdff52b0e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9df2037-6b94-488a-ab02-57d2f1721dc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4aa90601-ab31-446f-a2f1-23a894482ed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67f796d2-3977-4ef4-821e-f142dc817fd6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7acc45-e194-42b2-8291-c6f479ad7560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "760ab07b-d1e6-42fd-b335-9536450ad978"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92725d71-6428-452a-8475-7e28097f8a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da109032-f516-4d32-9138-a280b0128db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4f9686f-7f7d-493c-bd51-651f8929e14d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d7ceb2-e5eb-44eb-87e8-a4e5ead3115b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eec03e5-99d7-4109-b3c3-e68510f971d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20559882-0b8a-4b91-b9a4-162a7e60fcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc935515-a883-46dd-82e7-dc934fb242cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce7881f5-20e1-419c-bed5-c4e2904ea2aa",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36476e61-9841-4949-8fb7-01ab4b9d95ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "740a2a90-b9d2-471c-8b10-31c3d0bca204"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89de15cc-02c0-47d2-a55a-c44ad6d7c2a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "20a1a1fd-a756-4295-a28a-c304a8460819"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d6a6d3-48a2-435f-9071-6e8beca801eb",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e1bf1e-5782-4f29-8d1a-e88d8d25c5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63094b9c-fcd8-4904-9f0e-836f1ead66db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ba4f283-628d-4a18-8e13-27efb94b32f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4670ff3f-6f6b-4168-a78c-8ebb179d81a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c72b2d3-8499-4925-bbcf-08150e48d374",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31834ee7-5ff7-4db2-8d82-e63e81de7227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e0ee5a-5b33-4a34-a8f5-8b6d1b1b725b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa6cbd3-a74b-4a6a-aa0e-723393d1e95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e50007a9-d45b-4915-aa8b-0b734ed33a03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137d2b76-3c27-453a-856f-f463a5df0859",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0db804-558a-4a7d-a31a-41a6a8d0cdc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f95c4350-616f-4f9b-8690-d0b7a9bd1f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a3bee6f-0a14-47b6-b86e-bcf484e91088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "382d3c77-25b9-4c4b-a4c3-bbae8c75fec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae45ef3-3b28-4c5d-81c6-cd4c4315e650",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a18e09f6-a629-46a1-9482-974060257131",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1372b54b-f97c-4a0d-84d6-86ca2f4847e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8daa8b94-706c-4e46-8427-4c2f811318f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "991a3973-37aa-4260-9615-6d9d1ca7d572"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bc60661-f606-4aea-93ef-fc91b9ca0a7d",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d05e6848-3845-4b73-80ed-fa6b23f80fb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "658e9a5b-7d9d-4afc-bb58-4be177b8276b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d059183-be67-4c07-9cb1-6de85f4cb283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6eeda314-162b-4c2c-b7fd-74b4272ca9a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6397525-a53d-475d-99e1-8d834b9c29ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc98969f-e8e0-46e2-8408-4328d410ea81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c8cfd41-38d4-43c5-b7b2-b9ddcbd448ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39365c09-05ef-45fe-bfbe-10342cf55074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a6dc443-928f-4f69-9c7b-ae7abe6c1759"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202c9a27-ceff-4731-865e-97a90313b5e4",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e661b361-b13f-4a83-a0ae-836663705dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89a0646f-03b8-4929-8b2f-cf6178653c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29d59ccd-7209-4cd3-a954-45e6b2f33e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1bf8853e-0d71-46de-b1ca-6af3d58c26ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c9c8388-690d-4d36-b72f-083f16ea5808",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2f32a4-0d60-4fe8-b7fd-6f859227ba62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98b90fe2-184b-45b8-af08-31695760bbca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bbf95b-e4b7-4301-ace8-d8b7616ae9e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "801b793d-08e1-4620-8ff9-3b425f2405e7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2aede77c-3298-4d04-95fd-8c6af241b654",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e9b28d92-e31f-4a3b-9400-cfefea07c2e9",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fc4f0b1-df2c-40f3-9ca4-a13b39ef1670",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6e8857a9-4b80-4c48-9cb9-5816830f66ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40f76bf9-4e4d-458b-9a8b-42fd18240b91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "18880b73-4d7f-41a7-b84e-cd1072b55003"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "babb764a-a096-4373-816b-a3dd2fedb319",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1179b0ce-c343-456f-ba0b-1385d5138981"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "71d05c40-f449-41a3-af9d-8af7696a5e9a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4c48b54-8c20-4022-a9f7-887a6dc97e0b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d773267d-118e-408e-9d8e-7496c06753fa",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ee2a1939-9c0e-45ec-8740-aa47e753cfaa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "70b4a48d-4b9d-4787-b0bf-567ee08907d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "21f4f042-2ab5-4dd9-a7cd-435152f2e5f2"
            }
          }
        ]
      },
      {
        "id": "4a41da7e-53bc-4832-8a98-282107b5ed1d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "7a9db429-f6a5-4e22-96f8-f5a95da9f466",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c33cf042-9047-4658-9075-702264d12d31",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1d283ea0-fcee-43be-a3d9-81abd63824a5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36766bd2-c68d-49cc-90bb-b0ab64be089a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "851f5c21-f346-4b59-a078-e033fb28f5ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f424af1-e49b-479b-b462-1b792adfa197",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf37f670-a1b1-4bde-9b74-37ec13dc7b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d232fb-cfef-4115-9906-6b7e10491200",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4459890c-292d-4f82-8b73-db087c0838b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2becdae-f2b5-471e-acaa-2155e665bf58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c2d4a0f-0318-4481-a3c2-53ebb7272692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "845ef114-54fa-4f1d-8337-0bee91819b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9043cd0e-4873-4ded-87d9-f49d7089e23c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddd3d6fd-cc82-477c-b6b8-4daae7833ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4959cab-8750-4110-baef-353b0156f12d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4a09bd-a165-42a0-b794-952f11efa33e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "06e5138e-6be8-4cf4-a3ee-2bf6d72ec7c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d34535c-c498-4452-9fe2-53e6a44502ae",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77fda998-6606-40df-af41-38be3bec52c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13d61e47-73c1-474f-8b5c-2557943bd695"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d594aec0-0a0d-4056-9989-d8510584882f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c23cbd6-a026-4dad-acf3-a1b60597ebb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18e8deed-836c-4ee2-8545-81ea90805a33",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ee8632-a8bb-48a9-ab1e-e51b6c4ef7ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2ce99dd-fe4f-4d00-925b-546f9a5e652e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58d3a238-07aa-433b-b4e7-b0fd685f0710",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "063174de-a81a-415a-952d-704b68760e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e6559de-73d0-4452-afed-a185515bd544",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2b20f1d-5fea-4fb8-a470-c9e35bf9ae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7587ae6e-c979-447f-9e5b-0fd4b3570b71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ac6de62-9164-4183-8237-822cfd849b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b2270488-1e78-4d86-9523-0b31118c566e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a6dba0-0484-4490-9a3f-6e672e97d089",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90fcc9e0-d669-46b8-be36-74f870c48603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1225c7b-8be7-4852-9912-77266100be22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847d327a-2059-48f8-8789-2f26bfb0c7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "7af91ddf-2406-4d5b-b555-40685e3e7e81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db207626-2f27-4620-8da0-6fabf5e55d14",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5d9fb3-2875-4854-93b4-18a9a4807f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59b960b8-bf2a-4e60-b761-f6a5dbeb45d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef0de53d-9664-49b4-8225-8ca62851e62d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "29fd4606-87a1-4b7b-a530-9b1f0ab5f0a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0148854a-0d75-4259-a00c-77b0daf5d8f6",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffe19165-bcd2-413e-b6d5-18f68b62b115",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b645b87c-a629-4a4e-ac83-f4833b29a796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d6d2bef-b85c-4657-ad0f-4476d52625dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b5c03fd5-3c1d-4153-901d-d90160e79d6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14bf4d42-c8c6-4e3a-950c-52a7c9cb4c4e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23228487-6218-4fa4-92cd-0d3ea79bb6eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a467b4-e8a3-4af3-9145-2aa1b1f99d75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dffff222-4d26-4993-8280-051b00f1856e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "499f440a-871f-4022-856b-c15dcf0fbe6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e4ae664-71f9-4024-aa16-c66900aadfcf",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "248ba094-f5ee-4574-9f60-6ebe885d90b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c290c57c-138e-4925-a161-15d1168814a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8147a4ac-7253-49ed-8a5c-7ece02117744",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "35c80bd2-0b5e-4960-b9f4-54dc4a69d33f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "413ceb3e-412c-4689-8922-f9203e36f799",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "641707bd-373a-4167-94f9-14a404a8a1b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ac96d85-b8b4-40c2-930b-5a6d0d169135"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e99f895-de47-4efd-b391-c15293d0cdf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d38937ad-8e9d-4b29-8f58-e76ee4f69a48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d3c474d-5b00-40cf-9616-86562650e48a",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd3e4bf-f2ff-4a6c-b40f-21da27df0a48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcfb0cd-a7e5-49f2-bc11-c014b01c01af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "789491d7-0368-43fb-9b9b-533251571ea7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c5d38647-8948-4c31-a56b-7782a5ce475f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f07d02a-df7e-4bb2-9806-399c6c4f9179",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1154bdba-b3ec-455f-ac4a-16c5b3982f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3ab875-b2fb-4553-b9dd-ac3ebce6f305"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24504b74-39a2-4bf8-aff2-506c520e5fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1b2f2b-e14b-4331-93e8-c72f428bb2ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977d6247-ef34-45fa-babc-2e5a6c5d14fd",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c6f55ea-30d5-4f6d-9739-9fde1cb9cb77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78f3eefa-d3ed-47f8-ac55-2926273ce74c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed8fe40b-807e-4c59-b37c-1f2e4d4d5cbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbc3a1c1-b834-4afe-b7e0-46ec57c48a87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ffc9c1-f5fa-44e8-befb-300b965c6ebc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a38688e-69e6-458a-9d9b-b2a1a61e6b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28214f03-a191-4824-a8a1-af620eba3542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8c1300-58e2-41fa-a312-0c088bca1e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "68546648-2932-49e7-9dd5-0970849b18e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b902d6a-e0c9-4a90-a4d5-2925e364ed2a",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3806613-8c05-4472-95a7-bfaca0241675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa2b5a44-bfbb-49e2-872a-4c7f86d04166"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aef89f9-1844-4a3f-8499-6526ee371b40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11daa73-68bc-476c-a8a9-51cacacbb06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "497a6e35-57b0-4d1d-8562-58ae374b3e0f",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571c00a0-40b5-4e4c-9332-dd172eee9b33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82795662-dd4f-4961-8142-42f1ba19add8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65b6d3b3-b58e-48ba-b377-c3a263fb8864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9fa005b-f54a-4d27-ac08-ad3b2d129aed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0774caa-91a5-489b-b818-f4ac7d0af478",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d916a569-fdd6-446b-993c-3273a3db2250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1ab20f02-8c86-4f3b-aa03-b02c495d9bb6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9640005-6845-481b-8580-b04212ee0672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "25fa5516-33f8-4523-99a4-d28aaa31172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd08e13-a6f6-41cc-8241-49b6c753e9e9",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c97271f7-22d8-463f-bb63-b68be0eb1f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "898ac8aa-f683-4972-b9d1-59793d0d3e70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ce8a50-3cf8-4e50-8e60-106120041b75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a74286af-7300-4d68-94a6-1b114faae26d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5382bc0-88d6-46a4-a012-b30ed3379c67",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a063e981-cece-428a-8a81-ff1aa1d49edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b841421-7a49-4423-9021-c72ec4c4bb49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454634ee-6a69-427c-979c-7cf1e4a33fa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49f71e57-ad0c-446d-933c-29b227130440"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53975c91-316c-405d-80e4-9f4326699009",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8421ea81-df5c-448d-b96f-58a46ae95749",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6141ea9-c75a-4f96-933a-bff03dbf4e83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c11b8d2-5c33-4a33-88e2-54a4e49808e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "395f97fa-8f86-4541-b438-16293e4c402e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e234ce07-f710-48fb-9602-50fdaf07f344",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08bce669-c958-4da6-bf1b-3714cfc54a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae2dfd4e-56a5-4e91-b459-94b2ac9d8965"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34e95d69-f122-4ffc-9966-898ad969b764",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f7ccab8d-7510-4418-ac75-0657cf241785"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e56c986-1532-4d46-a713-722c6a814286",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fe72c91-5046-4ae5-93b6-f4cf8579ce65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbefae67-5e7b-4370-be46-c0de92cff3ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a6c1fd8-6205-4944-af41-abca0f6d7e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09618835-1018-4f45-a3b6-6fc3ddb00285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "576e44cc-0566-4858-9a63-6289f958ab2f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c180178-5e6b-4741-a2c7-cfd4c9fbbf82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb03bcb2-39ab-4742-be52-e64bb724e3f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eff73fe-25b9-4823-b1e8-1c7cfa98e6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4adcd155-651b-481c-9e9c-cb0039f1fc73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d8849b7-2c1d-40ad-8063-b946a840be02",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b2c6c83-0270-41e9-a9d1-c1dd1f16b775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0974ca46-b722-4444-9966-46fead624920"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d06f28b1-2b39-4e59-8d58-9bec50189f27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c594927-dc53-4aff-9a20-545021d4bcc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84a052b8-8ed7-4a4e-bf63-58ec9e5315bc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e32cc45-98d5-48a4-95c5-dfe2255dc02f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "742dbe28-a75f-4eec-b3db-f659d8f013b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecc8dc37-6c0b-4015-a4cb-33698217aefc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "45d75128-76ef-424e-8d3e-12045a2ddefa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b75fefeb-d9b9-4599-9f0f-6befcad207f3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb61cda-ba15-497f-8da1-fd38f119c6ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d494efd5-1661-4d5d-9909-d33797d55e4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd162bff-fe74-43a6-ae19-fa09798c248f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fd5454-472b-4426-b8be-42f218020899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5db4d9-e3ea-4c1d-a825-5a205155c376",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39ea7ea-5ed4-4bac-a2b6-7d6727f89573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e61c9ce-430a-4a4b-91db-8fa877a2abf4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a88197dc-4cea-45fc-87a2-95b7a8d36fd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d4b14198-df84-4e81-ad62-a119ff42e2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97a42203-ccb4-495d-979f-bdfa659e46c6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3681c93-5117-47be-863f-62f63d91944e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37846c3f-a19a-4af9-9ee8-d1ebaff4c104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97137ac9-5900-416f-96b6-10497b297752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "356e3207-b886-4bec-958a-1e567eac9db9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d3b6db-f473-48a1-aeb6-a1a98ccd70e7",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c80d3bb-6d0e-469d-87f5-a24694e2b4b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b45b55-a29e-41b9-b994-150c350971b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e7e3c97-21f9-41b5-8d1c-743f7d118940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21fe773c-922f-4d21-b66f-726169c7994a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063d9cf9-9fff-4564-973f-159cf9e4751e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d9b5e24-65c7-4a61-8a59-8ee101461d2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8af2384-c74f-4415-b399-7bd83a750638"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcb9b86d-65a7-40a7-a44b-c1c4db046ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9453379-6b3a-4990-80cb-6a48df848604"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7dacc75-e38a-4725-a683-e222751ee674",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2981bde7-a55e-4b87-a6c1-0ab452dcef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "991367ad-3d91-4da0-8441-c75e2a2eb8bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42468df1-0b1a-4727-a935-37928bccfcef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10942830-505c-4324-8cc3-c07886dfa168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ce6e28d-54a9-46f8-a68d-9ec00f32325a",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83442878-97b8-49af-9dab-94c55bcda6b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4597f073-5ffd-47d0-9035-a54eacad3acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a7cfe22-28f3-40db-843b-85da201ec034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "62afe74c-36a4-4958-bedd-f168e7e039ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9336741-d522-49f2-84e9-62e6238ef918",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c40bea9e-92da-4fb1-9d04-fcab427b93eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d66bea-0430-4ba6-ab14-a32ee4251005"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91738182-3620-4e2d-a312-9d526c0c206a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f96d1b3-1536-4f61-87c6-8a3eefc2d789"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db4a9fe-5379-4774-822c-e59db1c3207d",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d84376b2-53a5-466c-b881-1b57aa6e7e86",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cee56422-f0f6-4d5b-87d6-4358ca39ad78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5f2c374-9b26-4813-a4ad-7271fb4da897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2f6f69a-5cb9-4877-9649-b753ee89f896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9297254b-c625-4bc5-ad5c-418dbd5044aa",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2e18a46-80e7-4cfc-b2a8-a5b1b1c84abf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c28e622-849a-4603-b0a6-f7c9045953cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d9afdaa-cee7-419c-9556-3f54232f54d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c64107de-18fe-4989-97dc-bfa58d0cc753"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc882b85-0ced-4af3-a94c-87cb3ecd55f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ab47b5dd-3627-48d7-a0a0-5fbc21bfd8fd",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e4b3899-bb85-44fe-915a-ab5713080f62",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1ffd4f-6ba2-4a47-8358-2ca9a0b31a1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0381ef46-14f0-4786-828b-246762bca9e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef7375cd-ce03-4b3e-80e4-cc69ec6de4bb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db268918-05bb-4123-8168-7479a674b19c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6602986c-8f1e-4316-b0b8-a6ec1386d545"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a91126a8-6031-459e-94b2-37874f4a536c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8e02a31f-99c8-4993-8bf3-7a313060c29d"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f82dac8-d2eb-4e3d-bdfd-276903f5f4f5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0e1f79c8-c1cd-486a-a05d-9eb9add327c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2ad80673-94a3-4460-8f47-f2aef1463d8a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "58208cf6-3601-4b1b-b2d1-1b7e400318aa"
            }
          }
        ]
      },
      {
        "id": "3c54462b-b66c-41ce-bc5e-a660d5b434dd",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "4593e3bf-f5d2-4628-8882-09f0ed41dfd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d095b1b8-8f7d-4ee8-b1b3-d158a209f5f2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "630b9fe7-593f-47e2-b43a-20df35d136dc",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23d0f15e-82ff-41d8-9ee3-e5c43794e70b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a47393cc-ec59-44e1-a274-36e57e34f966"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52b39699-6b8a-4533-95f1-0c004bcba383",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25946473-3908-4c7f-9fc9-22907fb1a84e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce5b72f0-1f9b-4331-87a2-5ef0df5f8e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbdd2a4-ae3e-4688-9a64-7586f6250ee7",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85f8ece7-90f4-4238-8063-11b35090073d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "136830b6-c3f3-4217-9821-b3061ed7e43b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e247ef5-13dd-44c5-8af1-8053c0a5eefc",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdf08f44-182c-4081-9f91-29c9b60ea6f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e5b3da3-3c84-46c2-a913-13b6e06ada4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3bce54-f3a3-4508-aa03-1349fc1fcee1",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ae51bb6-75bd-466f-a619-03e6c70a5639",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a723a2-286b-4d18-bb8e-6977de000a81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15cd85b2-8b13-4dce-a549-7e847413d0f3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4e50017-35cb-4bdc-b152-d98b67643aaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cd6e7b-260f-467a-a286-fb2ab1238b0c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce829294-e8d9-4631-819c-3e6b2db15b06",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05631166-c046-4515-9a57-6206ad73f772",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e631e3fb-e0f1-4428-8531-5aef19c6b60a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "121f83bc-7211-4b53-b9a7-735961f14667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0cf2084-85b0-45b5-807b-dc0815db472d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdbdd9c7-fb69-425e-9afa-27ad16aeea84",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bde1b449-3e7b-4287-a6e9-a724a1ed8022",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f2175fdd-78bf-444d-bd48-77180441bfba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc72548b-5b0b-4ded-b373-b0303a8c4d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb993f27-741d-4ce1-a2a6-8f88e57bff73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1aa10459-1f4a-496e-82e6-1ddfe10021fb",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8eaf959-f945-47e0-b0d8-1849d9abdc3a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4f6912a3-0aa8-400b-87b4-02e8d9e575f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c275d487-2bb9-4474-9629-d492c2124899",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d1d62c7-32e2-4549-859c-5670d6722c7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c79c845-2b6c-4905-99a4-84bcba97bdb5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c5ed48c-206c-4ab0-a8c5-be4847de1bc2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1a7148fc-1d0c-46c0-8ef7-60bab12ed46b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f637d1d8-c6f8-4f60-bd97-9b42f919a777",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52fd6bbc-717b-4a63-aff7-8f462ad42b57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6580e86f-b3ad-4394-8570-e702573a48e5",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6af22e5-e6a6-4193-8f4e-28098f9f7ebf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c4b9a81-3eb1-4ef4-90f2-6ccfd6416c55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8f1524-0f1b-40c5-ba50-13f44230239e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25462c54-57ae-4112-9465-f0341e06b78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6006d8b0-6262-4a0d-8733-832323e506df",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418b9417-a4e4-402a-9e70-947bac697505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cd13693-984b-4868-a34b-9b59d87c9ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd98d801-ee1f-472c-ae1c-36fa46bbea48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0931a1fd-86b6-4c1c-a39b-e722865280c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2cab33b-b51b-445e-8dee-39fa51460b8e",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c1da26-27d4-4be3-bac5-52a9dcf2b16f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5929fb92-1f33-46f1-93e3-2624d2420df4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600b3450-e3c0-49f8-9d79-e0c346567ac5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e504de-6208-4b87-a412-6bede2211f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e499fb0f-85bf-439c-83af-a23646a19cfb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1509bb5a-9fe8-4ba6-b2a5-4b505a100801",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf5edc9-a53a-4926-b957-d08144d0495e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa1afb60-8e28-4ab8-96a5-8bc286505cc7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f8ee7c5-fc40-4f9a-be69-ba7edafe81be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8578d85a-1225-44ef-98a8-867de98df20d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed20ea97-ed28-49d5-aabc-957391909784",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc4e2c4-89dc-40a9-bd9d-03fbfbd3fb74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b59b9c3d-7aca-40d7-a206-c03f17b29d42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad67b876-44b8-4b6a-ae7f-2a1659914271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459f10bc-69f5-44d4-ab80-d10ac2b5162b",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9e11bc4-4cf8-4a76-bae1-e331d17d10d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "366e92bd-7710-4440-bfa9-6baba91f4590"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "383bd692-f60f-4571-9bfa-f81f226d8a02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22a61611-e292-42ba-8b63-627f4aca84fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e39d01-8dbb-40b5-ac38-65d5a23bf318",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84007788-47d2-4234-90f0-f50e33a058d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a3d069-f6f2-45e6-a633-f71fa598fc0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7024ed76-c035-4a40-8c29-ce9e2a9c767d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78e4add5-6687-4c9b-98df-266cfc8be67c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ea5a92-0eb2-4516-b993-2b50769e3b34",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2327c3c9-f833-4f18-8582-7aaf1ec1cf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b1a32ee-a444-4dff-be20-27f23fef9e67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af890cb-9b9b-4603-9032-fbeedf1f9807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5b64e4b-35e2-4902-8a23-cbf4621897f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78420fd8-abd2-45cf-8df3-b6b7aa0d4790",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c60236f-8349-4318-87e3-772835cf8cfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74163b10-3a59-4baa-bb7e-0944b6dbfd84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ea2314-002d-4f72-9b6e-ed98dd928421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b1263cb-bf31-4b62-8896-2f3d0188005a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad52a96-5038-4fa6-aae4-b4fbbf5a94b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f5750d5-ec09-416b-9493-71895165f99b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ecd8d8d-26a4-41b6-968c-0392198b2a8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6027c4fa-230c-41f4-a31d-ca8095c97e60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b89b727a-9ae4-4985-8062-50f94c889b49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1721ba70-fc12-4865-95e7-a4c2685a3c33",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5bec1d9-1062-484c-89bc-97d320ad98b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b73538a-4f85-4094-8c84-dd81c3a00723"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71f99137-ee28-4ed4-b52a-a88dcdf9ea27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a62162f-a18d-4488-936a-1e1aa1c57d1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5ddfdc-f865-487d-8e0c-eb67c1d605f5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb066eb-93b3-4b9f-b3da-099d7c057f45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78869a9-fb73-4a16-abb3-75bb625a93bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd59aa16-8e18-40d4-a557-eaf8561c87ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785cbe5e-1ad5-4759-9f87-8f0da3180744"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e7742ed-ea34-4121-870c-92aa26460eed",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b103830b-b443-4a30-9761-a43ec16c3cff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ba42d97-e49a-4cdd-aa84-106bbc62527b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6998a9da-8a8d-4122-ba3c-ed7907fa2fd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c3c300db-044f-460a-a5c0-b61df003cc78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5d8cde3-0441-48ae-ba3c-1fc71c686382",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8479fe6-d885-4df8-8955-2bdb48148058",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c87c768f-c5de-4798-bea4-4a37a6d57fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "208ad84e-bd90-475b-a9db-01c0628001bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0658c7d6-096d-49bc-9fb2-98850924f5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb10a26d-d358-4a4e-aa1f-99776d4b3b10",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99be4667-df35-4a85-ab1b-f6992b13680c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43817d4b-ac73-4eba-ab82-597b03b147c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d1113e-31e8-45eb-aba4-95ce79f5f2ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6500d42-3fec-43e5-b5fa-96da55d45ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f60d9dd0-f610-42ae-82b6-5c030140d187",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00017d74-b966-4606-92c1-834fb46e58b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a1aaee5-3895-4321-92ed-75b717213648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5db48bb-311f-418f-b7fa-a764034e265b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32ffd0d0-b2d5-40e5-9e12-f1be39e5c08a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ccc4d1-e0ea-4385-87cb-d77d68c840ef",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd256f1-d268-4c6f-b431-73f8611bbb75",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc43ce8-960f-464e-b4fe-218402027df0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e046c6-ec5f-4df0-b876-0899f37ff6f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69319d7-9d72-4eab-9082-1aebe0759b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1638edbf-90e2-46f8-a84b-09c25e78cef3",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21a3c661-4bbb-4902-ac8b-14a7ac66998c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac5f85d6-26d2-4c0f-9e69-961b6c772120"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8133e994-4704-4d4c-b3d3-f624e4c3d4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13700210-7eed-460a-94f0-d3716c8f0f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14ce4854-ef03-44bc-b8f7-3955cba46436",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5161f975-95ee-47ff-898c-6bb048b0888f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7eacbb8a-aae4-4f41-a48c-9a0a9c7a5636"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "252a61a7-6daf-4b2f-b4c4-c5a4469f85dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd442c94-f1ca-4a1a-85b3-9d3100461923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b870a526-46cd-4c8e-b718-e3838ddd2e4d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5105cca3-29a6-4c59-b686-ba88c2968f2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "750c78d7-ce86-4cd3-a452-4594e2ae3ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "087e7c74-63f2-4c1c-8f03-5a6c71484245",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f19993b-cdc9-432c-9d33-2156718af802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b04ab5-8311-4925-9a25-cfe48a40e7d2",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "070365ea-929e-4e78-a6ac-333bfff29b31",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ee37964-7604-4925-90e2-cf29e67875fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abc4ea5-586a-4cd1-8aa7-aae620c5c7ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49486154-8006-4114-b96d-c9697b1ae82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02033d3-2b5d-4d20-883d-0a53fbb64e0e",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "398f35c4-e37b-4d9b-be18-7f0c4867707d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51eccc2d-54dd-4d81-bf7a-3bbf482fcefb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19d6b31-aa36-47ba-8c1c-cc21c31d3c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "502eb762-6225-439f-9190-9ad3c00583ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3adce07f-4194-4ef4-bf9d-be032c11cdac",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab73d1bf-a8fd-4fce-ae30-85e4b8e3980b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a61739a-d777-4349-a830-2cdadadd20f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45da0107-4627-4c4d-bf1d-e318468c2c2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d647cdfb-a501-4e74-9e2c-9a1aa4becc55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ffe26d5-17f0-4a72-8bd5-95df56b966d2",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e64de7-6ca4-49d6-9fe1-317d62664809",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "412783f6-f8bd-4322-abc0-ecf2272179e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42418dc5-f1bc-4111-92a1-c2f7a5203a36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b611f46f-0ce7-4214-82bc-0a725714f92e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3169992b-0071-4da4-91cc-276e37ae220c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44688bf9-bc2c-40bb-b3f2-8a75a2e28b93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "685c4fc0-2ae9-4d36-801f-df1df4236755"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9661598e-d9ad-4f2f-bc14-660c4ad90f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01aef2a7-d977-428a-845e-d63970aef190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "320ae7a8-1d92-4b4b-a6fa-93a2069fef75",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c8e34ab-b788-4199-9090-aa1b75e21bb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d041255a-90b2-47e5-a950-c7306eea492f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1537d83e-b798-4118-9264-bae329187f89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33705a1c-707f-4c9b-833d-1b85b5f69ae6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40577304-1a91-474e-b918-e43874cd73dc",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c060bad-f639-47a4-b7c5-706d822cc13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a38feb-1713-4b5a-a8c7-ed5d9a909200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4d4f74-b62c-4941-951b-465e69e15359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91255b54-fcdd-4a7d-8335-0a2eb17ed331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb898f1-718a-487e-bb85-625ab21107c6",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c9fb70-7369-4bb3-a411-cb671c37d312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f8c21d-b76b-438d-ac89-f3537e0a2c65"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f6a0b23-bde7-4cd2-afe1-1babc08cd76a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f672b30-a5b1-4396-a038-f9812efaae9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c7355a9-0a40-4d6d-8f32-67d4126a2f46",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d480530-b4fe-4818-9b4e-e3db8e2e1b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "129dbeab-5d55-4ffb-ac5c-fc9f23e93ace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "924afbba-5734-4abd-b5e3-456861b143f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dff3588-4974-4856-8636-b358c0f6cd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80962eb-d30f-45e9-a5a4-9294cd96b614",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e79e7fa-b938-44e4-8ce2-f90bd013ed60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87e5eca-0e44-4268-a107-fe8c8c94e2b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf9233e-3e54-4b8f-8ff1-801be3fc61e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c73781f7-b131-4099-99f9-bc2774b99b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1da6b0d5-68d5-4954-9130-abd5ee06535f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fefd4a87-4d39-4b49-a1e1-7db1f9341d9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545e33f8-0945-483f-8049-482f83b521be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b31b30a-3a14-4450-aa6d-fd0effc657de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5540ae32-d994-4159-ab68-fb507e6ba937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bde35092-8f42-43ff-8dcc-cb54e1635df7",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34d22111-313a-4217-8a9e-e2f4808ee6dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f53abc6c-af05-4f5b-891c-0f3c9c682460"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59efdf11-02e4-46f3-83b4-063e51838c7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac19d28f-3523-4c4f-8b82-fb74e865038c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d85412c-f48d-4cdf-97fc-326622f8e2a3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5adec7c0-0e26-4831-8da3-a35ee5a12b40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a87f3037-7653-4e8a-a739-c77b992998ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d83e260a-973a-48be-b416-b98cad309ee3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14407343-d313-45b6-acdb-baf5ca168f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75040668-823f-4496-a305-cdef16ad1c64",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11fbd80-a6c3-4f0d-b293-ac8fbf879484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d2d849e-7e8b-48d5-842a-a2ed3d2f371b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3d39e28-aa4f-4648-956d-3162b0c7e104",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45c23bb3-ba4d-4fe3-a0cd-2f147d1202a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4515970e-2d71-4944-a283-0d4fdf5b805f",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15752aa-fbd6-449f-89fb-fe50e894fa25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d6d62bc-6207-4c32-a5bb-503a861ab2eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c4d73ab-efa6-4ec8-a98f-c045c2095381",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ae0874e-51c2-464e-8142-f8bea109700f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8368df-b45a-4822-8424-04558e6c3f6c",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b9bb7f7-7b92-4ffe-8c34-b0402a940956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d3bcb1-f55a-4d19-8f0d-a92cf6112d13"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa571ece-d8b8-4fe2-8994-2d648b2a90f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f8b266-a9a8-4ff9-a9c9-083f8d6a80d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf301d61-ced7-4882-8567-8ad58d90c45e",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc62c1b-6811-4830-aea7-e88c0179f8ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ce9c2cc-9a7c-4f47-9202-dbd4cce2d15c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f00fe68c-4336-42ad-852c-8f48d9f9604a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bff4fc7-7ef7-4f3d-bc53-4b1c03069add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "565cd230-5598-496d-b967-f9764e054140",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b2c0d1-3b96-4461-b569-a798a1111185",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2d2cdbc-d2a0-41c9-8575-de83f80025b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "404b87da-1385-4138-82c5-76e8bbc4128a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5249b31e-5cf1-4208-aaf9-30eede676380"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d2cd77-abc8-4a3c-a8c1-a9c929d9391c",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6974b16f-01e7-412f-9b2b-1d23fcbdc53a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710a052f-7641-4b15-8b18-22879f66a7ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9060737-0573-4332-81aa-ceab8c2c7e03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82c3f79f-6501-4fb0-bdf0-6e7abcaec80e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "315ebe82-eb74-4121-bfcd-155adae6aabe",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e611d5db-d1b1-4e77-a46d-a5c4ad5dacb1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8efd884-b675-4d65-81ed-2849f1ec1b68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e28b44-8eae-4002-a658-76a954b8efca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa084062-fbfd-4358-a190-f22a70e9e1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0eec111-e2fe-4c84-8144-9880a83774d8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a427577f-577a-4c2f-b740-b96f8af93b15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2c3c314-792d-4ee3-9a38-9b79c2a83f93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8252cea0-6bf0-4b29-a3e8-ab6548721070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74a43e66-8c86-47bf-a3b4-e8eccb06dbd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "557974c5-285e-4780-8bc1-465e1ddd7138",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d39fe13-03e0-4e45-8fa7-b4c88a3fd7a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abd00997-8048-468e-8a4c-ee92242efbe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea14c95d-8446-4737-ab71-4e91c0d6a302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "247f0987-d0d5-4080-9677-0d787b60488b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791c9b3d-93ba-45fb-a1de-7d92692fabaa",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52a4763d-9c73-45df-b15c-edaacfb847c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b5776ad-bd91-4227-a64f-9d6d3ff01ac3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a693c2c-cbe1-489e-9db7-a9f55111ac7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c52d8379-70cc-474c-881b-18f234850962"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e95c61-59d1-4e40-bd36-5bd5a57770e8",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "217489d8-ca91-4dc8-8205-8b88d6a7b154",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b96755-ccd4-491e-9998-f3e4b1f5ee8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b4b255f-c43b-46b4-84bc-0ccfd3bde905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a366dbe5-6968-4a0d-9bf8-5806ca8b0e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50f5f189-6a40-4f9d-a881-812aa5d1327e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44305952-4e15-45f6-a43c-fc693dd3b72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d52add84-e0ae-4ea0-9ea5-58c67f88e59d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f709ae95-96df-4fd2-ad33-b4dc99f715b7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abefcc5-0ad5-4296-901d-80cba6e2e2a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c0b906-9b1c-4c3d-acef-91461841ee8b",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e7d98b3-7220-4e05-b8bc-98f9d0ca9b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8571a04-010f-4e9b-84dc-1f073361781f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f466982-9a24-4e16-8add-fed201e304a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3b96f76-3c39-4f3f-b16f-14919ff246b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "710a0eb4-62d4-4eb9-81b4-c3316d8128cd",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f639c95a-6153-461a-b15e-09d43b41fe43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02d9b89f-691b-447a-a8f9-b1ab307c3067"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e603e4b-334f-42b8-913a-fc4856b12162",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dcd617-e95c-4f39-aa30-4c66ac30faed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b5c1d9-b9e5-40bc-b6a2-213c2763ace5",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c0c573-fa2a-4026-910a-e8b479546d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27599405-3b33-401b-9b21-7aeea1e4b12f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72d44924-4a9b-4e71-819d-42d5e3db0e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85e83e1f-b80c-485a-bd4a-7a296d18b078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96efff81-8ce6-4e75-a9f7-1672c98b879d",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e0ee313-fc35-4fb4-b110-17c3d12a68d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87039064-f22f-48ac-b3e2-4dd9dc971f2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df38d1b6-ec66-4894-984a-69264b0c8da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49440738-fce9-471e-af05-47e00c75101f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce8f0c90-5cfe-4d28-ac07-45ac6deba2df",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ed069be-6164-4283-bd11-324cd822c835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e09267f-081b-4bff-af2e-0a53960c334d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab4f2aad-87e8-4cdf-96f4-663fbffd980a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c060c966-9808-48ba-bad5-e239a271f24e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab747b8f-4dd6-4aee-8b66-491d1fa43efe",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5effd5d7-b1be-418f-bb31-deebd949555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99377d9c-0397-4b01-89c4-30393fae0d14"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62512e48-c231-426f-bebf-46d8a0ed5916",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d50d941-883d-4e49-a8f5-ab694008654a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "343c4422-4acc-4336-8081-561e7385be2e",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0b228e1-4fdf-4126-a9fe-45461332107e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ce881f5-3afe-417c-bfad-eaed9ada0021"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95d299b1-3d1a-4893-9b1c-4d5466095a46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8bb60e9e-1024-4ea8-9923-b0faf3e372ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bfb3182-0cdf-4f75-99e4-336305947984",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0942d0d-3c4a-4024-a138-e8f272c86342",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "097e901b-a925-4cd3-b6ba-2359ccff8304"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7441998f-a552-48a3-a3ac-b87ffaca9c37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee12ab3c-21c9-433b-bc62-133f741756d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53106c62-72a5-4cb2-af47-26c633b0d471",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35694d05-1684-40e9-9f33-faff9cfd71ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb70fec-b877-4f74-8019-e3ca74829090"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9ae9c4-ad5d-4f2f-ade3-76f3efd55661",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb1f27e1-f7bd-423f-b0c9-1231001e8b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f091740-ffcb-491f-a1e5-732a9111d953",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2cff499-3445-464c-8062-ce3a57392d3b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbbe6466-a061-4c47-9eb5-0b34d5712c42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "061da9bc-eb3f-4cc4-ad26-dbae6c9e41cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b0f1b3b-e9f9-4cc5-906d-a16b444f39d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfae5c88-d2d9-44bd-b3d3-34f74a9c7611",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19728e2c-6864-4433-979f-9ace0a039089",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37ebec00-5209-4498-833c-92c6a7d6000b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b275bea6-6458-4f63-aa5b-ea27ddc38ae0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dead228-e937-4114-bfd5-b1a822ce6309"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d254775d-fb4c-42cf-a113-5191b3af1e4a",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b7204e-3493-4253-ad22-79f5887ad6b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d35efe97-5bf9-4305-9f0f-853f9fca391b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14b30b52-704b-41b4-b159-2117652bf75f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6ab93ae-b5b1-46a1-ae2d-ad40450cb763"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b51b5adf-b868-4a64-b195-18d32e347203",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d62e7c-8555-4b4a-932f-0e120a70a5ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a52a77fc-e520-4a89-bc16-0b6069f36301"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cddf968-a6cf-4b6b-9ee8-aa30df7873b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eca00161-c8df-4ac2-bc3b-726340575987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da142128-8d76-44f0-bbe8-0dfa194a664c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c32458-d039-4219-af31-6f1f6134eeff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "509a6487-3718-47c8-93fd-6b2fbc70d651"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3bd9b9-6dd0-42a7-b8fd-f21d7cf6a4cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd948cee-f1c1-40f5-ad8d-9df0e6f53768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcebbf3e-42d1-4b02-9d86-d23159a759cc",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7387a4c5-4c67-481b-9c73-ad932153dd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29e6a713-6cc9-4a95-a591-977b34880776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b6d45d-5fa9-4a12-b52e-0ceba766fa47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5f1147-0afb-4bf4-8e73-b645146c27ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30730fd0-7b5f-4ef7-b6d6-4487f5b281c3",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0508254e-a510-4ee7-99d5-7f7493a8a56d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79c9061b-8a24-4a86-9e5d-b9026799a48b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccaeee61-df31-4969-806d-b474b33b59e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ed5438-a4a3-4505-8d50-21a2a5cd846e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "013aecfe-cea2-4b30-b9e1-052688dc8795",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4997bbec-d444-4ccf-b5c7-bec761289a57",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95a85371-026a-4022-96f3-145f7891f806"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3142d3d8-311e-4db7-bb7e-5852338b9790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e34965-baf0-474a-b56a-73d2a9371b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba053f56-84f1-4209-a6ed-d399759c0944",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce529fb5-766f-4587-a1d3-04f4a209f28b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a8c3a9e-e0d6-499c-bd12-d49a6a516abe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc3a304-2557-4da3-b830-86f6b1fe6359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d848a45a-fc13-473f-a042-f80bf8001b93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e887f1f-c5ef-4f06-843c-009baff1be30",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a60db9d6-83ac-48dc-9082-4766b62eafae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9470c15e-7972-44f3-b592-901e3d155238"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed5a5b0e-58dc-4485-a72a-edcc1744980e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63230e65-1ac9-4e33-9dc9-e70959c9608f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0cf60f-a602-480f-83c5-4f7aac5cd88c",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b8f670-1ef8-4209-b0e8-543b8374b685",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5aaa52c-fc39-4e53-b572-4b822fe6c9f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e20255e6-349c-4ec9-8a35-b521ee7a5a6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d02ff723-761f-4054-9a02-2b62bc0bd06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd4c11b-ae14-471f-b433-56a1d437148d",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0aff308-e026-4359-aaeb-51a069c832fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4b1e1be-2b0e-4d9b-9bc0-069253427e96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c88fc9a-79c3-488a-b98a-0196b26b2a23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "342841be-534d-4980-ac1b-6ac5f9278082"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6199a5-33e0-4171-9b15-78cc78a6fd5c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2e4d65d-cf47-49d1-aad8-297082ded76b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ed9eeb-0efa-42ae-9afc-bcff02e4b837"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21c2be75-e6a5-432b-ba0c-53614f0fd689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e8199b7-2a35-40a1-b501-70937c6e2470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef25f1a6-46be-48f7-83c9-65a261b46901",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b80bdee7-93b9-45bb-afc2-546bfe48bd94",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97a248a7-5a2f-41ad-aee1-47722c41c1d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "836e6d5d-69fe-44c0-9d0f-9b91f1e75ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "344e91f5-2e3d-4df0-8041-b2b77d9cae9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5682d9b-1244-4f41-b0ae-dc5d5f8d8f1c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f1ea589-4aea-459b-9b23-dca6cf2e0039",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "061d2610-5b7c-4896-b340-eac10a5afca9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc2107d-3cad-4aeb-b323-ef8dbe321406",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ed888f-7235-4066-9d16-2112e8e5ea2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5ca96d-9871-4255-b636-a3b38bd7700f",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14b1221f-5b6f-41ee-b516-430591beef0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1847b673-f514-4425-b2b3-f0558d1f95bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b942ca7-985e-47d7-8d49-54949a2ad68b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23b72385-59bd-4a95-90d8-1592733b84f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b2d301-5b89-4c5c-931b-e9524c4c7b17",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae84bc87-b39c-434c-b4c8-5598bbc5c665",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8a3c0ea5-5781-4662-82cb-4509f0e7ffad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83fc57fc-1c19-4854-a307-67b10b06e67e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c7276b3-9451-438a-a9e7-23c1a7affc64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5667e41-8c45-4f51-a8c2-10a967db21fc",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b3725f-f5d2-4827-8b58-2554064af30a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d364c13e-c4f4-4acf-970f-2a564425acec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1578c3e7-4325-493f-a281-0bc334529269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a52a446f-5234-498d-a850-941b97811821"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c24836af-f906-438c-83bf-88c0910a64c1",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "279dab03-1be5-4c2d-a3c2-cb8311cd34b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6304fb2f-0dd9-4e32-bab6-b2db2c5caa2e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1aaea4a-97c9-414b-be98-cd16f9b359ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "851d494d-671f-411f-bc48-25287ae50123"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c86117-2ab0-4e13-9074-43c7aa97b4b1",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "628606a9-1c17-4ac2-a628-e24d12b642f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a060b9be-094f-4a86-8db5-5d7b48222198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06bb36c5-e5cf-4414-84c4-ef9b2cdbba08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf72ea3b-1744-40da-8233-7d417ba8689c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94301965-a536-4f3c-9eaa-e7ca04686c7e",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aba4813-dcdf-43d0-b904-436ee210edb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "566aa8ef-623f-43a7-92a6-532a280c26dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "991b6a58-0112-419e-b609-27541dcbc894",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c96932-69b6-4dac-95dc-0b7f8998b3bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f622ce79-c677-44e1-9186-02b031f3bdd1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1838a0-0baf-4437-a23a-3e5d9f1d350f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "029fe52b-3039-4c04-ac41-86e2e651457f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f05f821-295b-4e34-b84a-1ee5e08211b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22b830d7-f21b-43a4-b9ed-6593149d4974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f55a0e-52d4-47ef-becf-0bc2f2fbb150",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edc2a944-2d19-432c-ae13-47e7e2367d99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d97222dd-7208-4495-9016-6392a23cba4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44332180-97f8-4734-9bc7-43cf86c4434f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "547752e6-71bf-4e7c-8e96-03956af152ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c50e71c-95ed-4fc7-9c0c-34ed5013deed",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b40b9c1f-38f2-4b0b-80f4-3da20f7a96dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2504fb7-d054-4447-bd49-9ee0a3333d76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01dfd6dc-fd98-44ad-8d0c-365eed228fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "221ec775-ec3c-427b-ab19-310245c686bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d12b4e87-036c-4090-9b08-c860660b93d7",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40085730-018f-46c3-8d60-382ad375d3dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e450629f-edc9-4efc-a449-1f262a5f0b72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6401a21-2d32-48fc-b975-1a66d4a27f88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eea800-d58e-465c-b1a7-9a3211cbbdb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa263e5-d279-4282-8309-b3e628eafc47",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "211ec976-1790-459f-9cc9-cd0370a69783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "122c6dd3-8584-4c6d-9f04-411fdb919302"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ebb580-8dbc-414a-97ab-08783342ab0f",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6080a925-edf5-40db-b899-da76bb280265"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd171858-4a05-4800-95eb-66e3d3e76c41",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c73fa01-399e-4480-b605-a2b31d39e503",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "122ad521-0d01-433b-a875-254b4e368eba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4447dd1e-fc0c-42ae-80ce-bbd7b4a9b470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16976d86-35a4-4f3e-a79a-83d3b01b5dac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1e1e8d-f214-4317-aa3e-6c885adf12df",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b43e7146-e38c-4b7a-b01b-7055a8f4434a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ed355dce-7126-4dd0-ba3b-96f731faa813"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bca8f234-8fa1-4f80-936f-4bcff73be474",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "230fd5eb-e308-466a-bf5b-7f8dbc012c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bb79d54-eaae-461f-b87b-e609912dcebe",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f43cb09-5b08-4f20-88f1-b8e74bc23ab6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98582f1e-32dc-479d-8ccf-40ea6a119caf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50bec7ae-a98d-490a-af74-fe3525c54d99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12981aa7-d129-435f-a8d2-cc6fa8e4c36d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca7bae3a-abf0-4454-a946-d650c9e5fb8d",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49dff0f5-9c10-4fea-8110-f1868222824c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a05176d1-d547-4836-b76d-247ce99033c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "512fb4bc-bdf1-49af-a6b7-fc5667315756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7221f91f-640d-424c-b17c-a8873f93ab3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a44aed-0b33-41b6-99b9-7a6542d9f838",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e78d887-fed0-402e-b114-429c9c3d407c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2121721-88f8-495a-b593-7e9984e70d00"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9757f3f-30e9-4bc9-811d-0ae21919aa9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35895eef-08d8-491a-8a58-169952919339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61ef316f-6652-4584-ad17-a8d4ec44be8a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9853623-b2c4-4104-bb00-50d151597bff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fc6cd019-4f1d-47b1-929a-79de1a5aa814"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bc184f5-0fc8-45f0-9cec-a8a2e03c1a65",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1dcc985-8cc1-4db2-8d97-fbcd196f7fd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649902b2-fdc2-40bc-936a-cc31d65748c5",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d30804-2fd2-4779-86c4-ded448355adc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4a6b640-9c19-4b07-99a2-f3ed2faba8cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f561b06-4318-4ec3-8068-1e3dc5dc5168",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bdae9169-e1a8-467f-aade-4b63a203659b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ef66d435-ed01-456b-8850-c938b2f25ca6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e94957d3-4d16-4570-99bc-a97656f97f9d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46309f27-aa1a-44c8-8419-bd4c0c1d1869",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6c13655e-185c-45da-9769-85f0fb5c613e"
                    }
                  }
                ]
              },
              {
                "id": "b8112649-da92-421f-bd51-97baa09efa9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fab71f75-9307-438e-b53a-dd2e2649df6c",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86997a9f-6051-4743-bd14-00d77d861c81",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9482c770-11d0-4934-b125-7f8ef1a3ef9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e1176c4-c2f3-400a-99d1-05cf86c11504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "43c4b06d-d6fb-497b-afdb-7c282aa570be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c04b762a-157d-42e8-8be0-ff69603832e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "283bbfc6-792b-4348-8f64-5b13d4f0ac4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "40df760a-e7cd-4fe8-8061-6e2483ba02bb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5702de72-7e07-4820-ae2d-28832e3e4f26"
                    }
                  }
                ]
              },
              {
                "id": "5bea551c-9d6c-4105-8f48-633a149f4651",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "d8a5796e-ac5d-4786-bd12-ceb87fa6d056",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa42beb9-8b38-4b98-b46a-9c3abfab09b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "5abfbc12-4b1b-469e-b776-af5f4b9777bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd0c511d-6ad6-45de-9869-571b9d1c8e89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b582711-7191-4b58-976b-8af127f0bda5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "80b9d8d1-c1db-43e1-b41b-3a6cc1706924",
            "name": "Positive Testing",
            "item": [
              {
                "id": "0ab73ffe-2c8c-437c-aa01-20c0245531e1",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "57115081-81b5-447d-a932-628c3faa1542",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "49a23946-fc23-47cd-9981-88d767f54a36"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "78bdb4c1-e90c-4e50-8d12-5f02c9b8c7ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "23f73fc5-9f57-437c-99e8-b2ebbedd891b"
                    }
                  }
                ]
              },
              {
                "id": "4e8a2061-b804-4bbb-82c4-4ed77fc499dc",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bfe65dc0-1dd7-47f6-9252-dcfc1b9b2df7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "544287de-0906-48ce-9c18-987cc796ec77"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "492e829a-99cd-43e7-8fca-46a10b70dc24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ddc3f6d8-9ae5-4193-94f0-666600b62bf2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d295112d-05a8-4384-a05e-5c004d526ed4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "a0fe5cc4-8887-4e44-b21f-480cec44f874"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "813e5cac-1488-445b-8365-1e0d110e234b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "df5f74d0-c7ff-49e1-90f4-8fc5f37c4085"
            }
          }
        ]
      },
      {
        "id": "5c12135c-ca07-4883-971d-8b1424a8fe59",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fb4ba7de-6a15-4c49-bea2-a30c43a53e44",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e1c0308c-892b-4cd3-a198-139a599e73e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "69a64603-d88c-4ff1-857b-9e9ff6ab6649",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7258645-d192-44a0-be59-e84030ca570a",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "50e3e3b5-15d6-48d0-98dd-de4d9855143e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7470bdf2-21ec-4301-a45f-84c09da6e222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6086aec2-1bde-4f3c-b946-9cdff82dc667"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "23b802f8-ced8-4581-b2a6-fc9616e64c22",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4c44f700-2b20-4424-ba67-41f0983eca46"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e636fdd-f629-4487-8283-66c0e766aa84",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9388fc9b-ab29-4ffe-81f9-c869c3ff77c1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0bb11865-abf3-46fd-9c1d-98b5212179ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "989bb29b-7a51-4753-9c15-078ae090c8d6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "62a7a802-1fcd-4887-a755-85fa7efd7c2c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "65691de3-1126-4812-a435-da172a6bd32a"
            }
          }
        ]
      },
      {
        "id": "22125431-ec95-4502-a065-0f262fcc4034",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "78e5fc14-5e6b-4ee9-94a0-7e6c1a73b817",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1517923c-f105-4357-ab92-82e7b1351d5b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "685ba680-818d-43bc-95ad-d1ebe535cf4e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b96bf25b-ecf8-4995-947a-8f4a64a5d5d8",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "635dbf3f-c396-4513-b032-8d7a0cad1436"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "437554f3-103b-4c2c-b399-6f449bb2334c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "50b0317e-e4eb-4f42-918e-c7e2e56b7f89"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71f770ce-d70d-413f-9347-5fff434e74ed",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7d6a947d-d600-4b47-8339-c7e7a0b4fc1c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "038899c9-c861-4b9b-bed5-822647b1f1aa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4ac64805-ef30-4367-9404-9ad50ad0f4db"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d6fd76c7-87c4-4e85-a4ba-c5c4c9ef1e50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "9188254f-ed92-46f6-b218-5c533e96cc91"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e1286d07-260b-47ab-9d34-91d01dab73dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "dbbb8301-72f5-4709-bd6b-8844e0a3dcba"
            }
          }
        ]
      },
      {
        "id": "2ec024c9-2cfb-41ed-b6f9-1faa1a96aa93",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "e13b589a-ad48-4dad-9f1a-c90e622e406d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88ea8cca-e168-464c-818a-6e1191c79711",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "83d104c0-569c-4c95-a69c-a03cbb2db8db",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "477c4a4d-e416-411a-9d88-39478b60fc32",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c28983f6-70e3-41d4-80a4-f00d7ea15279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a055aea9-b6ff-4b80-864a-c692737f9b4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "467d58ce-f3de-4835-9da9-ed189fd264e9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cd21812-8b88-46cf-8c96-a503fca20fe8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6c696b5f-f4f5-489f-aeea-390c282d2fa4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3bf65f61-6bb9-402c-b1e5-1822a554e958",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "156c81c8-3543-4b16-95de-ca6689adb1c4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1eca693d-8580-4bb3-8d68-52567050d366",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c1a81cd-0764-4c52-b299-e80549525e1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ed45c9ff-f91b-4647-bf1d-86b68f4f1880",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "67a75539-6cf2-4302-acfe-0c7f0e6d7ae0"
            }
          }
        ]
      },
      {
        "id": "569c4b7b-0962-49eb-b73c-b69d254a315e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d544311a-1314-4581-ad41-540752e40f7f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca267649-2e2a-4e45-aeeb-9f794cd03d44",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "c8f2195e-8856-4fd7-b6bc-9948c79af8dc",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "de4d7408-7ff2-47c4-82e3-ac32561c1ea2",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1a8838de-fe7e-44de-94d9-3178412cc78a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 46
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 100.22456140350876,
      "responseMin": 4,
      "responseMax": 12476,
      "responseSd": 780.1671562411722,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706056626720,
      "completed": 1706056664620
    },
    "executions": [
      {
        "id": "1b9701ea-861a-4a7d-a4fc-61936749302f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "998e344f-26b8-4102-9706-0ae768751f7d",
          "httpRequestId": "a78cc55f-9ecd-4a1e-8e28-0275d05d9be0"
        },
        "item": {
          "id": "1b9701ea-861a-4a7d-a4fc-61936749302f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "b2ee458e-3862-4c48-8d47-6ff805137a1b",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "4006fa01-2ddd-4583-b6e4-b7536f72510b",
        "cursor": {
          "ref": "6a3458bb-4be1-4cb9-be0c-ad86c5c0c28a",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "47eae155-a9cd-44db-8bc4-1215dcdf16da"
        },
        "item": {
          "id": "4006fa01-2ddd-4583-b6e4-b7536f72510b",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "12d15135-de24-4a00-af36-ed802fed8786",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "2a5b42d3-4256-4843-9e70-7897ed8b4b2f",
        "cursor": {
          "ref": "08d617e8-bb87-4c10-b3ea-be47baffeb8b",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "6d2080b5-3b26-4064-b183-2455790647c0"
        },
        "item": {
          "id": "2a5b42d3-4256-4843-9e70-7897ed8b4b2f",
          "name": "did_json"
        },
        "response": {
          "id": "d805146a-eee1-48da-9299-30ccb229f08f",
          "status": "OK",
          "code": 200,
          "responseTime": 139,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc86bce1-b442-4091-b985-33d992722eef",
        "cursor": {
          "ref": "6098745e-1337-451b-acf2-aa3b6dd408e9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "633924c4-9722-43f2-9883-c095407dfb4b"
        },
        "item": {
          "id": "dc86bce1-b442-4091-b985-33d992722eef",
          "name": "did:invalid"
        },
        "response": {
          "id": "bef36abf-1ab2-463a-9352-b16fbda0afbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 916,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc86bce1-b442-4091-b985-33d992722eef",
        "cursor": {
          "ref": "6098745e-1337-451b-acf2-aa3b6dd408e9",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "633924c4-9722-43f2-9883-c095407dfb4b"
        },
        "item": {
          "id": "dc86bce1-b442-4091-b985-33d992722eef",
          "name": "did:invalid"
        },
        "response": {
          "id": "bef36abf-1ab2-463a-9352-b16fbda0afbb",
          "status": "Not Found",
          "code": 404,
          "responseTime": 916,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e0ea0e-ff8c-43af-adcb-7e364737fcf2",
        "cursor": {
          "ref": "80acbcbc-38e0-43f5-86d2-cdc6ad216b2a",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "57cfc0b8-8e91-4f71-9249-acfe426ef30d"
        },
        "item": {
          "id": "a2e0ea0e-ff8c-43af-adcb-7e364737fcf2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "422708e0-6864-4a55-8048-b30fe0937cd6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 39,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e31b65-14c9-4ceb-ab99-07124594b724",
        "cursor": {
          "ref": "c792a2a8-94ff-42b3-bd70-69ee783a5794",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "8c3ea3aa-d637-4d7d-8d43-03aa59b35777"
        },
        "item": {
          "id": "d8e31b65-14c9-4ceb-ab99-07124594b724",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "49031a6e-daa0-4ce7-918e-6fe607ddefd9",
          "status": "Not Found",
          "code": 404,
          "responseTime": 17,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e1a1481-7761-4068-9ff0-daf42ceb07a5",
        "cursor": {
          "ref": "578dbaab-b19d-4ae6-b1e7-df44f0c5bfd1",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "67f245f4-2903-40b2-b954-dc52006d84d1"
        },
        "item": {
          "id": "3e1a1481-7761-4068-9ff0-daf42ceb07a5",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "2054e8c1-9d71-4223-a15e-0cb4c60223e6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 15,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f31062-e197-401b-9bb4-fdcf966f8706",
        "cursor": {
          "ref": "4da611c9-c6a5-414a-b5aa-bc8f3cad75d8",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "43611f82-9070-4fae-8e3d-5b5e28c32b41"
        },
        "item": {
          "id": "90f31062-e197-401b-9bb4-fdcf966f8706",
          "name": "identifiers"
        },
        "response": {
          "id": "ed7be936-528f-4546-a05b-e39ef0eaadf9",
          "status": "OK",
          "code": 200,
          "responseTime": 73,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83f8dd9b-8cd5-4f35-b68b-2fae73a0ac9c",
        "cursor": {
          "ref": "088a5fc1-1d73-4063-987f-01236846f4cf",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "09df49bc-49fd-4064-99a7-d7dabb411f0a"
        },
        "item": {
          "id": "83f8dd9b-8cd5-4f35-b68b-2fae73a0ac9c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "90b235d6-489d-4b95-a611-21999fe95cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9abf6c1-48ab-4e02-8abe-672466de0de8",
        "cursor": {
          "ref": "6870fee7-a7b4-4b84-a86d-b7d9179053d7",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "95602ef5-c4f8-4dd1-9d5d-6c11c4d57f69"
        },
        "item": {
          "id": "d9abf6c1-48ab-4e02-8abe-672466de0de8",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "a621d8cc-f0e3-461b-8367-1393efc73439",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a79e660c-829e-435d-8072-03f28eb42fc3",
        "cursor": {
          "ref": "b8496c17-d1ed-475b-a73d-bdca02eb65fa",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "a9e58e12-9603-4056-a560-6088b9e64576"
        },
        "item": {
          "id": "a79e660c-829e-435d-8072-03f28eb42fc3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "79e00900-e638-4ea9-aad9-97764fd774a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf280c26-49e9-4cc2-bc3f-4d697881d61b",
        "cursor": {
          "ref": "943bcc2b-2ada-40d6-845f-74938e668e70",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "7020459e-d683-47ed-97ac-7f04de709924"
        },
        "item": {
          "id": "bf280c26-49e9-4cc2-bc3f-4d697881d61b",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "40c25ce9-cd87-4812-b301-8e176d7174c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9370f2f2-1d8e-46b2-a1e6-0d656bcde450",
        "cursor": {
          "ref": "ee381a0b-9d84-4c7d-b0e5-39c69ebeaf61",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b600f3e9-cccf-4dfb-9a9a-7a8f63cf9207"
        },
        "item": {
          "id": "9370f2f2-1d8e-46b2-a1e6-0d656bcde450",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "e4fb158b-f07e-441b-902b-a05ec31123b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9162d6c2-7659-4b7d-958a-1b7c67a74474",
        "cursor": {
          "ref": "70628c17-89ab-4021-91ac-3210fab0c9c7",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "762dcf02-e7d1-43a3-8e7c-f65f2e117ffc"
        },
        "item": {
          "id": "9162d6c2-7659-4b7d-958a-1b7c67a74474",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "05a61de0-7db4-4153-8e20-36d059a432ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9a8af93-0116-42b9-b653-8b43c05ebaec",
        "cursor": {
          "ref": "5cba3bda-8178-441f-8d90-7a8ad3d611b9",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c2054b36-5cbd-4b80-b3b2-fff32b06628e"
        },
        "item": {
          "id": "e9a8af93-0116-42b9-b653-8b43c05ebaec",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c7de301a-188d-4817-8c74-b5006bfcd780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362911c7-7588-4a21-bb2a-f285e6709dfa",
        "cursor": {
          "ref": "d346feaf-0888-4218-a3b7-454429fe3114",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "4d48bf57-0513-48cb-aed9-0956ead30e18"
        },
        "item": {
          "id": "362911c7-7588-4a21-bb2a-f285e6709dfa",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "bddab9e7-c884-4a90-844d-369acac9ae1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0664c5b2-b267-4054-8ca0-50f175c218dd",
        "cursor": {
          "ref": "e5fa889d-3b4b-4e1e-b787-847d9dae26c5",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "588d4fe6-497d-4f9b-b4f4-543be37fc63d"
        },
        "item": {
          "id": "0664c5b2-b267-4054-8ca0-50f175c218dd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "67a6d73f-b225-4e55-b701-69eaef497c25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d58b91a-6433-4f19-ae2b-d4249d988569",
        "cursor": {
          "ref": "0270a531-e7d0-4799-8d33-be5c3aba975e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "414ca3d4-83b0-4e26-bb09-416b4a559dd1"
        },
        "item": {
          "id": "1d58b91a-6433-4f19-ae2b-d4249d988569",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "50dbe1af-ab7f-4655-855b-9a9cbaa953ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56c6390c-5046-474d-b383-800008bf45cb",
        "cursor": {
          "ref": "3c1450db-95cf-4fa4-826e-8ee35bac7604",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "5202310b-578f-43f0-be9a-35df99f1d5fe"
        },
        "item": {
          "id": "56c6390c-5046-474d-b383-800008bf45cb",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c5a1ee71-2823-4947-93d0-dd937b8dee39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7a3fcc-9566-4f79-9437-e7b24a654ec5",
        "cursor": {
          "ref": "d2ba7c88-92c1-41b5-87e0-1a7840858a8b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1dc1d70e-a713-474f-b7dd-3d35c716e3ad"
        },
        "item": {
          "id": "9f7a3fcc-9566-4f79-9437-e7b24a654ec5",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "bea04b58-3143-454c-a2d4-7b81b9ecbc18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c574e49-8dab-4454-85ad-8336784113bc",
        "cursor": {
          "ref": "f277b495-3dbe-48bc-ae5a-c4fcd7e137db",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d32732da-4b7b-4c23-8687-e908909f9964"
        },
        "item": {
          "id": "6c574e49-8dab-4454-85ad-8336784113bc",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "caa0692e-40dc-45ac-8585-a0e31ea41dc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9304df63-b63e-4c6a-a6da-86910acdbfe4",
        "cursor": {
          "ref": "1edf2b82-dfbc-40ef-bcc1-ac674bf6abd5",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "5d640395-7162-4d2c-857d-41a4839f89ba"
        },
        "item": {
          "id": "9304df63-b63e-4c6a-a6da-86910acdbfe4",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "26802b64-2c17-4a61-bbeb-46c687a7f0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df468692-03c0-4c22-8860-7641b1a46496",
        "cursor": {
          "ref": "dcb1737f-bfb3-48ba-b5bd-44d508849b92",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "2ee1de14-b3e0-4ae4-acd9-4b1166e96152"
        },
        "item": {
          "id": "df468692-03c0-4c22-8860-7641b1a46496",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4557d334-d14f-40e7-bf59-5e26e0f2d721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191685d6-dd4d-455e-b267-4ba28770ada9",
        "cursor": {
          "ref": "c2865e1c-0249-4cb6-b25d-bc12b0ecd3c2",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e37e7ffa-5674-4478-b72d-5744effc999b"
        },
        "item": {
          "id": "191685d6-dd4d-455e-b267-4ba28770ada9",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "e5a39658-c4ba-4f01-ab93-9598c479dbc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b42826-5b35-4e1e-b883-fbae3a5f5c36",
        "cursor": {
          "ref": "87a592e7-48a8-4eef-bb25-faf0f3aa03dc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "e13823ac-2d41-4d1a-8a6a-78e71794014e"
        },
        "item": {
          "id": "70b42826-5b35-4e1e-b883-fbae3a5f5c36",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7a393151-5940-4cb3-8c6e-6bc4c3137e8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8e49884-70ed-4a4c-95b5-25178d78e86b",
        "cursor": {
          "ref": "5f57a6ed-c18d-4e11-b836-54c79bd42c78",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "1360d6d3-bdd5-4d62-92dc-e9746e9ddf6f"
        },
        "item": {
          "id": "d8e49884-70ed-4a4c-95b5-25178d78e86b",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "75ea2714-313a-4dcf-a0e5-b629c87afb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a144f6c-b4fc-4e16-8c7f-cbcafc2a2999",
        "cursor": {
          "ref": "0d920290-a4d2-468a-a570-860d5f1c584f",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "54d54a64-edce-4632-ae6d-213df45d49b3"
        },
        "item": {
          "id": "1a144f6c-b4fc-4e16-8c7f-cbcafc2a2999",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "72f72e8a-c9c3-418a-b713-2eddf18ac64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159010eb-2b13-43ea-a46c-89ca9063b3eb",
        "cursor": {
          "ref": "231b94b8-ead2-42c2-b29f-f9a95943731e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ea235957-532a-4774-8905-a33be3a91181"
        },
        "item": {
          "id": "159010eb-2b13-43ea-a46c-89ca9063b3eb",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "d173f00e-fb96-4adf-bdf0-a6eddccc22bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71bb1d6a-eedf-4659-adfa-7d042d099fe7",
        "cursor": {
          "ref": "ca05a125-c036-4088-9bfb-30c492fa2d1b",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "11c65b15-28d8-4729-bbe1-2afa1fedc616"
        },
        "item": {
          "id": "71bb1d6a-eedf-4659-adfa-7d042d099fe7",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "4c9f05c7-e298-408b-b2ec-b168063dc134",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3b1d95-dbe3-4d37-9a39-bdb6545111ad",
        "cursor": {
          "ref": "f5b25285-9f57-4631-b810-1c6086c82c53",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "751c2f5f-9477-48c4-b9d8-9c8d4c34ced6"
        },
        "item": {
          "id": "4c3b1d95-dbe3-4d37-9a39-bdb6545111ad",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "36f98ae7-df23-4cbc-ac15-84228ae45cae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6baaae30-6fcf-4237-9ca5-c1ac3875bbb9",
        "cursor": {
          "ref": "acc39fa4-8bb3-4bcd-9926-9fe6f25a36e4",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "82f24eba-bdd0-4686-9c79-e7ac9cb220fc"
        },
        "item": {
          "id": "6baaae30-6fcf-4237-9ca5-c1ac3875bbb9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "553e3686-ec14-4e20-8123-b7d146c18287",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9e1f78-a478-48cc-a214-f995323bd29c",
        "cursor": {
          "ref": "b8935f03-13c8-4503-abaf-94dbb7d0ec98",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "06f05a04-97af-48f5-91cc-f116635deea8"
        },
        "item": {
          "id": "3a9e1f78-a478-48cc-a214-f995323bd29c",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c9a1d687-9fae-4b32-8871-b46fcdf0fa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99fde7c5-05bd-4204-a0e9-f70d168e9d4b",
        "cursor": {
          "ref": "de7e074a-4886-451f-889b-3b0a3007939b",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0630a0f2-2a73-40a4-960a-b9a74af3ce54"
        },
        "item": {
          "id": "99fde7c5-05bd-4204-a0e9-f70d168e9d4b",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "18a85351-0dc3-48c3-8331-9b455fc0aa52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e86af3c-2ef2-42a7-8dbd-80aba8b433ce",
        "cursor": {
          "ref": "39931211-09bf-400e-a0b8-a4eb934e3ab3",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "d7bdabfc-c554-4d36-8415-bd3853fcd8bf"
        },
        "item": {
          "id": "1e86af3c-2ef2-42a7-8dbd-80aba8b433ce",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b9fa738a-077b-4421-aab1-010af854b155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5b23fa5-cbba-4271-9bbf-b29de67fcf1b",
        "cursor": {
          "ref": "663fad57-71c9-41e8-a548-14134c673d12",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "73bfe93a-5c28-4673-981e-ee93abfa19f1"
        },
        "item": {
          "id": "c5b23fa5-cbba-4271-9bbf-b29de67fcf1b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "3c63606e-681f-436e-9c83-b00dcd10e9bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db82f053-9f67-4687-8b46-c4307c476d36",
        "cursor": {
          "ref": "b42ce2d8-901a-4640-a011-f91757af8d10",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "cd76fc8e-1cb3-422e-b6f2-9f8839929e19"
        },
        "item": {
          "id": "db82f053-9f67-4687-8b46-c4307c476d36",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a07b4ce8-2810-4b62-8513-10ec23607eef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3ff3a0b-904e-47c3-9177-bc07287e15da",
        "cursor": {
          "ref": "a6a1975d-3872-416f-87df-38eb0e1a7f91",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e6d7b139-222b-41ea-a91d-c5cce65e892d"
        },
        "item": {
          "id": "d3ff3a0b-904e-47c3-9177-bc07287e15da",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "4bc26a0c-66a0-4f5d-93e2-d6efbcfbed49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aab7475-0012-4847-bdd8-2bd28fb25f6d",
        "cursor": {
          "ref": "aadc2a71-d564-460a-82a2-95d13840fb2e",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "3928cbcf-986f-4843-b25a-5d2f5ea6e154"
        },
        "item": {
          "id": "4aab7475-0012-4847-bdd8-2bd28fb25f6d",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ca84e314-1a44-42fe-9360-efeea304c8b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea5e0a2b-a91d-4d71-a3b6-50c72880c4f8",
        "cursor": {
          "ref": "279cf0d4-06f6-4347-b378-270da80f5d3d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "c8c788c9-4334-460d-bfa5-355fe92a69d3"
        },
        "item": {
          "id": "ea5e0a2b-a91d-4d71-a3b6-50c72880c4f8",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "5da83127-2f5c-4cab-936f-fadfbf1358a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e880700-7718-4837-9c28-d35156d4f638",
        "cursor": {
          "ref": "35705052-fa0f-4ff9-b921-26aba7b33531",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "9636af3d-3a9a-4c09-a40c-c15b4a141774"
        },
        "item": {
          "id": "5e880700-7718-4837-9c28-d35156d4f638",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "b4e9528f-4de3-497a-a099-a86828688a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b41d0d-9dfc-4629-b722-04aba2298ffe",
        "cursor": {
          "ref": "b20dee64-c1e1-4c65-8d4c-1311e93a4aa6",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d69986b2-c6dd-4552-a407-a134af348c10"
        },
        "item": {
          "id": "91b41d0d-9dfc-4629-b722-04aba2298ffe",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "9b8a3c67-f438-49b4-97e9-1a4ab4c077e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564c1595-3ba4-4a76-8507-e07209ca8eb9",
        "cursor": {
          "ref": "91d10ca9-9389-45fe-8152-b573bdb86fc0",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c0bb018-6071-4e4e-b898-235c053094af"
        },
        "item": {
          "id": "564c1595-3ba4-4a76-8507-e07209ca8eb9",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "611c2335-2cbf-4c46-ad04-b1478998f829",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e7f2781-825a-4592-9ab5-e4c9dbc08639",
        "cursor": {
          "ref": "2c00f015-ccb1-410e-8465-c0e52ecf4815",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e983e00e-0944-4a61-a913-75fdd4b28614"
        },
        "item": {
          "id": "0e7f2781-825a-4592-9ab5-e4c9dbc08639",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "f4d19e28-e6bb-4b49-8bc2-ca648fb04022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dfc6267-edb9-4461-9d60-3219ed12f585",
        "cursor": {
          "ref": "9573e794-d4d6-4d9d-a38d-17ba799e15cc",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "48372ebe-5142-4862-9f5e-dd601b30a7db"
        },
        "item": {
          "id": "3dfc6267-edb9-4461-9d60-3219ed12f585",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "e9ea1cac-c103-42da-90b9-6da62260419e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a7becb2-0f68-4e20-90b1-4ce1ac42733d",
        "cursor": {
          "ref": "13c2ed16-ae2f-45d2-938d-78cd7fb666f9",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "18034542-cc75-479f-bd72-305c75fa6562"
        },
        "item": {
          "id": "4a7becb2-0f68-4e20-90b1-4ce1ac42733d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "32aa8ca8-4cdc-4864-ae29-33f0614b712c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc43f384-73a0-4b53-ba79-40f672c4a472",
        "cursor": {
          "ref": "c0c89c14-ca2a-4052-9888-ce10d0d79927",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2c4a22d1-3613-4bed-b64a-d3af1ff6dd90"
        },
        "item": {
          "id": "cc43f384-73a0-4b53-ba79-40f672c4a472",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "c8fd7f3d-f878-46d2-870d-8ea354893d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f29e390-50b5-4cdb-815a-ac8e75484fab",
        "cursor": {
          "ref": "622b907a-bb84-40e0-a7d0-925fcbff8934",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "fa98d323-7ce6-404a-ae36-cfdc4bb0b1eb"
        },
        "item": {
          "id": "6f29e390-50b5-4cdb-815a-ac8e75484fab",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f2e479a9-6fce-4ec4-9219-c2b8ba590d8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ccf9520-34d9-46c6-8fe1-936cbbf3846e",
        "cursor": {
          "ref": "77f720e7-2de4-42d4-9fea-2349a38fc8ee",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "79532104-d11a-4d3a-be8b-22adaccfc57b"
        },
        "item": {
          "id": "5ccf9520-34d9-46c6-8fe1-936cbbf3846e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "ec4be7e1-f001-4c91-973b-6f5fc4e66855",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc4a990-e926-481c-a930-72ac3ec619d7",
        "cursor": {
          "ref": "2d53be1e-c6bf-4361-9401-6c9928cbc3f7",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9470c4d5-9a44-4101-a197-9677adfe8821"
        },
        "item": {
          "id": "2cc4a990-e926-481c-a930-72ac3ec619d7",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "2532a0ab-ff47-4d56-bb5b-6bf1b4d8ef6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08a204e0-07cb-441a-91be-ec411d4351f2",
        "cursor": {
          "ref": "5f1e19e1-3645-47be-9a29-5c94746ab085",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "36f88d2b-1469-4054-aa27-6d389e460fe4"
        },
        "item": {
          "id": "08a204e0-07cb-441a-91be-ec411d4351f2",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "437dd2f2-bba0-4bac-b5e2-1bc62005c98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce601cf0-b837-40cf-9bd9-d5b77d665201",
        "cursor": {
          "ref": "a72b36ee-8c1b-4309-84ec-b2af75228a97",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "3bd77746-98de-4fa4-9a3d-f5e7bca077a4"
        },
        "item": {
          "id": "ce601cf0-b837-40cf-9bd9-d5b77d665201",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "f0663bc2-50a3-4034-84c3-73ad236a616b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "929e23dc-ef52-4603-8e29-4a3b9b023172",
        "cursor": {
          "ref": "ddd4e537-3a07-46e7-b55e-9da9eac4398d",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2160d61c-643f-4553-a3e9-6cc0ece6dad3"
        },
        "item": {
          "id": "929e23dc-ef52-4603-8e29-4a3b9b023172",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "902b05cb-829e-4a3a-809f-aa9f6bd8f5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13de0f0b-6a0e-4df9-93be-bfe04196a1e8",
        "cursor": {
          "ref": "dcfce645-2714-4eb2-b5bb-6ecad3617de6",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "be7a1a30-c6a0-4c47-998d-14412e04eece"
        },
        "item": {
          "id": "13de0f0b-6a0e-4df9-93be-bfe04196a1e8",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "10f5e587-668a-4ff8-9577-4c92e6b770d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7d862c-b221-4b73-8f49-6be9a513b46c",
        "cursor": {
          "ref": "39b5a792-b29d-4372-bb89-61fd227ef542",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c9803442-4b7a-4457-bc77-20973e8c0748"
        },
        "item": {
          "id": "6a7d862c-b221-4b73-8f49-6be9a513b46c",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "b7ddbae9-70ab-453c-bad1-33d23e71ae85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca65b523-0480-4936-b1f0-0da6a3ed9abf",
        "cursor": {
          "ref": "3a3b3111-2cba-4741-9ba9-46857f1de093",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "7637cb92-cb1a-4e16-b4da-97e19435ebd2"
        },
        "item": {
          "id": "ca65b523-0480-4936-b1f0-0da6a3ed9abf",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "320c852f-5294-47e0-afb0-3d572f06992d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98593038-df55-4478-b5cc-0a464823da45",
        "cursor": {
          "ref": "bbef4b9e-40de-4266-91bf-cf1c34ce0439",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d4de0376-4ae1-4c3c-92b9-0937f573f181"
        },
        "item": {
          "id": "98593038-df55-4478-b5cc-0a464823da45",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7b8eb57f-529a-46e7-b843-72ac0bc178b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a70cd8d-dbce-4ec7-8af9-79b4e861c554",
        "cursor": {
          "ref": "f0926028-6a26-4834-be22-3370ec2f1efb",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "3ddb01f2-86dd-47d3-b427-b97868976712"
        },
        "item": {
          "id": "3a70cd8d-dbce-4ec7-8af9-79b4e861c554",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "9bea0126-8474-44c2-849d-70752b029ec8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c54dcc-9b56-4fb7-91e7-c125d9c39ffa",
        "cursor": {
          "ref": "f5b55a78-b2ac-4d0e-bc39-3ed7d1e2a9a9",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b007e1c9-eaf1-4368-8b90-984baa7f58b1"
        },
        "item": {
          "id": "04c54dcc-9b56-4fb7-91e7-c125d9c39ffa",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "413fa8b3-948d-426d-ac68-4d1184df7172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de02050a-0215-4568-a84e-b918617a1243",
        "cursor": {
          "ref": "38cbcb98-a465-44d3-8637-53f40a94b304",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "2bf621e7-3834-4fe0-bef7-c5bd47cf385b"
        },
        "item": {
          "id": "de02050a-0215-4568-a84e-b918617a1243",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "6a222b1e-87cc-4e0b-873c-3425eae3d4f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc39cb17-e294-451c-9c25-816ba45fbd16",
        "cursor": {
          "ref": "89ea7b2e-250f-482d-ae5a-efde01400098",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1cffa2b3-3439-4667-913c-ab2cd76af985"
        },
        "item": {
          "id": "dc39cb17-e294-451c-9c25-816ba45fbd16",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "d09e8526-83eb-46ea-9424-f7065eea0bb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c95bd6-1b0d-4314-b033-1618df4d0cb4",
        "cursor": {
          "ref": "d3affdd4-8809-4cd2-bf4a-fe4c01170bbb",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "f5b855bc-1b0c-439a-a26a-162102d98f43"
        },
        "item": {
          "id": "04c95bd6-1b0d-4314-b033-1618df4d0cb4",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "93a74529-4741-48e2-9a58-772113d00948",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59f4b2b-e3ea-478e-8467-b5b6cf7495dd",
        "cursor": {
          "ref": "94d8f9b5-2958-4cec-b8fc-a510a849c3b2",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "16148966-daa1-4dd9-8cd3-e34127286fa6"
        },
        "item": {
          "id": "d59f4b2b-e3ea-478e-8467-b5b6cf7495dd",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "09fbded8-02dc-414e-a1b0-0ed43dfbd5dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e55b0048-52b2-4b22-916c-93df36fd624b",
        "cursor": {
          "ref": "669980dc-5a8a-4d12-8e04-36302d8a3f9d",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "864ba367-115b-4666-9d21-d5f051ba5450"
        },
        "item": {
          "id": "e55b0048-52b2-4b22-916c-93df36fd624b",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "0dd4c38c-d6d1-4b88-bec9-6a857f1bf20b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9ae56e-fdab-4ceb-98b3-2b297e3f118d",
        "cursor": {
          "ref": "74757cf5-af74-4baa-87c3-cf65ce1a0551",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0f7fa4da-ca8a-4a31-9e3e-5346cb82fe40"
        },
        "item": {
          "id": "0e9ae56e-fdab-4ceb-98b3-2b297e3f118d",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "432ae1ab-334f-43c2-a6eb-13a1be2197c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ba60930-cf1f-4d23-8625-16e97e899156",
        "cursor": {
          "ref": "6b7e4e19-325d-4c66-9f32-a5197450adc8",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "d893047c-8704-4937-bbd7-d9ee7a39491d"
        },
        "item": {
          "id": "4ba60930-cf1f-4d23-8625-16e97e899156",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "6106a6a8-c45f-40af-a358-a727059c9bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1d26093-96f8-4819-8ac4-730d20d51619",
        "cursor": {
          "ref": "57fb3986-81bf-4b02-93b4-18969533e00d",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "54bb090b-5589-4207-a818-fe5bc0e73396"
        },
        "item": {
          "id": "e1d26093-96f8-4819-8ac4-730d20d51619",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4f672319-fc96-40db-b54f-33cc263cb55f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f92fefc-13c4-4e98-a8db-99940f80b21f",
        "cursor": {
          "ref": "75b47fbc-e18b-434a-b8cb-208a3bc8dad4",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d21c3a8c-bd80-4efc-9cb9-4b0be9a3ce1a"
        },
        "item": {
          "id": "0f92fefc-13c4-4e98-a8db-99940f80b21f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "58fb2976-f6e4-46f9-8499-2eb22b0424de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74216c94-4cb1-4f72-9b14-1570105c166f",
        "cursor": {
          "ref": "246c83e7-4965-4bb0-aff0-0c25548f4edc",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "86a9a7b0-d222-4492-8342-44641f83a50e"
        },
        "item": {
          "id": "74216c94-4cb1-4f72-9b14-1570105c166f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d3ddbe16-0600-4742-9a94-2c682786dcc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a9053c-9304-422d-9478-e27922ebed26",
        "cursor": {
          "ref": "92cec9eb-ad7a-48bb-ab4b-1f0a20f7147f",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d20ef711-d764-4938-a478-e3b2b10382c6"
        },
        "item": {
          "id": "46a9053c-9304-422d-9478-e27922ebed26",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "c4b83111-cc66-49d8-b765-bd1b5704c718",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6261d89-b274-4ea2-a0aa-369460774981",
        "cursor": {
          "ref": "64700d27-4f69-4af3-aca8-4178f1913b88",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "3942be71-ec14-4bcc-b26f-fa31939abcda"
        },
        "item": {
          "id": "e6261d89-b274-4ea2-a0aa-369460774981",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "78c26624-b377-4490-9f9d-25a76e98f99f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00d6168-f2eb-4eaf-93f9-9ca6debe22bb",
        "cursor": {
          "ref": "bb0a663e-52f9-4ccc-a60f-2d7d9b27805a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "34230344-8a22-4b0f-b307-f547f20915f3"
        },
        "item": {
          "id": "f00d6168-f2eb-4eaf-93f9-9ca6debe22bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "17f81b72-c016-4442-9078-180c97c58909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e5e6006-4c60-40a3-b685-7807cd5dcfdf",
        "cursor": {
          "ref": "2df0013a-fbb5-4d15-9c56-30b0d971fecd",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "47b630e1-294e-42d4-93b9-6925553d97f3"
        },
        "item": {
          "id": "1e5e6006-4c60-40a3-b685-7807cd5dcfdf",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "1800e7cd-c145-4104-bdc6-c523c2435f88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b41dc2-8ecc-461e-9bca-fb27da510ead",
        "cursor": {
          "ref": "a8d4835f-456b-49c1-ab6c-2a0fe278197f",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "f84643e8-e536-4f8b-a796-2b3e604f2157"
        },
        "item": {
          "id": "d2b41dc2-8ecc-461e-9bca-fb27da510ead",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "fd8f02cc-5f42-473d-b413-e49d0e621524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fabdc09-444f-426d-9fbb-f04403598bac",
        "cursor": {
          "ref": "7f22abc6-b872-4b23-a90a-7951d929e820",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "e618206b-fafe-4a87-afea-ead7ebfce4c3"
        },
        "item": {
          "id": "9fabdc09-444f-426d-9fbb-f04403598bac",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "7c8f6104-0891-4a41-a8e8-80cf47e526e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a6432b1-1522-40a2-b18e-be78c8f6694a",
        "cursor": {
          "ref": "d5712eef-ad8d-4ced-b3bc-350a653a434f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e8f45a36-146b-4e94-abc7-aca9df777c8f"
        },
        "item": {
          "id": "6a6432b1-1522-40a2-b18e-be78c8f6694a",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "4599d1eb-dbca-44db-8d80-48dec583b0ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56923d81-1446-4331-a5f7-b19a212424c6",
        "cursor": {
          "ref": "4bca4d48-2954-4578-ad77-c6b6caf4f4b0",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f89a32ef-2303-44b6-a60d-7876e72b771f"
        },
        "item": {
          "id": "56923d81-1446-4331-a5f7-b19a212424c6",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "fe4a48d3-3165-4693-930b-439312c50fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "296ec67d-6cb3-4ae6-881a-78e45e90111d",
        "cursor": {
          "ref": "c4065b4c-4aeb-4760-bc29-316469c5ab86",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cc089e12-cdcc-4ad9-acf6-71fe79ef4e85"
        },
        "item": {
          "id": "296ec67d-6cb3-4ae6-881a-78e45e90111d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "d4844d7d-726d-4867-bfbd-23096dc41651",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56cb93ff-6856-44a5-9061-5542dbe51b95",
        "cursor": {
          "ref": "de8cd137-1c5a-4f53-a088-033c86938d6b",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "99bf8ad1-66cb-49b3-9e79-e857e78e7763"
        },
        "item": {
          "id": "56cb93ff-6856-44a5-9061-5542dbe51b95",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "71984a88-16f9-4920-8954-8d1c8f91cce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 248,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4f50f6-cb5b-4b43-a939-4528d498281a",
        "cursor": {
          "ref": "a45f32aa-4775-448b-a3a4-af2f9b372696",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "166038eb-0cea-49af-9e0e-7ec6a47857a6"
        },
        "item": {
          "id": "8b4f50f6-cb5b-4b43-a939-4528d498281a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "4b2118aa-0d15-4b05-94e7-3492d6d3e0d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98f2aca3-e3f7-4957-bd25-f2784c397912",
        "cursor": {
          "ref": "fb429f33-456b-4d0c-9f33-0937f389e5ec",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "bbacdf4e-1204-4223-9bb2-ee8883ec9b43"
        },
        "item": {
          "id": "98f2aca3-e3f7-4957-bd25-f2784c397912",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "38d6f5f7-27bb-4052-84e3-d6fec21532f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037ea05b-6f6b-4fba-9220-efb4199d2792",
        "cursor": {
          "ref": "e46388f9-3c3f-4bc9-8c06-49a0bce177d8",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "8782a89a-da7f-4e90-9821-cf02e8858b33"
        },
        "item": {
          "id": "037ea05b-6f6b-4fba-9220-efb4199d2792",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "ce6ed888-6715-4fba-ab42-b2db93aacc9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "accf9ad7-de61-4743-a28d-1991ee6ce74d",
        "cursor": {
          "ref": "7c6857cb-cbcf-4914-8daa-39d8287870ca",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "98728264-945e-4421-ae12-f561fc14df0e"
        },
        "item": {
          "id": "accf9ad7-de61-4743-a28d-1991ee6ce74d",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "318089b1-2874-48b1-858e-0b8a89db68dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c391809d-ec7b-47af-a167-779b482e5dba",
        "cursor": {
          "ref": "f20fde83-466a-4f4c-b233-fbec8fe42220",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7018a8e8-8aff-4587-b030-f55a62ca27c3"
        },
        "item": {
          "id": "c391809d-ec7b-47af-a167-779b482e5dba",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "50e19594-f2e0-45e1-bc97-19032fb4daff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b72cdaf4-21a1-41be-b3ac-ac0a00b31273",
        "cursor": {
          "ref": "652cbc0e-1531-40d8-bd22-bd35f7a491d9",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "b167ab3e-2a2e-4f2c-9c31-7b3e91c75b80"
        },
        "item": {
          "id": "b72cdaf4-21a1-41be-b3ac-ac0a00b31273",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "9751dc09-353b-491e-baf8-389ec347e13b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 59,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52dceb3e-1ccf-4073-8891-d164496a0783",
        "cursor": {
          "ref": "c3035d04-6864-47a2-8638-95ffd0d0c14a",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "5e35848c-79bd-4e7c-9389-9e5cafe56eb9"
        },
        "item": {
          "id": "52dceb3e-1ccf-4073-8891-d164496a0783",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "3810e83d-f754-474f-ad5a-fbed398393ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0d8afd-d8fb-4fc7-9cbd-4b711a7a421e",
        "cursor": {
          "ref": "aa79d63d-31c8-484d-aa3b-a9c5bedef777",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "c926f939-396d-451b-9f88-c53489956bb5"
        },
        "item": {
          "id": "5a0d8afd-d8fb-4fc7-9cbd-4b711a7a421e",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "e201fdcf-24fb-4e29-afe8-4ad3f7c683f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b923aa5-61bd-46df-854f-57f5a64467bd",
        "cursor": {
          "ref": "2314bf67-136d-4c22-8c6a-19f8c82bb033",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c55bd1a6-0f5a-45e7-a5ab-d0784167c750"
        },
        "item": {
          "id": "9b923aa5-61bd-46df-854f-57f5a64467bd",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "d1ec629b-c6d1-4b6e-b33b-c7554b39a7f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbfd72dc-7aae-44d7-8679-faaa212ceb98",
        "cursor": {
          "ref": "bc5a272d-5d72-4f3c-a99b-6d1ef9e300b8",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "07ebf609-189c-4433-883b-988b7c9635e2"
        },
        "item": {
          "id": "cbfd72dc-7aae-44d7-8679-faaa212ceb98",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "c93e0c5d-dcde-4a39-b620-54e12587767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea451485-e1a1-4b19-a281-c12d90257f2b",
        "cursor": {
          "ref": "a18c3b57-2eda-49d8-8058-01a98c8c3d27",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "984c5157-056d-48ad-a4ed-c5a566d1a30b"
        },
        "item": {
          "id": "ea451485-e1a1-4b19-a281-c12d90257f2b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7559bf5a-9f30-4be6-8e02-252ae23664df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ae63cf8-7c82-4ace-b967-a238629bd7fc",
        "cursor": {
          "ref": "8ce3f73b-473e-4e84-ac13-0ec436920f59",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "cd5e4393-a197-4880-880d-b7d42b5965d0"
        },
        "item": {
          "id": "0ae63cf8-7c82-4ace-b967-a238629bd7fc",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "dcdb741b-047a-4783-bebc-5b7a1e0e36a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "214ad9bc-b20e-4c1f-a345-daca75db7108",
        "cursor": {
          "ref": "e9471837-0e1c-4f89-8803-b9c260c6e4a4",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "86ebb633-55eb-4560-8b2d-80dbb716e803"
        },
        "item": {
          "id": "214ad9bc-b20e-4c1f-a345-daca75db7108",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "d329541f-7da4-4e07-8367-2e0f8d8e7127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 26,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9824d1de-2a99-4943-ab86-2a398dc7ba6d",
        "cursor": {
          "ref": "07b41335-282f-42c0-8247-ae3dd7d37363",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1fdf0638-f96e-47a4-94d4-6a3587129310"
        },
        "item": {
          "id": "9824d1de-2a99-4943-ab86-2a398dc7ba6d",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "77968093-39bd-4792-9b9d-c363697eca01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f20982-42c3-4a92-a1d2-235bb635f990",
        "cursor": {
          "ref": "705b70de-9b11-452e-8d6d-d4a3e1c78c99",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "9ae8d212-a465-4285-b551-526e63f37451"
        },
        "item": {
          "id": "67f20982-42c3-4a92-a1d2-235bb635f990",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "f512438c-1436-4380-9c98-3a62fe9dcf23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 153,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6171f725-47a5-4127-81c7-ddb2080e0d4c",
        "cursor": {
          "ref": "99e068e9-0f61-459a-ab2d-eaeb16b47f68",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "ef7c9afb-e656-4186-bad6-ba835d95f241"
        },
        "item": {
          "id": "6171f725-47a5-4127-81c7-ddb2080e0d4c",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "21806df0-5117-41dc-83bc-7a4ec0c525c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25cc822f-fa5e-4129-ba20-390a38dc80b5",
        "cursor": {
          "ref": "fd14b89b-8676-43c4-9af3-20524b31f7d8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8280f762-4d05-4ee6-a982-a9c83bef4bdd"
        },
        "item": {
          "id": "25cc822f-fa5e-4129-ba20-390a38dc80b5",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "041ccf9b-befd-4de7-9fae-c9928b8d4ef0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9554233-a28b-46b7-8234-e14062fc1ead",
        "cursor": {
          "ref": "a82ecfbf-6b78-4e4e-8e69-93c7c50c9d25",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "f82005db-b4a1-4ffc-8bdb-8554b6323c08"
        },
        "item": {
          "id": "c9554233-a28b-46b7-8234-e14062fc1ead",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "c24c5781-2452-47ec-8215-627ba6b55c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf9d5974-a81c-45e4-803f-7a2821446132",
        "cursor": {
          "ref": "79b0a518-1b5e-419f-8240-be3f9f386432",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "fb06a0f3-69ea-46ae-83e6-951d670eb061"
        },
        "item": {
          "id": "cf9d5974-a81c-45e4-803f-7a2821446132",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "799529a3-a4c8-46eb-8f04-5f7b9c4c82f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37ba423a-d2ca-444a-988c-ef532fecee97",
        "cursor": {
          "ref": "72cf2d14-d67b-4160-befd-28ccf6cb7967",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "79a4977d-bf0b-4d00-a088-0e3a3193ed67"
        },
        "item": {
          "id": "37ba423a-d2ca-444a-988c-ef532fecee97",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5e3ba921-fde0-419a-941e-2a5ba615e88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9202d851-ed8d-41cc-bc21-91cd07e43d48",
        "cursor": {
          "ref": "69decff4-730c-4183-9d5c-e6d18f74cec3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "e8619c96-b097-4d7a-90b0-da35503cbdd1"
        },
        "item": {
          "id": "9202d851-ed8d-41cc-bc21-91cd07e43d48",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b7e115dd-cc5e-4cb3-b65d-870b7a01b142",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3a26b9a-8645-45fb-88f3-19319583bd69",
        "cursor": {
          "ref": "2396b31d-4b40-4d76-89bb-da569f0048b9",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "a1781133-22b5-43a9-b96e-1799aded37f1"
        },
        "item": {
          "id": "e3a26b9a-8645-45fb-88f3-19319583bd69",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "ff2af7ff-13ab-469c-abe3-0201bb05d220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bad438-4dde-4ce4-8158-e83c110a28ed",
        "cursor": {
          "ref": "e304671b-2de1-427c-8ccf-b18ae3955aae",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "5ec94845-3fd3-423d-bafa-7eaa3125f520"
        },
        "item": {
          "id": "15bad438-4dde-4ce4-8158-e83c110a28ed",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "204b1216-0f7f-443b-bab7-3bd5ac7a8d96",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14175e14-eb4a-44e3-9a43-b22f7b287a6a",
        "cursor": {
          "ref": "d30f7c13-c01f-41f2-ad63-5e161722ebc6",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a5169dac-ff71-4408-8646-e5023e8d12f7"
        },
        "item": {
          "id": "14175e14-eb4a-44e3-9a43-b22f7b287a6a",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "bb2eca46-ecaa-4f85-af5b-6d605d419d05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "9d373e5f-2f75-4025-af9a-57b904cd0495",
        "cursor": {
          "ref": "89bfc11c-bea8-4b3a-b1bd-7f2a5731d071",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8f775db2-3e56-4611-9507-d0a9866d43fd"
        },
        "item": {
          "id": "9d373e5f-2f75-4025-af9a-57b904cd0495",
          "name": "credentials_issue"
        },
        "response": {
          "id": "eea38f70-d8de-4ab6-a348-5e9bc77fd10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "2ef923a3-f980-4c22-804e-cb4b930c27c4",
        "cursor": {
          "ref": "3486f4f4-e368-47a8-a124-cb4db0bac1f1",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "c8c4c84d-d591-43c0-9ff4-a4776890df3b"
        },
        "item": {
          "id": "2ef923a3-f980-4c22-804e-cb4b930c27c4",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "b3bb99a7-fd09-4dea-bb45-e524ffaa60b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 106,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "dd4ae4c7-3829-4ae5-bcbc-599255051d46",
        "cursor": {
          "ref": "f47c0109-ee0c-4888-bfdc-558228a5feb0",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "bc589c0e-062a-4783-a789-1959af36d603"
        },
        "item": {
          "id": "dd4ae4c7-3829-4ae5-bcbc-599255051d46",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "490c09cd-0ff4-4740-b75d-c8e34cedf15d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "16cbc531-cd36-426a-9193-e9508cf084b0",
        "cursor": {
          "ref": "0be9ceb8-c5f0-4d56-b97d-f43d06b779ff",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "be0fd627-369f-4cea-933c-5650ef86051d"
        },
        "item": {
          "id": "16cbc531-cd36-426a-9193-e9508cf084b0",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "41752151-4655-4fbb-8b43-3ded8006062b",
          "status": "Created",
          "code": 201,
          "responseTime": 12476,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "624ca208-b034-4210-9efb-2c89e10dce50",
        "cursor": {
          "ref": "20110151-54c1-47e1-b154-d4216353ee08",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "cc05c8fe-4cf1-4e36-81f3-d7883f5e0ff7"
        },
        "item": {
          "id": "624ca208-b034-4210-9efb-2c89e10dce50",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8c44a3dd-c956-4b9b-979d-453ae4955e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "94906856-5e9d-4276-be8e-6ab4d908cdd0",
        "cursor": {
          "ref": "fd554f8c-de0d-4313-b1e8-79033d675402",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "924ff561-c43b-49a6-85f7-b1a9108c74ba"
        },
        "item": {
          "id": "94906856-5e9d-4276-be8e-6ab4d908cdd0",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "cd8a907e-794e-44cd-986a-3b6ac2974129",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "18bec91e-47fe-4908-b678-e35fb318645b",
        "cursor": {
          "ref": "de6f0055-bb79-423c-a7f0-99cf24a86b49",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "3e7aa9d2-5dd0-4f7b-b868-33cb04739089"
        },
        "item": {
          "id": "18bec91e-47fe-4908-b678-e35fb318645b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d65b1bb2-4674-4069-a260-02923be592b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6635ea8a-c09e-42ca-9c30-b3baa7857e75",
        "cursor": {
          "ref": "6de28aae-fb1b-4fc6-b116-ed9fbaf4b5d6",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "2e9d77b6-8bdb-46e2-837b-d2083afd22ab"
        },
        "item": {
          "id": "6635ea8a-c09e-42ca-9c30-b3baa7857e75",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e497cfd4-22d9-4d0f-844b-cf64070d3b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a85194c-6bf0-4473-9b14-32df24d490a0",
        "cursor": {
          "ref": "3ea04a53-720c-440e-8945-041653f7073f",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "2b78fcac-94a2-4f4d-90ca-8c8c8da1e340"
        },
        "item": {
          "id": "0a85194c-6bf0-4473-9b14-32df24d490a0",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "44e762f1-9b8b-46e8-8ea6-785fdd783b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a1277ac-51a9-49aa-8e27-0c7c46214dde",
        "cursor": {
          "ref": "9983ebdb-0091-45e6-9c6d-108887251255",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "acbb8f2a-88c9-44e4-b214-8adb827cea78"
        },
        "item": {
          "id": "0a1277ac-51a9-49aa-8e27-0c7c46214dde",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6264a291-5921-44fb-bc8a-9523eb17c306",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7935dd8e-7598-4d9a-9510-cb204d418582",
        "cursor": {
          "ref": "540f5508-8012-4968-9e6f-d68bb79aa12b",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "36aab368-db00-407c-adcc-3a2654b73f9b"
        },
        "item": {
          "id": "7935dd8e-7598-4d9a-9510-cb204d418582",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7e28160c-3586-407e-a1f8-0d9d5c65bff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f80a4fe-9111-4d82-b8ac-72db3616a2af",
        "cursor": {
          "ref": "ebd239d0-c052-4d5e-98f5-6af10fa818db",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ee5b16fe-15c5-40f1-9ccd-63336388b623"
        },
        "item": {
          "id": "2f80a4fe-9111-4d82-b8ac-72db3616a2af",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9e0d9f01-eac2-4235-b368-1d0333df2762",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b58c575f-47d8-4098-a079-b1e5eeae4db5",
        "cursor": {
          "ref": "a6386e3c-6314-4011-a1ad-acc5aa097bec",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4e3d09e3-6da7-4e27-a478-511364230793"
        },
        "item": {
          "id": "b58c575f-47d8-4098-a079-b1e5eeae4db5",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "85febe19-5006-4af6-bcb7-93989a85009a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1bd193e-34a3-4685-971d-c0787e9a2b2c",
        "cursor": {
          "ref": "8322ca10-d406-4eb4-afe9-a918d5939d4e",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "56efe45c-959a-46a7-ae23-b018942a557b"
        },
        "item": {
          "id": "d1bd193e-34a3-4685-971d-c0787e9a2b2c",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c27f2f2c-10ff-4545-9b96-0563351c74d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0dbdb02-722c-47f0-8592-90761fc71e22",
        "cursor": {
          "ref": "05a5abc9-421e-40b1-9acf-95595448f9ac",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "b9827b31-44da-46d3-a086-6deed7355b15"
        },
        "item": {
          "id": "c0dbdb02-722c-47f0-8592-90761fc71e22",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "d8e4711c-0568-4094-abdf-d054b8aee703",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c402c4b-4373-4b76-9b23-413cf8bcd591",
        "cursor": {
          "ref": "c0399177-650b-463b-9553-8cb9c3de5e55",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2a2fc2d2-6dbf-444b-b602-5dfd76fa8b28"
        },
        "item": {
          "id": "3c402c4b-4373-4b76-9b23-413cf8bcd591",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "97778a05-7b84-44f8-9c02-42f439421ef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c519941-0293-4fe9-9478-cac9cc89ab41",
        "cursor": {
          "ref": "da64b69a-13e1-4f05-a62f-3f15c402bd22",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "cbf9bfb4-2a0f-4fe8-9f86-dc5da7138667"
        },
        "item": {
          "id": "9c519941-0293-4fe9-9478-cac9cc89ab41",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "abfe504e-9eb0-43bc-8d57-dcaace374a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5460492b-67c5-4f89-8147-bd054d4bfab3",
        "cursor": {
          "ref": "b53665c5-631d-4dbc-83eb-6aa43d810447",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "8894ea06-18a8-42d6-aa06-7cca96f1e579"
        },
        "item": {
          "id": "5460492b-67c5-4f89-8147-bd054d4bfab3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "0f65490c-1d6a-4dbe-ba00-1faa72339dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f02a9261-ba1e-4524-873e-19364ed9710e",
        "cursor": {
          "ref": "6a7d3406-3dfa-4138-9ed1-fee659df2411",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "e7a02426-6d48-402f-9370-c6362ea72387"
        },
        "item": {
          "id": "f02a9261-ba1e-4524-873e-19364ed9710e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "695b52aa-424e-41d9-8f6c-95c8d46246f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bbab833-9f37-41c9-af1e-d3bb3bcbc124",
        "cursor": {
          "ref": "088daf31-8d1a-41f6-8e5f-e3dbd6eee823",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "41b3e7f8-75b4-4499-a7f2-1452caec1cfc"
        },
        "item": {
          "id": "3bbab833-9f37-41c9-af1e-d3bb3bcbc124",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7955bbdd-c1fa-4a65-82f9-17708a239c59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865be786-93c4-494a-b57e-cab84166817c",
        "cursor": {
          "ref": "d6336667-e357-4b57-b8b7-d6fbf19fea0e",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "516ba967-9f92-4cea-879d-d44bfa674cb8"
        },
        "item": {
          "id": "865be786-93c4-494a-b57e-cab84166817c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c4187efc-5d73-42f4-9ae3-a3ce5c37d70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a33f00f-49a7-4854-b7e6-7289e4639460",
        "cursor": {
          "ref": "65f78fd6-b95e-430f-94e0-13a196fbdd63",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b564993-cc1a-43ff-9445-fafdc7f51f90"
        },
        "item": {
          "id": "1a33f00f-49a7-4854-b7e6-7289e4639460",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6a1dc054-6008-4d6e-b55f-8c250b0827d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1f5c0e6-3ae9-406b-b1dc-6144337692de",
        "cursor": {
          "ref": "ee82d10e-cf75-47b8-b1f9-926449bce629",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "73c3bcef-9089-483b-be23-2fdab42f0074"
        },
        "item": {
          "id": "a1f5c0e6-3ae9-406b-b1dc-6144337692de",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "435bb727-c4d6-4a13-a6a2-d46977d7c6ca",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 39,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:125)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:125)"
            }
          }
        ]
      },
      {
        "id": "7cfc09c8-48e4-4c71-8c08-008bac6c5f02",
        "cursor": {
          "ref": "76754a41-bb96-4216-9b0c-3c0c91607532",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "8d8aa1ab-4d32-4314-a3a5-f8e75a004ec0"
        },
        "item": {
          "id": "7cfc09c8-48e4-4c71-8c08-008bac6c5f02",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "92eb7c12-dd55-48f0-98cf-3d4f6f255690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20056666-19c5-49bd-b2d5-7d9d41f1e1a8",
        "cursor": {
          "ref": "69949b21-2dc2-45a0-ad56-a99d856d4cc2",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "a513c7d8-56bb-41da-9b91-010301d3b3c6"
        },
        "item": {
          "id": "20056666-19c5-49bd-b2d5-7d9d41f1e1a8",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5da9cb6e-ec99-4358-b84d-9c8a4838fe52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6420f84-c280-471a-9d8d-4987aa102f3f",
        "cursor": {
          "ref": "797960ed-57b3-460f-9da7-0c540b8b0f9f",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f0199100-deb0-4ba8-ad7a-c474dc504ee4"
        },
        "item": {
          "id": "b6420f84-c280-471a-9d8d-4987aa102f3f",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "cda76bb0-696d-437c-b246-577cbbb4dbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4abe7a-1a80-499f-ac1f-e223402d9c34",
        "cursor": {
          "ref": "0e9e3402-cb02-4011-912c-2cfb054a2e64",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "080f1918-8a71-4e39-a0a0-50ad8f8f31aa"
        },
        "item": {
          "id": "5f4abe7a-1a80-499f-ac1f-e223402d9c34",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "1ea0e44d-3484-4f8f-aeb4-58de009f9c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67f796d2-3977-4ef4-821e-f142dc817fd6",
        "cursor": {
          "ref": "1f96b74a-460e-4530-861e-078da5ca1bd3",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ef8cd51a-b712-4a36-ab39-7e74a8cda1a2"
        },
        "item": {
          "id": "67f796d2-3977-4ef4-821e-f142dc817fd6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1eb400b8-e495-4f30-b402-0dc62d09286c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4f9686f-7f7d-493c-bd51-651f8929e14d",
        "cursor": {
          "ref": "f42c1ed5-19f4-43ff-9472-acf1b5540b0b",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "d8081377-cdf3-46e6-8505-5285ae054bff"
        },
        "item": {
          "id": "c4f9686f-7f7d-493c-bd51-651f8929e14d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f0bfabc9-31ed-44fa-8a7c-d894bba9f761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce7881f5-20e1-419c-bed5-c4e2904ea2aa",
        "cursor": {
          "ref": "3a01475f-4f1e-4322-bc39-b6c9d9a9b262",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "96fa4fa3-a4a0-4b4e-aea3-87f0ef59ae37"
        },
        "item": {
          "id": "ce7881f5-20e1-419c-bed5-c4e2904ea2aa",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9d9412bf-4856-486e-a9af-706b456b73af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d6a6d3-48a2-435f-9071-6e8beca801eb",
        "cursor": {
          "ref": "2a946123-7b26-4c16-8c40-0aeabbf41b1d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "44598038-6603-4e26-8149-1474354190ab"
        },
        "item": {
          "id": "60d6a6d3-48a2-435f-9071-6e8beca801eb",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "431da8fb-7fc3-40ff-a337-bf924a13215b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 18,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:133)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:133)"
            }
          }
        ]
      },
      {
        "id": "5c72b2d3-8499-4925-bbcf-08150e48d374",
        "cursor": {
          "ref": "6ed3199f-051f-47a6-a3dd-f34272f37512",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f1e27834-8f46-43f1-90ce-a7a54466c4e8"
        },
        "item": {
          "id": "5c72b2d3-8499-4925-bbcf-08150e48d374",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c7c7b248-400e-4218-aa7f-318b4be0ba49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137d2b76-3c27-453a-856f-f463a5df0859",
        "cursor": {
          "ref": "76edbfe1-57c9-4dac-9f96-d6135827bf88",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "cb1e2232-d153-4c41-a3ea-ddc5ddc527cf"
        },
        "item": {
          "id": "137d2b76-3c27-453a-856f-f463a5df0859",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "6642cacb-432b-48d9-8b81-48d4d9fa2eb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae45ef3-3b28-4c5d-81c6-cd4c4315e650",
        "cursor": {
          "ref": "3f811ec0-588e-424b-8fd3-0f107b77bbb8",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "82628333-5d3a-4ec6-a3b9-60d47fb6d5ba"
        },
        "item": {
          "id": "4ae45ef3-3b28-4c5d-81c6-cd4c4315e650",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "4403046e-a20c-4f1e-b187-b7b4a053e57d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bc60661-f606-4aea-93ef-fc91b9ca0a7d",
        "cursor": {
          "ref": "e1a649ff-798c-4ef8-b14d-a236ae303473",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5cc68338-5f21-474a-9706-4e4bbf6d8b98"
        },
        "item": {
          "id": "1bc60661-f606-4aea-93ef-fc91b9ca0a7d",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "8241c7cb-5145-414a-8f72-68d687d85ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6397525-a53d-475d-99e1-8d834b9c29ec",
        "cursor": {
          "ref": "0fc42b90-2fc4-40ff-8d08-39e3d0f8bc03",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "eddee76a-9783-4574-8062-caadf67b6d95"
        },
        "item": {
          "id": "d6397525-a53d-475d-99e1-8d834b9c29ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f386fb8a-f11b-44e4-9a0b-e199c524a133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "202c9a27-ceff-4731-865e-97a90313b5e4",
        "cursor": {
          "ref": "b743b63d-db3f-44ba-8a2b-465db5472c37",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "73715072-6ff9-4eee-ae8c-38fb53b62888"
        },
        "item": {
          "id": "202c9a27-ceff-4731-865e-97a90313b5e4",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "9d864329-95b4-4010-b647-3a40a262bb70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c9c8388-690d-4d36-b72f-083f16ea5808",
        "cursor": {
          "ref": "53089ff5-267f-4c57-95d6-3317ba4e9c03",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "8bb5a084-7b4f-4fff-a29f-1ea6e11f8ffe"
        },
        "item": {
          "id": "9c9c8388-690d-4d36-b72f-083f16ea5808",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "c15074b5-39bf-4b0d-8a75-76dc6d42468b",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 66,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:140)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:140)"
            }
          }
        ]
      },
      {
        "id": "e9b28d92-e31f-4a3b-9400-cfefea07c2e9",
        "cursor": {
          "ref": "bfe79ec3-25a8-4d24-bdaf-d55b47fe92b9",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "5c2b18bc-7e61-4145-9b0f-9380e30d8d6a"
        },
        "item": {
          "id": "e9b28d92-e31f-4a3b-9400-cfefea07c2e9",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "cdce6b3a-5572-4c42-9fa5-e1c21abd30c9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d283ea0-fcee-43be-a3d9-81abd63824a5",
        "cursor": {
          "ref": "b397d31a-3d2a-4aa5-ad83-46b9f87ab430",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "e8538ab4-ec63-488b-b43e-612360321b73"
        },
        "item": {
          "id": "1d283ea0-fcee-43be-a3d9-81abd63824a5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "f02f1e0a-c372-47e7-a90f-233deeb69cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d232fb-cfef-4115-9906-6b7e10491200",
        "cursor": {
          "ref": "bf13def5-f977-451e-bfe2-91fe1460aa56",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "43ce2144-cfdf-4edc-87a4-66932e092031"
        },
        "item": {
          "id": "f8d232fb-cfef-4115-9906-6b7e10491200",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "61472865-a8a0-4892-ba32-d2ea8b93bef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9043cd0e-4873-4ded-87d9-f49d7089e23c",
        "cursor": {
          "ref": "6e0f5f3a-c197-4b3e-ac34-8206f11f032b",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "3c9798e4-fcf7-452b-850d-fe91558a275d"
        },
        "item": {
          "id": "9043cd0e-4873-4ded-87d9-f49d7089e23c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7b8f8bd9-f0b9-420b-ba27-ed0bf687a02d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d34535c-c498-4452-9fe2-53e6a44502ae",
        "cursor": {
          "ref": "a8c886a9-4c57-434c-be51-4037089cb073",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "e690dc15-ec78-4c4d-8075-2442b465052c"
        },
        "item": {
          "id": "1d34535c-c498-4452-9fe2-53e6a44502ae",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ccb1be3e-1b22-4f59-a691-fd403e5670c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18e8deed-836c-4ee2-8545-81ea90805a33",
        "cursor": {
          "ref": "6c116dbb-f985-4d12-b3de-092e57b03e78",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "b4f1206d-01bf-4392-a1bd-59602a238773"
        },
        "item": {
          "id": "18e8deed-836c-4ee2-8545-81ea90805a33",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7dcd8725-aabd-41f7-8eb3-b8a786c2bf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e6559de-73d0-4452-afed-a185515bd544",
        "cursor": {
          "ref": "11880b46-50bb-40a3-8bbb-18a1e22fc226",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "fdf4b47d-3c7f-4ee7-a505-d1aa81800553"
        },
        "item": {
          "id": "7e6559de-73d0-4452-afed-a185515bd544",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "41fe98d9-159e-4c50-9873-576a9d17fa6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a6dba0-0484-4490-9a3f-6e672e97d089",
        "cursor": {
          "ref": "b10d1882-c69e-4da9-a9d1-9ab17e419ac6",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "3aed3d1d-7a10-4fb4-8a90-8b2bd25c71c1"
        },
        "item": {
          "id": "e7a6dba0-0484-4490-9a3f-6e672e97d089",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ab424416-62a4-4cd5-b6f2-62f9b1ac7104",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db207626-2f27-4620-8da0-6fabf5e55d14",
        "cursor": {
          "ref": "dedc3f5b-310b-47f7-b564-6a7993fabe6d",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "27e39b55-225b-4a76-b0e6-1e0e834f1212"
        },
        "item": {
          "id": "db207626-2f27-4620-8da0-6fabf5e55d14",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d569cd05-52ac-4d30-8052-2db763b61e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0148854a-0d75-4259-a00c-77b0daf5d8f6",
        "cursor": {
          "ref": "6b32f4c5-2ca2-4592-9827-19ff663cb67c",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4ed11e0c-4953-4327-a74c-6ce09cf2e7f6"
        },
        "item": {
          "id": "0148854a-0d75-4259-a00c-77b0daf5d8f6",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6fd45a63-6364-48b0-a38d-0988e7ecf88f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14bf4d42-c8c6-4e3a-950c-52a7c9cb4c4e",
        "cursor": {
          "ref": "3f4dd865-49f5-43c2-afe2-0bb06486a1e3",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "f1a125bb-2c15-42a2-a9eb-ba8b690ad96c"
        },
        "item": {
          "id": "14bf4d42-c8c6-4e3a-950c-52a7c9cb4c4e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "208580c9-7764-48b2-abcd-ce3a7094eee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e4ae664-71f9-4024-aa16-c66900aadfcf",
        "cursor": {
          "ref": "13ec142f-6883-4708-9589-bcb3b37af0c4",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "09cdfe0a-48a1-4cde-9c88-2db1e66d111e"
        },
        "item": {
          "id": "8e4ae664-71f9-4024-aa16-c66900aadfcf",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6c54a49e-c79c-40ad-8cc1-3731bc46c9d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "413ceb3e-412c-4689-8922-f9203e36f799",
        "cursor": {
          "ref": "1ed28283-6b2d-4ac2-a8b8-e05841f6449e",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "d97e0937-2c6e-4610-a469-ee60aba4e6de"
        },
        "item": {
          "id": "413ceb3e-412c-4689-8922-f9203e36f799",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "44f73231-85ea-4632-8f7a-2d682861f566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d3c474d-5b00-40cf-9616-86562650e48a",
        "cursor": {
          "ref": "ab77642a-2eab-4b59-9b50-f2e42806a08b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "a0cc3be3-6677-4070-a13f-37460c7d3f23"
        },
        "item": {
          "id": "9d3c474d-5b00-40cf-9616-86562650e48a",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "e1e0fcc5-1402-4a5e-91a5-31897acc2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 22,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f07d02a-df7e-4bb2-9806-399c6c4f9179",
        "cursor": {
          "ref": "1ae9786b-fedf-4a90-9221-c8bdba982e80",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1bf49df3-88e1-42ce-a6ab-16a61a5f47bb"
        },
        "item": {
          "id": "9f07d02a-df7e-4bb2-9806-399c6c4f9179",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "3b99377d-fcb2-4375-aecc-8ae69882e122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977d6247-ef34-45fa-babc-2e5a6c5d14fd",
        "cursor": {
          "ref": "69cfd1f9-2060-4a54-a5d9-6fb42dd13e07",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f8b9733a-91dc-4b5d-b7c4-a0e2f0b265a2"
        },
        "item": {
          "id": "977d6247-ef34-45fa-babc-2e5a6c5d14fd",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "960fc140-45cb-4213-8a79-8cbb1d43e579",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ffc9c1-f5fa-44e8-befb-300b965c6ebc",
        "cursor": {
          "ref": "ee09d5b5-5b14-4c42-b18e-74e8f5fcdebf",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ac4983ae-6a97-45c6-b1ee-b16fe370a6dc"
        },
        "item": {
          "id": "08ffc9c1-f5fa-44e8-befb-300b965c6ebc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6b65c582-cc97-49c5-b8a2-29c8c0c164e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b902d6a-e0c9-4a90-a4d5-2925e364ed2a",
        "cursor": {
          "ref": "112140c3-59b6-43ed-8a84-facd48c9b613",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "c0003e42-f338-4374-bbe0-4d3ec15cd50b"
        },
        "item": {
          "id": "2b902d6a-e0c9-4a90-a4d5-2925e364ed2a",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "e2c2661b-da61-4de2-86b7-83380145b900",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:158)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:158)"
            }
          }
        ]
      },
      {
        "id": "497a6e35-57b0-4d1d-8562-58ae374b3e0f",
        "cursor": {
          "ref": "0a7498d7-ebaa-4f74-ac85-9ee7a39db537",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "db287caf-f591-494a-9b22-b48ef9a1077f"
        },
        "item": {
          "id": "497a6e35-57b0-4d1d-8562-58ae374b3e0f",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "0b11145a-e1ff-42d1-a2ea-9bc7af552e3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 131,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0774caa-91a5-489b-b818-f4ac7d0af478",
        "cursor": {
          "ref": "82504791-85c6-40bf-be44-a2ce13a3406d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "7a82442f-c741-405d-9097-5c45607b500e"
        },
        "item": {
          "id": "d0774caa-91a5-489b-b818-f4ac7d0af478",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "403e7661-4ca1-435e-8d17-afe361c6b622",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd08e13-a6f6-41cc-8241-49b6c753e9e9",
        "cursor": {
          "ref": "e6d74822-e54e-42bc-b154-fa73bb9acb5f",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "33437394-1f15-4886-a1d5-198a97f11d53"
        },
        "item": {
          "id": "3bd08e13-a6f6-41cc-8241-49b6c753e9e9",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3463cf29-0095-4a1c-bf36-9513bf9327af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5382bc0-88d6-46a4-a012-b30ed3379c67",
        "cursor": {
          "ref": "5f89298f-044d-4181-b057-8974d6b81363",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "e1674fa7-59fa-4d27-bfaa-2b42a03540fb"
        },
        "item": {
          "id": "f5382bc0-88d6-46a4-a012-b30ed3379c67",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "025bab1b-794c-48ea-b2fa-3a7f661f4b30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53975c91-316c-405d-80e4-9f4326699009",
        "cursor": {
          "ref": "903a039e-87be-41ab-9709-478b3933738c",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "a172a61e-ef23-479b-b80e-5fbf2d912269"
        },
        "item": {
          "id": "53975c91-316c-405d-80e4-9f4326699009",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "21e77ff1-e510-4076-9026-648d867d0fb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e234ce07-f710-48fb-9602-50fdaf07f344",
        "cursor": {
          "ref": "79774803-fbe8-4479-a6e5-8770ef15559b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "15c3aeb3-3846-41b6-ab62-6bd96f566611"
        },
        "item": {
          "id": "e234ce07-f710-48fb-9602-50fdaf07f344",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e8f39877-9753-4606-98a4-a72571c6675f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e56c986-1532-4d46-a713-722c6a814286",
        "cursor": {
          "ref": "00f54f09-6b60-48df-8ad4-55a61f23bf92",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "34b4b4cb-da49-4629-9a26-918aea311ae3"
        },
        "item": {
          "id": "1e56c986-1532-4d46-a713-722c6a814286",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e3a314fd-254b-4d7d-afbe-6bd1241e0afb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "576e44cc-0566-4858-9a63-6289f958ab2f",
        "cursor": {
          "ref": "fb431b3c-7810-42ac-9a2c-785e5b519a39",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "82683fe5-89cf-4a59-a08f-52e7e9bf3fca"
        },
        "item": {
          "id": "576e44cc-0566-4858-9a63-6289f958ab2f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8747b909-3914-4420-bfcc-459fae11835a",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 17,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:166)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:166)"
            }
          }
        ]
      },
      {
        "id": "0d8849b7-2c1d-40ad-8063-b946a840be02",
        "cursor": {
          "ref": "1d731487-414f-4100-92d8-7478769c933c",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "f0bb1e99-fa5e-4867-9d1e-8c9cd487543b"
        },
        "item": {
          "id": "0d8849b7-2c1d-40ad-8063-b946a840be02",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "fd42f852-69aa-4cf0-b658-6f25aa5ab062",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84a052b8-8ed7-4a4e-bf63-58ec9e5315bc",
        "cursor": {
          "ref": "6ea5a914-072f-42e9-8c59-3502fefdcd75",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6d12b760-3041-437f-bfa1-b43fea15bdd8"
        },
        "item": {
          "id": "84a052b8-8ed7-4a4e-bf63-58ec9e5315bc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "d3b254d6-4352-4e12-addf-43a9d299d06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b75fefeb-d9b9-4599-9f0f-6befcad207f3",
        "cursor": {
          "ref": "9d38eb49-932b-429e-b6fb-1097ff99be43",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "737668cf-a950-4bc2-89e4-55cfb20c12f9"
        },
        "item": {
          "id": "b75fefeb-d9b9-4599-9f0f-6befcad207f3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9bc215bb-5d03-425a-a305-47974728759f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5db4d9-e3ea-4c1d-a825-5a205155c376",
        "cursor": {
          "ref": "76741ce7-0501-4ba4-81f7-66ed644898c5",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ba7bc18e-938d-4f63-af13-1f65e09f6986"
        },
        "item": {
          "id": "da5db4d9-e3ea-4c1d-a825-5a205155c376",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "62afa39d-ee35-4bdc-9533-1b4607dad41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97a42203-ccb4-495d-979f-bdfa659e46c6",
        "cursor": {
          "ref": "220533e3-25bf-4d2b-b501-b4a6090092e2",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "6208ccbb-88fd-4a47-966f-989e695a8847"
        },
        "item": {
          "id": "97a42203-ccb4-495d-979f-bdfa659e46c6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9af6278f-092e-4afc-a00a-eefc1ac9989a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d3b6db-f473-48a1-aeb6-a1a98ccd70e7",
        "cursor": {
          "ref": "984cb998-2de9-430d-afae-e4912d92dd20",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "5a90e529-a29f-41b2-95ed-ee1ea8e139c2"
        },
        "item": {
          "id": "b4d3b6db-f473-48a1-aeb6-a1a98ccd70e7",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "8f777486-fccf-4230-8ac8-1bfa56d8d379",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063d9cf9-9fff-4564-973f-159cf9e4751e",
        "cursor": {
          "ref": "1a92e948-e9a9-45a7-9911-3a83ede8ad1c",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "2459889b-2a91-4343-a13f-1a64b9c44788"
        },
        "item": {
          "id": "063d9cf9-9fff-4564-973f-159cf9e4751e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "6d57963b-67ed-43a0-bba8-d81ed354817d",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 34,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:173)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:173)"
            }
          }
        ]
      },
      {
        "id": "d7dacc75-e38a-4725-a683-e222751ee674",
        "cursor": {
          "ref": "4199b7eb-45e0-410f-b77a-6df6a6ff143f",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a7e623ea-2464-4eff-83b3-96f0ba42288a"
        },
        "item": {
          "id": "d7dacc75-e38a-4725-a683-e222751ee674",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "df1a6bfc-528b-43a8-8e89-e476b06b485e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 20,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "9ce6e28d-54a9-46f8-a68d-9ec00f32325a",
        "cursor": {
          "ref": "e6bc62fa-fc6c-429f-b698-b232e4efc5f6",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ecb79466-4f81-4117-b3d1-7001f4a6d9ff"
        },
        "item": {
          "id": "9ce6e28d-54a9-46f8-a68d-9ec00f32325a",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "d1b81d14-ce45-44ac-8a2f-32947a3f1cee",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 14,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:175)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:175)"
            }
          }
        ]
      },
      {
        "id": "c9336741-d522-49f2-84e9-62e6238ef918",
        "cursor": {
          "ref": "dadacbc7-942a-4b4a-bee7-004ffc760fa0",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "fb1c6fec-70e9-4efa-bd82-ef9bcdaf7159"
        },
        "item": {
          "id": "c9336741-d522-49f2-84e9-62e6238ef918",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "5df6c258-9af1-465d-99c3-49b281df8937",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 13,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:176)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:176)"
            }
          }
        ]
      },
      {
        "id": "0db4a9fe-5379-4774-822c-e59db1c3207d",
        "cursor": {
          "ref": "95ea35d8-cf1a-4f99-bfc1-27289953b1ae",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "1dda6fe0-5bac-470a-92d4-55b1fe0ceeb5"
        },
        "item": {
          "id": "0db4a9fe-5379-4774-822c-e59db1c3207d",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5395f885-579e-4240-8c5a-dc6d3b963178",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 15,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:177)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:177)"
            }
          }
        ]
      },
      {
        "id": "9297254b-c625-4bc5-ad5c-418dbd5044aa",
        "cursor": {
          "ref": "2778e0b4-16b2-4fcb-a963-cd9179b8079f",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "48fdc437-b23c-4630-b687-7975ec96bfce"
        },
        "item": {
          "id": "9297254b-c625-4bc5-ad5c-418dbd5044aa",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "7f65ae5c-a908-404f-b20d-577f00a7f506",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 22,
          "responseSize": 12
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:178)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "JSONError",
              "index": 1,
              "test": "response validates against schema",
              "message": "Unexpected token 'S' at 1:1\nServer Error\n^",
              "stack": "JSONError: Unexpected token 'S' at 1:1\nServer Error\n^\n   at Object.eval sandbox-script.js:2:178)"
            }
          }
        ]
      },
      {
        "id": "ab47b5dd-3627-48d7-a0a0-5fbc21bfd8fd",
        "cursor": {
          "ref": "84a3d07e-1115-4733-afbf-aaad2580a69d",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a63bb185-3b2f-44f2-bd1f-eee44a00a7ba"
        },
        "item": {
          "id": "ab47b5dd-3627-48d7-a0a0-5fbc21bfd8fd",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "a59c9b8d-b5b6-4a32-8c6a-ed2a44788a22",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 6,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630b9fe7-593f-47e2-b43a-20df35d136dc",
        "cursor": {
          "ref": "0aae998a-a1dd-487d-a4b1-60e0381fcd53",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "e4e48fd0-1ccd-4975-a4c5-cd05b42efbd2"
        },
        "item": {
          "id": "630b9fe7-593f-47e2-b43a-20df35d136dc",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "e432d724-1503-45fd-840f-0348beefe07b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52b39699-6b8a-4533-95f1-0c004bcba383",
        "cursor": {
          "ref": "55f41bae-486a-4bfb-a59f-489bbb6bcb3e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "fb2b922a-73e6-4fc5-b6b8-487cd2fdea23"
        },
        "item": {
          "id": "52b39699-6b8a-4533-95f1-0c004bcba383",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "a697c046-a153-4e2c-b43a-aa2979dbb03d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbdd2a4-ae3e-4688-9a64-7586f6250ee7",
        "cursor": {
          "ref": "058cada7-f875-48a3-a25b-afe8aa995983",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "a0ecf110-9e0f-4970-b01f-061ff9ee6b77"
        },
        "item": {
          "id": "1dbdd2a4-ae3e-4688-9a64-7586f6250ee7",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "0caa092e-e0bc-4eea-bc56-9f1563a9bc9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e247ef5-13dd-44c5-8af1-8053c0a5eefc",
        "cursor": {
          "ref": "63859d7f-51bc-461c-8cd7-8d6004d7464d",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ba748bdc-d421-402e-bbb2-b9d159e35e46"
        },
        "item": {
          "id": "5e247ef5-13dd-44c5-8af1-8053c0a5eefc",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "ec745fdb-8b35-4a26-a10d-2d740b4e02ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3bce54-f3a3-4508-aa03-1349fc1fcee1",
        "cursor": {
          "ref": "25c224eb-c842-4260-9d88-c21c051798c1",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "e53dbc60-6fe8-4fec-a35c-9f5a92b8fe3b"
        },
        "item": {
          "id": "ca3bce54-f3a3-4508-aa03-1349fc1fcee1",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "63e1986b-8c91-4a68-8b08-34e5e3514517",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15cd85b2-8b13-4dce-a549-7e847413d0f3",
        "cursor": {
          "ref": "bddd6c22-ca36-4201-a446-92fc8a25dae6",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b4c47d6c-16db-406b-a525-612008f7591f"
        },
        "item": {
          "id": "15cd85b2-8b13-4dce-a549-7e847413d0f3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "c45c45e2-9f21-4704-b143-19d4aa773e4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce829294-e8d9-4631-819c-3e6b2db15b06",
        "cursor": {
          "ref": "4ea427e3-56e1-4eee-bf0a-2a0092ddec6a",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "41cad603-5018-4fd8-99c9-e991550a6756"
        },
        "item": {
          "id": "ce829294-e8d9-4631-819c-3e6b2db15b06",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "26476ac9-d551-4ea0-ae3b-40290b95a273",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdbdd9c7-fb69-425e-9afa-27ad16aeea84",
        "cursor": {
          "ref": "44eb3a37-c737-43b3-88b8-f432a3382b04",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "c9904de5-e1f1-47c8-8053-73766ed8bfed"
        },
        "item": {
          "id": "cdbdd9c7-fb69-425e-9afa-27ad16aeea84",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "59a650e5-fe22-4a8a-ad39-e6e072bb6a4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1aa10459-1f4a-496e-82e6-1ddfe10021fb",
        "cursor": {
          "ref": "fae5c411-531b-4c63-ad04-42b26b9a29b9",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9064a148-4908-4fb7-8a69-6f2ace3e8366"
        },
        "item": {
          "id": "1aa10459-1f4a-496e-82e6-1ddfe10021fb",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "fbf8a9fd-4634-49da-9774-f0b9da300f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c79c845-2b6c-4905-99a4-84bcba97bdb5",
        "cursor": {
          "ref": "3368b08f-3e22-4114-98da-f756ad25df2f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "45e03798-9795-4a5f-bee7-dad02fc242b2"
        },
        "item": {
          "id": "7c79c845-2b6c-4905-99a4-84bcba97bdb5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1717ed73-1c6f-4110-839a-5b40ec2d3f80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6580e86f-b3ad-4394-8570-e702573a48e5",
        "cursor": {
          "ref": "8559773b-7cea-4344-a187-500fbb614962",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0028ab88-d471-4c21-a116-a3c3f4c225a3"
        },
        "item": {
          "id": "6580e86f-b3ad-4394-8570-e702573a48e5",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "64aca6e6-1f3f-489f-afc7-0814534bb408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6006d8b0-6262-4a0d-8733-832323e506df",
        "cursor": {
          "ref": "d7591b35-39b0-4c05-9cdb-eb31dea166a9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "f6b39300-641a-43cc-9013-bb11a80548c4"
        },
        "item": {
          "id": "6006d8b0-6262-4a0d-8733-832323e506df",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "f8f07302-1ba2-437b-a8f1-db19a1aadfd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2cab33b-b51b-445e-8dee-39fa51460b8e",
        "cursor": {
          "ref": "5c0953a0-3418-45f0-b5b4-c861804d5bf1",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "3441842e-1bcb-462f-a890-60e0d91b3776"
        },
        "item": {
          "id": "a2cab33b-b51b-445e-8dee-39fa51460b8e",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d450ee01-4669-448a-bc75-56a2af615b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e499fb0f-85bf-439c-83af-a23646a19cfb",
        "cursor": {
          "ref": "00e31cd9-4b5c-47ea-82f1-bac14e3d36e8",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e6d145fa-48be-4eb2-913e-2bb18742975c"
        },
        "item": {
          "id": "e499fb0f-85bf-439c-83af-a23646a19cfb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f99ec5e7-c964-41a0-bddf-bab1a13d75eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8578d85a-1225-44ef-98a8-867de98df20d",
        "cursor": {
          "ref": "0429a9b1-1488-427d-9413-378ccc9982c9",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "586832a6-f428-41f6-a37d-036a4bbf8e83"
        },
        "item": {
          "id": "8578d85a-1225-44ef-98a8-867de98df20d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "74604777-0870-4e87-830a-7b9ef31bd194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459f10bc-69f5-44d4-ab80-d10ac2b5162b",
        "cursor": {
          "ref": "5aa4bf63-22c6-4194-94f2-fd2680b28ec7",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8c3e1613-1ed0-4fdc-bdbd-56513151d754"
        },
        "item": {
          "id": "459f10bc-69f5-44d4-ab80-d10ac2b5162b",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "53d98fdd-55bd-4100-9d54-74ddf1d89b45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e39d01-8dbb-40b5-ac38-65d5a23bf318",
        "cursor": {
          "ref": "644fcb17-5c02-451b-9d70-2321b8c24c36",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89e0ae36-dbcc-465e-a80a-412aa9c64244"
        },
        "item": {
          "id": "68e39d01-8dbb-40b5-ac38-65d5a23bf318",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f4bfcc21-838b-4769-a689-fee4602ff1ff",
          "status": "OK",
          "code": 200,
          "responseTime": 48,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "a6ea5a92-0eb2-4516-b993-2b50769e3b34",
        "cursor": {
          "ref": "e4e2a296-cc0c-430b-a0a2-2bbce5a75b12",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "fe442bf8-289a-4d2f-adbf-502fb146fddc"
        },
        "item": {
          "id": "a6ea5a92-0eb2-4516-b993-2b50769e3b34",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "835dd534-751c-493c-b2cd-f2e052736ad0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78420fd8-abd2-45cf-8df3-b6b7aa0d4790",
        "cursor": {
          "ref": "80b791e0-1410-4047-b244-8c13d4dc68de",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "02352c17-20fe-4ce1-95fc-bde257b85cdf"
        },
        "item": {
          "id": "78420fd8-abd2-45cf-8df3-b6b7aa0d4790",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "19c50633-52cf-4f8d-baec-daf1a0695656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad52a96-5038-4fa6-aae4-b4fbbf5a94b1",
        "cursor": {
          "ref": "a87bc05a-7269-433f-ba3c-b505bc75dcda",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "ac7a9d31-e2ca-497c-97a1-4ef8b5e08763"
        },
        "item": {
          "id": "3ad52a96-5038-4fa6-aae4-b4fbbf5a94b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "8b8caf6b-3d9e-4bcc-8c86-5a8b7f43ae43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1721ba70-fc12-4865-95e7-a4c2685a3c33",
        "cursor": {
          "ref": "8bdf5754-d48e-4ce9-a759-79a6106ba74e",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b7b600ce-090f-4316-8be9-5b63d62ed1a4"
        },
        "item": {
          "id": "1721ba70-fc12-4865-95e7-a4c2685a3c33",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "730673cb-210b-481e-872a-2dd42fd52e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5ddfdc-f865-487d-8e0c-eb67c1d605f5",
        "cursor": {
          "ref": "53659006-8307-409a-9e33-dfe4919dc427",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "41307cf2-7d0d-4e1c-8835-08c2195ff5a8"
        },
        "item": {
          "id": "8e5ddfdc-f865-487d-8e0c-eb67c1d605f5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "0d1c79c1-d8a6-4b99-b352-327dc4407886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e7742ed-ea34-4121-870c-92aa26460eed",
        "cursor": {
          "ref": "dff41a2a-87a8-4a7c-aafe-dcbebbac6a77",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "02b715fa-c860-443e-8a78-a9c36b264f07"
        },
        "item": {
          "id": "3e7742ed-ea34-4121-870c-92aa26460eed",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "30a71c88-f08e-4536-91e3-b29e2b1da433",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5d8cde3-0441-48ae-ba3c-1fc71c686382",
        "cursor": {
          "ref": "4457cf26-7a7e-401f-a6b0-d86f751331f8",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4d6513ba-2a64-4504-ad7e-f8876f837804"
        },
        "item": {
          "id": "a5d8cde3-0441-48ae-ba3c-1fc71c686382",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "c0f6306d-1ed8-4bfc-af69-8490f768e7fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb10a26d-d358-4a4e-aa1f-99776d4b3b10",
        "cursor": {
          "ref": "ccbc75de-bfb4-47c6-8555-5a3246209c6e",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8d28eba4-68bc-428c-b46c-6c3162c40500"
        },
        "item": {
          "id": "fb10a26d-d358-4a4e-aa1f-99776d4b3b10",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a21b755e-28c2-4e6a-9fec-d232c37a8cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f60d9dd0-f610-42ae-82b6-5c030140d187",
        "cursor": {
          "ref": "d3b0e6e4-3651-4e2c-8f74-4144f8cbc0ad",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3e7801e7-ccf8-4e91-86d8-9edc28ad4e02"
        },
        "item": {
          "id": "f60d9dd0-f610-42ae-82b6-5c030140d187",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "bd830f84-c6f9-4ab6-83bf-45cb701b3b77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ccc4d1-e0ea-4385-87cb-d77d68c840ef",
        "cursor": {
          "ref": "0a17c3ba-3d48-4ea8-965f-4ccf98d8dad5",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c3eb3755-debb-451c-aa5d-6dab6c8c0dee"
        },
        "item": {
          "id": "b8ccc4d1-e0ea-4385-87cb-d77d68c840ef",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "188063c4-d694-4e3e-9cdf-569e89fb15c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1638edbf-90e2-46f8-a84b-09c25e78cef3",
        "cursor": {
          "ref": "ab04b25d-eb68-484d-bf1b-b17f5db3bc7a",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "be3dd36e-cbab-430b-b331-448cd9432e97"
        },
        "item": {
          "id": "1638edbf-90e2-46f8-a84b-09c25e78cef3",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "33829fb0-4352-425e-9ebd-e61ee36e169f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14ce4854-ef03-44bc-b8f7-3955cba46436",
        "cursor": {
          "ref": "de82c91a-0a4a-4a21-af24-8f216be241ae",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "6678ad70-5840-42c5-8562-6026a4c96331"
        },
        "item": {
          "id": "14ce4854-ef03-44bc-b8f7-3955cba46436",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d0119075-f502-4fdb-8302-1a1048b0a8dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870a526-46cd-4c8e-b718-e3838ddd2e4d",
        "cursor": {
          "ref": "f7767688-7580-401f-af42-d0fda504bf9a",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "abe62611-42e0-4e90-a349-2f747f1228b8"
        },
        "item": {
          "id": "b870a526-46cd-4c8e-b718-e3838ddd2e4d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "35aeec18-aaa2-49c6-9f1f-1982aeca8477",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b04ab5-8311-4925-9a25-cfe48a40e7d2",
        "cursor": {
          "ref": "21b5639e-02c0-4de2-b931-22823cdf4980",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "b339f981-bcf8-4b68-9929-f0f01bedd281"
        },
        "item": {
          "id": "19b04ab5-8311-4925-9a25-cfe48a40e7d2",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "7e7bf1b8-124e-40c1-af10-161c3b90fe78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02033d3-2b5d-4d20-883d-0a53fbb64e0e",
        "cursor": {
          "ref": "f1fab3e1-b4a3-488c-bd76-0751ebe1f79f",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "b98e26d0-4bf5-4015-9434-58b123fc78fa"
        },
        "item": {
          "id": "c02033d3-2b5d-4d20-883d-0a53fbb64e0e",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "e6762a17-81a1-47d8-8342-f6e442c7c2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3adce07f-4194-4ef4-bf9d-be032c11cdac",
        "cursor": {
          "ref": "5fb91100-cccf-46cb-a3d7-534dd8d697ed",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2c1c385f-cb13-48e7-8df5-508a86479d35"
        },
        "item": {
          "id": "3adce07f-4194-4ef4-bf9d-be032c11cdac",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "667cc55e-8a8b-4c78-b384-4973be6b1d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ffe26d5-17f0-4a72-8bd5-95df56b966d2",
        "cursor": {
          "ref": "3881c6b4-62f1-4cfa-a041-24c955d8d564",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "dfe512b4-b13f-4e0b-887b-28c6d6be5e23"
        },
        "item": {
          "id": "6ffe26d5-17f0-4a72-8bd5-95df56b966d2",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "d2da3bea-04fe-4567-beaf-e0e951003536",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 24,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3169992b-0071-4da4-91cc-276e37ae220c",
        "cursor": {
          "ref": "42e290bc-5587-4428-a186-eeb15450f455",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "11cd0789-7614-49a9-9302-3cab64cc5e5f"
        },
        "item": {
          "id": "3169992b-0071-4da4-91cc-276e37ae220c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "227aa6f9-25e9-4d2c-a56d-0c2355505488",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "320ae7a8-1d92-4b4b-a6fa-93a2069fef75",
        "cursor": {
          "ref": "ce8b2289-2429-432d-8fb0-b5a7260146ab",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f7cb302b-66c0-417b-ac75-e7a2991fd2fe"
        },
        "item": {
          "id": "320ae7a8-1d92-4b4b-a6fa-93a2069fef75",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dfd4f31a-61b6-4af4-9f26-92b069bd3020",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40577304-1a91-474e-b918-e43874cd73dc",
        "cursor": {
          "ref": "4156e722-29f0-47c8-8b23-6e672a02f74f",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "f837455e-74e3-4850-8f0a-788e726fe1ff"
        },
        "item": {
          "id": "40577304-1a91-474e-b918-e43874cd73dc",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "27f0af42-2a23-46e8-b302-cb2ff9e96fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb898f1-718a-487e-bb85-625ab21107c6",
        "cursor": {
          "ref": "02f2e546-5d9c-47d6-b43d-e457422f7edc",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "2bb22f69-727d-4a22-bbee-28dc114e02a0"
        },
        "item": {
          "id": "deb898f1-718a-487e-bb85-625ab21107c6",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "f9767348-2a36-4b8e-afb7-b41ed721a438",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c7355a9-0a40-4d6d-8f32-67d4126a2f46",
        "cursor": {
          "ref": "03bef7d6-4774-4bc5-9a6a-abd1539de8f3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "3012da09-4894-4fb3-b59c-e67d8c755e75"
        },
        "item": {
          "id": "1c7355a9-0a40-4d6d-8f32-67d4126a2f46",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "25ce4092-741f-4afa-b063-ec14ad3a7e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80962eb-d30f-45e9-a5a4-9294cd96b614",
        "cursor": {
          "ref": "3a570cd7-d0be-43c3-bdd7-4b756aaf7c31",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "a571ac95-7006-49b9-b229-bd25a98c8da0"
        },
        "item": {
          "id": "b80962eb-d30f-45e9-a5a4-9294cd96b614",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "b3305327-56bc-4e1b-82e3-aaddc3a92f87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1da6b0d5-68d5-4954-9130-abd5ee06535f",
        "cursor": {
          "ref": "2a0ea6fb-f9ea-4210-a532-931ee2e15372",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2d913c6b-61ed-4c14-835e-7e8f42eba116"
        },
        "item": {
          "id": "1da6b0d5-68d5-4954-9130-abd5ee06535f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "a94555e8-2539-40d9-872d-fca72bac2b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bde35092-8f42-43ff-8dcc-cb54e1635df7",
        "cursor": {
          "ref": "249ec8e8-d722-4329-8f50-16ac4337d11c",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "589d9d14-5c48-4d97-a667-c751b9595c53"
        },
        "item": {
          "id": "bde35092-8f42-43ff-8dcc-cb54e1635df7",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f0bc2272-6de6-4a0d-b2c7-f1661a3dbafe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d85412c-f48d-4cdf-97fc-326622f8e2a3",
        "cursor": {
          "ref": "05bf416b-da02-44e8-9535-3eea0736e1d1",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "1e00386b-8d56-422e-b36f-457a9883993c"
        },
        "item": {
          "id": "0d85412c-f48d-4cdf-97fc-326622f8e2a3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "0356f192-3121-427b-b361-9411c02f8322",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75040668-823f-4496-a305-cdef16ad1c64",
        "cursor": {
          "ref": "e925f092-8dc2-4e49-acd5-220bb2974a3e",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "c3c8fc84-7d11-4c2b-9959-4c60bee7212f"
        },
        "item": {
          "id": "75040668-823f-4496-a305-cdef16ad1c64",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "58489ea3-0d37-4dc1-82ec-9a83f6c98fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4515970e-2d71-4944-a283-0d4fdf5b805f",
        "cursor": {
          "ref": "d3b46e26-295c-4215-9de3-31a3053a9f91",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "67dbc525-0f60-454c-b94e-de1c1398d486"
        },
        "item": {
          "id": "4515970e-2d71-4944-a283-0d4fdf5b805f",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8b265825-d64d-4979-8616-7c4a35f63a8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8368df-b45a-4822-8424-04558e6c3f6c",
        "cursor": {
          "ref": "1a56deb7-b83f-435c-9663-abde8a2cec4a",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "6758d33a-4140-4785-a671-c1a239f78280"
        },
        "item": {
          "id": "3c8368df-b45a-4822-8424-04558e6c3f6c",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c522d2b-7820-437a-b2bd-3dbed01926c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf301d61-ced7-4882-8567-8ad58d90c45e",
        "cursor": {
          "ref": "977055d8-8e1c-4d38-9db4-681256f4a297",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "5387e110-b381-4b52-9fd9-99088aa53c48"
        },
        "item": {
          "id": "bf301d61-ced7-4882-8567-8ad58d90c45e",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9761836e-7ce8-4be7-97fb-8c9a032efdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "565cd230-5598-496d-b967-f9764e054140",
        "cursor": {
          "ref": "add81dee-636d-4d7f-ac4b-213ac87efcc3",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "0d343d21-7bb5-461b-9307-1038b7d68a25"
        },
        "item": {
          "id": "565cd230-5598-496d-b967-f9764e054140",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8cf9f03c-9020-4d5b-81bf-e8994e8a65bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d2cd77-abc8-4a3c-a8c1-a9c929d9391c",
        "cursor": {
          "ref": "5a92383a-2e6a-4c1e-9a23-8064bf4f5add",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "e5461f91-948e-4bca-bff7-76e4e00f3b3c"
        },
        "item": {
          "id": "33d2cd77-abc8-4a3c-a8c1-a9c929d9391c",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2f62036d-96ec-4f16-81fc-567164fe7ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "315ebe82-eb74-4121-bfcd-155adae6aabe",
        "cursor": {
          "ref": "df48a482-c6ea-4eed-af36-2f262bef1924",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c78ee133-965e-40da-ad57-a004b3f4707a"
        },
        "item": {
          "id": "315ebe82-eb74-4121-bfcd-155adae6aabe",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "0f91b155-7d60-4623-a788-22efb8fa9363",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0eec111-e2fe-4c84-8144-9880a83774d8",
        "cursor": {
          "ref": "7f12e020-5d44-4638-b05d-9db3ce1d2e41",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "1063899c-bdda-4f18-b62c-c773bb0cfecf"
        },
        "item": {
          "id": "b0eec111-e2fe-4c84-8144-9880a83774d8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "dd9bbd96-3291-42ad-8a27-e9dcc8d50fd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "557974c5-285e-4780-8bc1-465e1ddd7138",
        "cursor": {
          "ref": "5a892ab2-9066-4e8c-8995-118ac3b79e93",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "c6440a08-498a-4908-8cf1-3408230bacff"
        },
        "item": {
          "id": "557974c5-285e-4780-8bc1-465e1ddd7138",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "98dead7d-b92c-45f7-9dbf-ba1e78d7075c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791c9b3d-93ba-45fb-a1de-7d92692fabaa",
        "cursor": {
          "ref": "d5baf057-65c4-41dd-8d8c-13b410610fd1",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "232fa050-f175-43fa-bf22-9caf4cf4724c"
        },
        "item": {
          "id": "791c9b3d-93ba-45fb-a1de-7d92692fabaa",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "10f7a62d-ef9b-4c7a-acf7-d0f39199cffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e95c61-59d1-4e40-bd36-5bd5a57770e8",
        "cursor": {
          "ref": "8016cf96-70d9-4c9b-baca-b2571affe99d",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3befdca5-226d-4cbb-ad1b-524ccc02f23f"
        },
        "item": {
          "id": "a5e95c61-59d1-4e40-bd36-5bd5a57770e8",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "37f9764f-0e0e-45be-84cf-6a529cf9c069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50f5f189-6a40-4f9d-a881-812aa5d1327e",
        "cursor": {
          "ref": "992f819f-b219-4607-af42-626e1d6c1973",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "fa7123fa-3a83-4e68-87b3-018f796ccb4e"
        },
        "item": {
          "id": "50f5f189-6a40-4f9d-a881-812aa5d1327e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "e6ba3499-925e-49d4-bd36-709577414318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c0b906-9b1c-4c3d-acef-91461841ee8b",
        "cursor": {
          "ref": "72bd3ac0-e911-431d-926d-9b5ef78d07d3",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "ed6fe87e-604f-47db-af75-558ce269d185"
        },
        "item": {
          "id": "22c0b906-9b1c-4c3d-acef-91461841ee8b",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "b5f1aa63-4ea3-4886-b8aa-8c448658ee48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "710a0eb4-62d4-4eb9-81b4-c3316d8128cd",
        "cursor": {
          "ref": "ebeebf47-70d1-45ee-836e-1c254de6e1b8",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "dad51af6-7da7-4ff1-b140-169c46d7022c"
        },
        "item": {
          "id": "710a0eb4-62d4-4eb9-81b4-c3316d8128cd",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "24e47fe2-d5b4-4d5b-96f6-e08c4970d31f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b5c1d9-b9e5-40bc-b6a2-213c2763ace5",
        "cursor": {
          "ref": "0ba98367-b6e5-4056-8a46-ce551d6c9be5",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "e805bbfb-6b4c-4348-b1b3-fc369468d964"
        },
        "item": {
          "id": "34b5c1d9-b9e5-40bc-b6a2-213c2763ace5",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f882bc23-017e-4a1f-9a03-f0d2910a995c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96efff81-8ce6-4e75-a9f7-1672c98b879d",
        "cursor": {
          "ref": "fc8c73c4-5eec-4e1c-88af-4a988abf28d9",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "95723d9a-5e1a-4469-97e4-b590046c2a9a"
        },
        "item": {
          "id": "96efff81-8ce6-4e75-a9f7-1672c98b879d",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "fbba71b3-70ec-42cd-923b-07d1540a3417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce8f0c90-5cfe-4d28-ac07-45ac6deba2df",
        "cursor": {
          "ref": "526a6a46-cbaa-4ed6-bbb3-c8eecc8d2138",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "83ea12e8-6ca6-47ad-82c1-859b677243b4"
        },
        "item": {
          "id": "ce8f0c90-5cfe-4d28-ac07-45ac6deba2df",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "a46df734-fe2a-4fa8-9738-0cab2ac55dee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab747b8f-4dd6-4aee-8b66-491d1fa43efe",
        "cursor": {
          "ref": "ee7a9e1d-ffd8-4f21-818f-f93f1dcfda1a",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "dd735ba3-b053-43d9-9956-e4992980775d"
        },
        "item": {
          "id": "ab747b8f-4dd6-4aee-8b66-491d1fa43efe",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "db6fabab-b9ef-45e7-87d6-2641410e0191",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "343c4422-4acc-4336-8081-561e7385be2e",
        "cursor": {
          "ref": "fd74f6ea-0e00-45af-9b7d-53e6fdd6b7a2",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "49295e97-b22c-4d27-a0a4-8f9c2b52c76c"
        },
        "item": {
          "id": "343c4422-4acc-4336-8081-561e7385be2e",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "ac714af2-000d-4301-92f4-38f650d8e0b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bfb3182-0cdf-4f75-99e4-336305947984",
        "cursor": {
          "ref": "c17f42a4-b796-44c9-9e63-b096340e46c8",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "c83081ed-a1a5-4d6f-9e78-a69af4122635"
        },
        "item": {
          "id": "9bfb3182-0cdf-4f75-99e4-336305947984",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "e26073a9-8936-4ad8-baad-0f56e4ce8b5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53106c62-72a5-4cb2-af47-26c633b0d471",
        "cursor": {
          "ref": "7c178c06-d4ca-4548-bb4b-5f9b9ca1d03c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f62c8fcc-382b-4f93-baab-8478e30afc35"
        },
        "item": {
          "id": "53106c62-72a5-4cb2-af47-26c633b0d471",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99234d69-a88d-4c1c-a8ca-44b7abcb437f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f091740-ffcb-491f-a1e5-732a9111d953",
        "cursor": {
          "ref": "725c8e11-ae4e-430b-8dda-c27b8cf3311e",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "3a6d3802-f702-48f5-95d6-ca3dccc60830"
        },
        "item": {
          "id": "4f091740-ffcb-491f-a1e5-732a9111d953",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c0d90552-8467-43ac-af20-d7938948c3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfae5c88-d2d9-44bd-b3d3-34f74a9c7611",
        "cursor": {
          "ref": "8ede4185-b099-4e15-a195-e71ed25bea0f",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "cd3f6c45-2aaa-4438-87f3-2a56a98b9b0f"
        },
        "item": {
          "id": "bfae5c88-d2d9-44bd-b3d3-34f74a9c7611",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "7955f768-55b3-4ae4-9f35-d438c2ad8e7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d254775d-fb4c-42cf-a113-5191b3af1e4a",
        "cursor": {
          "ref": "c4a29cdf-6cec-48fa-9fa3-e8514322bb82",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "23172eba-ed17-4cee-bb94-b1dbe560887f"
        },
        "item": {
          "id": "d254775d-fb4c-42cf-a113-5191b3af1e4a",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "51c3ec6f-4063-4735-9b04-c50f542504d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b51b5adf-b868-4a64-b195-18d32e347203",
        "cursor": {
          "ref": "d650f299-f592-4abc-9ea4-93a80e51c14a",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "b8a83423-e782-414e-956d-8e2ffb91128c"
        },
        "item": {
          "id": "b51b5adf-b868-4a64-b195-18d32e347203",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d672460b-b93c-44dd-995e-0b455f546382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da142128-8d76-44f0-bbe8-0dfa194a664c",
        "cursor": {
          "ref": "404256d0-5c47-44a3-88f4-32b956e0edc6",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "dc0a63c0-7ed3-4451-8a87-aa3d8749e6ad"
        },
        "item": {
          "id": "da142128-8d76-44f0-bbe8-0dfa194a664c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "81d63920-8f15-4b22-83f1-e0c09cd4678c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcebbf3e-42d1-4b02-9d86-d23159a759cc",
        "cursor": {
          "ref": "c18663d8-f0dd-4824-b74c-2daca4ea5927",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "223c1b66-4528-4e7e-837d-2c94fc9087ab"
        },
        "item": {
          "id": "fcebbf3e-42d1-4b02-9d86-d23159a759cc",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "49da8b59-dc9b-41ce-b276-6bc1dd6e07b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30730fd0-7b5f-4ef7-b6d6-4487f5b281c3",
        "cursor": {
          "ref": "1beaa20b-e8fb-49da-9cff-0f7da0f4efb6",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "ea2f48e3-58e7-4c7d-9ff4-81f6bba4a971"
        },
        "item": {
          "id": "30730fd0-7b5f-4ef7-b6d6-4487f5b281c3",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "fea3b979-8d29-4dad-84d2-1d730f0819d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "013aecfe-cea2-4b30-b9e1-052688dc8795",
        "cursor": {
          "ref": "302fa897-95cf-411a-aeed-cd8842c83964",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "1017f6a1-aa3e-4238-8418-b39c3b28b369"
        },
        "item": {
          "id": "013aecfe-cea2-4b30-b9e1-052688dc8795",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "83ea3273-99a9-4c8d-9c5a-422149fd4d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba053f56-84f1-4209-a6ed-d399759c0944",
        "cursor": {
          "ref": "2e196ab7-3a15-4e19-bcc8-d7c866fbbd7e",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "02175bbb-9517-4ef4-8a15-68aec9cc541e"
        },
        "item": {
          "id": "ba053f56-84f1-4209-a6ed-d399759c0944",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "8be32b1b-9eb2-4776-93c5-0dee23e30489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e887f1f-c5ef-4f06-843c-009baff1be30",
        "cursor": {
          "ref": "7a16a0f2-89ed-4aeb-8e7c-11693e809913",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "e808f4a2-643f-4789-bfc5-27821e7667b1"
        },
        "item": {
          "id": "4e887f1f-c5ef-4f06-843c-009baff1be30",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "add34441-c4b7-437a-adfc-4dc939a71833",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0cf60f-a602-480f-83c5-4f7aac5cd88c",
        "cursor": {
          "ref": "c8c7e3f1-bb2a-4c9b-bb55-47e3017a8d1b",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "913b73bb-5a3b-419b-9f83-fbc6253d2406"
        },
        "item": {
          "id": "fc0cf60f-a602-480f-83c5-4f7aac5cd88c",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "abaec893-596f-48f6-8831-71a16ca9d6ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd4c11b-ae14-471f-b433-56a1d437148d",
        "cursor": {
          "ref": "8e1c3b3d-44b7-4fd7-b71e-f7df65f679c9",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "db3a9288-8919-4d54-8a08-31f1aefccdff"
        },
        "item": {
          "id": "5cd4c11b-ae14-471f-b433-56a1d437148d",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "6de2b528-4ac2-4537-8200-bc692b7e3434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6199a5-33e0-4171-9b15-78cc78a6fd5c",
        "cursor": {
          "ref": "a836e0f4-c913-4396-9279-0dd0d2cdd60d",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "53135bab-9e52-4455-890c-8cf65d910272"
        },
        "item": {
          "id": "6d6199a5-33e0-4171-9b15-78cc78a6fd5c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "32175033-fd6c-4f0f-a34a-254905a33951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef25f1a6-46be-48f7-83c9-65a261b46901",
        "cursor": {
          "ref": "59a1e24e-cc87-42df-b9dd-2ba48b7ea8c0",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "5ba2dd0b-53ae-4a33-83f9-db815cd92374"
        },
        "item": {
          "id": "ef25f1a6-46be-48f7-83c9-65a261b46901",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "23ca2d70-8836-4ce7-87a0-9b2e26d5d5ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5682d9b-1244-4f41-b0ae-dc5d5f8d8f1c",
        "cursor": {
          "ref": "141d2553-a490-4d4f-a4b0-46134c5b8195",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "da15515c-3b17-4e22-b4aa-81389f066596"
        },
        "item": {
          "id": "e5682d9b-1244-4f41-b0ae-dc5d5f8d8f1c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "53c513ec-dd3f-4a2c-b0dc-4735411c04e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5ca96d-9871-4255-b636-a3b38bd7700f",
        "cursor": {
          "ref": "db34996e-6f53-480e-9e81-e3caf4cce4db",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "63b43eb2-7260-48c4-86d5-59636a22ef7b"
        },
        "item": {
          "id": "ba5ca96d-9871-4255-b636-a3b38bd7700f",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "2825601c-55f3-4e23-8cd8-b787ec331180",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 167,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b2d301-5b89-4c5c-931b-e9524c4c7b17",
        "cursor": {
          "ref": "3fbe8db9-be27-4d4b-95db-a2e0d765dd19",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "225663e7-faee-45fc-847a-78d7c72ccb64"
        },
        "item": {
          "id": "d1b2d301-5b89-4c5c-931b-e9524c4c7b17",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "20f64b1b-2383-4f24-804c-764286aeafd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5667e41-8c45-4f51-a8c2-10a967db21fc",
        "cursor": {
          "ref": "8c78d7d5-550e-4fdc-aea2-e2f1296ffe0d",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "03f137f5-fa68-4f8e-bdcb-ff245571e6fa"
        },
        "item": {
          "id": "c5667e41-8c45-4f51-a8c2-10a967db21fc",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "06a99cf4-f35b-4c3d-bd49-e7357caf35ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c24836af-f906-438c-83bf-88c0910a64c1",
        "cursor": {
          "ref": "f07449a9-c53b-4cf7-846f-59d3d91d5621",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "48496892-c12b-4259-87cc-a9f5d0e02156"
        },
        "item": {
          "id": "c24836af-f906-438c-83bf-88c0910a64c1",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "d1d617ea-6115-4e70-88c8-3290dac33584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 21,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c86117-2ab0-4e13-9074-43c7aa97b4b1",
        "cursor": {
          "ref": "f3675f0e-33a6-46d0-8720-efd24bdcbaa4",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "e9d6d763-5e0b-4c71-972e-a0dc4ab1982b"
        },
        "item": {
          "id": "c9c86117-2ab0-4e13-9074-43c7aa97b4b1",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "d804dd3d-05ad-4c97-82f8-efee097158d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94301965-a536-4f3c-9eaa-e7ca04686c7e",
        "cursor": {
          "ref": "0fde81ab-3636-4816-b4c5-7a2bf22562e6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "ff21909c-30e6-40f4-96ad-71b746dc62a5"
        },
        "item": {
          "id": "94301965-a536-4f3c-9eaa-e7ca04686c7e",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "8b4ed0b5-babf-42d1-ac30-7482c9f47cfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f622ce79-c677-44e1-9186-02b031f3bdd1",
        "cursor": {
          "ref": "6cfaebb3-9faf-469e-b3b5-aba7c749508c",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5fcd8887-36d7-4710-a889-8b84e481acc1"
        },
        "item": {
          "id": "f622ce79-c677-44e1-9186-02b031f3bdd1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "319a450c-c9f0-42ac-9857-96c09fa0a3c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f55a0e-52d4-47ef-becf-0bc2f2fbb150",
        "cursor": {
          "ref": "3a3285d8-801f-4686-a019-71b250c11581",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "54e1c2c5-50a3-4c6d-929a-ac068abeaa7c"
        },
        "item": {
          "id": "d7f55a0e-52d4-47ef-becf-0bc2f2fbb150",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "a6ea93ad-5cfd-4c3f-9964-24aed2e03307",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 27,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c50e71c-95ed-4fc7-9c0c-34ed5013deed",
        "cursor": {
          "ref": "00d7b9c9-e720-4aee-877a-f46f60c11988",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "3fd9280c-5d1b-4c65-8fbd-158b74b69129"
        },
        "item": {
          "id": "4c50e71c-95ed-4fc7-9c0c-34ed5013deed",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2f3fc2f6-9ca2-4979-8df3-2a7925a96b75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d12b4e87-036c-4090-9b08-c860660b93d7",
        "cursor": {
          "ref": "7c0bca84-2729-4654-a5c8-1972f31e5d0c",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "1041442a-95de-4c6e-9e67-07814535388d"
        },
        "item": {
          "id": "d12b4e87-036c-4090-9b08-c860660b93d7",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "1890962f-9d54-4cfc-ae09-8eec485540ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa263e5-d279-4282-8309-b3e628eafc47",
        "cursor": {
          "ref": "83a1a29f-ea04-4fdc-a172-e1540cd5a1e3",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7aae39dd-2ed3-464f-bdd2-0370bd371d66"
        },
        "item": {
          "id": "8aa263e5-d279-4282-8309-b3e628eafc47",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "606acf5a-748b-4e7c-8e85-ecf993ef33e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd171858-4a05-4800-95eb-66e3d3e76c41",
        "cursor": {
          "ref": "2d313651-fcdd-46e8-9881-cbc05e945597",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "54192c1b-f9e0-475f-98b2-40a8a22f4205"
        },
        "item": {
          "id": "dd171858-4a05-4800-95eb-66e3d3e76c41",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "677f6b0b-f9ce-4068-b7ec-af20c7770e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 25,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1e1e8d-f214-4317-aa3e-6c885adf12df",
        "cursor": {
          "ref": "8a0b4e26-f6c1-46d8-9c47-d51065c35b11",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "735b0371-4c2a-4a12-85a0-abe9dfc4166c"
        },
        "item": {
          "id": "bc1e1e8d-f214-4317-aa3e-6c885adf12df",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "cc001f74-07f3-4be4-aca8-e1adbcb35b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 19,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bb79d54-eaae-461f-b87b-e609912dcebe",
        "cursor": {
          "ref": "d177ff44-ceda-49eb-a282-e039ba966a0b",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "dec4f5ab-55c7-4a2b-8618-74acbf31169c"
        },
        "item": {
          "id": "3bb79d54-eaae-461f-b87b-e609912dcebe",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6448883f-d1a9-469a-9fe3-d2b798cd967a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 23,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca7bae3a-abf0-4454-a946-d650c9e5fb8d",
        "cursor": {
          "ref": "bb5996c6-a399-4fae-9acc-490158ba36b1",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "d3a0f351-9ab0-4281-8ac8-94f0dd8f9214"
        },
        "item": {
          "id": "ca7bae3a-abf0-4454-a946-d650c9e5fb8d",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "7e19946f-ef72-4e25-8621-36ee1b7cda7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a44aed-0b33-41b6-99b9-7a6542d9f838",
        "cursor": {
          "ref": "ecb49ead-e915-421f-82ed-ef7e4b58e748",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "19cd9815-2c7c-4293-b682-4d881bfc1504"
        },
        "item": {
          "id": "57a44aed-0b33-41b6-99b9-7a6542d9f838",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b1117611-5308-4194-b302-78860d288a05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61ef316f-6652-4584-ad17-a8d4ec44be8a",
        "cursor": {
          "ref": "b0dec54a-3edb-4e16-b011-53b4828dddb0",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "48869d19-3395-4830-83d7-30b1677f3c2b"
        },
        "item": {
          "id": "61ef316f-6652-4584-ad17-a8d4ec44be8a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d0aa8fbd-be7b-45a7-b9cf-b6ecd3944b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649902b2-fdc2-40bc-936a-cc31d65748c5",
        "cursor": {
          "ref": "937d42fd-b1b0-4411-b6ed-cbbd13113341",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bbfb7b92-a6cd-4341-bef4-4e722a1e2577"
        },
        "item": {
          "id": "649902b2-fdc2-40bc-936a-cc31d65748c5",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "8727fe95-7eb3-41dc-8cae-6b80f6787655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fab71f75-9307-438e-b53a-dd2e2649df6c",
        "cursor": {
          "ref": "3fcd7301-bc3a-4d51-984f-0cab4fe696b9",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "ae758a6c-ad49-49d6-b4d2-cd6741c3444a"
        },
        "item": {
          "id": "fab71f75-9307-438e-b53a-dd2e2649df6c",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "09517453-0225-4a7b-a999-a96117641ff6",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 5,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8a5796e-ac5d-4786-bd12-ceb87fa6d056",
        "cursor": {
          "ref": "c5ee30d2-371c-451a-9169-d87f0928b0b7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "aee6929c-e22a-4c66-a57d-778a25cf694c"
        },
        "item": {
          "id": "d8a5796e-ac5d-4786-bd12-ceb87fa6d056",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "171380d8-c5c8-4e84-a7f2-485c4416ba43",
          "status": "OK",
          "code": 200,
          "responseTime": 32,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab73ffe-2c8c-437c-aa01-20c0245531e1",
        "cursor": {
          "ref": "833b477d-e4b1-4f8c-976c-5c983abc490f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "f1961c66-588b-4353-b347-ac71953fe262"
        },
        "item": {
          "id": "0ab73ffe-2c8c-437c-aa01-20c0245531e1",
          "name": "credentials_verify"
        },
        "response": {
          "id": "f6f16c27-6b3e-4f8d-a902-0a36ae11c4ed",
          "status": "OK",
          "code": 200,
          "responseTime": 3537,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e8a2061-b804-4bbb-82c4-4ed77fc499dc",
        "cursor": {
          "ref": "fa762527-b600-4313-9718-5c3492b9da6c",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "b6abca6e-6764-43d4-ba30-e2835839f249"
        },
        "item": {
          "id": "4e8a2061-b804-4bbb-82c4-4ed77fc499dc",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c99a6649-b395-446b-aed3-a1acc74fd561",
          "status": "OK",
          "code": 200,
          "responseTime": 2118,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a64603-d88c-4ff1-857b-9e9ff6ab6649",
        "cursor": {
          "ref": "63aae4f9-1c6a-49ef-9de9-04531951de0b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f8d519b0-2665-4261-bb6e-4f0438351d2b"
        },
        "item": {
          "id": "69a64603-d88c-4ff1-857b-9e9ff6ab6649",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0540945-98a1-4ec0-8a36-788dd0394ba2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a64603-d88c-4ff1-857b-9e9ff6ab6649",
        "cursor": {
          "ref": "63aae4f9-1c6a-49ef-9de9-04531951de0b",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "f8d519b0-2665-4261-bb6e-4f0438351d2b"
        },
        "item": {
          "id": "69a64603-d88c-4ff1-857b-9e9ff6ab6649",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "b0540945-98a1-4ec0-8a36-788dd0394ba2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "685ba680-818d-43bc-95ad-d1ebe535cf4e",
        "cursor": {
          "ref": "c7f39d87-dfa8-4cb4-8e05-ebb5a15ae016",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "9b6ec605-95e8-4e99-afba-46f0a06935b7"
        },
        "item": {
          "id": "685ba680-818d-43bc-95ad-d1ebe535cf4e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "697b2479-92dc-4170-956e-3dc4fe46c333",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83d104c0-569c-4c95-a69c-a03cbb2db8db",
        "cursor": {
          "ref": "79c1ac9f-5c5b-42c4-8e91-94ec87f1e3b7",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5cc59ef0-b35a-4485-9e47-cf1cc5acfcd4"
        },
        "item": {
          "id": "83d104c0-569c-4c95-a69c-a03cbb2db8db",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2dc7828e-60a6-4039-9ec6-04ce0e962f62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}