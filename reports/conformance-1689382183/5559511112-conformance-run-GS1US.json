{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "c734c984-f36f-450b-8a7c-6fb30bf775be",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dced1db7-dff8-4f97-a210-1e1cf2d83db9",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7998be22-d7ee-4567-b9f3-0946c9c50a1f",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "48198a24-0d2a-4b8b-b33d-679b725263de"
                }
              }
            ]
          },
          {
            "id": "0792ba0d-deef-44a6-91cb-89208c2a4b53",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c8b15ba6-b920-4341-949c-baf41f0a44ea",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "128f78fe-3730-48d1-9619-9119370c8a19"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "8cdcfe75-fae5-43bd-be0e-6e4d7bb2b00e",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "597d019b-be62-44b3-ad10-07fc7fba6095",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1d60ad3a-91c6-4270-92f2-ff75deb102bd",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2235f58a-29f5-4310-b0ab-9dfa5433303b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a211187-f662-4547-97a7-efaa17bd3428"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "9e056544-24d7-4def-9368-343e045eb4fd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "da321d15-ed85-4e43-9abc-62df391a1e4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "893a63e7-d731-4905-9b67-f6a5c59809d8",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b251400c-48f0-4ede-b1a0-c09e31b6f0b6"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "859fb71a-beec-4936-b0a4-e33d8538793c",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "5849a1d8-da65-4695-b0e2-26dde3df01fa"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51c6e91c-7a22-45a2-8182-55d64b90c0e0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "53623a17-eca9-4a1d-9224-5a07bdc757eb"
            }
          }
        ]
      },
      {
        "id": "83e108f7-d03a-46d6-ae17-a4f064d686bc",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "df153bc5-cb89-4a73-a815-b8913e56b603",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0209b689-f7b8-4bf8-a80d-0464e161abd3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d514b58d-aced-4ae1-84c1-18861e7f1b8a",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d87bc85-c8f9-4762-8a5e-5ccce08117e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47fbb5c5-d42c-4fd6-9b02-24c1a62399dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54854bf-39f1-4eec-98ea-943b2dca19ba",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bcf4ad7-8c95-4893-98a8-a1f900e1d991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5d2823da-a125-432e-828f-62d46e499570"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145d625e-163e-45e1-8bde-9555d9cdb256",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6be1aa8-89f2-4aaf-a312-24575c5456c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9615cb0b-e316-4707-bd0f-5ad0d05134b0"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2fd3e664-1a67-44ba-accc-fddbaee6aa11",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bd43ede-93aa-4f8b-b7c2-b255869d51e4",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f06c078-95ab-4d7b-9375-5300278c5c4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc7d0379-4356-4d9a-adbe-c21f2ef9a203"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6000eebe-89f3-4043-80b9-37821f3d3368",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3280242b-32f2-422c-9e92-d5165b9431d7"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "73afac5f-11e4-4ea9-92de-00c55b3f3a4e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22253a02-4c75-4ce7-aa14-337c2cdf9617",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f295891-186b-4910-909e-0204fb3e93d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e0c6ebc2-9f1b-4411-be6d-6dbeeacc8fa9"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e0f534be-926c-40bb-a1c6-f8dbaa98998a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "eac6859b-6f58-41f1-9798-ef0436319f2b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b5c67406-a192-4140-b665-4cabac374ca1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "83586e87-dc28-465f-90d7-5be2e069476b"
            }
          }
        ]
      },
      {
        "id": "a41f1e3a-bdf6-452b-875d-35c4f0f393fd",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "99748923-bdc5-4159-896a-3a6e37c35c0b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e66fa672-cf3b-411a-849c-fc462bb7c046",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "2581c9cf-23b2-4125-be00-1dd5ce9b4dae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32addd8d-d5ee-49f5-80f6-e5440767fe1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978739ff-3e06-4d18-b458-b236c37eb2f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d66245-b54f-4be2-b473-dee47814caa2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d703f92a-b29e-4bd5-901d-cb80c9853be2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "629d851a-b5cc-4236-88d1-34c798266f11",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ef8393d-290f-4013-9674-568afa68f7f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f939528-d075-43ec-a769-3e1ad02cac9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce173a27-d30c-447e-a8ed-a221242dfd6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16eb07c6-f0df-4262-ba6e-57657afff6a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcd0b77-35ce-4936-9e5d-4c57a352d953",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab9aad0b-ddd5-4d99-bb50-64e39f1e10bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb976412-e85e-4b01-b3eb-2f90a18e9de5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17d50bd7-4caf-4107-9ba1-54194a72ae39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "be6f7620-21a7-4be3-a076-a3e749396a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "676fe1bb-48ee-4631-8f9f-700405fae910",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7db8b316-4160-4bf5-82d5-9ec51ab009c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec827026-9277-479a-a08d-22c951967207"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "262c3794-826a-436c-a234-bf8917302f79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8f72d96b-5ad2-4b55-9e00-d8a91b7471e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdecea3e-8735-408d-82b1-66b4fc7af672",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7991bf9c-b9bd-4aee-bc03-5d4a2afef311",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebc99085-0f27-40af-8023-f8152e080985"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b38ffc4c-cdcc-4566-9aa8-e397d68757ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b1a04ba0-2a90-46b3-b9a6-4d092bc83937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bd40b61-5027-4ba0-9d5d-39a0fabc276c",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3fefd57-12fb-4b47-bc01-d9f89d148412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dba1447-d0d2-45de-827c-1132665c4e4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2f8eb9f-8b40-4306-b240-a3274ad90051",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "dc25da5d-5054-4187-aa3e-cd05e32c43d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c00587c-921f-4542-b50d-7a376fa3d458",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a6ee48-060b-4f8b-96f8-dd7b8b633fae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "305c1e48-9b0c-4938-8be9-2662fbf3ebd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66214bca-551c-44dd-848c-acfdc878c81d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "63d3345c-cb1b-4002-b4bf-18104064d45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41b76ea6-762b-48f9-aaf2-5bce2d2f1d14",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31631995-806e-494a-8a2c-a79d5aa39238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f09336f6-bd64-4ccc-99d5-4eff2d6d9d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6700b1-6972-4d43-8c8e-45dbc3f660a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "df5311a8-ba74-4849-b6ac-e978d5f6674a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c37396d-cb71-4955-a715-7cbda20df8b1",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c711a8be-713a-4cdf-86f7-0988df5bac77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8972120-d735-467b-bef7-ce98fc3b97f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c0dec96-3070-4832-92c6-3bc360ad0c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "817a2c35-2dcd-4727-82da-915d26836128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "009c4213-209e-42b7-99a8-9202fb6db275",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb85c17-5153-4539-834d-c7367da669c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4d36014-8f3d-4db0-8eb3-a172603498e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5aea3e2-69b8-4d05-aa64-29045dfd5a43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "066a7248-0df2-4481-9909-317e3f2f5221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6610a486-27e9-49e2-a936-29a85f0d3400",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42c5b4b9-630e-4166-b1ef-a8f8561c9256",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f86feabf-3b74-4ad3-a892-ef4cd551a9f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d26aebf8-3b36-4e9d-b53e-fdb0e66c89d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "352befa6-487a-4f75-b35e-4be8ae4dfea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e89261a6-cf76-48b8-9b45-05a523621256",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cab57337-4db1-433b-b08a-3bd00a9bfbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "836ba1c4-c4a2-4c56-8042-072d61536546"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bffa9bca-1a8a-4144-9967-80c4ad7e7017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6e0b0e87-6955-4ea2-bff5-fbe42c3d8859"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c6f1f89-b88e-48e0-b335-9c0a1545c09c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "476529b4-071b-4f64-9542-86175e690f12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d743173-3284-4717-9005-5fa33ef7e9a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32144254-7db4-48fd-8f7d-6e51e29dc628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "49dfb962-e7ed-4629-aa7e-d5783db0dd28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "793948ab-b12a-45ec-af98-10493e6b63d9",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04065ba9-4091-4cbe-b1db-3733433c5e33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07840c9b-391c-4fdf-a44b-55fe866779ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9487ad-f00f-4c45-a206-a954b36cccc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "031fb977-44a1-4327-be30-ffa153874b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b03b1469-3b8c-4aaf-853e-747daf07f2bc",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80b1c0bb-86b9-4811-85a2-f2c3befb0aa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e8093b2-8ef4-4f93-9097-f3de81f40891"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b78b27f1-ca90-4a8b-957d-ad0eaa36ef20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04b41644-1c9e-4291-9bfc-3c217e267e07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24613169-fb1a-429a-a022-215e6ff93eec",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "990f66b7-3a9c-4edc-9e2a-ea521137055c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ff49cbb-b440-4cb2-b360-7438b9745269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "165b32b1-5791-4cd2-b606-0ae210a37960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8837f258-7de9-44f3-a5ca-d89d4d678f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc14e89-2628-4985-94cb-b65534e5d697",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e524129-5f67-4597-ab81-933ec6292fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d61d2e-d55f-4c57-b977-e3a1e4af8470"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80971ab-ab99-4037-b50d-d7b0c726b82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a9971937-d4d9-4a01-ac5b-47b4149107f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d7e89c7-f7da-4919-a1ca-38bff6247454",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7418b2b1-1a72-4566-a1bb-1a1b19c0e75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3ad0dd7-17aa-4e3a-b808-092f83b18d0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9466a9b9-195c-42f6-91d3-c8f8b341ca46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "41793c00-e58a-4a3f-9b85-6cdb0ff3114e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35a00893-d7f0-4f86-aefa-2e28a57890d0",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1dea74-2ed0-4c5c-b685-5020277c3983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d90763a-6b5b-4c45-9b8c-1cebd9a8847d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "723f82aa-37e7-4a83-9cb7-9c584b65b769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "850c8f8a-072b-4d5a-8c6f-d1bb89850aae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a054798-0e55-4932-a92b-a68e8a986ac8",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1533dc-a593-4798-bd58-43f39d9c6074",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cff783ab-9238-4845-9b4d-4000d8103186"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a2c8499-3a0e-4c49-a926-ba81553cd56e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "967ed410-5022-46ba-918f-7dd85a805973"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176aea0e-89bf-4510-a843-a568a1e6cd9e",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa93c2e3-de15-4d26-830f-eb128a5dd436",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f6c898-09a5-431f-9353-279d6569644b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd06466a-637c-42ae-a3c8-ed1813f4ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "116a7422-5e8f-45fd-9fde-d697d6829bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11e1f05c-1b4e-4a7a-b98d-e51cee8e8f06",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6a3e224-8b03-48a1-8f3a-65b74b1c90cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "690ce0da-7f06-4d00-b8dd-72046806177d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8c3bf99-f385-4d96-8c71-ff611861b96b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b07cb91-102a-47bf-90c1-0b191121dab0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1984c7c3-b950-4a75-96f8-3b204e6da39c",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18b1f831-19ee-4ab7-b3af-7421d9dea62f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2888930e-52fd-4d93-9fb1-54cca90abdd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6116b110-b39a-4e8d-9ef9-7b3a56b6b172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "026ac530-9a99-4afc-998f-458d6d143c86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3186613c-7cda-49e7-a171-98cca1a9fde4",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649dd4d4-ce79-4610-aeba-870151c045cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8e4a87f-e35f-41f7-a997-faf8c68465b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "befe66d5-46d5-4b55-ac70-b63cf1f15fab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "b630be50-5faa-4643-a6be-df1b1600f608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49968ca5-14a7-44cc-8e83-6b4552b4c338",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7412d1aa-78df-48ea-8db7-8595adbca460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b517cf3-6937-42f8-adfe-fca969aed6ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bd5c9c2-ff91-4106-90bb-57dfc731dc89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "512fc21f-d314-410e-98f8-fed9011a8a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd7cd09-777d-4d42-bf9b-4d87b59323a3",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28d3d893-4498-43a4-bb38-4e119db5de52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b675a0-5a3b-4727-a907-d608bfee83b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76000f6-960c-41fd-b553-320732398080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a8aa5e8-f5a2-4f9a-b1ab-2355c6ae1f5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc3a6b0b-4766-4b67-a990-36b26ea2eb59",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a942ad6e-541d-4582-83cf-36f505c619c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "044498d1-547d-4073-b96f-4b2cfd166b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3df6c356-908c-4fdc-8f00-c8f332dd9ba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fbad2420-9635-4733-841b-594c50270285"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b18ca4d-61f5-4900-8639-a07b46f60982",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1adebe2-000a-4072-9421-d4deecd19b13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a390ed3-a2db-4f53-8509-a0ecb1d5cac8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "512f7f32-36a7-462d-9eea-913b17f05400",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0683c224-0f73-4a4b-8d48-21314c2f6e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83cdbef3-f27d-4bb1-8a9a-5b643e7df89f",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a3974b-9736-4948-b530-4c75d7a44add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0344359d-85ae-4960-b152-5222c8e5854a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9648bc2d-1975-4c39-ae20-b9af45f100b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "896785d5-30ac-4458-b239-b35cc8369bcd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2af2905-b11e-4cfd-a332-efd0f39ff5d7",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cc1c1d8-2c72-4e07-bbdc-a35ec49d33d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1af0d695-9419-490b-80ba-682628b6e0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8155c6-0fcb-4139-a54b-28881c837cbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3729b69-ae4e-4fa3-90bf-8af4fb078517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cea2b79-c1d7-4f1f-a364-29c4524ca710",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0113548-b54c-4ab4-ba13-82c1da52a7dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2d1f21-3a0e-4161-a340-005e887ca0f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c60a439-8c31-4e2f-9be6-fee29b24c069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b3582de-56f0-4d5c-b3e7-f5a9e98425de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9341536a-7fca-4fa6-863c-4c0830338bf1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d3746-e6b0-4301-9fb9-bbb82bc96522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076cc690-9c32-40f2-b45d-ef9f310d91ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ec57b7c-9f25-48f4-adea-6ac594b26ab6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f8ce358f-bedf-49a7-8296-a6e4b5a22b75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2efc21c9-203d-4219-94b1-57ec5689ce8e",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d07c7c4-4d5a-4f27-933e-5d18def42404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1492777-9cbe-43a8-9905-52121c6b523c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcf0e489-b4fd-4ec2-98b3-ad51e932141b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "59d9a355-f508-43ae-8281-784c0b1fc735"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10aa1f2b-f4c8-4f51-87e2-6f66bbd33cb0",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d18be6d-f593-4f4c-9e2d-b33c66df0e2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4abae181-7a4f-4a1a-98ab-f6b1dae5e216"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afa2d94d-2e86-4492-b32c-8eedd868336d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5bb81d77-5d02-4cf1-9ac3-04316681f682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b6642c8-3e66-4050-8199-fd13c2a6b993",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0155fc31-39d1-4049-a86a-f35f226b33f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e958ebb0-51f9-4ba7-8107-1fbcd75aecb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d6a89c-823c-4b49-ae42-ac897f3122a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "ea92642d-17b1-4ad2-8da0-a7b89c7a9e61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed569931-1d27-49c7-b2b2-d7f22fc56902",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5387ae71-3682-450b-a426-43423f38067e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5c6a1bdd-f7ef-465a-9723-3a321a26b0a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9bd6bbe-0bbc-49de-9d41-554b42724ff7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "89825211-572f-4b31-9caa-7d609ead7f9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2e931e7-1754-4e67-b9ad-458cc97a86db",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6ea6fd-e8f8-4bf0-acdc-0b2e3347bc8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5780b347-5bfd-4aac-b22c-29b02dc78611"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1e896a-6ba7-43d5-8ab6-3f1625e0341c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "10aa50b7-95e8-4728-9bc9-6bd44e8624ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d582812-d5c6-4f70-8e7e-996224aa0605",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beca908-7f5e-4607-8fca-597296726e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f4b888-a601-4790-859d-865f456209f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c63100c8-af6a-4a05-b509-e10c6b0b7060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2bbd1a33-788a-470a-a67c-8439911bb392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df64898-5ad8-4a49-8493-c311d54062a7",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6024e645-6aec-4f58-a2b7-458b9c3512a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cea485-eee3-410c-bd59-0a4350dc33e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "132b1a8f-06e2-4d09-8167-91b6ee28b803",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "216cde93-68a7-45b7-a9ce-c7e390f62e4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79cab509-dc26-4917-b95f-02cbdeb2f807",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7585a4fc-8ed2-4cd6-a963-fd6dd7dce698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35c2fa72-09ce-43d2-a22b-1627d109a03b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "970b388c-98be-4649-9d6f-7eb6b5fdd957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2d4d0239-6a84-4165-98ff-e627e86dbbe1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8edc584-3af5-4a08-ac79-1a60f8bf1d64",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9194750d-073a-47ca-859e-190869503786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2822d729-4b0f-424b-a0b4-e6346197d296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bae4a70-d96a-4b10-b33d-27a946f30fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "0d3b9d21-6734-4e04-84e9-d8113d0e3067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d18125b-4189-4b7c-940e-f5c04a3efe2e",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c59d3b-965c-4310-8778-a0faa8c16060",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9db3aa95-00b0-452b-8e0f-08f543f6146d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98aee7c5-a45d-4cc3-95e7-eb9643e05993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "1313f53e-0ed5-423a-804f-0d45492b3f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5facc14d-6163-433a-be18-bdc5530a9b1a",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ae6422b-a756-47e2-b92b-6ff9a6c46466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87e1c63e-3170-440a-8172-eb25a64389d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef6ae894-b02f-4bf0-83d4-23bf1976bcf7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "694973dd-572a-46b1-b84d-4c787c7097df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc6f97f-2fe7-43f6-8d1b-c54da46f29f9",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "009e8249-91f7-4a9b-9fb0-fa482899ba18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c79eb58-b3bc-484c-bfdd-25b5435ee804"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bd2d390-3345-4b21-a909-78bf17b37c2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b8257be-b115-414a-b04a-825b0d00a01b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d99db25-0deb-4c33-8c01-1b983b048671",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "136f608f-f220-4c1e-96c0-155af8801fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4f62e83-9b9f-4bc6-bff2-bdb80c52e0c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53ad67de-1399-46fe-97d7-339da2419a11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc9db155-cc8f-45e8-8585-a367fcd419ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d1da042-b666-4488-ba64-491722336879",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e69ab31-fc39-403a-9a62-dc991705b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2575004c-def0-40e8-a6d6-dab31edfc4f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26b66ab0-5472-4e47-a877-5d9af4c70411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "23c3cc6f-bd00-48d6-afc1-8f901c806717"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6349c5f-08a9-4f08-8e57-ba4749150c17",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2184c00c-4a75-4768-8ba3-365781c543bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78973c88-d28c-4271-975c-53d1ea036460"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a26dfbec-1416-4561-b85a-b3b50a469361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca994735-0ec8-4d43-97ca-712f29b9a88e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bfb748c-0bd2-46cc-80b4-a62666a49e20",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b175943b-a77d-4e11-8114-0a0e6bd9eac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ed94adf-5ff9-4ff2-baf4-f49ffcd2c441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87a54f59-f349-460c-b8b8-617826cdc4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "abd6c6bf-0f2c-4709-a7ca-ad5a3e10eac1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804a40b5-7599-4b28-a76a-ca7fb0c5ccc2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff3ff60f-41a5-4730-866e-d688bc7bc2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1afe22c2-8743-4480-9641-5575a9fe4a2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be884ed-9537-4db3-a9ed-0f9f63f0e1e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c30a9ab-8348-4cbc-a07b-db4efa594aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d4afb92-a534-44e7-9d09-902a46e819c8",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8969720e-39ea-4cdd-b30b-1de7b5911aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32855842-9b69-4ab0-8728-1f14139ea05f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "020e3acb-d391-47f7-80d6-01c3e2a77dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "107ddbb6-09fd-479e-804e-9a05846b7acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3e636ca-779a-4ab9-beeb-360071c1a579",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "728a5a68-974b-4b16-9640-f7df63f99e35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9927286a-5b45-4455-a032-bab6c23dcc33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b61a4a0-c32b-4782-a736-6507a90d0afd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "a13ec38e-0efd-4915-ba85-a8716c7f0484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62612c7e-fe1b-4ed2-b600-f55402494b37",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e20b5d-cf84-488e-b729-601d350a19f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ebafb7-790e-4508-b211-bdbdae9741c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2a80b8b-5c5d-4996-a606-beea115bc038",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b9d17a-5e53-418e-941a-4627efe293ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6391f2be-00be-4b7a-8b91-a7d40619b9bd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f25d7532-2c39-4ff7-9618-5da3cf271936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec0fbd81-1a73-49ee-b8bd-1e5d2b96892d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad671aab-ebfc-4d29-a636-2e618d3ef1ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "77ec5494-641a-458e-9cb3-18a8c108821c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dd55526-c8fb-46f6-9162-06d8ee22520a",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51476c0f-b832-4ce5-82ce-42c207e15e6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "577fa0d5-76c4-4514-a225-5b7fe438af99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5d38c92-dda3-45b0-97c2-562e519db0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7bf0d8a0-ac0a-46fc-9687-be2369787413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3622c469-d0b3-4cc4-920a-598ceb50ef71",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "797c6301-1a5f-4522-9bc9-b635fb111b04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d87e6fd-d3b2-4181-9bb2-cb4c7fb2211f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "868b87ab-1903-42fc-9c36-953b7209edf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4e891a6f-779e-4501-8d5c-2651503d8629"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a822bea6-35ea-4d8d-bfd5-29e0d5fd5988",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9612ac7-8bec-438a-b881-a7d1d0794a7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c0f27f6-d003-4605-ae2a-7e1d4d07ef21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e625f8d8-4230-42d3-ab64-2e7f96241b7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "5ae48f4a-0e80-4103-87a7-f31bd81f820c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba7230ff-31ce-4c86-aa0b-e51fdb94b07e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7c90ba-9a57-4b4b-8cf1-a1bf559ba9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0fcee1d-4d34-4bf9-9642-a4b217cd8223"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3ea9f18-18a3-4377-a461-4bf03e7541d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "377f4c1f-8a40-4b13-a680-7a4bc2236acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58102af3-bdab-4b67-98da-1c013aa85b79",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5a2bf23-b46b-4d9e-aedc-2bc857c3d3a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08da896f-6e5f-4d39-ad60-b33e4691f4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60997810-eca9-4c32-b288-d8e5351b6bf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "b23aea96-c6b3-47cd-bb5c-c8cd5713254e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697a3da6-03bb-49ce-8aee-65d1a7947ffc",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28732e17-f1a5-41ad-8b96-83d9e9cfbd29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebfe611c-5264-47fc-9dab-a46bc0039164"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ac718e-0d03-44c1-86f7-90ef33e6fec7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "335b7bef-c7d0-4f7c-a694-7ab53e5bcaa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2759a2cf-fcd7-493a-aef6-bdc49406b4f4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ee54f2-9f3c-42f7-ae5a-14d4104bbcdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b00025b-049c-4079-844e-26a22d3fac6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4a9ce3e-9ae9-4ec2-b74f-d526c11c4e73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ffe6121-94cb-490c-b959-49f666bf77de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b29620e0-7b50-4f4b-8800-a3e3df0ac584",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e55f82f9-e1b8-4b6e-91b2-fb454a4f18d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31f7265c-dcce-4542-88f9-804416847300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41953f8d-1f7f-4a45-80ba-41ddec5677eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "c68ec74e-a06e-4348-8c07-e23ac22f975f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39678820-0cfb-4a7d-8177-a85e67e2af92",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "418bd776-ddcb-46f0-87fe-1b2b61a26ac6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e21a76d3-a41e-429f-980a-59afce0f813b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c1c9a57-c98e-4b2e-912d-2a335eec53e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "635988ab-397a-4062-844e-40ff8ffc1d07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7e36bf-349b-45d6-845c-5eadfe7fe5b1",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24dec1b0-1890-4b15-9820-ef5bef7b1d5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "669db422-dc80-46eb-8bbc-74f636c50366"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa0e02b2-1b8a-46be-8b31-a25d8feb8448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5aa00ba8-452d-4515-b745-2db9eca43ecf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f0af8a-0f66-4cf6-a6c3-48960a3b1007",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78f61949-ceb4-4d83-b897-a60a37951e4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a585f273-0e3f-421e-9ce7-f2e9945c41bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "036e8d57-c166-406f-b1d4-b5c2bb145aa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c2728b3-e879-4276-a618-532f729d2ef6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0b0aae-4320-47ad-b125-837b1bdc0fc9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "783d08e1-722a-44fe-a3cd-14fb24cc548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e606ed93-c3a0-46d1-abc2-07c1477f2d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aed22e29-a3aa-46d8-8b14-15a223de2881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "362534b7-2623-415f-afb1-ef3763bab95b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03fb8c17-2102-457d-9852-f5e801067a0b",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e050929-94ac-445d-b71e-64fa42d5332a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a224a56c-edac-4927-85df-77d04aa20484"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cf8b1bc-e527-457e-8809-ed4a4e3df7c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "972dba83-0491-4722-a68c-15f10720bdf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ccbf82a-1282-4618-be85-73952733535b",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1dccd2c-6a6f-442a-8bef-9fcfdad954d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c381835-7fde-4d63-be37-d376ed3b05ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e97695b-5918-4110-a694-0a882f83d913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "35bc9049-0271-4dbe-bc81-5ecb158f8b2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1cb40a7-ab50-4979-aaf6-f9fef909f743",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c52a0b8-8f6f-48d1-9e4a-149c6869d882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adf90194-acb9-4f1f-b669-7bde27b19fe3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52b0a62e-3c35-48d2-8dcd-7ab93037e472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "375e612c-253c-49dc-84ed-3377a825810d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce2b2bf4-74ca-4c03-bbe8-302f6ab0af6c",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a5a57d3-5ff4-4df0-8caf-53fbd42434fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37464532-6247-4bc8-820d-5e4c64acf655"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39b6bad3-d203-42eb-aac3-4ed1e506bda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "abaefa2c-e101-42a0-b1b1-9bb46e19d0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35829430-bfa0-457d-aa58-c00c418998d2",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fdf1790-37f9-4452-bba6-732c32933273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b598bd60-d0fe-44c2-b784-51c3a5f914a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1883403-3a1b-4c8c-b583-a57fa4c03a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b4420f0-bebf-4cd6-8b07-d78cacf1f619"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d57d8d2-5105-4cd9-a7a0-1616ec37aea9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "371a1a8d-3ba4-4aad-9d6a-fa378cf34def",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ed20fdc-4a29-4616-b87e-bee8153b94b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4abe52f-fcb1-48bb-9b4a-371751a22502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ccd0251e-d7ea-42e8-a3d3-858157bffaae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f37c8b-f64c-4134-9324-354794eaddc3",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c18760c-4e72-481a-838a-5f51b1f296e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e5f382b-2681-49d4-b3dd-b63603bcb50a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df180cf-5e31-4dbd-99a7-db373db9c061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8879fc91-839f-485d-8370-3ce9191d4517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fbc2276-af73-4736-bae7-fc9964860e2e",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6f6f098-1b89-4566-a670-85a9040481ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59e52692-4994-44bc-b4ce-505e283e25f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98c5e46d-96e0-4809-b0be-8b6d6c582f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "71229c3b-ee78-4243-bf49-1b65a95caa0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48075ae0-2018-40be-9bc6-9454d83dcfec",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4e3438d-fade-489a-82a0-73c2d7aeb40e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc75c29d-6a7b-409a-8671-3301a9e794e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f09466f-30ab-4b3c-b017-c64709844442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b7d9e49a-2ad8-4a87-a2bd-367ae2c3cb7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0004a846-f368-4535-96e3-4fbf86b44390",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997af30c-3385-4386-a699-23197478f833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b44ce99e-2c42-4048-9daf-d9d373923ea9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73300ec9-4e42-4e97-bdf3-bdca247172dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb98f932-84c6-4580-bc2d-6adecb3937d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094749f2-007b-49c1-9d64-21b757668b00",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05a90144-8afd-492c-8feb-974d20b05027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada2b8a4-1fc8-4e5e-9981-6e45d73c10e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a91de67-6bc4-40fc-a4f3-2d52f20347ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b2db39a-8dbb-4d9b-bd5e-33d22b1643fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21f9a03d-c751-4b49-adfc-14ddf40561e4",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38bba5f7-ea3a-49e8-b596-dd669a4b019e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66b2e28f-e87e-4723-b0a2-12d75bb8eb79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea78620e-3031-418d-a373-92c7bc7c96b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b027aaca-f5b0-47d8-bbdb-529dedde218d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17c92b77-c4ce-4c19-9666-b562af54e0ea",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79895da9-edee-4d64-a0fb-85f5ea8ee29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2ce117-7fda-4962-9117-29316ae49b7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5959aa0f-3841-475c-91db-0ad5e189e0ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be41e13b-4b52-450a-b444-6fd681bba673"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7026aa5b-c1d7-4a13-b64e-4ad036ca12a6",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4954a061-2bdd-48e3-9be4-b9d9d840d72d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f1641d4-555d-49aa-9660-bbe439bd3e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caa80244-a8bc-467c-9b74-80725d617e0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "02473e07-f1db-4e3e-b9c3-6e86db5f90d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f18af7a-75c9-4eb9-b616-ce7dbdd505ad",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3483f4f9-d1d3-4496-8d72-81e353874574",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d92f6362-3b38-4d6d-b8b9-96dcaa808129"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91483c-b927-4c7c-903a-c7eb89f0bcd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe25a297-6aa4-4077-9c88-e1de0bab35ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9087d0e4-a93f-4ee5-b15a-8392bcfd566a",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9820d58-922e-49e8-a081-9f48b07ec9a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af6b5f8-e8c5-40dc-990c-b880154b8cc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb8e3108-c42e-4521-b71e-17b96ac4a9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3215681-08d6-4db3-9a65-ebaffabf8d70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1050072-8ea4-4a5c-9cf4-a7d8d8a2e281",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cb2d72e-bf16-4556-b1c9-b15085e654fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b344165-3614-40cd-984c-3647f334fc78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88677eaa-f60a-41c0-97c8-655bf0cdd43b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b731df7e-b128-4c69-b908-5b4e0e63fa9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca7d3a1-58a4-44a3-b0eb-ee9a726e55f4",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aad1f7a7-12cb-4eea-9adb-6248dcdacfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f9b4723-1507-4ca4-971b-b1a6e33e22b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adce508f-1a78-4b48-a807-bd8f73ca9be7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f9b30dd-f635-4d66-bfa1-04a3b7a9cd93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6364b6bf-c59c-4f64-8857-28ed9c7dac83",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5610e4e8-e488-48e9-8274-900b9ed60d5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ad412a-1ca1-4136-bb25-c10a4561ea8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb64ce95-1b57-4f2c-8b19-a3605e163814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d715275-ed05-4975-a5a7-23ba3dd60412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6faf4772-ac06-4fd9-b179-a39e507c0b89",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c36c519-d3d9-41af-869f-a55062979494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a73f37f-7b75-492c-bb9e-1420e7769892"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9816cd8f-c2a2-42e6-bd3d-2133f6b9b663",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6e4cd065-f3fe-4ca2-8732-1639a739851f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4c2842-a602-4c57-b6a7-bda841ba8c3a",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc3b0d8b-4654-41dc-a8b5-84c6fcfe31b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c1b19ccf-f32b-4157-873c-17fe73cb57ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca8a1d2-f855-4a79-8fe9-1d05899d1fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "73c3a314-e896-4eb1-b8ff-17d0662fa5a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbdfb847-947f-4813-8f72-5fee5c9af920",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2799e4a2-332f-44ce-83db-a1e60f34638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b157e92a-721c-401a-821f-4b596914e3a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e59c0f9b-2343-4a19-949b-f84fb58193a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "d4c743c3-a900-4456-a2e4-d3b9ce3aa6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5552aec1-5795-4e0a-b46d-5577c8636521",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "414442a5-5f94-40e3-bbec-051c62b6618a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de4e0c3a-4cd6-4e5d-a0b9-78bf03caed62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ece9b99a-8134-4d23-8f2d-91a5d0796d91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cfd66518-beb5-4527-ae8f-0340c7e36cd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36d4a491-af4e-4b3f-83d1-2c8d592f1383",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa0ba617-0a26-44ea-acb7-4cde2203a4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6deb2a12-5763-47b6-9b4a-f3e8c034ee07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49a07359-9d34-4fd6-a05f-7d6153b3aa55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e08c5c1-13d3-41cc-90f2-175cad575298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2401cdc0-4de4-4e9e-8949-4b59435d0df8",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16537f42-56c8-4049-a2d8-095b50045c24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd9520aa-debe-48f6-9aef-4a3b13b74a48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dccca0d-a81f-45c3-b07e-9ec4050a5230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8b1c1e8d-d2c7-4c61-9b77-15e2b729b084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a17dab63-0a06-4a54-b11a-b3a60739438e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9511fe-960d-4a0e-b9f7-ab9ba3d570f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0ffc28-8cd1-48a6-a9aa-bec131b0d1c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9187bd27-3122-41d8-a93c-d7fb20843034",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f165d063-13b2-4b8a-8cc9-cf1b2b8ecd4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b142a704-ebb1-456d-a8fd-2b993e04541a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a08d518-769e-4523-8ef1-d490f8f4bb5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "356cbe89-36a4-4cbe-b8c7-bacdfca7cb83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8bc2ff0-2c23-4d9e-811e-b9e8566f7696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "4ff3f959-98c0-4a6c-9f39-c273c219edf5"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "44b3ab5f-43a8-4fff-bde3-b727f6968b6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e412ee24-d55c-4684-8586-a91ae99f076e",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24089677-1880-4da5-94f5-6c0b18c9b0fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e75a0e91-5f75-4b2c-bbea-3a4acc68c673"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad16066e-73aa-4c3a-8356-29d5bdba41aa",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "04fe24ab-6f38-4062-9dc6-bb9d670a522d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "245fa73b-e6d6-4ba5-9fc4-2ee9d770a80b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7ae2970f-8897-466e-afd2-b23ee8e5acd7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "73e5acee-8e22-4636-8381-4c25ce7f6076",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cfaa38c5-512b-4e58-917b-af053427e60e"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3965d4ec-b15d-48d1-9b3b-1e599aa1eb21",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0aa08291-5d02-47f0-9586-b0eeb72a0a1c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7a147b62-eb21-4618-a852-8e3f76b2749d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9c993698-cc23-4e25-b8d0-cf5e3b317e82"
                }
              }
            ]
          },
          {
            "id": "5732358f-f351-442f-9200-b37251eca226",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ea4144e4-2960-4611-8de4-5b67b3ca55bc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1d715432-815f-42bb-8a58-d4546e734077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0c073010-96e8-4351-8d78-4fe37cbdef35"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "054daeaf-e24d-4e43-b71d-0d7eda65236d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b95bed78-9429-4645-a999-7b9d44c90c64"
                    }
                  }
                ]
              },
              {
                "id": "48cc6e91-292e-408d-b24f-2bc240787e72",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "176a97eb-9daa-4783-ba6c-9fa2590636a5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e18f4119-469b-41a6-85fb-a859c322dcc1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea1fbc9e-44be-4933-aae1-7192f041a65a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "00215856-23e5-4ef5-a3bb-7107fe7142a9"
                    }
                  }
                ]
              },
              {
                "id": "ee3009ab-49b4-481e-87f7-34b170b0f611",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4d8a2f7b-a500-46b4-a501-3fb5163b47cf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "115d07fd-fa86-4992-99a0-bf54f882f54d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62414712-0128-49a3-95b7-913f0f567665",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ef347e87-74c9-4a49-8055-c548f41bd67c"
                    }
                  }
                ]
              },
              {
                "id": "452f413a-a3e8-4807-a9f0-9c57a702960e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "905f6454-73ff-4472-9d08-e64af346daca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c99ea858-0b47-434d-a0a3-2f73afd53b61"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c2906b8-8cc2-48e0-a01f-226d7c44af11",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "95247970-fe9f-4b4a-9f62-f060602787db"
                    }
                  }
                ]
              },
              {
                "id": "838127d2-343e-4e85-bf82-f1504dfd0ab6",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c22582e6-d332-4494-bd4a-b706ed1a435b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "07326e25-0b6a-40ec-b417-6d4deedad885"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c20ebabc-6fe2-46d2-9670-c915c63caec4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "d003398d-c95b-4e81-b593-c694ceea0b85"
                    }
                  }
                ]
              },
              {
                "id": "c569464b-d03b-4d84-8e2d-2f93fc1b3195",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b9e3b827-eef0-4d0e-b572-7fbd24f71874",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "50bec166-3c7d-42ae-bd60-d24e75b0d552"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "62e14fc9-867f-477a-aee2-a8a4c96c63f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b224bf38-3ca1-4faf-aefc-dd2bf5dde24d"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "96a3463f-6ffd-49ad-bab9-2c63719ee15a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1e2acb83-4cfd-4568-ba69-823c6b99e83d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "2721c07d-5fd8-4c3d-838f-9fba615bbe3f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d8e3d56b-d697-4521-9cf8-716ddb70862a"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bd6b50fc-86cf-403a-a2c4-d41f2d8bb30e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9b608552-892c-41f5-b004-9e53d41b23c4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bfed4639-465b-467c-aab3-c3e89798f90c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9407e976-5ba5-4b56-904b-4bba1542606c"
            }
          }
        ]
      },
      {
        "id": "ef2f51ba-7ecd-4148-895d-dacc3719be44",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "1810f08d-5419-467b-822e-c932a58a9206",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3d9e507-a7b9-46e8-840d-8a9e92873fc5",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "43672eb0-3387-4209-aeb4-a95dddb3db63",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf43d208-57ed-40b9-a6b4-d903b9bc9fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b161c0d6-a6c8-4d92-92c9-aaba401f2c25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5e3d9e8-de0d-47a2-8d4b-a57b0b3e0fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d288c331-6ec7-4ed8-9359-1b8b37b346d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3f178c-bd1b-4e38-814d-bbff2dd2e8ca",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03a221ff-3699-4cd5-a24c-53936fb0d36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e84d4d1c-e2c9-4dd8-87bb-ef4695f51497"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ff29180-12b5-4748-b594-829134db025f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5fe5996-33b8-494b-8ac8-9663f11d5bc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0d108cb-4ff7-40f4-aec3-4523d80dee3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a039b6d-a8c4-4765-9814-09fd9c07f4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edd96fc-1224-4f5f-a228-f5cbc164e664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c4d5bff-5b65-4892-acdc-ff70e921ae62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74fb4638-79e5-4d2a-ba73-2ff7f1167716"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12b5cd70-c194-4baa-9929-d092d604cd5a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74b0298f-a713-4b88-8ee2-0b9dd4f86019",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a3b0080-2906-4576-8f22-a4061d9ce2a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9edcd176-a88d-45f1-ac08-c9730002314a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb7323d1-13a8-452b-8b8c-21df2752d9ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44fa5910-f710-4eca-b241-3379cbac2113",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c0811b-df38-4425-b081-de71c8f6d5e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0d0ec5-9b0d-49d9-8216-bf7a57bec792"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab77b9ce-505b-4753-a628-a4f3db38d515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a77d70c8-1658-4ed3-8172-c64c0ca0c34b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4090a63-8300-480f-86f0-a07771c9b1cf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d05ad9-f64d-48e0-9f0c-40b65692e8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e3b17ad-d0fa-4c61-a8a0-2755352fbc2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "753a46fe-25fc-491b-856e-e90fceb86cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ffa1c6b7-6c8c-479c-a3e9-b7dc2f1e84e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "324c502d-7da7-4ec8-8c9f-475ab4147089",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5525be79-60a9-43e1-9ee4-e017bbcd0bdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746a4be1-74f4-4b41-9de4-bbefbbd6b933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a81ee51-c07d-4fd5-886e-45399debd6b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d10e3a5-a8c4-435a-ba50-18855aedafb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "faeb5220-7e72-4f05-8200-f2ffd2c6e24f",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4cb4710-bfb6-42e9-87c8-1620e7f22a99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29e39fd0-c345-47f8-ab5d-8ce97c479f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51f616b8-bf13-4d38-8aaa-741d1b6b81b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cffa2f33-6dca-48e3-ab54-ccefd5f97d97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33f6d1ff-b98d-4d22-8272-51401381f74b",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5671aa8f-c6ab-4c49-8dd8-58fd2ba5fc0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f60679c-f34d-4221-9a0b-76ca94447b82"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c3d11b-4e21-4de0-830d-01616a72c951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "081b0205-6d2d-4c69-a220-a0c5e222d0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "443f4406-649e-4168-a4bc-e5ad9c2e7283",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6443fda7-5cc0-4fed-8cc4-b7fde14556ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cee382b-4e8d-4989-9a01-0bbbb77a535f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c39951be-31ad-4f26-9df4-5d84a507f12c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5af5b5a7-501f-4fd7-b768-58b16afcbff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47352f9-4fd6-4c51-8e86-c010e3cb2ba7",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dd3ed4-4288-4327-9870-036c180baacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1a8394c-16cd-44c0-8f2f-9a38eec773b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a642a289-9a46-41e0-8c5a-a86ee02be4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "09be6d6d-b76d-4401-8f8b-98ba46a600c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e47760a5-4c65-499f-a24f-3c5b55368dcc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0363a7b6-8f80-4ce6-bd0e-9bd4c5d65c32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94e4dad2-4559-4eb2-9f8e-b4682a536615"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ad656f2-b2a8-4277-9c17-8e25f8072e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d7b30cc8-b762-4e2e-b02b-5ce46b09eb75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa9e3ff-1b07-485f-84f3-503b785131f7",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c8a096-4e86-4c56-98ff-ac1dd8bb521e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65d60e6c-370e-4d81-a7f6-d6335438e0e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0a15763-b716-452a-bc3f-46ab8ac39de0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91a40411-6ba0-473b-9c0c-fc51b9b58e09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebf0229d-0cfc-410d-97c8-5d2391c9e19f",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "390e94a5-a50e-4901-a642-b3f0d227ce37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ba8f321-b201-47f1-9fb4-a8eedd8373b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deefb055-71c3-4421-9dde-eaa4bdcb0da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "5a1c3b7a-8bbf-4bb3-911f-9560a92e4d5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca9629b-1748-432a-8472-336cd5c3b4cb",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf92c9fc-0a66-41f5-9fe0-e901944442f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10603347-6add-44f8-8a53-3522b0b0283f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15aebc49-7e80-4480-b932-5e87127fd111",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "b75933bd-397c-41f0-8311-2973fa56cb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0a4c8d0-36a9-4f2f-9835-b13cc414a3dd",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd2f9b9-7a26-4a43-899a-fe5a00c6ad84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06fb2b5a-b9ca-4638-bc61-87d6e5ed9f92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f29a92b-1837-4f01-a956-70abb61674d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f68b80-3a75-43d9-9f84-aa70e52face8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7509a1a8-0ecf-4f3e-8a17-906d0a2960f1",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2eddb230-efd3-4ee0-bd2a-913e8de8511d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91358d91-14be-437d-9520-495f11588ac3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63e2cce6-2943-4763-b6dc-0454af90e707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "d14536aa-cffb-4546-98b1-305b5c0d2cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642120fc-ea1e-4076-8112-6e69ade5e3a8",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6547e533-960f-4a3b-81b9-6dce3a080bca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d704be1a-fa05-4e00-a65c-fefed08730b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f51fa0ec-699c-42fe-b51c-195bc2fe2e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "336cd2b4-7b75-4c6c-84ff-11d742be468f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d2d697e-fd00-46da-92f0-c97afe9874ce",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc93c6aa-6ded-4bd9-aaea-3c8116307555",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb0b1905-88db-4dab-90cd-b48c39c36a2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3291649c-b3b4-4529-baa3-949e16603b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9231e281-be51-47aa-ab51-8f507ff19ec4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2810d834-87fb-4cd5-a0bb-96bf3d4ecd96",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96b77798-ef7f-4a6f-882d-f2f223c24a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2803c3f2-6445-4ba0-a67a-5c8ad9289da9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22a40c6e-f2c7-4395-ba5d-f6579ec532ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8c5ad719-f057-47d2-a33d-6d8defac65e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e7ccc8-3723-4467-b6ad-835e8c4bf6d8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "faadf1cd-33d1-4ad9-b4e3-4a0bf9b39c9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45b49cc0-c6cf-4787-ad7c-5c574752fc5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26e7206e-232c-4550-9fa4-5ca783ec7632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "89c4d4e1-4e52-4b48-b482-1777a1814f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "229b2eaa-18a8-4b0b-9fe0-5df6d46c40ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edb1a503-177a-43cc-9191-ac0642ee6974",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b0c82f9-435f-4d7d-87cb-546ccaf1000b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b7786bf-a07b-4f4b-abc3-09b5f4dcbf22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d37cc4d-254d-48b4-aca5-8df45d3f4697"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d89b057f-32a1-4770-ba2d-3be8e14b3a7d",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "202e228c-e838-4935-9787-f40b41116b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1e80558-4503-4131-8860-f7137ddddd0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1dac5a7-19f6-46ad-8b5e-49b8016f417d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ba7c4d5-a2ef-4e49-ba11-4a50e9ab55b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88f56c29-a968-455f-bd31-0f295f085adb",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b4212c9-51f2-48a2-b79f-9eab892d0ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7d5c834-a7de-4cb7-aa5f-d4d10f987ce6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e4303ed-c811-4ac6-bd5d-62826fc4f594",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c59d352a-dc06-4e43-a179-bd7be122e8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b3b85b5-4994-4ebc-9e80-8113b28cfb82",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f6fa813-d2fa-4cea-bd72-d5045a95b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7cb29a1-ab55-420b-8688-6e54a727945b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6e5f3dd-f360-4f43-92b8-93bb1efb7acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "565d24bf-147b-44b9-a14f-ebcb999b98e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00658ecf-8084-49f7-8c4c-0a9c6bcb481c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93762646-9494-4426-9f2b-53321075a140",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "affd518a-54a6-4ebf-a8fe-8d6c878c8c37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32d45307-d9da-422d-a16c-951e4d6794bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3aa528f-6aff-4a10-9de3-fd6f8bcc8b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bf86a60-e2c0-43ee-a3e1-86581122c7ad",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "824ab3df-9c55-4049-87a7-8ae9d5554f55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d3c3f01-5922-4afc-98e8-91b81ce6f14d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ddf63be-1d94-4062-b8cb-26122c6dec73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4dc1252-d566-4120-8d20-2c0ffad99054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb90634-114e-4733-9903-e0a80b97837a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d79dc909-d42e-46ad-8595-f00f3b3c2b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4c85d26-d10a-484c-be64-c83e779d6444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd6982bb-ae79-4b1f-aa1e-b1fdfd862798",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c357791-7ec2-4028-a998-fb4a10ae40c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b53599-a1c8-4626-86a8-495347847fc5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9f61667-fa63-46c5-83fa-379378a4615b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f185aec-12f7-4951-af43-9af7dfb5e149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b110cde-7b64-43dc-8717-edd389ffb0c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79ec004d-dfbf-4037-a124-80f4376c4c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "848b1f6f-2640-488a-83c8-53ee042b00a5",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4228c2c-5e51-48d5-9a02-79af675dd894",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f410b1e9-d3f9-425c-91d6-a08780c74449"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e240d3b-b7e6-40ff-b6eb-a4ddc0303cf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "44c579ee-fd08-46e7-934e-2d0cb2c4a181"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37984d28-15f7-4846-928d-c29ced499086",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00742dd9-2341-4a2d-b86d-57fc1de8a9f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98dd9cbc-e357-4f27-9685-67c25b1c56a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2bc63a9-2a25-4089-b424-d2ad604e9265",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc7597b5-ea57-42ae-940a-e905bc6f7d37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1dbcd831-6e79-4b37-9a43-acc98ce7f40c",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42a98c7d-e397-4bcb-b579-712ba8967195",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "634f7448-f9e3-4a9a-9a1d-1e78d352512f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07990df6-cf23-4413-83c9-afa1791ad149",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f2340f9-d98e-4769-b65e-aaeaa7e22faf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "14cfbe89-714f-4052-be22-07285deafe6d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f3da72c0-9766-46dd-a896-9dd0e517b552",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95e389b-d7d8-423a-a927-33d47048d80f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "dd3aa0ad-898c-4497-983b-92f5f3f3b245"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f12407b5-c04e-45fc-8ff7-b1eb1e759d98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1fe0c636-fbab-428a-b05f-3e225f92f097"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2befbfed-9b27-445b-89e3-2afd9bd70267",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0d0165c9-20eb-4840-aa99-fcd99a7ffee7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "46fc78bc-1ca7-4f8c-ad4c-82006797e11c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8ad716e8-9196-4f6e-bad2-48b1606443c2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b91d0a5f-635f-48e4-9b1e-8bf97ea69056",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "6c828ec6-22c6-49a9-96bb-5ec77555ead7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dd0cb1c8-987b-4a42-85d6-1c424fcd3dc2",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14ca23fd-b181-40f1-aa2e-73796cf1fd19"
            }
          }
        ]
      },
      {
        "id": "f8ac44a3-1230-43e4-9b30-56497ce094e9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "bf0cc1c1-1b39-4b4d-be56-c3358f8efa4d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "fc0960d7-0060-4569-be6f-7743696d2935",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc06d932-60c1-44b2-8c0e-f1997a54e21b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f430f274-9208-4050-962c-0638e446205c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74764feb-3fec-4ccd-8250-faf6c292307e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dac5ad9-737e-4f71-be0f-df14106faa15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "b343a3fd-5582-4479-a39b-ee099d6098e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6890a81a-35e6-47bf-914e-24a2bfdf6095",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7855ae-e048-40d9-9aa7-0a741ca1cacf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d54e372-4086-4082-9252-4af3f0af7040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c91c0254-27c3-4d83-a609-0241b1f51f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e533af9d-e474-4b11-b577-7311b2d383d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b5a6a46-5917-4a0f-8e51-f115699aedcf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f98325d-c008-4ce6-b37a-e0c52270b222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d27aea9-9eb9-4c1d-8f45-2d22de423060"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1dade8-e080-4e85-bda1-b08ef9c4963f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f94d3f8-2222-416c-a9a7-cd86ec31000c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7b526bc-dc47-4677-b0e9-7ee5c4a25786",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91ed8169-a99d-4e28-9c84-3a4f66f8fb49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01d43d77-b6c3-4467-a4a7-4a69c6759ab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96fa6873-1f8b-43be-8045-847cd0a9cdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "74071a75-d18c-4268-9c04-b8d9bb22629f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25d8afd7-f2fd-462d-b8f0-f5b4be96ea93",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45f2af6-20a0-4201-9e79-2a1b2f7a091f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b0d711c-7eb8-4e72-a385-6ba44d4fd50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d17afb1c-d841-47c0-9429-737a8568536f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "838188c4-0233-469a-b587-05bb36f15ce0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c070955-fe18-4c6b-9c1b-e88130f6379b",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a785170d-d449-435c-b692-544a0b9c37f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8bde22b-6b41-433e-a042-085385de9541"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3806a602-9be6-4086-b8b8-6a30ac5cac49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c7a51ff-513e-4b3c-8e47-bfb0405f8425"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bddadc6-bc4b-4f93-bccd-91edd035104c",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1cfa10-f65f-4cca-a2cf-14e2415e5c5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b019b0a8-41f0-4537-bd89-8ded0486a6bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0f14fe7-4a75-4de2-b0ba-99ea81c3a85d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "96b1497b-73e0-4710-a305-5f96d5c16669"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ba56c54-3e4d-49ef-a37e-1dc8f30b6ebd",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90852c00-0b46-4133-8c0c-820207b4a009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea1e94ee-7a89-4ceb-8d56-7289a9d9f9f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7d7003-6871-4643-bb7e-3136cf71ce05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d3aa12-b22a-46f6-8466-58fb06dd0996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71be4d9b-a81c-413a-82cc-315d8255086d",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12501b8-23fc-466a-9fb2-eedf9e572ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "646ab239-91b9-4d52-be0f-3f4ddde89ce3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3e21111-05a5-441c-b434-1a9c5593e208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2d87f77a-b158-4465-bfb2-d9951fefc006"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59dae4c0-efca-4739-aece-c6d7eb73cbf8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d0477ad-ab4d-47f3-9e91-fc8dee7efa18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b2822f6-9137-4997-b138-de144a5623b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efbbb413-1747-47ed-9203-71032df82dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "42e71644-bcc5-45f6-a3e5-9ecae517d1c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "090687ca-92d0-4249-8b95-cd96974e2237",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b42a00d-8f1c-461b-a6a6-db23e7c6bd38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05e57a70-9239-49a6-b7ff-c5c600a3fd4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "598a026c-f7dd-4917-8631-cc9fe7ee46ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "056b1923-ff6d-4cdd-ac37-04bad3e4f04c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7452bdea-1a55-4a7f-a56b-6dbafabf1ce3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee6747dd-3719-4add-9a3f-302dc6f3c5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d9ae72-4a77-4157-8a05-6b938a5d3583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd355671-c69e-4542-ac52-94943b7a7d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e90f82e1-d295-41a9-83c4-934568b4889c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef13549-06e3-4edd-af7c-d23bc3af77f3",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bf0af3a-a8c9-4bf2-bd48-201077d2c5d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64566b02-4087-4cec-a8dd-f4304dfdab93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da72486a-b4c4-4233-ae78-3ebe310441e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8cc1662f-bac1-44ab-845e-d49d6f90c6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bb5148-9a40-4e8a-ae9c-2705cf78e2fe",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd391348-6be5-433b-bae5-f9187f5c39ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eadf4f3-30a8-4192-8c4b-90b46fa4b821"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d87fccc5-9fc5-40e7-aba3-8be40e6b35f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "20c38788-a2d9-4e93-833a-381794d763b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c610b5d-b72f-434c-96d7-027ca1be3467",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21514567-9149-4bea-8edc-b7522d9e354e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9addfb35-b4c8-4b1c-92f3-048b31035561"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f2a718-860a-4b96-aa11-ef77fd349aa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "63f686e7-f13a-40b3-a4ff-fce571189b05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7030fc51-c9c1-4d5b-950e-ce61831ad37a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60781fd8-2c93-4a84-a18d-a021dbed29d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5709fd87-7f7b-4ca8-8247-e06c75c54cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de839508-79a6-41a6-80fe-660c61e3b3ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f41dbaa3-ba1e-4dce-bf4d-61ee2e40c36b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff9267d4-f831-4baf-be96-1295a28b6336",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28dc0413-53cb-456b-be0e-fc18b6c54f51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1711e83d-9d9a-4928-bd8f-2e7603320194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aefc9f22-d8d3-4cbe-9772-df774b1e02fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9123f40b-ccf9-42b2-820b-a7cdb60b845c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c13887fe-432b-47cc-a586-d4825704441c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a33a0e2e-c81c-4bb7-ae40-b2364dcb7f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "121c6b34-c625-4da4-8039-a37c198e9ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64195f9c-6402-4d23-8406-8f304e0f9d6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f22e131-d0e0-4c2c-99e4-9bc52da03298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17ec8882-8069-4883-9347-805c8ea30d86",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bb5867-a0b5-4c09-b279-e6c323dece28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21d54f8b-22a4-4544-9be2-c96c26c2864d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af6b785e-7791-41d5-bb56-8865cb1b72f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b37c0d13-313f-4aa4-9c36-70f2c384dc24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62056a00-0c7c-4ddf-aa66-b3fc70f2eac1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c3b95ab-0fe8-42ae-85fc-1f9912b2a4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0617386e-aa7a-4bbc-8e62-c1a525da5260"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e79d69a-46d7-4d76-a1ba-d3dd28495556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "383ce65f-184f-40bd-a775-3201eaa59ebb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c04ac30-b82a-4070-8d68-e7d1fa144fc8",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee709c1-ccb8-4b37-9e7e-38a519abdadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12ad4e1-e1f1-4332-ac04-58efac51e1ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27613d14-3a70-4c1e-90f0-c8c0184394d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58900ab5-6f20-4e57-80f3-9e0ef30fe784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb1f78c-f181-4608-87f4-d9f50b92bf36",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65785d19-33f4-4d22-93cf-58e06c6394e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2951b6d-a835-46ed-9081-b043805648f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a383b131-d0fc-4749-a378-eb3be0898cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "656f7f89-6a49-41f8-89f2-ae6e9b2eb2f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04324d26-aa95-4465-a8ed-c54017312e22",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c41e4f52-c082-4633-9f17-edee8ca971db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf1c0b4-9c76-4dc8-b241-312122a4e1e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab9c53cd-24cf-4c1c-998a-c5de90f690c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ccf83cf-5d74-425f-ac98-ba356a445cf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a54d5e34-7992-4d79-ad50-7afa4628a105",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52cbdef2-d9bc-4929-9cd9-a18ce88b3de1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc22d449-4e91-4253-b6d0-742e74d36fdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bab16e7-b1bf-4735-bc2f-aec4571dc3a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b7f4ccc5-c5ca-4a0c-bd26-4499c97d7af6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb0c3c1-a988-47bc-996a-b9df3b667ce4",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f10d4a-b2b7-4974-b2df-ee009fc88688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec98e6aa-5791-433c-b332-bf1d5bb309b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb62ac3-e732-4e4e-8287-eca711b1fc17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06ade4ab-ea23-4089-89b1-20c7c7b6360b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ba075a-b181-4f55-bf41-a7f3905fe8ec",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d695a69-480a-46a7-b832-cb79828e32f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb02c94b-364c-4a8c-bb41-c3feda86b0ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a864359-b75f-4c62-ac74-d1d1a7545d55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6172c371-43c0-41b8-811d-7928ebce9bfb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "708bb4f7-d73f-49f8-aabc-ea0720fc9265",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e803fe-e331-40d0-b2e5-60f8a619f215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc689597-26b2-48b3-89e4-772ec368a8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9421189e-5314-4ee9-ad94-a7ca90c7a522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a9e3a80-31ab-499f-a2d3-0bac89b58138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b54afdd9-315d-4b3c-a738-832f7077353d",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08eeb3b3-d588-463b-b835-58548c17ba13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c135b44-749e-4ea2-a4ae-61cc33871a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb30fc54-7d92-4e36-a7e4-e10d3c575f29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa365d6-7790-4e7e-8d58-aa2ef855af73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c333da24-225a-4714-9253-9fbaa99cc386",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ad2f2b-b943-481c-9269-a1b582b3f33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "071c8a8f-9e14-4c53-b286-6b00ed5d51a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2527dcbc-eb66-4639-a198-7e2465e09a4e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26d6448b-9839-445b-b2b3-b3f19b2c709d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dccdbbed-b5c3-4d37-aa8e-5927c7ece0f1",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d730881e-5b6d-40b0-a9cd-22ac49960476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8c84493-7c6e-48d2-a055-ce0997c25438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "116c6f26-2729-4344-b58d-eba30ad9297e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "418b65f0-2e54-4b9d-81ec-e6ea24008c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f71e667-2d8c-4580-8ef8-9ef9be06c409",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f232bf2b-1010-46da-90b7-da3fbd56b3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8b8263-1b59-4747-a0f4-1663df09cc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc1f37ed-98b9-4a76-834b-8f685c71ba91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe87f39-28b6-4a9b-aeda-dcee07e95e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37fe958-9cf2-4255-bd86-d87237a769f6",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a873bb1-7656-428c-8a45-435be67a1771",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343b9de2-87f1-4212-9663-d16fe4883dd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee19caf2-ad98-49fc-8cae-1d3ba0af3654",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4208715e-cf1f-4cca-b736-be28f18d4b20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c47160e8-2e61-4ac8-bb26-863dccd772ef",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "501ceab4-5ec3-4541-9ca4-5b87ba5609ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f848043-6d3f-48cd-9451-901d36131f75"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b5b69ec-d9de-4602-a2b7-9c47c871116b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e870c546-d0ef-48af-a97e-b8d3f7754879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6976755-fa2d-4269-9e1b-286705d964db",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a9b6c85-f7b5-4d58-bd56-45966bb051e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69a1b84b-c19f-4355-9454-fdf42e9e27e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "929d2c8a-57ff-4200-95b8-cdf8615f32b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "26eef3ec-edc8-4d59-a39f-8540a9d0b5b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec9d082-8fdf-4d85-a5c1-3604d0e04c23",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed6da21-8086-4132-8a66-1757d7d2a485",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b306fd30-08ff-4e40-a29a-ac581f1620ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73228d05-d10f-435f-883f-779a55cdc249",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40e2904e-48bd-448e-ab1c-0d35d3b51af2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c48c1878-6bf2-408d-8656-73d8cfb0c601",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88480511-51dc-409f-b992-f81137d1f345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ce83166-c8d7-4323-a6fd-7b3e6b8b7e51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dac365a-1541-4be2-85d9-518b6fab59e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "db71783b-4044-48e8-9bbf-a5301b2dc413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3b8c6b8-55ca-48f5-afde-350ee493897f",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39daf1f3-d7b1-4fbc-89d7-ef9f241bb7d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76f5fc54-6718-48d1-b8ab-3f9374830011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f4f8bde-317b-4d3a-95a9-e807b3705863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "88f40cba-101e-4eb7-95e0-21caade94f78"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "69d30268-aa29-4aaf-8cbf-9943e1b429da",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a4cd72bc-52c9-42d5-862e-c5c9f4931212",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a3fd28f-ebe1-4c02-9263-a34c7ee52bea",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a8e92c1c-5837-4cb7-bc3b-bb20f652c98b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c646482-1c25-41da-a9c0-b79af709554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3f3851bf-a020-4769-9308-ab4899b9c750"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff8eb2d1-30b6-4703-9649-9946ca2b9f40",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2e03da3b-17d5-4b2c-b0d9-763cb01af882"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0c4f1aad-fc5f-4745-8cfe-0ba297ef8a61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "535f9298-9526-47dc-9cf2-c298046aa425"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "213e109d-ebde-44bf-90be-9b3db476a45f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a49fe80b-4b87-465c-85f8-c3dc4c58262a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b15b0e0-aaef-4166-aacf-440ef70a47ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d5952d5-0e08-4a88-be12-f8e9eae0aee2"
            }
          }
        ]
      },
      {
        "id": "e69c066a-e327-4b87-b6f5-fa9051e2be7b",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "30b0df0d-7bc9-44a5-a00a-6a25b3e41def",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4d59aa51-f847-4bc0-a3a8-8e0970c2bedd",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e8fd965b-e058-48fa-a5b5-825ae1a545f7",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15ec4469-bac5-4860-811e-ec8738c44192",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0da436f-8d80-40e7-9b6d-426d195eae6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00024ab-0a61-4980-984d-af0e16400c04",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59e09d5a-a7b8-41e6-ad0b-8e57d4cab5ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acffcceb-7ef0-4567-b247-f1db1c9fd3df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3538171-b2d7-4356-b1e6-b1ddd85e7914",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d309f7b7-8ad2-4827-ae7b-d3ed8e029c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e09f8aa-7389-436a-90ce-7801bd2aa072"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bc1ba6e-d38c-4bbc-b450-4bac947a9c93",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d6ab557-f85b-4194-a3b0-4580023c69dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30a3d03a-7d5d-4d99-9a35-b167af4dc4d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fba135-28e4-45b1-8d36-d4d484ce78a9",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cfbc78-a48e-4bd5-8fb4-2d9163fd0bc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aae07843-980b-4044-a045-ab45424ec960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c8e95d-1f90-4566-b15e-3e7671544ba3",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb61b495-5b18-4c35-af96-ed479b171604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "672f2c78-0944-42ec-ac1b-6db381bbe62c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1f3c47f-b9d2-4266-b01d-d04f0fc508dd",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855cd02e-a4c2-45cc-96d4-93d3e999a0d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08ac4899-7388-4913-810c-e44badc40700"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90a76f8b-3ee4-46fe-98f1-b15f54c5bffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ef3ccbd-071f-46d2-b984-f32219f4be1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93c9e90e-2dce-4a5d-87f2-1c7b146b245e",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c738957-eb14-4b19-be35-3174dcac85d4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecf63445-ec80-49c9-9cc7-18723408ee5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d994513-acde-4a0b-92cb-316fff3c4ee4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2a19f6-2914-409c-9f1a-d193cc9905c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc2468eb-9f97-4c5c-9b91-b2e9c393667c",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e740eae-120b-4d36-b32f-6aeb40ec048b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25f4d030-e837-4115-b82c-e4be9340ad1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e77f7-4133-4341-aa33-73b359f515e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b0ae010-33f2-40c9-ae6e-c02e0626c8f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef4f0fa-3ca2-4a3d-8b1e-864c85b8b004",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57927edc-1aa4-4cdb-a474-25c4b4458e59",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4b1760d-779d-456c-af29-b7f49a53ce85"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ca9232-ff42-4433-ace4-472bd9854973",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd115e1-7da0-4e2d-8bba-027b3743347b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be12f16c-0f3d-4b10-a57d-3e684308e067",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a3ce66-b368-4291-bf66-6754aa789924",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2bd400d-e830-4eb5-a9ba-59e302548f32"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63e6e7db-6c64-4d19-872b-f38aea61755d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7468b98b-112c-441d-8482-6e7d8f40641d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bc217e3-a9b1-44d4-810b-900aea0d99db",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0729fae2-f183-4f19-a7d0-6845953b2f9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6488e1e4-d487-4074-bb1e-48e90f1d350b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c197e1-a1ae-4813-81a2-79cd6e2c7b10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "284494e7-fac0-4002-a593-b2861a47d707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0e66d0d-6a50-4630-9330-a6fb4a59837c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "151308ed-c187-4d4b-906b-80d43f426194",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5bbecc5-8120-400c-96ae-375ad9eca5bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "761ba2b5-4216-4989-927e-bd49bdffb888",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "767e3be2-8033-4aa0-9d5f-5aa0fdb2f298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cfc2d7-620e-46ff-a843-ebf7e0ff2afb",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00c7a478-b887-4716-a0cf-a7335a373ec2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b76979-ed24-41e8-b77c-89ad8a025efd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad6dd2b-446b-4135-aafa-6da5f1f5c206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3380bcde-ab32-451d-8c84-8b0d21f4e22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6289acd0-bf99-483e-9c61-fdcac58dca97",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "568a02fa-ae15-459b-8bcf-d230a6422d0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91c76503-3288-42f9-be3c-212c70db40f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44cb79fb-35e7-4fac-9660-e57326de0e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb9ec0a2-6712-48ed-87d1-02499be18275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2553ff4-aca9-41d4-adf8-e2a265df8b21",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95c810d7-81ac-4f71-a611-e487b37ed81a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "505607bf-f4e6-42a1-837b-c772957bb86b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "893efe08-d391-4300-bc01-dfebc46b4d3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69f2594c-2416-4194-9ea4-8778e978c52a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f884cdc-d0c5-4a7c-9ae0-f356f6b0449c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3462c611-a587-44d0-a562-0a008a86bc58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06d443a3-0abd-4de8-8a6e-11a7965c3101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63f0bec5-80c1-41db-8b74-ff977db5d3ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6898e070-6061-43c3-bc2a-e1728cbf06cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "202571b2-a28d-44d9-84eb-d3093a369b80",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c84d7742-07a1-49aa-a45d-e24d1a4ed40e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c17ab0bf-489e-48ca-b324-9cc0fb765f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368d2f34-18c1-4a66-a959-4641cf1cc4a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be115bac-9de0-48dd-9e95-407b8a1bd9de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44051f34-e38c-4684-aabf-dc502eab85f8",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc39537a-e875-4a29-adbd-b01ca603a0f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18095c15-4d8b-4397-9e6d-d7db9e6efa29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a706e5-c0eb-46be-87a9-41065308cab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d00ee88d-fc68-47b4-8062-ab88576dc2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e43f22-3463-43fb-88f5-717e7d60fee3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfb7334-e065-4260-9a41-48fa7a114da5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3adf87c-5c34-4035-af3d-b05b1ec432b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bf7abe3-e4ad-4609-b566-ace9df61508e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d16b534-9b42-4095-afa9-f7d42d73c126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671d24d8-2b50-4601-957e-2308713f490f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b9e7d7-ebff-400f-be3a-8165bd52dbbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f83879-e1ed-4653-b361-2b3266b588d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "af3485b6-26fc-43e1-bd8e-06c088a05fe7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a9f1df5-bfcc-4597-9381-c80d9bafe4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb1cf05f-986d-499f-a590-2feee5678ad1",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b0bd2b5-4152-4c03-9482-3bb96808911f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319a4bf6-333e-49d3-a25d-49f5e3f8a3cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c9f8f22-4756-4a58-8487-2c983268e76c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53a38a4a-5482-4250-8182-c1450a7fefe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e9ca472-b644-4502-8e2e-2a5c49ae468a",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e23782d8-6e9b-4410-8d12-2f5280bd6936",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9a9314-5331-46af-80fa-49dc69797552"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9af7da2d-a022-4698-9cc6-5b592182ad6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14ebffb3-6dd2-4040-88f0-486487dd27ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a73c4b9-d595-4ac9-b74d-951ac486cd10",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2253a76-ab78-4ce0-8ff4-d247a8c75a68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6200d89d-cb35-4831-86aa-ccfc8047f1db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fdeb830-e933-4ed2-a584-70fc3b0c9ce4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "beeefbf5-48c8-4558-b02b-b7f145ba0c02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8da22ae-afa9-4c33-bda3-1332b723dd5d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f775fff-0112-45e9-bea0-99bf8bb44f51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "56621011-91f5-41d4-9007-8dbf5352ce53"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ba75583-cd79-403c-807e-4dc3d522c72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bebc6896-3683-46e3-b537-911b2c69f4c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac1ea313-d0f3-4894-88d2-02cbc34636cf",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0160978-c05d-49a1-a36c-1b49f9db737a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a0c86d7-61d5-4766-809f-8a8d447f304f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24947ae3-34ed-4247-ac25-a117db68ec24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad81639c-ed00-4ebd-b0ed-51ccaae2f97d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3db351d-c50a-4907-8e04-7ee4fd34da8a",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "375cee6c-0390-4169-92c7-49b6b6b097fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09fa4c54-248b-42ab-a917-f2b96fd09ff5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbbe17a-efb6-4dae-9b03-9632486ead3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d768da64-1dc3-4a55-aa9f-5bf59cbb433d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5d79488-77a9-4b51-b831-071803501d82",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b1c1270-1834-420c-b641-df41653e5fc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf9ae35e-26e1-47ef-8db0-2534705535b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1400d663-9adc-4895-be71-c4cb57a3891d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a22e52a-b00b-4512-b0e7-b55fbc3ddd4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5fc4b2b-5df2-4921-9cda-96442cdd478c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42f15430-82ad-4992-8aaf-1ecd81078d27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0df4ea44-cb07-46cc-aadf-39238f125a3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e64590-8670-4c05-984d-70c7b9cfb505",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65b99b46-9bad-49ea-93bc-82ebd23dc105"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b47cd75-8a1d-475a-a984-22b0c9aba52a",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ff87bb-398e-4322-bbae-271c37ebfd70",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4b533699-1d5e-4ac4-8492-57a344bd1e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcf8b130-ac97-45f4-abc5-0321199cdfbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f00c93d-c1b5-4469-b14e-26f8b47833d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8a23be6-d78a-432f-99a4-4c82780c63c3",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00aa0891-30cd-4f5e-a9f7-21886f9b60dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71721f68-cf46-40d1-8aed-a27effc864d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5965c43-6f62-4324-9eb7-ad000c06ad11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80eb977f-480e-4305-9814-22f559a53943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccb5ab3e-85d5-4cb7-a749-d55f1190d797",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d522cce0-468d-499a-844c-aba415bb1532",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b97e4fd3-8500-45ec-a0bd-9e9a3c0d1570"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0de16f11-4b9f-4283-9757-2372b2ca7556",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056abb7f-4433-4d40-b4f1-34e4274d1319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bad8aee-4730-46ca-aeb0-a202387fe41a",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "595eb547-a0ac-49d3-8bd0-842508b4b105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a953d218-37cb-4731-84c2-ca7031d6ec94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "848ded1c-b7ef-49c2-9c07-d73663cc1956",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58a3931d-1803-4a3f-b1ab-4c4f75a952a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fff296c3-1100-4c43-b1ff-b1d09309cdcd",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb80208-e36b-456b-ac8b-276c41f3aba8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee90e82b-df4a-4fb8-a7d9-1156ec527433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7afee4e-84c5-49a2-8193-1d9fd2d15b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1005bf5b-4513-44a7-969b-53e92867f348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c8b2f21-2545-446a-94a0-4f30e40aeb78",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12916bb5-46f8-403b-86a1-1aab890aecaa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4fe4d9-b725-4b98-b36c-0958f9f21a5d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8bf299-de46-4ea1-ae6f-c183ad02ba5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d2c2d1-33d8-4620-a7df-3179259015cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd338d8-b42e-4220-b5d1-adaac334faa7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ab2b475-7118-4270-867b-92f976e4f5c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe68bbe-9c90-4c38-835d-a97f43479945"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc12a443-cc5a-4274-be3b-775f8fa59d70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52df40a0-14ce-4941-a6c8-f82c2b7550bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db11b1e8-3d35-4f6a-af33-9980dadbfc26",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d64695d-693d-45ba-b429-38ab2c7a3afe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9e1f9ba-f9df-4a26-8b45-51a41012fad2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b531970e-ef24-4082-b34d-4d1f70dbd8f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a62c046-0383-44ea-a3de-7053e8178334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc158e4-8912-4727-b285-2039ea9e00a9",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35d588bb-9a95-40b9-b156-fdfbe06568e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da0baa89-1584-43e3-9e12-8db410445b2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9bdf29e-cf16-437d-bc07-8a25f2730727",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39789613-da22-4431-bc00-8a0582eacd00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "962875ee-6daf-4419-a6aa-2798b838b014",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ff86941-c6be-436a-a201-36e3bd7c6c42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0614a65-9edd-4747-b163-031619d90b7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cabed2-7a9f-4927-816f-5a8eacaa1d40",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "576aad9e-9580-4312-83cf-9f6a0dbca7ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe3dd4d-6164-48c7-9046-2e593c88fb00",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06b30637-6f21-4081-b888-ef2c413dd16d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab4d2178-3515-4150-9917-0ed657236441"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "083e7447-fb2e-4785-aa32-709ad929b223",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffc2e1f7-82a9-4daf-8284-f25039d9a852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f25fbdaa-0f0c-4053-9565-4524388aaf74",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3b7574c-506e-43ae-9fda-76a0963baaaf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cf8443e-4d84-4ce8-9968-f71c542d9fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2af1498e-9e6f-45bd-ac0c-235a077a903b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f26ad82f-4405-4393-aaee-06e7fc466504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29af95e2-87b1-4733-bef1-e68fdd84f2d6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac14746c-c640-485a-8fb7-d39cb00ad87f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d52afbb-7599-41fc-a98f-51b64599f62a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff8cc808-7c10-42a5-909b-83cf0151508c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4592305-1e2a-4a49-a9aa-66c14c390b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91596e78-73cd-49d9-84eb-7da67e3232c4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb58f5c0-1185-4ff9-beab-26367a3b56bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2420470f-21f5-4b25-b74a-2c8512e2afb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f32cef45-b78a-4bfa-aa1a-cb4a08ccbb28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b975e17f-bdbb-4366-a771-ddd66182defe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e632c78-b457-4b77-a46b-a2166645fafb",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "617f63f9-e440-4fac-9a5f-c49370ea44ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "865e2a4c-90c5-44a3-bbdf-1f4cb5910c51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78ee84e-cdbd-4285-ae06-024293ab67df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6f18012-f7c3-44be-ae2b-beb006402c8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc1b4437-04a5-41de-8047-5b74376b0e4e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b118aba1-f143-4391-a144-3e7b8f318cf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "081ad506-76c9-461b-98c8-41baba45b653"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91797b01-60de-4c5e-abdd-4e13fd9847e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "878ba8b9-d5b0-47e4-9f99-9828e7003896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb753ede-2358-48aa-b9fd-b693dfcafc33",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527c7685-58aa-42ff-90e8-39675972f57e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f3c473-b36d-4f5f-bb15-8fed17492ce3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a966f6d0-e2a2-4688-b0d3-147a0e396e7a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e6fd4a4-5306-474f-a4f1-5b6d7ba3373d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc66ac1-8c86-4e66-bb2e-f8090131c566",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0c95c2e-32f1-4117-98a0-f007197c673c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "906b1e2b-4c3b-4f7a-b4a8-2d98752644f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e08d91c0-39d8-46a7-abd4-1220853a4695",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eda8e374-984f-4645-bc53-a4c8335dd15d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f9554d9-c81a-4371-a62c-38e41d8b9841",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e484f2e6-dfb3-4f95-9b57-e502a3633846",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a41e4c7-85f7-41e7-a0fb-b5d7a2356e26"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33f13633-bc16-4960-8705-90d6be54b0b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a9970ee-5a64-4ef7-b7ac-3fbba6160aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d0a670-3a8d-411d-8b2b-8195a04574dc",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8268bb-1b62-4ac6-80db-2be988c5211a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e505c44f-580e-4721-9768-9b26ef53d675"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d22af8a-ff09-4b8c-b6e4-eb89ba43690a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c019866-aaaf-4d3c-b2e4-3ab7e92d34c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0158cd28-cf8d-4ec9-ba54-31209ae5da61",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1ac4350-55a9-4565-a955-e794a07b066d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a40659ff-74b7-4de4-9b36-e787a8886185"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "223408e7-7112-415e-a363-fb2bd11d68b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b86ea1f6-e1d5-49bb-85f0-cff9c0e9f8d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33d1d9b9-bde2-4b1b-9b6f-a6d52090c771",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f981f800-c2e7-40bd-a998-c057c8ba786b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56060e6a-8fd5-45c4-b4af-3f6b26628070"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac366880-6c28-4a8e-99a5-c7a97a59b554",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e22b4cee-851f-481a-8ffc-ee8d79561441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c12393c-23e2-41aa-96e6-03b8ea2c14d2",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62a36324-7615-4e21-8024-23f4005436a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ec5a9d9-1068-4de9-8aa2-5da0d73fa76a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c83c439-9058-481f-b1fb-518805103ec4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc163067-5f27-4cb5-a0bc-fb9c5eb763f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d699a419-6788-4100-abda-f586c4d100de",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc17634-9c22-48d5-a92b-3191c3c95386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10bf0b6a-a93c-44ea-84eb-0258956efa2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d02f2276-9ad2-43f2-8073-303f42ce63c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7dcfd739-f0d2-44ab-901e-92a39e0644d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d79a9b6b-294c-44d7-a347-bb2b9a2ed45b",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10c49aee-5a72-48e6-bc86-d632ae6c006b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f1a17bc-6920-4b5a-82d7-8eb9726e9acb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e8bf767-9e05-4733-b830-61c4d79ec463",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77b57063-71d3-4503-8954-bc75c688ae58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ba93e20-0b7a-44d9-8ac9-7d9b401d92bd",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949470ef-6f3c-41b6-92c6-11ad79f36edb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35889700-d377-4f13-a7bb-6431d9f5448f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f271e76c-d7d4-49b2-997a-6177c2f8d457",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91b89d88-71a2-4ea6-8962-9015bd3beb26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56665ae5-6f63-468b-8c13-8901df6fd862",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23b6325b-137c-49b9-91e6-b0bea0762f47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0834551-8340-40f7-aa5a-a6831b5ab9ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fa831da-7ed5-45a0-8c1a-7154a4c7be72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ffb300d7-f750-4e0f-b0d3-a5d6be5c13f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b171289-b828-490e-9726-ebaacd47cca7",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d4c1db-5a81-468a-91e4-d9fe9ba8cc30",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "474eae0c-e30c-472d-94e6-eb7627aaaa58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79856946-a5d4-447f-87be-300b5535a08d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afbe40a8-bca0-4363-b25d-8366349d2a8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b600cdb-d7be-4846-8b54-4aafee36dd9f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dddec46-ce42-4925-bb7f-52233f3bfa39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33b237d3-c257-46d5-b2c6-c755675549af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f014c48-6fb4-4217-9588-3adab023b4f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51a7e7df-4c01-472f-acf4-a7a67cf3f529"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdd085eb-9187-4ca8-b24d-2891906ab31a",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b1d9a5c-d18f-4114-ac6d-4c084bfa4a66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e9a84de-fd7c-4cb4-9f8e-161439bf7661"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61aa47c5-f72f-46e8-bc41-c1f0afb44799",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dfd3a9f-55ca-4a6b-90be-a382d80eca23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9936fdb7-8845-45c7-a33e-53293ba16377",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b51606-83a5-47c0-abad-701dacd61088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "202a79a4-4ab6-4efd-9101-d93e697a7bd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e210d73-2613-4c6a-8e38-f219d62183d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9d29bc-e9bd-459f-8c4f-bd4f01246319"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aece4fb-f936-4013-8ad1-84ffaff81183",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0eeaa67c-7607-48fd-83bd-01cd4595fe84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ef8f92f-dd53-4310-b830-204571e3ca10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "449d652c-bc72-490c-ac23-c9989f2bea44",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89938348-bae4-4e69-9eb3-a18ce0bcaa79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4409df66-52a8-4edc-b228-4fd50b369819",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ab94a26-63ca-4f89-9618-58aa937fded7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1811f2d2-815a-49a8-8dd7-54196a0678de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12a2d76-e1a4-41cf-b9a0-a6e38355036c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b250aa43-cf60-4b6b-8e9e-15b626bfbeba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8c62159-df4e-4537-9d6a-97d083048908",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "419140f9-5674-4de1-864c-3f301da5604b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7918656-c768-4d7c-82cb-0db990b9ad55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4100c9f-52ae-4e06-af96-cce0a8fc5d01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1013e5b8-4bb3-441a-aa76-dd59051700ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "184f40a7-3014-443e-a038-a3587add1af9",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de276c42-e9f6-4f3b-a8c3-35a6991657a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a1aab52-66f9-497f-bdd6-e9a4d6ded5ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd82e504-520d-4821-9c48-8f1379a529ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2679f68c-2671-4072-8a42-e21ae3e1a560"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16adf66b-76c1-4083-8d78-121246d094f9",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4627f4ec-e5ed-4b59-bc77-745c61b94157",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c20a0ac9-94b1-4672-a17b-e64103ebea54"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "649d0bcd-5ecd-40be-b3ce-2d996b11c7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b65a38f6-3c1e-4d30-bde8-3e16739794d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27180b56-a32e-4e18-b27d-662cf42d716a",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48337db0-5e74-445a-a618-0404fc6c974e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3207d09-7969-4f14-8792-f4b67b7a6ca6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23bea9e7-5aa4-41da-93c2-536e12d0e2c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dddec81-909f-4a21-9943-e5fa6b3c180f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ac419f-6cb2-47e9-8d3f-6c58e3981331",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ac8d64-9aac-4502-b4fb-f9c20f97359f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b267e091-4b90-4d1d-810d-69a9cfd2c50c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9335683c-35f8-4234-9e27-43adba38cbe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43fefe99-56cd-4869-b6e2-f674bc19ccd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920b1c15-71bb-46da-8b23-3648d963e8d1",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8da5fddc-b995-4069-a041-b9e6707fe175",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "622be28a-1787-436f-b7c9-8c9ed2227809"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5989bbff-451d-41bb-9799-6704c3589c04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56e77d28-42c8-4f39-ac40-ed801dc10723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16e375fd-6a66-48bf-97aa-0a7ebb35ec58",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e93d1-8945-4626-abdb-aa8d614bea64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63fb94e5-7d5d-47d5-8326-16f7548dbfc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e902de92-c232-44b9-80e9-97e0d93f55b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f9b1685-ab77-46b4-b2ee-25e4c2673436"
                        }
                      }
                    ]
                  },
                  {
                    "id": "998ec8d8-1f99-4bdb-9d3f-0867b271a365",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c9ac6b-ad40-4f4c-81e1-5e63658d9198",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d2841a2-7cfa-4ae4-9d78-20652f36c764"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "102b03e1-124c-4a49-afa4-18e5086763cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6477fa8-1ff4-48c7-81fb-da78ce8e70f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2c872c0-d5f1-489c-a6d2-3fdd49527cbd",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa20eaa4-9dea-4c74-a43e-9e49bfd47bc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8784d76b-7c54-4f7e-a027-05f22a60a00b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a80ac9b-f20b-4d26-8b59-f26c217f890b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0461eb3a-c671-454f-8abc-2a6a19431d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d367458d-b0e9-415a-a931-6ddb3d552560",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6e3b194-027f-4eda-b6cb-08cb87566cfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ccfc85a-6a35-434a-9f5b-f84546416bca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79d813d-8da9-47d0-83b5-f427dea950b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c83c3b-1310-41cb-8972-40649b149b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07d9c35c-ecc6-4af1-a664-31561a707ed4",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f2f943-6f0a-4015-81b6-993af79bc902",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e11bb8f5-6817-47ed-b428-791e730c5995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "019700f0-01ca-471e-a8ca-55322225eaa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d869584-5e2f-4be0-aa95-cd78197ac59c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9f64035-f033-4bc5-a216-89f628fd2998",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c594df63-ab95-4ede-a66d-9a5834d8790e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b4011ec8-3ae4-4943-8669-5bebd66eeb4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fb31314-de50-42ec-8e79-6ae19fb65f48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "badeb5e0-eba9-4f66-b1f5-72de0ee69029"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19cccf56-a99c-4b52-ae5f-cd10df934e3b",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "263f5dee-e41c-4933-a125-2919ac1935c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f5ed4b-d3f3-463c-a711-5147350d1ef3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d8fb94-ce85-49e1-ac15-391897f5df06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10ce128b-bf5a-4334-bf70-3d40e8ad2e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51319f36-6c80-40c5-a354-64781b221f1a",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ba10832-ef80-4950-9b22-2895030c4484",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2d90ea49-0f50-4538-b52f-895f4f17e03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fdf007f-9474-465e-a66f-7a8b0ff0d2c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b884b5ae-e354-49aa-9153-116646a814ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09499491-d14d-467c-8a65-5c3ecc209cdd",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c104b40-79d1-430e-b24c-125b95582cf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "885a4b87-5644-4671-ab62-e0203017330e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf90458-1b67-4feb-a268-c494724b38be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69db88b9-6561-4106-a849-92e6c956f3d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b8b945-9fe2-44ba-b425-7dbd14a3b3f7",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1086248-2723-4db8-a6c4-1831cc013ef1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eebbec59-446d-4970-b1eb-b6a10e29b191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b211c5a-d844-487c-af50-3f628d9c1e4c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b28fa8c-2662-44bd-8b59-28a02015cc04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a266c7e-9ec8-4188-8a64-53ca2430e555",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28800988-95ae-478c-8ea7-64e577de7b90",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be785bc4-238a-4749-a522-9c98f2aab234"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdfb8b0f-f43e-408e-8b91-13694c5cbccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "143b65bd-ba09-4db4-8b82-5452b3ed38f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c14267-bbd5-421e-ac8f-73499b0d8e14",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "899a1420-0282-4747-89fb-ec0589093303",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69a96e2c-fd09-4824-bedc-4a9d187ae242"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895b833b-a076-4b9d-8fc2-dbc84863302e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f884927c-acb6-4142-a78e-82c6e2891aa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93abe304-afb0-4370-a4fe-5c897d7d3cd8",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2003173f-86ff-4861-880a-9f133ee04609",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6b45f66-0433-467e-8cd6-519b441394d9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99affa8e-70e8-4876-b112-b7d0c4f391fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b758ec7-4f3a-4a7f-84b1-13e2c10bd76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc78a8d-bda2-4db2-9448-e0e526e3b1f4",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82acf878-982e-4509-b234-eabb27caac44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13d32465-b349-4da7-8f06-d9a676cdad27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3ee8ba7-d6b3-458f-b74b-4e9ea915466f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "810d6df4-edcf-4b36-9d9d-120808ddf93d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db58d42-b623-41e0-b889-f8df0af728fa",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33913123-cfc2-4059-92ec-db857a87bf3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bac0a194-ed54-40af-8f85-2e68093c262f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd19ca41-d0cf-47d7-a706-c1599c3a60d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ada85cd7-397f-460e-b995-a0c40adb20a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd915d3a-d8f3-4473-afc6-9de8154907ea",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f4019e8-6001-4fb4-b83f-b3a13e8b9044",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9a2d80ba-1b3b-4180-a3ef-08a28c1879db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4585beb-c20e-4ec4-af74-c2719868119d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30628e91-1b8a-41e2-8fc4-9998084770b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e26672f-ec76-4831-820f-728a3749ced9",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf088eb2-10a1-4cae-83f4-dbaa59745537",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "983c6567-51db-417c-9083-ad82aae3c407"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eea618bf-a1c9-447b-ae4e-6c710cd0bee6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "50587ab3-22a4-4728-83d4-a547eff6f4ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3da8b35f-592b-4478-b24e-81c813c14613",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdc83fcf-96c4-426a-bcf3-9783dac59bfe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "efba8e6f-a990-45f8-b711-4a8570d7b3e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a4f31ba-2a5e-460b-bf97-221c8da28f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "377320f7-ed06-4599-886d-f556fa5e8b5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36454f13-2693-442a-bf08-92749c7c8d8f",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17d0787-9375-4a29-8cf0-419b41271995",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "976f0836-3a93-4f84-9a07-c1e4d9f82886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69c5a5c-be57-498b-a824-9f47754f9036",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43f40d09-db21-46e0-b236-221aa896d6ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df49f595-b028-4120-90e3-4850af2d18d0",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c425ff60-8319-4465-9a93-75c6aa2ad942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f4cf6dac-4ef8-4ef7-8d25-881984470768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61ea341c-45b6-418b-8c6a-65f3d2431790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d64bdb24-d0f7-4153-9b28-282913ba651f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf2a2d1d-5492-4243-b3a7-33bbdb3e0387",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8187e10-4ca5-47f5-a9bd-15797d1d1dc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9ea8e03c-1823-486f-be20-6acdadd90897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbce4946-f253-4d97-a50a-339430bf0559",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bb7192f-bd1d-48d4-96fb-579d761bcd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "880f5bdc-76c2-4045-a177-b20c2ab6ea43",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "207b76ac-eea2-4f4d-ace9-bfee61eacea4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0055cd05-4c6a-4d61-bc1d-07a738004ff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18a83b17-43ae-409d-9bb9-9ae7e0c8ffa6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a96379a-ce32-4b5a-a826-574a8e601b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de73662a-7077-4105-9047-7fd9b9634cc9",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bf9c51e-ca63-44d7-9a08-2ad71a3b96c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "169c7672-9096-4db4-bc4a-85bdb6ef5fc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d0ff503-7edf-408d-b162-ec9ab4c21433",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a2359c-2f56-45b8-8ecd-4199ad3adaaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d39052e-8142-4980-9d69-7b2655ca6e79",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e565acf-af2d-4cd1-b96b-b14b6faa5f2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dc12f37d-8398-41a2-aad0-b7e465879266"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77780574-2610-488e-8246-727eb2ce8e2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68d3c79d-b9ed-4adf-8bdd-3cc4bd3a846c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91aeda69-d8c5-4143-907b-a0a68118c0e3",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fdab3cb-0810-4d79-a5f7-2f7ebdd8f1f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62b26af7-2f16-4dab-940d-2513ee52649d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4312ce-c817-4803-91c0-0d3bca44b7af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd490204-e45b-45fd-907e-33d25d4deda1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f45a6fc9-f03e-489c-9480-64294ba74d52",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf2fca3-b818-4d30-9f45-65105bc36225",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7445779-89e5-4744-89c5-4ffa25500a3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98407cc1-89a8-44af-8fcb-109bd6151273",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9332b3dd-9ce9-444e-9ee7-0489f3e8807a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5a0bc95-28bf-46aa-bd19-18c2138c1025",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a9b1e11-aafc-4f0f-98d7-7b18f5f6152d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafbb804-8041-4405-a170-ec7169570cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bf15a4-5f71-4790-8542-2dff944ccd26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f16d7960-5e02-474d-9eba-ac66c4b67c3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b45f7881-6bf7-4883-923d-bdb36db9976d",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1e8f8c-3921-494b-89bb-4bd37bfd21e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cb48bc6-68ff-4b3e-9b75-9bd93dba58f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c12056b8-c8ea-42b4-8c88-c9d61aa9fece",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e5e327-cedc-46c6-acb1-04e556e36eaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33eee557-bd5a-4b14-b31e-50a23fef5696",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8659fd3c-970d-47b0-b852-71fe8ebcd875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2577f2be-54b7-4705-8f9e-78c12f9bd776"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "321fd9c7-9fad-4afc-98cd-936659eab09b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877c40aa-d239-40d1-9536-386f89003b60"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2214a2d-77b9-4b59-86e7-890e9dee8ee8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a7797ab1-a273-4399-94b6-cd3dc2f5bb70"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8904a457-d173-4775-a670-c6d506946c79",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cfeb1f2d-bbec-4848-b50f-cf125a808c80"
                    }
                  }
                ]
              },
              {
                "id": "de6ddf62-a800-4eb9-af3f-5bb0d6d78714",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aeab81b8-366f-47b7-997a-ad7060540920",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "964e0cce-6a55-48b5-9d11-222ac93f5b45",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "9fa8f0d2-9bb0-47f4-bbf5-cb767854190f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc831c15-8c41-4b06-bc9d-8fdf2e6bcfb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cbc22f62-3404-49c7-87d9-6d688036bd3e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d3e0e6af-0e64-41ad-acec-b992b05f3ee0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "222f3611-6a16-46e1-9a06-9dfc427f3acc"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e2ee0a7-f30a-462a-92af-7f6f60d179b8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4bbf8b6f-2bd5-4c7a-92d4-1dd57c8c966e"
                    }
                  }
                ]
              },
              {
                "id": "2c60f627-f288-4224-8861-763a07485458",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "cb38d35a-9b77-43b3-8e11-9f913fa53bc2",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040fb6b7-ab3b-4141-a42c-9e7d4168d5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4ed57adc-bb87-4bba-959a-2abc52187474"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000615ae-473f-47f0-8852-7093474d16c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df8d2491-dbf8-4cb9-83e0-1c551b07f83b"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f9dbdef1-27a3-41d5-b829-030c75a2dadb",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bb466887-717b-41c1-9f4e-93eed4c9dd45",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ad29bcbd-6ad3-445c-8926-687345c77a95",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "44f9bfc8-9fe6-4ae2-b90f-93395f12cd17"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d003f35c-b9de-4f00-8fbf-621797abacb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "898c6894-d74d-4a98-88c2-a72302f26316"
                    }
                  }
                ]
              },
              {
                "id": "fe199430-4b29-4d3a-9db6-29b1ddaa656a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40469a1d-7849-4a14-9f33-0979b01ab074",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "69a089e6-2af1-4b9e-aa4e-943dada7851e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ed9c6d86-be88-49a4-b712-a2ca06fcab13",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5782b21c-a2aa-426e-83ea-fdc4f7e91162"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "39afe3fc-7a09-43e8-996e-b11f66dda519",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "87bd808d-6375-4ab6-846a-2020e5c75154"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "74d5ee30-4ad4-4caa-a701-a2c2ae98fd7d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b17f124-abb3-4940-9c12-65a9d104d2f0"
            }
          }
        ]
      },
      {
        "id": "ec4af7ce-d94e-46a9-a7aa-251818b35739",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f7a71e10-0209-4b26-899a-dc41c04ae6ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "0c5294f1-e592-4f5b-8f66-2d9c3dc907f9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0887cb25-2219-43a0-be78-c8462760845b",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7a5425-730e-4eca-bd7c-e8535d668b8d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "df350179-8bfd-45e8-b199-4f68778b8c11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d508993b-72e7-4c87-ba3d-df453ba2ec98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "266c8099-b75a-445d-815d-da441b081f0a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6db6a1c4-0777-44af-9dd9-c28e2a7cf93e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "32fca227-6016-4da1-8e90-2ece430dfc08"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "13c88fe8-a602-45d4-a57f-51e1be058302",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ad94d45-e59a-4119-a435-ed01ece68ae3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f86b4206-4499-4b45-9bf9-236a26788954",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "7085fab1-30cc-4b76-bb60-cf3aa1063e85"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2d1f6a7b-d05b-4ff4-b9d5-3587dcb01c96",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1cc30964-1ecb-4a74-ac6c-bdc67c3f97fb"
            }
          }
        ]
      },
      {
        "id": "ea615572-2d0b-447e-8abb-01b2ec210278",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0f7503dc-58d0-4506-8d7d-7802eddf09b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1ca348dd-7f52-41a8-aa59-0900961e3517",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11446e5f-6ad5-4ccb-9650-e0d72171a242",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d050ce0d-0bc6-4313-a98e-d04d2a8aef23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07100b9a-bb05-4b4c-aa25-a0faca7f554c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e48a807-1f47-48a3-9653-722c0e68cd87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e71ea5b4-2f89-4667-96b0-713a6b6a13d3"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e5c88120-1a61-489f-8e7c-e9ec8c195215",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c73da3cd-5b60-426d-bcd6-79219cbeac2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb153b2d-925e-4b86-8c73-804716019582",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a8e1090-0703-463d-828d-101c2a66091c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d965e059-5b5a-4ec4-90cd-3f7cb6d8c1a4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d5f34298-f2e3-49d9-84d7-479f82268aa6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "53152678-f1b7-47ac-a705-207531a91f82",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f2fb5e93-ad99-42af-8b60-ffb9571a63b7"
            }
          }
        ]
      },
      {
        "id": "27ff258d-ba4d-4d39-942a-eab4e5ecbcad",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5b6541f0-9b1a-42da-b028-0e84d23264fc",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8c51ced0-140c-49b3-bc18-6e789a5f9ed3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a52363b3-300e-4819-8be9-6dd9c2f08b28",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0daf4a18-4d51-47fb-a213-01e71cb1e393",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6fe844ef-915c-4582-b13e-1f4261d72633"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a107cc54-bb88-4416-9bed-d5e5f4bc8a7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bd34fa9c-eb21-4286-83b5-ec1b9404d3d1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c635241-b3d8-49d3-b697-721369f9e3d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b92f65c9-c39a-4640-9cc2-cfcb6e3e69d0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "279d7bc2-f2e2-4ef0-ae85-6b3a2db885d6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69715441-9b63-4962-b49e-724e78def9e2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08bcd5c7-28a5-42e8-bcc5-411334f38ebf",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e0774013-6495-4391-876d-0cfbcee54d7f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "f5821dbd-910c-483f-b215-3bed2c76eb5c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "364cf0a6-825c-444a-9f95-30bbd947d309"
            }
          }
        ]
      },
      {
        "id": "beb9b383-f38e-4860-b7ef-7a26a7ef4837",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "743c0f88-b87c-4566-850e-bd9c86f20e30",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3d7022c1-dba5-4133-a722-6fe629cb9a98",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "79afbbd2-34ae-4177-92f1-9a9d096c222d",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f67e1dd7-87a4-4a9d-8744-25a6fa64450b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b28dcd6f-2217-4346-8c2a-23bc0ad4d599",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 219.11619718309854,
      "responseMin": 7,
      "responseMax": 7211,
      "responseSd": 769.1719051010668,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1689381943196,
      "completed": 1689382017086
    },
    "executions": [
      {
        "id": "dced1db7-dff8-4f97-a210-1e1cf2d83db9",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5fc7cdde-659c-49cc-8a66-c5a00a9b43b2",
          "httpRequestId": "739d7a14-08c0-40eb-84de-2df1987af39a"
        },
        "item": {
          "id": "dced1db7-dff8-4f97-a210-1e1cf2d83db9",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "3005f4e1-16aa-491e-a1c3-d15a8e5d9b71",
          "status": "OK",
          "code": 200,
          "responseTime": 59,
          "responseSize": 0
        }
      },
      {
        "id": "0792ba0d-deef-44a6-91cb-89208c2a4b53",
        "cursor": {
          "ref": "f1178d69-9c62-40c3-a8d5-514bb3ed3990",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "39c30d45-bb9d-4b95-9ad2-b1ec28064112"
        },
        "item": {
          "id": "0792ba0d-deef-44a6-91cb-89208c2a4b53",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "f463c1fb-5805-43ba-983a-05379cfad23d",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1d60ad3a-91c6-4270-92f2-ff75deb102bd",
        "cursor": {
          "ref": "21bcd711-07a8-45e8-822f-a5607e8c687f",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "567decd0-eac0-4928-8a59-069694354434"
        },
        "item": {
          "id": "1d60ad3a-91c6-4270-92f2-ff75deb102bd",
          "name": "did_json"
        },
        "response": {
          "id": "2a3993de-30eb-4c50-b0d1-854c8dad9308",
          "status": "OK",
          "code": 200,
          "responseTime": 360,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d514b58d-aced-4ae1-84c1-18861e7f1b8a",
        "cursor": {
          "ref": "98f5ec6e-5d87-4594-b3d1-679d66fff49e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a6a1dce-0789-4916-8eb0-49c667d3b58a"
        },
        "item": {
          "id": "d514b58d-aced-4ae1-84c1-18861e7f1b8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4535b011-807b-47e8-938f-00dbcadd65f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1210,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d514b58d-aced-4ae1-84c1-18861e7f1b8a",
        "cursor": {
          "ref": "98f5ec6e-5d87-4594-b3d1-679d66fff49e",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "8a6a1dce-0789-4916-8eb0-49c667d3b58a"
        },
        "item": {
          "id": "d514b58d-aced-4ae1-84c1-18861e7f1b8a",
          "name": "did:invalid"
        },
        "response": {
          "id": "4535b011-807b-47e8-938f-00dbcadd65f6",
          "status": "Not Found",
          "code": 404,
          "responseTime": 1210,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54854bf-39f1-4eec-98ea-943b2dca19ba",
        "cursor": {
          "ref": "e4335be0-a029-4274-bd32-78e4252d77fa",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "350b30df-04e0-4528-b85b-e885e7e74955"
        },
        "item": {
          "id": "a54854bf-39f1-4eec-98ea-943b2dca19ba",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "b73f1f20-1c44-4e26-bf62-ece58898c790",
          "status": "Not Found",
          "code": 404,
          "responseTime": 33,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145d625e-163e-45e1-8bde-9555d9cdb256",
        "cursor": {
          "ref": "b9dd984d-46c4-432f-828e-fcedaacaa17b",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5082bee0-91b0-4612-9175-68bd86e643c0"
        },
        "item": {
          "id": "145d625e-163e-45e1-8bde-9555d9cdb256",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "f4639399-d0f8-48b7-b401-ed9329e3f337",
          "status": "Not Found",
          "code": 404,
          "responseTime": 40,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bd43ede-93aa-4f8b-b7c2-b255869d51e4",
        "cursor": {
          "ref": "d6523cf9-4ca1-4794-a5a6-469dd36ca9b4",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "6f0a1038-4ee9-415d-bc34-258fb59ee8ca"
        },
        "item": {
          "id": "1bd43ede-93aa-4f8b-b7c2-b255869d51e4",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "e47f7e9f-332b-46c6-bb93-dbb6a6a51324",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22253a02-4c75-4ce7-aa14-337c2cdf9617",
        "cursor": {
          "ref": "8b4c6c56-f40d-48b8-9ef2-38781717716a",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "f4a34460-49da-4956-b38f-9bee91db0af3"
        },
        "item": {
          "id": "22253a02-4c75-4ce7-aa14-337c2cdf9617",
          "name": "identifiers"
        },
        "response": {
          "id": "315121f5-3b6a-4f66-a84c-c84c4d6b1deb",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2581c9cf-23b2-4125-be00-1dd5ce9b4dae",
        "cursor": {
          "ref": "6f870ec8-8154-46a3-a375-b13c05858027",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "18cbb96a-47b8-4305-91d7-732129454f26"
        },
        "item": {
          "id": "2581c9cf-23b2-4125-be00-1dd5ce9b4dae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "96f708f1-fc87-4646-a170-6e5eb947a2e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "629d851a-b5cc-4236-88d1-34c798266f11",
        "cursor": {
          "ref": "81920394-a3e4-4d6b-9702-20ab00c331ef",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4a672e89-aeab-4e10-8375-4774a8990470"
        },
        "item": {
          "id": "629d851a-b5cc-4236-88d1-34c798266f11",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "98e0857d-acd6-4118-9564-b15bd55fdacc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcd0b77-35ce-4936-9e5d-4c57a352d953",
        "cursor": {
          "ref": "87769cba-c3e0-4878-9cc6-e3c0dc35493c",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "c11b5240-2193-4757-9efa-1dc073223779"
        },
        "item": {
          "id": "5fcd0b77-35ce-4936-9e5d-4c57a352d953",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "39e2c481-eca8-41ac-b9b4-fe508793f845",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "676fe1bb-48ee-4631-8f9f-700405fae910",
        "cursor": {
          "ref": "5a0f5b88-e315-43ab-95f3-bb608591f340",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "65ffb54c-4930-4d95-a1e0-b3536780f5d1"
        },
        "item": {
          "id": "676fe1bb-48ee-4631-8f9f-700405fae910",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "bacbe861-33ae-4519-883f-03be7eb2aa28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdecea3e-8735-408d-82b1-66b4fc7af672",
        "cursor": {
          "ref": "8ae6b8e0-da91-4fd3-89f8-85e6c7302fdf",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "af0835ba-f3f2-45ed-8214-6542759a6722"
        },
        "item": {
          "id": "cdecea3e-8735-408d-82b1-66b4fc7af672",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "7146bf76-5afe-4799-9256-6ba7de3f9d42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bd40b61-5027-4ba0-9d5d-39a0fabc276c",
        "cursor": {
          "ref": "fdb29e47-71a6-4378-a732-7ec67a2f9c8d",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "40d56e9d-44cb-481a-b953-7516c6048afb"
        },
        "item": {
          "id": "0bd40b61-5027-4ba0-9d5d-39a0fabc276c",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "6cc33bb1-bc0a-46a9-840a-c350c02ffe92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c00587c-921f-4542-b50d-7a376fa3d458",
        "cursor": {
          "ref": "98e80ba4-b662-44ab-9888-75a1707ae123",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "72f85900-700e-460d-b1f2-1077baf915ab"
        },
        "item": {
          "id": "6c00587c-921f-4542-b50d-7a376fa3d458",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "908868bd-d382-4ef6-b70c-a68dc6da8d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b76ea6-762b-48f9-aaf2-5bce2d2f1d14",
        "cursor": {
          "ref": "b71e5c33-79d4-4d73-a3e5-0946ad10720f",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8ff69f0d-4609-4336-adf6-ddb2b6b4b5f0"
        },
        "item": {
          "id": "41b76ea6-762b-48f9-aaf2-5bce2d2f1d14",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "13e554e8-6cb0-4208-9150-ce0eef23da3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c37396d-cb71-4955-a715-7cbda20df8b1",
        "cursor": {
          "ref": "188437b2-0889-4c7c-877f-f45cf6f94d08",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2aa6e1ef-da88-4e89-924e-ef423044f29e"
        },
        "item": {
          "id": "2c37396d-cb71-4955-a715-7cbda20df8b1",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "78361693-0aae-45c7-bf5c-6638a09574c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c4213-209e-42b7-99a8-9202fb6db275",
        "cursor": {
          "ref": "53df414e-d15f-4613-b93f-b6b9e0136ade",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "a06366e6-76eb-49a0-bbd9-877956278755"
        },
        "item": {
          "id": "009c4213-209e-42b7-99a8-9202fb6db275",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "4275893b-5b21-4a2e-a800-af2cc5006b7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6610a486-27e9-49e2-a936-29a85f0d3400",
        "cursor": {
          "ref": "76bb8dd6-3282-47cc-9328-871c21d0052e",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "df3577dc-470e-4d40-b9e0-410922bf4605"
        },
        "item": {
          "id": "6610a486-27e9-49e2-a936-29a85f0d3400",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "13469eb8-f0e4-4104-b64a-2eaf90fcdea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e89261a6-cf76-48b8-9b45-05a523621256",
        "cursor": {
          "ref": "54360ad1-a590-44bc-85ff-018782e303dd",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "6b977211-9336-44e4-b064-9ef05123c7c1"
        },
        "item": {
          "id": "e89261a6-cf76-48b8-9b45-05a523621256",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "5c330745-49cc-4bec-9c4f-87bf491597ba",
          "status": "Created",
          "code": 201,
          "responseTime": 665,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:20)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:20)"
            }
          }
        ]
      },
      {
        "id": "8c6f1f89-b88e-48e0-b335-9c0a1545c09c",
        "cursor": {
          "ref": "c9828d4d-6f7a-4965-9d02-5977946cb7a0",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "8c1f95da-8d7a-433a-9efe-46540983503c"
        },
        "item": {
          "id": "8c6f1f89-b88e-48e0-b335-9c0a1545c09c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "70ecc60f-0d72-4610-b79a-7864c42d9739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "793948ab-b12a-45ec-af98-10493e6b63d9",
        "cursor": {
          "ref": "8e5b9bc6-790f-4613-bf91-5e21fbc50151",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "12c88fd9-7d8c-45cd-ac2b-162408ddcfb9"
        },
        "item": {
          "id": "793948ab-b12a-45ec-af98-10493e6b63d9",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "648af58d-c5e0-486b-8399-ea8c1ec56818",
          "status": "Created",
          "code": 201,
          "responseTime": 7211,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:22)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:22)"
            }
          }
        ]
      },
      {
        "id": "b03b1469-3b8c-4aaf-853e-747daf07f2bc",
        "cursor": {
          "ref": "8c7e42fe-f480-45a0-808d-93b90aa1ba25",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "f0fbefef-95dd-4fe8-bfd0-f56b1df7f175"
        },
        "item": {
          "id": "b03b1469-3b8c-4aaf-853e-747daf07f2bc",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "7748bb2e-a733-4a75-b9ad-c2b4675b7593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24613169-fb1a-429a-a022-215e6ff93eec",
        "cursor": {
          "ref": "6db4ce9a-72a9-4dce-bcdb-db689ffe60c9",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "c7f18a18-b905-437a-95fc-058011298daf"
        },
        "item": {
          "id": "24613169-fb1a-429a-a022-215e6ff93eec",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "90e35aa3-5006-4f7f-8d98-18a5cbb8388d",
          "status": "Created",
          "code": 201,
          "responseTime": 3031,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:24)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:24)"
            }
          }
        ]
      },
      {
        "id": "2dc14e89-2628-4985-94cb-b65534e5d697",
        "cursor": {
          "ref": "5e06d614-f6d3-4dc5-ac6b-d21caca9a129",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "78472ff2-0607-4b82-bb63-daa4dd02fec6"
        },
        "item": {
          "id": "2dc14e89-2628-4985-94cb-b65534e5d697",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "1475d8c3-0e3d-46eb-b631-4769744f655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d7e89c7-f7da-4919-a1ca-38bff6247454",
        "cursor": {
          "ref": "46c262e8-fcb9-4c68-9714-41f2128c4fc4",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "9b783559-1143-4148-9c03-b2acade8ba76"
        },
        "item": {
          "id": "3d7e89c7-f7da-4919-a1ca-38bff6247454",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "754b71e1-e0fc-45a7-a266-0a2ccd1ab370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35a00893-d7f0-4f86-aefa-2e28a57890d0",
        "cursor": {
          "ref": "8ff91a0f-28f0-4603-aa76-9535d6a900a7",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "f9dcc690-8595-4341-8376-8729c9676289"
        },
        "item": {
          "id": "35a00893-d7f0-4f86-aefa-2e28a57890d0",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a67065b7-6049-429f-922e-376052299323",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a054798-0e55-4932-a92b-a68e8a986ac8",
        "cursor": {
          "ref": "fbb22f15-8b26-4537-92c7-cd3f7f24e56e",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "46f18574-2a96-470f-8b89-680a177fc19e"
        },
        "item": {
          "id": "3a054798-0e55-4932-a92b-a68e8a986ac8",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "5a850afe-503b-4216-a1da-658b082bbd07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176aea0e-89bf-4510-a843-a568a1e6cd9e",
        "cursor": {
          "ref": "b65d27a5-0767-46f0-9306-18b9bdbefce4",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2c3a317e-535c-44ce-9644-8c76ec1ea46a"
        },
        "item": {
          "id": "176aea0e-89bf-4510-a843-a568a1e6cd9e",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "8fcde721-f1f8-486c-9a3b-f0a703ba1677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11e1f05c-1b4e-4a7a-b98d-e51cee8e8f06",
        "cursor": {
          "ref": "a552f54b-b1eb-4242-a141-12126650b15e",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "7359c031-7a37-4d07-bf5a-7952cb7abb34"
        },
        "item": {
          "id": "11e1f05c-1b4e-4a7a-b98d-e51cee8e8f06",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "4677c3fe-2d9b-46e0-a490-f21bba5a88c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1984c7c3-b950-4a75-96f8-3b204e6da39c",
        "cursor": {
          "ref": "9faccf37-0d92-40eb-a740-85c9e050e4f9",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "7145b68b-f3dc-4bb5-8a15-5af7c183cd9b"
        },
        "item": {
          "id": "1984c7c3-b950-4a75-96f8-3b204e6da39c",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "90091d2c-9720-429b-894e-27ffbdac5b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3186613c-7cda-49e7-a171-98cca1a9fde4",
        "cursor": {
          "ref": "1e9c1898-86d6-44e0-b99c-de3f1ffc96e0",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "fc960e08-528b-4797-8857-2fce8dc021c7"
        },
        "item": {
          "id": "3186613c-7cda-49e7-a171-98cca1a9fde4",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "aa4d1fd5-0c28-4f73-a35e-71ee827edf2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49968ca5-14a7-44cc-8e83-6b4552b4c338",
        "cursor": {
          "ref": "5ffacffe-e235-4c03-9b12-794d795d782f",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "0e71432d-2769-4d5b-b967-02b48001f6a2"
        },
        "item": {
          "id": "49968ca5-14a7-44cc-8e83-6b4552b4c338",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "560fc840-dea7-4185-8658-dfbf97f00271",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd7cd09-777d-4d42-bf9b-4d87b59323a3",
        "cursor": {
          "ref": "cc22763f-b79e-4890-8a8a-e9f2b00a3b56",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "50c7533c-de2e-4008-98e5-492b22eef650"
        },
        "item": {
          "id": "2dd7cd09-777d-4d42-bf9b-4d87b59323a3",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "b0cab810-6320-4d0e-ba53-cb60cb49a52f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc3a6b0b-4766-4b67-a990-36b26ea2eb59",
        "cursor": {
          "ref": "599e66ff-6dc0-44f6-afee-de576cca013e",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d840ff8a-141a-4a6e-9823-3904627a1cda"
        },
        "item": {
          "id": "bc3a6b0b-4766-4b67-a990-36b26ea2eb59",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e0229451-9e50-4b3c-b993-707a915504d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b18ca4d-61f5-4900-8639-a07b46f60982",
        "cursor": {
          "ref": "9c841e00-9fc0-4773-a96f-b3505612ba93",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "244cc940-d9e4-4b82-8265-0ce2093c40d4"
        },
        "item": {
          "id": "1b18ca4d-61f5-4900-8639-a07b46f60982",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "fe83a4af-f7ff-4c13-a8b2-6841544d4280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83cdbef3-f27d-4bb1-8a9a-5b643e7df89f",
        "cursor": {
          "ref": "0627795e-19e9-49c4-a89d-9643ef711de3",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "5e85be9d-476d-46d9-9644-1bee9a122923"
        },
        "item": {
          "id": "83cdbef3-f27d-4bb1-8a9a-5b643e7df89f",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "666c6b7c-36a5-40a1-bba2-7c2a8f8ada93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2af2905-b11e-4cfd-a332-efd0f39ff5d7",
        "cursor": {
          "ref": "71b12898-5506-4fe2-b262-6e04394be7aa",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "8b1702a6-6c3b-457e-a9bd-776c3a8b2f3e"
        },
        "item": {
          "id": "b2af2905-b11e-4cfd-a332-efd0f39ff5d7",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "f0392e28-e25b-4a4b-8881-cc063d4d7591",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cea2b79-c1d7-4f1f-a364-29c4524ca710",
        "cursor": {
          "ref": "5508e16d-32c7-49e0-b80a-6c5bff058458",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "3fe0850c-0934-4088-8fdd-e1d5b186f795"
        },
        "item": {
          "id": "7cea2b79-c1d7-4f1f-a364-29c4524ca710",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "aedab564-2269-442f-b1a5-619bc3a3b219",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9341536a-7fca-4fa6-863c-4c0830338bf1",
        "cursor": {
          "ref": "64633b22-c41e-41dc-ac2a-764a1a1cddcf",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "7c83dc83-2a68-486a-8953-18b033e076a4"
        },
        "item": {
          "id": "9341536a-7fca-4fa6-863c-4c0830338bf1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "97e2d352-bfc8-4564-8aaf-0ed0998a850e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2efc21c9-203d-4219-94b1-57ec5689ce8e",
        "cursor": {
          "ref": "9187dfff-9c13-4c4c-86b2-779ac4053daf",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "178a9fc7-0644-43d9-917b-3e10f17725f9"
        },
        "item": {
          "id": "2efc21c9-203d-4219-94b1-57ec5689ce8e",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "0d4ed59d-495c-4cad-b452-73c5fddbc1be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10aa1f2b-f4c8-4f51-87e2-6f66bbd33cb0",
        "cursor": {
          "ref": "ce1e7f01-a7a2-406f-bd07-12d400fc26df",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3d8cfa23-a19f-458d-8085-e10f416f88f5"
        },
        "item": {
          "id": "10aa1f2b-f4c8-4f51-87e2-6f66bbd33cb0",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "10181021-97df-4620-b72e-78fc6fb673a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b6642c8-3e66-4050-8199-fd13c2a6b993",
        "cursor": {
          "ref": "78ec1623-dee1-4069-b628-86967211d21b",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "6f127d4b-9b89-4360-ad57-5cc49d7a2eab"
        },
        "item": {
          "id": "8b6642c8-3e66-4050-8199-fd13c2a6b993",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "73951b95-52a6-4b8a-907c-03fbbdc5a866",
          "status": "Created",
          "code": 201,
          "responseTime": 2751,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:43)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:43)"
            }
          }
        ]
      },
      {
        "id": "ed569931-1d27-49c7-b2b2-d7f22fc56902",
        "cursor": {
          "ref": "802047e8-0a5d-478b-956e-ac03e3967617",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "656e009f-2c31-4a1a-b2e7-fc72989950a8"
        },
        "item": {
          "id": "ed569931-1d27-49c7-b2b2-d7f22fc56902",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "c1e679c6-93bb-4c27-8fed-d5c7e4b6f23e",
          "status": "Created",
          "code": 201,
          "responseTime": 2681,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:44)"
            }
          }
        ]
      },
      {
        "id": "e2e931e7-1754-4e67-b9ad-458cc97a86db",
        "cursor": {
          "ref": "4d44fc4c-2eb8-4234-87ab-1ef97f136124",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fc86f9fe-70a1-4786-833a-4c5480087ea0"
        },
        "item": {
          "id": "e2e931e7-1754-4e67-b9ad-458cc97a86db",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b7f5f978-6466-4fa9-b31a-d38c9d6a45e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d582812-d5c6-4f70-8e7e-996224aa0605",
        "cursor": {
          "ref": "4442714e-9f9a-4aec-aa81-b1b53adcc2c6",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3c89f41a-84fa-4294-bd4f-7c5cfbe1c1da"
        },
        "item": {
          "id": "0d582812-d5c6-4f70-8e7e-996224aa0605",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "941bc1b0-93bf-47bc-b024-6791f6bf0ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df64898-5ad8-4a49-8493-c311d54062a7",
        "cursor": {
          "ref": "0b57b9b6-0520-4950-bced-cf5ee81488f3",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "da8019a9-efb2-4fe3-9188-b9a3f06ba26d"
        },
        "item": {
          "id": "6df64898-5ad8-4a49-8493-c311d54062a7",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "53108140-7bf4-46df-8331-a955cdb1043b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79cab509-dc26-4917-b95f-02cbdeb2f807",
        "cursor": {
          "ref": "a4e9d8a5-0fd2-4ca8-b41b-6800354577c1",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "64d216d1-4d81-42fc-a3f4-1ac8917c366c"
        },
        "item": {
          "id": "79cab509-dc26-4917-b95f-02cbdeb2f807",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "dd6ec69d-62c8-4f65-8b45-b318fa0d9447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8edc584-3af5-4a08-ac79-1a60f8bf1d64",
        "cursor": {
          "ref": "4cd7d926-fece-42cf-b297-ea814a75fa17",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "91657a61-b047-4e96-9d48-1757eede2439"
        },
        "item": {
          "id": "a8edc584-3af5-4a08-ac79-1a60f8bf1d64",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9a92c9e7-1289-4e4a-b7d4-a3231b6917af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d18125b-4189-4b7c-940e-f5c04a3efe2e",
        "cursor": {
          "ref": "1f40ed7b-2c2c-4701-bd4c-b91f0aa836b6",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "6ea135c6-bffe-4c65-bf13-1e04dcdd4035"
        },
        "item": {
          "id": "8d18125b-4189-4b7c-940e-f5c04a3efe2e",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fb058dd4-4a16-45ca-93d9-6bace8882a98",
          "status": "Created",
          "code": 201,
          "responseTime": 2652,
          "responseSize": 969
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:50)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:50)"
            }
          }
        ]
      },
      {
        "id": "5facc14d-6163-433a-be18-bdc5530a9b1a",
        "cursor": {
          "ref": "528db9f2-6b7d-40b1-a4b4-b834854b19c9",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "455d9b5e-cb11-4e86-94a3-471ee76cc20e"
        },
        "item": {
          "id": "5facc14d-6163-433a-be18-bdc5530a9b1a",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "73a45af2-1d80-4970-85ce-559d5bc8726d",
          "status": "Created",
          "code": 201,
          "responseTime": 4186,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 201",
              "stack": "AssertionError: expected response to have status code 422 but got 201\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:51)"
            }
          }
        ]
      },
      {
        "id": "afc6f97f-2fe7-43f6-8d1b-c54da46f29f9",
        "cursor": {
          "ref": "694adfc2-b5ed-43a0-ae88-06ef4de3ea77",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2eeee5e9-4318-4557-8000-5890e56b1341"
        },
        "item": {
          "id": "afc6f97f-2fe7-43f6-8d1b-c54da46f29f9",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "45135f8b-78ce-4e4c-adcd-d0202b809d75",
          "status": "Created",
          "code": 201,
          "responseTime": 2960,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:52)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:52)"
            }
          }
        ]
      },
      {
        "id": "3d99db25-0deb-4c33-8c01-1b983b048671",
        "cursor": {
          "ref": "f218a209-fa31-4791-be29-5deaf68b7aaf",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "37c4383d-7a51-4989-82cd-32d2e850b5e3"
        },
        "item": {
          "id": "3d99db25-0deb-4c33-8c01-1b983b048671",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "f7e10083-8d81-4020-8046-3678a44febfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d1da042-b666-4488-ba64-491722336879",
        "cursor": {
          "ref": "b3a64615-d198-4cef-a3bf-bc5099a28f48",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "d407d5b4-a125-46de-8a9e-cef1afc0c003"
        },
        "item": {
          "id": "8d1da042-b666-4488-ba64-491722336879",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "737a3eca-54fc-402d-a9a7-03cf3ac1c966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 57,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6349c5f-08a9-4f08-8e57-ba4749150c17",
        "cursor": {
          "ref": "256cceec-3c90-48de-a2db-a2c5b09f5b6e",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "e98bfa0c-2be7-47ad-aef2-3d6194992152"
        },
        "item": {
          "id": "b6349c5f-08a9-4f08-8e57-ba4749150c17",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "1a4b9f77-64d1-4fed-be8a-22299b08f115",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bfb748c-0bd2-46cc-80b4-a62666a49e20",
        "cursor": {
          "ref": "1853a3ae-fa91-4f7d-9c25-2a198658f9bb",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "80686eb0-be02-4668-8000-027ecee38fdf"
        },
        "item": {
          "id": "6bfb748c-0bd2-46cc-80b4-a62666a49e20",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "83960f52-28a0-4759-9927-2c3d683a184f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804a40b5-7599-4b28-a76a-ca7fb0c5ccc2",
        "cursor": {
          "ref": "03c6a34b-469b-4d5c-9e6d-bfcbbe1f51cc",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e46b3452-a99e-4494-9567-6293850cd37e"
        },
        "item": {
          "id": "804a40b5-7599-4b28-a76a-ca7fb0c5ccc2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "ee85fa5d-c2e4-4322-bc2e-197a8ab57bb5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 184,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d4afb92-a534-44e7-9d09-902a46e819c8",
        "cursor": {
          "ref": "88856c03-117d-466c-8154-ae255d700aa8",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "ff7a5269-5a22-424d-8fb3-d9e99efb182a"
        },
        "item": {
          "id": "3d4afb92-a534-44e7-9d09-902a46e819c8",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f8483746-6790-4bb7-97f8-9f577c8d3d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3e636ca-779a-4ab9-beeb-360071c1a579",
        "cursor": {
          "ref": "f64c994b-23e8-4709-b389-1cca8dfdf455",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "5e9700d3-3b2b-49fa-9227-f297f9b5ec17"
        },
        "item": {
          "id": "e3e636ca-779a-4ab9-beeb-360071c1a579",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "e0aaf717-ebce-43c1-8da6-c0ae01613f84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62612c7e-fe1b-4ed2-b600-f55402494b37",
        "cursor": {
          "ref": "d3c5455c-c968-4c40-bc35-347f820e930e",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1c5c2e18-3d30-4436-9b5a-43fb22674986"
        },
        "item": {
          "id": "62612c7e-fe1b-4ed2-b600-f55402494b37",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "f870197b-19c2-495a-bb97-3bdd24c09e4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6391f2be-00be-4b7a-8b91-a7d40619b9bd",
        "cursor": {
          "ref": "e176550a-c0dd-4a33-bb08-d418af7cc255",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e207bbe0-670d-4ac4-b4ad-43405aefb5f1"
        },
        "item": {
          "id": "6391f2be-00be-4b7a-8b91-a7d40619b9bd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "1b4e3ecb-920d-473b-9add-bea11545fd89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dd55526-c8fb-46f6-9162-06d8ee22520a",
        "cursor": {
          "ref": "0701546f-0570-4c1e-9504-32b85b153e28",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a8a97668-70b1-4899-a2d7-a87ee49771b1"
        },
        "item": {
          "id": "2dd55526-c8fb-46f6-9162-06d8ee22520a",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "ae3a2a96-896a-4ad2-b021-a57e298f0376",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3622c469-d0b3-4cc4-920a-598ceb50ef71",
        "cursor": {
          "ref": "c46051be-adf4-4d24-8a55-c9351890da98",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "1a73b987-dc3d-4a13-87de-dd91b68d762d"
        },
        "item": {
          "id": "3622c469-d0b3-4cc4-920a-598ceb50ef71",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "1f366189-b7bb-49b9-b128-c1ca32f9ee18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a822bea6-35ea-4d8d-bfd5-29e0d5fd5988",
        "cursor": {
          "ref": "10c1adc8-0aad-41c4-a08c-6bfe671f39f1",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b8ed4572-caf3-43d7-b36e-60318fde1265"
        },
        "item": {
          "id": "a822bea6-35ea-4d8d-bfd5-29e0d5fd5988",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dbaa10de-c793-41e7-b0bb-1834770dbb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba7230ff-31ce-4c86-aa0b-e51fdb94b07e",
        "cursor": {
          "ref": "556f77bd-d19f-4a05-ace4-c1001af2ca13",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a81d7429-25c7-4fd4-ab0b-10936a16ebdb"
        },
        "item": {
          "id": "ba7230ff-31ce-4c86-aa0b-e51fdb94b07e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "8d3ae536-2e98-48fc-9fa9-9e5e00b569cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58102af3-bdab-4b67-98da-1c013aa85b79",
        "cursor": {
          "ref": "b97024ed-4cf0-4596-be11-2c6f5ee15339",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5a475e42-c017-46cf-a3e8-53d4fe26834f"
        },
        "item": {
          "id": "58102af3-bdab-4b67-98da-1c013aa85b79",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "febf798a-0481-4ef4-86df-3ae5b213fdda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697a3da6-03bb-49ce-8aee-65d1a7947ffc",
        "cursor": {
          "ref": "29855a37-24cd-48e0-a06a-c43b826de3d6",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "37eeacdb-3017-4def-86d4-88fda1992dcb"
        },
        "item": {
          "id": "697a3da6-03bb-49ce-8aee-65d1a7947ffc",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "6f2e1152-2092-4cfb-ba9f-beaec4d746b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2759a2cf-fcd7-493a-aef6-bdc49406b4f4",
        "cursor": {
          "ref": "8226b287-5f84-40a5-9702-e668f7b86cfc",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "613ab2c6-50b2-41a2-b403-8ace7549ff21"
        },
        "item": {
          "id": "2759a2cf-fcd7-493a-aef6-bdc49406b4f4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "ef014fef-2af0-4249-8a00-2cebe2b2607d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 49,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b29620e0-7b50-4f4b-8800-a3e3df0ac584",
        "cursor": {
          "ref": "94384525-092b-4c6c-8a96-13a590693007",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "3e90ce12-65eb-4917-aca4-40a00f5db399"
        },
        "item": {
          "id": "b29620e0-7b50-4f4b-8800-a3e3df0ac584",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fb9ce911-6bd5-4b17-8e56-85e8be8107be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39678820-0cfb-4a7d-8177-a85e67e2af92",
        "cursor": {
          "ref": "4064a4be-3498-42ef-8983-d3a49cc7290b",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "99efeda7-c2a3-4b46-bc83-b310a6c25801"
        },
        "item": {
          "id": "39678820-0cfb-4a7d-8177-a85e67e2af92",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "caa25a95-828e-4f3f-a5d7-2bfdda9d2fc9",
          "status": "Created",
          "code": 201,
          "responseTime": 3545,
          "responseSize": 977
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:70)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:70)"
            }
          }
        ]
      },
      {
        "id": "9e7e36bf-349b-45d6-845c-5eadfe7fe5b1",
        "cursor": {
          "ref": "01d71100-3c6b-469b-8662-57ee6b1447da",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "100ecf0b-7711-4456-8cd1-28cb61462817"
        },
        "item": {
          "id": "9e7e36bf-349b-45d6-845c-5eadfe7fe5b1",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f7eeacf9-236b-495c-8e94-ff857ac39c2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f0af8a-0f66-4cf6-a6c3-48960a3b1007",
        "cursor": {
          "ref": "21ba4520-9bc8-48f0-ba7a-c43e7a992ea3",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "92cf79b4-a256-4bc0-a52e-35e96f74ae0e"
        },
        "item": {
          "id": "94f0af8a-0f66-4cf6-a6c3-48960a3b1007",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "20d56220-64b4-49c1-b8dd-6525795902bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0b0aae-4320-47ad-b125-837b1bdc0fc9",
        "cursor": {
          "ref": "874c57dd-2e9f-4ac2-8b82-9e9aa7cb8dbe",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "50824b90-9a59-41d3-b7a6-d0dcb64967e1"
        },
        "item": {
          "id": "cc0b0aae-4320-47ad-b125-837b1bdc0fc9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "2c86aed2-41db-4aea-ab72-1c43add6ff3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03fb8c17-2102-457d-9852-f5e801067a0b",
        "cursor": {
          "ref": "2fba9f2d-c143-4a74-9d50-72827804053c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "3f5aa697-117b-4d5f-bff9-f8f18fbe993f"
        },
        "item": {
          "id": "03fb8c17-2102-457d-9852-f5e801067a0b",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "83456872-1a02-41ef-bf85-12e461a9d90f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ccbf82a-1282-4618-be85-73952733535b",
        "cursor": {
          "ref": "be959eab-c296-4690-910a-76d00ce624c0",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0a13bb17-24ee-4f86-91d0-7347a09aa768"
        },
        "item": {
          "id": "4ccbf82a-1282-4618-be85-73952733535b",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "68fc3ba1-3543-4d3f-bab7-1508fbba8a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1cb40a7-ab50-4979-aaf6-f9fef909f743",
        "cursor": {
          "ref": "31108700-7459-4532-90c9-c3ab705b8cac",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "5954931d-264b-4b71-9d16-270b0a71b5ea"
        },
        "item": {
          "id": "d1cb40a7-ab50-4979-aaf6-f9fef909f743",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "75cb910a-184b-41bc-8fc4-5512de0a2001",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce2b2bf4-74ca-4c03-bbe8-302f6ab0af6c",
        "cursor": {
          "ref": "d05f9578-40c4-4d34-86e5-4535fd83107e",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "0940b275-2ec9-46dd-a45d-582ba466d168"
        },
        "item": {
          "id": "ce2b2bf4-74ca-4c03-bbe8-302f6ab0af6c",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "14172ff1-2aeb-4978-bea2-3dc87cf32217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35829430-bfa0-457d-aa58-c00c418998d2",
        "cursor": {
          "ref": "8fea6d61-2986-41ea-a511-efd4e4b83cac",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9ed16b95-51b5-4979-90c1-d77714f0bbef"
        },
        "item": {
          "id": "35829430-bfa0-457d-aa58-c00c418998d2",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "fffe55aa-fc8d-421c-a866-a6f5bad6ba0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d57d8d2-5105-4cd9-a7a0-1616ec37aea9",
        "cursor": {
          "ref": "5ad4ab64-8d4f-4f50-a3cb-fa3ccdb12195",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "0baf20ba-7631-4c91-a563-26551ff367a4"
        },
        "item": {
          "id": "1d57d8d2-5105-4cd9-a7a0-1616ec37aea9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "ccb9796a-4dea-4052-aa10-bc0735072683",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f37c8b-f64c-4134-9324-354794eaddc3",
        "cursor": {
          "ref": "d385df2a-27f4-4c9a-847d-cb5162adf17e",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "97dc55fd-e458-4cbe-8660-16bcec886c38"
        },
        "item": {
          "id": "c3f37c8b-f64c-4134-9324-354794eaddc3",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "c2b4323c-1dec-4cab-b4bd-3c3cbb142018",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fbc2276-af73-4736-bae7-fc9964860e2e",
        "cursor": {
          "ref": "e00ec5a6-6703-46e9-bd9f-63d371a0cbc6",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "9965e413-bb3e-4fb9-bfe1-14c28d2f6c75"
        },
        "item": {
          "id": "0fbc2276-af73-4736-bae7-fc9964860e2e",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e25db492-be15-4341-a093-4016fdde93ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 28,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48075ae0-2018-40be-9bc6-9454d83dcfec",
        "cursor": {
          "ref": "7584f774-f326-4c1a-bb5c-4cbe3c4f1680",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "ca3f9dad-890c-4672-ba8c-ea82b15ece95"
        },
        "item": {
          "id": "48075ae0-2018-40be-9bc6-9454d83dcfec",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2dd4fd7b-74ea-4148-9b9d-d97ffbe899ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004a846-f368-4535-96e3-4fbf86b44390",
        "cursor": {
          "ref": "ca5acbec-e299-4185-9eba-6f4853da336a",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "2e319093-5703-40b7-95ba-0a4bb7ac8032"
        },
        "item": {
          "id": "0004a846-f368-4535-96e3-4fbf86b44390",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e796e1da-ae75-4334-856f-4f708893400c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094749f2-007b-49c1-9d64-21b757668b00",
        "cursor": {
          "ref": "ecb7e8b9-43c8-4622-a4c5-db89362db128",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b237598-90e1-40a6-8b76-354368ff6cbc"
        },
        "item": {
          "id": "094749f2-007b-49c1-9d64-21b757668b00",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "ab8169c1-e8f8-4414-9b13-81810b1333ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21f9a03d-c751-4b49-adfc-14ddf40561e4",
        "cursor": {
          "ref": "e403e287-eae3-421a-a769-acf0397c179c",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "760411ff-90f1-477e-9b73-8e5bb2e08a2d"
        },
        "item": {
          "id": "21f9a03d-c751-4b49-adfc-14ddf40561e4",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "108acfd0-9d22-4511-8cfe-7aaae948b2f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17c92b77-c4ce-4c19-9666-b562af54e0ea",
        "cursor": {
          "ref": "36903534-4984-444f-8c7d-09e988b61a7d",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "5a9078a4-bb8c-4e02-9890-3644b0ef1375"
        },
        "item": {
          "id": "17c92b77-c4ce-4c19-9666-b562af54e0ea",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "91dc9e6b-fe96-4cea-9dbf-706ddcb004a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7026aa5b-c1d7-4a13-b64e-4ad036ca12a6",
        "cursor": {
          "ref": "a9b20adf-772a-4d04-937a-1b4c2cd12e1b",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "f60adfee-a4da-421a-95e8-4a83183eeef5"
        },
        "item": {
          "id": "7026aa5b-c1d7-4a13-b64e-4ad036ca12a6",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "9269a864-f337-4c54-a046-b13cadbfd3d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f18af7a-75c9-4eb9-b616-ce7dbdd505ad",
        "cursor": {
          "ref": "f891c7aa-d68b-4434-a060-fff83d548c75",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e982b73d-1273-4ee3-a809-e420c170423d"
        },
        "item": {
          "id": "7f18af7a-75c9-4eb9-b616-ce7dbdd505ad",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fcdd30d2-0599-4c12-98b8-d61b727519fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 136
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9087d0e4-a93f-4ee5-b15a-8392bcfd566a",
        "cursor": {
          "ref": "3a8b3ef4-2b28-4b6e-a2c2-fe6b7b6774bc",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "a8d541c3-268a-4afc-892d-ac82d020938c"
        },
        "item": {
          "id": "9087d0e4-a93f-4ee5-b15a-8392bcfd566a",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b09f327b-15d5-4d02-b665-46e4843e899e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1050072-8ea4-4a5c-9cf4-a7d8d8a2e281",
        "cursor": {
          "ref": "d7b1d281-2ed6-4f4d-aff1-3842f60db157",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "914fef75-ea17-4e4e-a6ef-56432aec5dfd"
        },
        "item": {
          "id": "e1050072-8ea4-4a5c-9cf4-a7d8d8a2e281",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "24aa699f-48c6-402a-9327-184903a25d9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca7d3a1-58a4-44a3-b0eb-ee9a726e55f4",
        "cursor": {
          "ref": "5e902538-4338-42c4-88bf-1dddb47c1a48",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a18f8f10-6d39-4801-866c-cc184213db91"
        },
        "item": {
          "id": "5ca7d3a1-58a4-44a3-b0eb-ee9a726e55f4",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "3e2274d6-cc20-4b06-ad5f-6dff066d1973",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6364b6bf-c59c-4f64-8857-28ed9c7dac83",
        "cursor": {
          "ref": "ebc5bcde-0f63-460f-8537-9665556f8cc3",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dea27713-a9df-4b9d-92d0-f52288d90537"
        },
        "item": {
          "id": "6364b6bf-c59c-4f64-8857-28ed9c7dac83",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b056fcdc-01bb-469c-b3bc-943fe464e449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6faf4772-ac06-4fd9-b179-a39e507c0b89",
        "cursor": {
          "ref": "1b5c4e2b-478a-4d54-baf7-173ef1c82b19",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "cffc9cb3-ba90-4b1b-bec1-28d338c5d90b"
        },
        "item": {
          "id": "6faf4772-ac06-4fd9-b179-a39e507c0b89",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "6d840aff-e379-4845-a11a-3d41fecffff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4c2842-a602-4c57-b6a7-bda841ba8c3a",
        "cursor": {
          "ref": "cff99488-683e-4687-9a7c-d37052bc2ca2",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "7bb9480e-c99b-4ec9-8ed0-4f85913b0699"
        },
        "item": {
          "id": "ca4c2842-a602-4c57-b6a7-bda841ba8c3a",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fefd3f0b-c8eb-44af-9783-992e29621b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbdfb847-947f-4813-8f72-5fee5c9af920",
        "cursor": {
          "ref": "4ce8d2f5-4394-4034-9ac4-0f9c49808983",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "5164be1d-084f-4e13-823e-7579db0690ce"
        },
        "item": {
          "id": "cbdfb847-947f-4813-8f72-5fee5c9af920",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "976fe5ee-9d1f-4f17-aa7a-109c3f1bf0b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5552aec1-5795-4e0a-b46d-5577c8636521",
        "cursor": {
          "ref": "43222017-2e66-4f0f-a114-82c37ffe2ce6",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b5b99de6-437e-49ba-ab24-af378736fb33"
        },
        "item": {
          "id": "5552aec1-5795-4e0a-b46d-5577c8636521",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "7d803b42-f561-4662-89f2-5ec7315fa7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36d4a491-af4e-4b3f-83d1-2c8d592f1383",
        "cursor": {
          "ref": "73be5e08-1fbc-44b6-a06b-ceb9d05f0f1a",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f8156909-e829-47f8-b2ad-aef43a94652d"
        },
        "item": {
          "id": "36d4a491-af4e-4b3f-83d1-2c8d592f1383",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "5625596c-8428-4c5c-a160-8660910b585e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2401cdc0-4de4-4e9e-8949-4b59435d0df8",
        "cursor": {
          "ref": "369716c9-f42e-4308-ab9e-28e842dd6a9c",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "eeda7db3-4f05-4b2f-9bab-bffd691a7dc3"
        },
        "item": {
          "id": "2401cdc0-4de4-4e9e-8949-4b59435d0df8",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "5d5d53da-a763-4ecf-8c57-354b2abca872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a17dab63-0a06-4a54-b11a-b3a60739438e",
        "cursor": {
          "ref": "f8ae357f-94fe-48a5-856c-6dae695e711b",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "74babc72-ef99-441c-b1a2-f82ad948b644"
        },
        "item": {
          "id": "a17dab63-0a06-4a54-b11a-b3a60739438e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "e772d49b-f795-41bb-8172-c6fcff146f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b142a704-ebb1-456d-a8fd-2b993e04541a",
        "cursor": {
          "ref": "67b6fbf1-77cb-475d-b075-40f3d2f45bbf",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "6b8579e2-4d93-44d7-bde2-890e2e890b59"
        },
        "item": {
          "id": "b142a704-ebb1-456d-a8fd-2b993e04541a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "5f1d721d-1c5e-4503-ae3a-a80e8e33ae76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e412ee24-d55c-4684-8586-a91ae99f076e",
        "cursor": {
          "ref": "3f7d8bc9-c526-4f9e-8535-c141a6dd63f2",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "66655cfd-2f7d-484a-910e-fd11e2e2ce4a"
        },
        "item": {
          "id": "e412ee24-d55c-4684-8586-a91ae99f076e",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dff1e0a6-2ae4-462c-b52c-c19508ac866c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 22,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea4144e4-2960-4611-8de4-5b67b3ca55bc",
        "cursor": {
          "ref": "53ef0841-ce43-455b-ab34-c7b977ac5430",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "72752e8b-1e9e-416f-9f6a-faae414ea66a"
        },
        "item": {
          "id": "ea4144e4-2960-4611-8de4-5b67b3ca55bc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "50ecc2e6-2dea-41c2-8c58-80787c38cd7d",
          "status": "Created",
          "code": 201,
          "responseTime": 2850,
          "responseSize": 970
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "48cc6e91-292e-408d-b24f-2bc240787e72",
        "cursor": {
          "ref": "dbe476d6-26bf-4518-bf6e-cfd964f01122",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "c12a17a0-d612-418f-bdf6-df4b3c31653e"
        },
        "item": {
          "id": "48cc6e91-292e-408d-b24f-2bc240787e72",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "4ee936e9-d2e4-4a7c-bb72-cda4a93177c3",
          "status": "Created",
          "code": 201,
          "responseTime": 2518,
          "responseSize": 985
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee3009ab-49b4-481e-87f7-34b170b0f611",
        "cursor": {
          "ref": "753d313d-d4b7-479e-aabd-b755f604869c",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6a04094e-e8a4-47f9-b2de-ca431ff461aa"
        },
        "item": {
          "id": "ee3009ab-49b4-481e-87f7-34b170b0f611",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "ac01ad7e-ace3-4227-942c-5164af52e3ca",
          "status": "Created",
          "code": 201,
          "responseTime": 2626,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "452f413a-a3e8-4807-a9f0-9c57a702960e",
        "cursor": {
          "ref": "5f376868-d36c-4d4f-a3a0-2caa9ba62a98",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "ca6bf7d3-603d-4159-9ee2-387dec661806"
        },
        "item": {
          "id": "452f413a-a3e8-4807-a9f0-9c57a702960e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "d3da361d-bd1a-4287-a690-f217ce84d753",
          "status": "Created",
          "code": 201,
          "responseTime": 2964,
          "responseSize": 993
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "838127d2-343e-4e85-bf82-f1504dfd0ab6",
        "cursor": {
          "ref": "937a1f62-b253-4614-b60b-87ea62326bdf",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "c34b8da7-db5e-49a3-89c8-1e7fcbf6c64f"
        },
        "item": {
          "id": "838127d2-343e-4e85-bf82-f1504dfd0ab6",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "67c4d5d4-3f3b-49dc-8916-3d7182d614ee",
          "status": "Created",
          "code": 201,
          "responseTime": 3584,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "expected '2023-07-15T00:46:35Z' to equal '2006-01-02T15:04:05Z'",
              "stack": "AssertionError: expected '2023-07-15T00:46:35Z' to equal '2006-01-02T15:04:05Z'\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "c569464b-d03b-4d84-8e2d-2f93fc1b3195",
        "cursor": {
          "ref": "5285e74c-c9d9-43c8-92cb-68de16ec3cab",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "43da5528-0127-45ad-a51d-1b2ba7defa51"
        },
        "item": {
          "id": "c569464b-d03b-4d84-8e2d-2f93fc1b3195",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "920358aa-23de-4669-a979-a761fcf2029f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          }
        ]
      },
      {
        "id": "43672eb0-3387-4209-aeb4-a95dddb3db63",
        "cursor": {
          "ref": "c9dc83c6-b8a5-4587-bd88-f4cc084f22b2",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "69bced84-b5e8-428d-a686-0994ebd83501"
        },
        "item": {
          "id": "43672eb0-3387-4209-aeb4-a95dddb3db63",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "bf77fccb-69e1-4c1a-9735-96a983668908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3f178c-bd1b-4e38-814d-bbff2dd2e8ca",
        "cursor": {
          "ref": "04417116-b44b-4d44-a835-2c22f1c33845",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "bc87dd5a-522d-4b45-9028-790d9f52fc74"
        },
        "item": {
          "id": "6b3f178c-bd1b-4e38-814d-bbff2dd2e8ca",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7649a882-d043-4ef9-8948-3a6df0c726a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0d108cb-4ff7-40f4-aec3-4523d80dee3e",
        "cursor": {
          "ref": "56fd9d64-2161-4045-88d4-ac832e32b110",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "934cd26b-5ca0-4bea-9443-984e4a85d3ae"
        },
        "item": {
          "id": "a0d108cb-4ff7-40f4-aec3-4523d80dee3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "93c60169-be26-4855-a39a-caa675e918e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12b5cd70-c194-4baa-9929-d092d604cd5a",
        "cursor": {
          "ref": "945085f8-2416-43f1-a0ae-ff34367adedd",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "a0b698f0-4748-4869-986b-8cd29ecabc59"
        },
        "item": {
          "id": "12b5cd70-c194-4baa-9929-d092d604cd5a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "b612fa17-acf8-4d6f-8a73-9a36e2a16543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44fa5910-f710-4eca-b241-3379cbac2113",
        "cursor": {
          "ref": "6d3839c1-f5fa-4fa0-9f5b-75ec14379a52",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "5d66ac35-4b3d-4499-b4bb-f48becfbfe83"
        },
        "item": {
          "id": "44fa5910-f710-4eca-b241-3379cbac2113",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "aaf40564-3381-400c-abaa-5f2e7e3ac49e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4090a63-8300-480f-86f0-a07771c9b1cf",
        "cursor": {
          "ref": "29baf378-b34e-47ae-b0d7-69d09d4b9dde",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "85405e7d-7a93-4bbe-8c47-22d1e939c7ca"
        },
        "item": {
          "id": "d4090a63-8300-480f-86f0-a07771c9b1cf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "646a9017-0773-420c-b2d4-4c95ac230890",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "324c502d-7da7-4ec8-8c9f-475ab4147089",
        "cursor": {
          "ref": "7c17a6e0-4c6e-462b-9052-8daeb4ecc545",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "b00d436c-31d7-4967-b7ca-682a13ee9125"
        },
        "item": {
          "id": "324c502d-7da7-4ec8-8c9f-475ab4147089",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0786de25-45d8-4f9f-92cd-e2e18ae7ea5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "faeb5220-7e72-4f05-8200-f2ffd2c6e24f",
        "cursor": {
          "ref": "88246ae8-3c03-45f3-afa2-edcf6e1e087d",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "bb985208-eec7-4993-9d0c-9955f5483dc2"
        },
        "item": {
          "id": "faeb5220-7e72-4f05-8200-f2ffd2c6e24f",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c8252c6d-1f2b-470a-89e5-cdf5792c0989",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33f6d1ff-b98d-4d22-8272-51401381f74b",
        "cursor": {
          "ref": "f42bcf4e-4e79-49a4-8afc-a7f7274caaba",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "508c8cd7-35b1-4758-a555-0889c11b74f4"
        },
        "item": {
          "id": "33f6d1ff-b98d-4d22-8272-51401381f74b",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "137edf26-2d5e-450f-8ff8-11899d90238d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "443f4406-649e-4168-a4bc-e5ad9c2e7283",
        "cursor": {
          "ref": "66ad398b-3eae-42bd-81ba-1cc728be2871",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "5aae1c11-8952-4e71-8f62-77c256e1cf5e"
        },
        "item": {
          "id": "443f4406-649e-4168-a4bc-e5ad9c2e7283",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f1ea4670-48a4-4840-a9a9-8b8a7a5224f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47352f9-4fd6-4c51-8e86-c010e3cb2ba7",
        "cursor": {
          "ref": "e1cfff57-79e4-4ef4-8715-fb36387f9d79",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "bb727e7e-f8af-40ab-a719-613bc521bb05"
        },
        "item": {
          "id": "c47352f9-4fd6-4c51-8e86-c010e3cb2ba7",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b496dfe4-9ca9-4bd0-ac83-aee2b550f936",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e47760a5-4c65-499f-a24f-3c5b55368dcc",
        "cursor": {
          "ref": "544f8b08-5f37-49a8-89d8-d0cba0e139fb",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "8c49d7e3-6c0b-4bd6-bc5c-388d28de3825"
        },
        "item": {
          "id": "e47760a5-4c65-499f-a24f-3c5b55368dcc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "10c5cac1-1953-4f47-a939-f14f9f47f84b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa9e3ff-1b07-485f-84f3-503b785131f7",
        "cursor": {
          "ref": "5186f823-5a96-48b9-beab-d72420cd5126",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a6d4daf6-948d-4184-b5b9-296bea95c2a2"
        },
        "item": {
          "id": "daa9e3ff-1b07-485f-84f3-503b785131f7",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1ce3e778-37a5-4b91-9fbb-e61bc6d539f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf0229d-0cfc-410d-97c8-5d2391c9e19f",
        "cursor": {
          "ref": "f445228b-68ca-4133-97a7-ac1a07553230",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "4f0e2397-38e4-4172-9e51-18102ba46a34"
        },
        "item": {
          "id": "ebf0229d-0cfc-410d-97c8-5d2391c9e19f",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "86fa9278-1879-4b01-90b6-7908da3584c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca9629b-1748-432a-8472-336cd5c3b4cb",
        "cursor": {
          "ref": "1964d846-6eda-4b54-8b1d-b300e3554e06",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "bc71ce7b-cc56-464f-ac5c-e5752f4cb11a"
        },
        "item": {
          "id": "4ca9629b-1748-432a-8472-336cd5c3b4cb",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "d9394ccf-b1cb-404c-bc69-0530fd3cad19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0a4c8d0-36a9-4f2f-9835-b13cc414a3dd",
        "cursor": {
          "ref": "d0a37f88-3cb5-4c21-9b8a-9587f260286d",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "b6128b6b-a98d-4d04-897a-69d062d94ec5"
        },
        "item": {
          "id": "f0a4c8d0-36a9-4f2f-9835-b13cc414a3dd",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "fdcd89ce-a82b-49f6-bb25-9ea6d87a5e7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7509a1a8-0ecf-4f3e-8a17-906d0a2960f1",
        "cursor": {
          "ref": "5a8d9995-4c66-4170-b222-60d3d2bf43c2",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "e7e9a11e-0281-4e17-9481-747a1c4c6747"
        },
        "item": {
          "id": "7509a1a8-0ecf-4f3e-8a17-906d0a2960f1",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ba8bfc2c-1fff-4eae-8ce3-5a6e9bda740c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642120fc-ea1e-4076-8112-6e69ade5e3a8",
        "cursor": {
          "ref": "ac160332-d7c6-44ad-bd67-7753bc8eb593",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "8ae89235-5f15-49b4-bff8-ce2b1b18b62c"
        },
        "item": {
          "id": "642120fc-ea1e-4076-8112-6e69ade5e3a8",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "daef0ce2-4f3a-4260-89d2-f7d8b0bed206",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d2d697e-fd00-46da-92f0-c97afe9874ce",
        "cursor": {
          "ref": "2cefcec5-fe01-4e8e-8eae-29bc29a6bf9e",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "3347aa83-9b50-427b-917e-56ab1ca8461c"
        },
        "item": {
          "id": "1d2d697e-fd00-46da-92f0-c97afe9874ce",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "aa3bec38-7860-429f-b17f-4b731ad00a5e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2810d834-87fb-4cd5-a0bb-96bf3d4ecd96",
        "cursor": {
          "ref": "e60462a3-9470-47b0-99b5-8994f016442e",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e8cb01b0-d064-484a-a17c-45668484b604"
        },
        "item": {
          "id": "2810d834-87fb-4cd5-a0bb-96bf3d4ecd96",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4d9b2afd-8d0e-455f-88c9-2e0206f86706",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e7ccc8-3723-4467-b6ad-835e8c4bf6d8",
        "cursor": {
          "ref": "5c460a32-ddba-441d-8bc8-d88ba23aeadf",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5d9f7041-3792-4ac8-b9d6-874d68f17702"
        },
        "item": {
          "id": "d5e7ccc8-3723-4467-b6ad-835e8c4bf6d8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "59252273-3a29-42e1-8cfe-ab253f405ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "229b2eaa-18a8-4b0b-9fe0-5df6d46c40ad",
        "cursor": {
          "ref": "1d5d9543-4212-4051-8d89-1c5ae09edd93",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "da127c49-968e-46ff-b16f-a09eb639e58b"
        },
        "item": {
          "id": "229b2eaa-18a8-4b0b-9fe0-5df6d46c40ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "e19979a8-9cbc-4dac-8f20-ceab8f379bf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d89b057f-32a1-4770-ba2d-3be8e14b3a7d",
        "cursor": {
          "ref": "29c955ab-7067-4f6b-9c8f-adda566a1bce",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "5c10b9ee-bddb-4377-a9ae-4e86a04c3569"
        },
        "item": {
          "id": "d89b057f-32a1-4770-ba2d-3be8e14b3a7d",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "03b42bea-d700-4998-8c04-9f6a13058220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88f56c29-a968-455f-bd31-0f295f085adb",
        "cursor": {
          "ref": "658444dd-c0ba-4961-ad70-5c275a5d5b28",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "40cef7e4-d36d-4868-b574-8fb48324f499"
        },
        "item": {
          "id": "88f56c29-a968-455f-bd31-0f295f085adb",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b7c6c618-e245-4f24-b4f9-ebed8ed8c328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b3b85b5-4994-4ebc-9e80-8113b28cfb82",
        "cursor": {
          "ref": "65304d99-7339-4613-bdc1-9a43e8865ad3",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b6e6aa72-d324-449b-937b-dfd070bb4609"
        },
        "item": {
          "id": "3b3b85b5-4994-4ebc-9e80-8113b28cfb82",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "050e0173-a705-4e88-a478-dce153990a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00658ecf-8084-49f7-8c4c-0a9c6bcb481c",
        "cursor": {
          "ref": "d83ffd9d-2b0d-470d-a2aa-d4c732d80a73",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7d96824-d17f-4a8c-b82b-8599725d99e1"
        },
        "item": {
          "id": "00658ecf-8084-49f7-8c4c-0a9c6bcb481c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "101174c9-080f-4daf-8823-2535940493dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bf86a60-e2c0-43ee-a3e1-86581122c7ad",
        "cursor": {
          "ref": "d8468b42-58a6-40a8-8607-b3db63f46dca",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "dfe1e47a-ca75-4148-9da7-1063b53a4ff7"
        },
        "item": {
          "id": "9bf86a60-e2c0-43ee-a3e1-86581122c7ad",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b446b165-2d48-43fb-9174-c065dee5fdf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb90634-114e-4733-9903-e0a80b97837a",
        "cursor": {
          "ref": "9c537ce5-959a-4d99-9348-473200f8633a",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "64db63ad-6881-4e92-8689-336df62c113a"
        },
        "item": {
          "id": "6cb90634-114e-4733-9903-e0a80b97837a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "bf10e0d6-23f5-401c-ae96-d511db14e31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b53599-a1c8-4626-86a8-495347847fc5",
        "cursor": {
          "ref": "5376a1f9-b42a-4a1c-ac56-e757a58e2b0f",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "18ffc844-f637-4bd1-be2b-b42bd86a8327"
        },
        "item": {
          "id": "b0b53599-a1c8-4626-86a8-495347847fc5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "66b3f5c6-e220-4278-bff9-3a4e29124ce8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "848b1f6f-2640-488a-83c8-53ee042b00a5",
        "cursor": {
          "ref": "26f2f8e8-d30c-47de-85de-addc3d684f65",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "6b1be641-2e82-4c42-bbc0-6e3577bbad6d"
        },
        "item": {
          "id": "848b1f6f-2640-488a-83c8-53ee042b00a5",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "58483ca6-18b9-4fe8-bcc2-7fbd80b4d2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37984d28-15f7-4846-928d-c29ced499086",
        "cursor": {
          "ref": "30dff062-c710-40c6-8e35-84cbe2d8c8fa",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "7e771e05-eeaa-4c82-9d41-ec19f531c9f4"
        },
        "item": {
          "id": "37984d28-15f7-4846-928d-c29ced499086",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1f215435-1912-4ad0-a17d-fac70f770761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1dbcd831-6e79-4b37-9a43-acc98ce7f40c",
        "cursor": {
          "ref": "c373429f-a678-4eb0-818a-d8c6307cee88",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "6793de27-feba-4436-a93f-9e1eaf838d39"
        },
        "item": {
          "id": "1dbcd831-6e79-4b37-9a43-acc98ce7f40c",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ee43cafd-2c5f-4127-b0ae-3a3a66a26d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3da72c0-9766-46dd-a896-9dd0e517b552",
        "cursor": {
          "ref": "52b1d01e-5985-420e-8528-856c8ea6cdc7",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "edcd2284-b429-4206-890b-481e3c2f6f6a"
        },
        "item": {
          "id": "f3da72c0-9766-46dd-a896-9dd0e517b552",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8d538dd7-78de-4a28-a970-88d8800a755d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc06d932-60c1-44b2-8c0e-f1997a54e21b",
        "cursor": {
          "ref": "5536751d-aca0-4a5f-b425-96cf43325876",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "d1b1e8d2-a586-48bb-abb7-7d90eb0a74a6"
        },
        "item": {
          "id": "bc06d932-60c1-44b2-8c0e-f1997a54e21b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "222ce07d-fb95-4cc3-9c16-0d4140eda4be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6890a81a-35e6-47bf-914e-24a2bfdf6095",
        "cursor": {
          "ref": "0d4e4a78-8226-4576-9e7e-4e389ee0a694",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "426db574-8a9d-4b1e-bd4a-fd14e8194046"
        },
        "item": {
          "id": "6890a81a-35e6-47bf-914e-24a2bfdf6095",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "87bb6722-9eb6-484c-a42e-85f59e18f168",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b5a6a46-5917-4a0f-8e51-f115699aedcf",
        "cursor": {
          "ref": "c943b096-ea71-46ee-a4a9-3ad5c4531b79",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6cc77277-75f5-4e2c-86cf-9fffcb72eb7e"
        },
        "item": {
          "id": "7b5a6a46-5917-4a0f-8e51-f115699aedcf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "63802b64-0a4f-4ef1-bf8c-a2351c081f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7b526bc-dc47-4677-b0e9-7ee5c4a25786",
        "cursor": {
          "ref": "9ff6a855-833f-43a8-bd33-35aaf65fd9cd",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "0186aa34-41cc-46b0-bf97-405ea2ed518b"
        },
        "item": {
          "id": "d7b526bc-dc47-4677-b0e9-7ee5c4a25786",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "e3f9314b-d08d-43ea-b2dd-3fac009660df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25d8afd7-f2fd-462d-b8f0-f5b4be96ea93",
        "cursor": {
          "ref": "e76ddcdf-3faf-4c30-947f-7c5e9258fbf1",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "fde307a4-1337-43d7-964d-74b39eb8d48e"
        },
        "item": {
          "id": "25d8afd7-f2fd-462d-b8f0-f5b4be96ea93",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a3a7c6c8-6d8c-4e86-96ba-46920324a897",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c070955-fe18-4c6b-9c1b-e88130f6379b",
        "cursor": {
          "ref": "7d422b51-36b7-4edd-af17-c76e9bb02850",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6533eede-d2c2-4b05-9780-d4d39d58ce4d"
        },
        "item": {
          "id": "3c070955-fe18-4c6b-9c1b-e88130f6379b",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "2d0761c0-d6cd-46ad-94c2-0cba723a88e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bddadc6-bc4b-4f93-bccd-91edd035104c",
        "cursor": {
          "ref": "3a9c387c-c4bc-415a-892f-d20dced90250",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "7daba6bd-3765-4741-bd75-e2a6b2569633"
        },
        "item": {
          "id": "7bddadc6-bc4b-4f93-bccd-91edd035104c",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "809cbf34-303a-45cf-bf9b-5481b006b49c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ba56c54-3e4d-49ef-a37e-1dc8f30b6ebd",
        "cursor": {
          "ref": "a13c9dfe-122f-47ae-b279-100e0cc0dc2b",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "e8a7f30f-7113-4359-b255-7707eb210a13"
        },
        "item": {
          "id": "6ba56c54-3e4d-49ef-a37e-1dc8f30b6ebd",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "65e56ce5-5184-4de4-b9ef-3a31bbfc01eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71be4d9b-a81c-413a-82cc-315d8255086d",
        "cursor": {
          "ref": "82f26bd9-0fe0-4435-a50c-134873246220",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ae8efc4e-f930-4fac-b746-5860a3581092"
        },
        "item": {
          "id": "71be4d9b-a81c-413a-82cc-315d8255086d",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cc547b18-b347-47bc-b9a4-afd65c647165",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59dae4c0-efca-4739-aece-c6d7eb73cbf8",
        "cursor": {
          "ref": "d3ed94b3-12c8-4219-934b-60c208538a94",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "e909355e-8c04-4f00-93d8-42e70e829785"
        },
        "item": {
          "id": "59dae4c0-efca-4739-aece-c6d7eb73cbf8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "f5653838-cda3-4bf5-9c3c-0a2e833b1538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090687ca-92d0-4249-8b95-cd96974e2237",
        "cursor": {
          "ref": "f003dc51-1c4b-4bd9-8062-d9bcda879729",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "816d3933-fe61-43cc-8108-a8a04c52fb2d"
        },
        "item": {
          "id": "090687ca-92d0-4249-8b95-cd96974e2237",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0b8fe626-10fe-45be-89f5-d47ea293d5b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7452bdea-1a55-4a7f-a56b-6dbafabf1ce3",
        "cursor": {
          "ref": "f2802cd1-0c2f-4097-ae34-88ec81f09789",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "edba4147-7d3b-4e48-b87d-74d2c335922d"
        },
        "item": {
          "id": "7452bdea-1a55-4a7f-a56b-6dbafabf1ce3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "86f0157b-63b9-499f-950c-a71a2f62f55a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef13549-06e3-4edd-af7c-d23bc3af77f3",
        "cursor": {
          "ref": "b0d26e1f-1768-41fe-9f4b-3371fffc507f",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "93271d6d-7b33-4a80-98c1-2edb36bf96f3"
        },
        "item": {
          "id": "6ef13549-06e3-4edd-af7c-d23bc3af77f3",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c749f313-2d59-4617-a86e-b06552e25712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bb5148-9a40-4e8a-ae9c-2705cf78e2fe",
        "cursor": {
          "ref": "970e03c4-d4a1-4fe7-8789-1f0576b66e95",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "78af2ead-d84c-4504-8640-c5aa2b0a88d0"
        },
        "item": {
          "id": "b7bb5148-9a40-4e8a-ae9c-2705cf78e2fe",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c14f91f-5b96-409a-bd8f-671b16de69b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c610b5d-b72f-434c-96d7-027ca1be3467",
        "cursor": {
          "ref": "95338824-941e-4598-b362-87d5b9bf347d",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "430a0bd4-2535-4951-a1d6-f3ec01ae2065"
        },
        "item": {
          "id": "3c610b5d-b72f-434c-96d7-027ca1be3467",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c65ada67-f54f-4e2a-b746-571145baab4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7030fc51-c9c1-4d5b-950e-ce61831ad37a",
        "cursor": {
          "ref": "87e9b420-e1d5-41e2-9f9b-9b7c6a9f37ca",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "c2e80d6c-8552-4d6b-9abd-abc76a9ca324"
        },
        "item": {
          "id": "7030fc51-c9c1-4d5b-950e-ce61831ad37a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "8fa87e19-0b96-4284-a7f2-16db11b07d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff9267d4-f831-4baf-be96-1295a28b6336",
        "cursor": {
          "ref": "b27ab132-d322-4c5c-bdc6-a1ea31efe353",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "ef508fa0-bdc5-4781-b5d8-d6cdd7b93b82"
        },
        "item": {
          "id": "ff9267d4-f831-4baf-be96-1295a28b6336",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "1971647b-79b4-45c4-aa85-8b846beed4f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c13887fe-432b-47cc-a586-d4825704441c",
        "cursor": {
          "ref": "87eb81a1-0cd7-4e31-bada-41e7924a558b",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a3c3fa0c-045e-40ce-87e6-eaf70fa6aa01"
        },
        "item": {
          "id": "c13887fe-432b-47cc-a586-d4825704441c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ead66843-1eb1-4d92-9c92-2fbb8b8c00ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17ec8882-8069-4883-9347-805c8ea30d86",
        "cursor": {
          "ref": "46e6e74d-df07-47e4-9bef-af98ecf2282b",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "2667b525-0e94-4915-8689-ea7497ae878e"
        },
        "item": {
          "id": "17ec8882-8069-4883-9347-805c8ea30d86",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5259687a-435f-4db4-9a85-bb3daf295566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62056a00-0c7c-4ddf-aa66-b3fc70f2eac1",
        "cursor": {
          "ref": "74b52e87-56f1-4373-a232-015e63e8d5a8",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "273c9b85-d08c-4a6b-bd99-1a8974c77c21"
        },
        "item": {
          "id": "62056a00-0c7c-4ddf-aa66-b3fc70f2eac1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "6c199e66-9524-4fdc-bb52-62c3b677d7e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c04ac30-b82a-4070-8d68-e7d1fa144fc8",
        "cursor": {
          "ref": "741a41dc-c5c8-44ab-b41a-968b8374a94f",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "dd966cb9-b5fc-4a2f-81db-79117380e683"
        },
        "item": {
          "id": "8c04ac30-b82a-4070-8d68-e7d1fa144fc8",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "46210efe-a2dc-4806-8eec-6ed6ee5257d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb1f78c-f181-4608-87f4-d9f50b92bf36",
        "cursor": {
          "ref": "4ecc5ae7-ff2a-43bb-9e96-79ab85696da4",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "5282d924-01bf-4e2a-ae84-f99ee9c3656d"
        },
        "item": {
          "id": "5bb1f78c-f181-4608-87f4-d9f50b92bf36",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "22bbe98b-8d03-449a-9f07-3e51ca81bd59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04324d26-aa95-4465-a8ed-c54017312e22",
        "cursor": {
          "ref": "cffc72cc-f022-4f65-97b6-e58f9b0bb046",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f871ec33-2521-4d29-8160-eca24c748529"
        },
        "item": {
          "id": "04324d26-aa95-4465-a8ed-c54017312e22",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "22d94d93-a177-4c56-975d-c12db8b85ee3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a54d5e34-7992-4d79-ad50-7afa4628a105",
        "cursor": {
          "ref": "a3839fef-6e4a-453c-bfed-593c398a639c",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "3b40da84-2271-4eff-9ba7-8bf9cbb40cfd"
        },
        "item": {
          "id": "a54d5e34-7992-4d79-ad50-7afa4628a105",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "19d8669b-c1bf-4a10-a08e-2292ff4b1009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb0c3c1-a988-47bc-996a-b9df3b667ce4",
        "cursor": {
          "ref": "423aba95-c625-41a0-a148-20da9bc1615d",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "522d8773-fa06-4f3c-8c77-8c59e5766249"
        },
        "item": {
          "id": "0cb0c3c1-a988-47bc-996a-b9df3b667ce4",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "063c50af-3788-4ce3-b9de-52f353f4c9d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ba075a-b181-4f55-bf41-a7f3905fe8ec",
        "cursor": {
          "ref": "acc459ae-149b-4472-b04b-b5d578ba0dbb",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "21791b04-d2bf-4867-9a80-35a43974955f"
        },
        "item": {
          "id": "52ba075a-b181-4f55-bf41-a7f3905fe8ec",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "7640ab88-a512-402c-a4a6-3ddf382e0b70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "708bb4f7-d73f-49f8-aabc-ea0720fc9265",
        "cursor": {
          "ref": "456bb5e9-8078-4ac3-aa74-cb5c16641a1e",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "64e1496e-5bb0-455e-8112-22583ad170d2"
        },
        "item": {
          "id": "708bb4f7-d73f-49f8-aabc-ea0720fc9265",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ca0100b4-d1fc-4b96-9e64-0f8eca516566",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b54afdd9-315d-4b3c-a738-832f7077353d",
        "cursor": {
          "ref": "82057023-1b6b-4f40-a62a-be371ec77169",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "158fd592-53b0-40ba-b19d-cd80337a1321"
        },
        "item": {
          "id": "b54afdd9-315d-4b3c-a738-832f7077353d",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "46d01e19-ea11-486c-bfe6-ba4b1642b871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c333da24-225a-4714-9253-9fbaa99cc386",
        "cursor": {
          "ref": "9f409d29-49fe-484d-b467-933a1de0429f",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "db9d51b7-fc97-46bf-8dab-dd2f45fb2138"
        },
        "item": {
          "id": "c333da24-225a-4714-9253-9fbaa99cc386",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b0244b57-3c4c-445a-aa98-25c88147b392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dccdbbed-b5c3-4d37-aa8e-5927c7ece0f1",
        "cursor": {
          "ref": "294ec2ac-1873-4af0-b3c1-2e191eea45f0",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d9b4c632-de27-4977-9716-38a2f73198fb"
        },
        "item": {
          "id": "dccdbbed-b5c3-4d37-aa8e-5927c7ece0f1",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "7a5463fe-bd99-4bd0-91f8-dd5bc822c701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f71e667-2d8c-4580-8ef8-9ef9be06c409",
        "cursor": {
          "ref": "12523997-e2d1-497f-bea7-e4ad0852278c",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c5268c4b-e969-4f8d-8b83-e832d8c9f3a1"
        },
        "item": {
          "id": "1f71e667-2d8c-4580-8ef8-9ef9be06c409",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "db180583-44bd-4116-a2ef-a3a1e66aa22c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37fe958-9cf2-4255-bd86-d87237a769f6",
        "cursor": {
          "ref": "84d22c7a-f725-4ff4-a49b-071aaa8f8b93",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a8ad8b23-0b55-42c8-bb13-5ede9f9ff19b"
        },
        "item": {
          "id": "c37fe958-9cf2-4255-bd86-d87237a769f6",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e89434f2-a287-4258-b902-e17a24aea3d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c47160e8-2e61-4ac8-bb26-863dccd772ef",
        "cursor": {
          "ref": "0cc24d4f-33c6-497e-8e1b-77c8d57db0df",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f13bc250-e3fd-4fdb-b12e-f1a85524769e"
        },
        "item": {
          "id": "c47160e8-2e61-4ac8-bb26-863dccd772ef",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "4fb8d376-ff1f-4c20-a309-2d83bfb3429a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6976755-fa2d-4269-9e1b-286705d964db",
        "cursor": {
          "ref": "6d03f3eb-1885-4b3b-ba3c-fe54d36fb075",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "dde240c2-b368-4fd5-b6c3-fc9a44293a97"
        },
        "item": {
          "id": "a6976755-fa2d-4269-9e1b-286705d964db",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "b46904bd-0572-40c0-970d-554f3932f471",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec9d082-8fdf-4d85-a5c1-3604d0e04c23",
        "cursor": {
          "ref": "8cff1b45-052f-4b28-9a46-9869702d7dae",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d46eee02-57a2-40b6-bf8f-43e3de916ce5"
        },
        "item": {
          "id": "dec9d082-8fdf-4d85-a5c1-3604d0e04c23",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "72fb1fe9-a5dc-44a3-83be-213e15f5ccbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c48c1878-6bf2-408d-8656-73d8cfb0c601",
        "cursor": {
          "ref": "8467411e-c8f4-41bf-b8b5-2b815f44de42",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "0aabab1d-0cf8-44cb-8fd9-6e943be033ed"
        },
        "item": {
          "id": "c48c1878-6bf2-408d-8656-73d8cfb0c601",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "ea435dba-ab34-4d55-8a4e-65ca15d84e29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3b8c6b8-55ca-48f5-afde-350ee493897f",
        "cursor": {
          "ref": "f80c8c44-dcd0-4491-a1ed-39efdd626677",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "22151769-cb5b-46bf-8eb7-fee672e45d79"
        },
        "item": {
          "id": "d3b8c6b8-55ca-48f5-afde-350ee493897f",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "3691cb64-2a7a-4371-a9e7-5d436486c593",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4cd72bc-52c9-42d5-862e-c5c9f4931212",
        "cursor": {
          "ref": "c1e945d2-ad34-4d8d-8492-7066a67a7499",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "331a6426-67ee-4087-ab8f-6cdc30b09653"
        },
        "item": {
          "id": "a4cd72bc-52c9-42d5-862e-c5c9f4931212",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "06732272-af29-4c10-9529-c3fe08d1c843",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fd965b-e058-48fa-a5b5-825ae1a545f7",
        "cursor": {
          "ref": "e24773d3-6bb5-4e98-b1bc-28f514a8c8d1",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "1b3ef81a-069c-4fa4-96fa-784f3102a499"
        },
        "item": {
          "id": "e8fd965b-e058-48fa-a5b5-825ae1a545f7",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "2fad240c-b52e-4dc5-bdb6-f95b08d2ca6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00024ab-0a61-4980-984d-af0e16400c04",
        "cursor": {
          "ref": "ba3c17a7-78ad-49e8-8270-dd92c6a07e77",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "503a0479-32f5-4b30-8b2a-bbff2cb2a144"
        },
        "item": {
          "id": "e00024ab-0a61-4980-984d-af0e16400c04",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "65ca8644-39c4-48f0-a37b-5a957925fdc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3538171-b2d7-4356-b1e6-b1ddd85e7914",
        "cursor": {
          "ref": "f55ee71d-8520-4fdd-81f9-8d8da294295d",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "1b75213f-3cc1-470c-a757-08aba7bab185"
        },
        "item": {
          "id": "d3538171-b2d7-4356-b1e6-b1ddd85e7914",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3a4d9f59-9044-42af-afdd-72ef35f4cd16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bc1ba6e-d38c-4bbc-b450-4bac947a9c93",
        "cursor": {
          "ref": "e5af3f4c-016e-4abf-aa93-3aea9fd8dd5b",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "9993bd4c-b0c6-4b70-b6ca-4f581111efbf"
        },
        "item": {
          "id": "3bc1ba6e-d38c-4bbc-b450-4bac947a9c93",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e372d23f-7584-46c7-8b0b-8dbaaa2cfac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fba135-28e4-45b1-8d36-d4d484ce78a9",
        "cursor": {
          "ref": "e9b137dd-5558-4802-bc0c-461db1b6e8d5",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d1c49d62-4044-497e-96c0-3db881001cce"
        },
        "item": {
          "id": "e9fba135-28e4-45b1-8d36-d4d484ce78a9",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c64f975f-a253-4692-861b-504106753e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c8e95d-1f90-4566-b15e-3e7671544ba3",
        "cursor": {
          "ref": "ed4b0c01-7164-4fce-8fb4-504efdb5631a",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "708a4dd6-c231-4044-8bd8-fbdd4882af1a"
        },
        "item": {
          "id": "81c8e95d-1f90-4566-b15e-3e7671544ba3",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "dbe29f30-e85f-4e47-907a-5d5a918902f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1f3c47f-b9d2-4266-b01d-d04f0fc508dd",
        "cursor": {
          "ref": "c40a1a1c-3810-421b-97fa-7de9138854e7",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "6c194f45-ca61-4f14-a417-41e3b89be200"
        },
        "item": {
          "id": "f1f3c47f-b9d2-4266-b01d-d04f0fc508dd",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "5a99a9e2-e287-4314-83d3-a9984add07d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93c9e90e-2dce-4a5d-87f2-1c7b146b245e",
        "cursor": {
          "ref": "668089de-8546-4874-a6b0-64e35d73b32f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "c2631001-e01d-4e0f-ba12-713bdbaa3cd1"
        },
        "item": {
          "id": "93c9e90e-2dce-4a5d-87f2-1c7b146b245e",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d8aaf226-dea7-4e42-9591-c915cef25792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 99,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc2468eb-9f97-4c5c-9b91-b2e9c393667c",
        "cursor": {
          "ref": "a7d643b5-1da1-40de-82ed-c5b73415b731",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "bc2cc500-0a7a-44ac-bce4-fdf5a097234c"
        },
        "item": {
          "id": "bc2468eb-9f97-4c5c-9b91-b2e9c393667c",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "c4247ce0-3854-462b-a01c-4e078028651b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef4f0fa-3ca2-4a3d-8b1e-864c85b8b004",
        "cursor": {
          "ref": "19df00e6-cace-4d9b-b9df-84da875ffc21",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4a0723b4-e780-4b51-84e3-c28e26c7a56f"
        },
        "item": {
          "id": "fef4f0fa-3ca2-4a3d-8b1e-864c85b8b004",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "77045aed-df88-481d-af02-db5ed4fef85f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be12f16c-0f3d-4b10-a57d-3e684308e067",
        "cursor": {
          "ref": "2cbb305c-aa26-4cdc-8d47-7ab6a18e40e6",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ba7efc31-4c46-4e5d-9724-28dc4d1047cb"
        },
        "item": {
          "id": "be12f16c-0f3d-4b10-a57d-3e684308e067",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8f9b5aec-49df-4a07-aef3-208c102bb597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bc217e3-a9b1-44d4-810b-900aea0d99db",
        "cursor": {
          "ref": "5508ada4-da73-42b8-8cac-318c42077578",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "144fd767-cb7d-43dc-a6aa-c656e38aa8a3"
        },
        "item": {
          "id": "4bc217e3-a9b1-44d4-810b-900aea0d99db",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fcc9c9cd-aec0-446e-bb9f-a4e482b9b912",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0e66d0d-6a50-4630-9330-a6fb4a59837c",
        "cursor": {
          "ref": "d14b9392-0640-4fdc-a26b-4e850f640174",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "7bc16e45-6a19-4028-861c-5bf0a2308b9b"
        },
        "item": {
          "id": "d0e66d0d-6a50-4630-9330-a6fb4a59837c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "10229fbb-d3b8-493e-bd8c-662bebf9a6a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cfc2d7-620e-46ff-a843-ebf7e0ff2afb",
        "cursor": {
          "ref": "1e5b287c-8c07-4fd7-ba55-3551a57c4770",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "45a31752-6f5d-4e06-95ed-da5fb725d7fa"
        },
        "item": {
          "id": "73cfc2d7-620e-46ff-a843-ebf7e0ff2afb",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "f1148a57-14b9-4906-aad7-0805fb51bee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6289acd0-bf99-483e-9c61-fdcac58dca97",
        "cursor": {
          "ref": "ef9c25cd-43fb-4e94-96a5-c02751e0b836",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c7fde35f-5ff3-483d-8068-ac52660aad35"
        },
        "item": {
          "id": "6289acd0-bf99-483e-9c61-fdcac58dca97",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9a467960-7436-427f-9fb8-9cf3b1f13a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2553ff4-aca9-41d4-adf8-e2a265df8b21",
        "cursor": {
          "ref": "579fb679-7076-4de5-8d8c-f4114df19e3c",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "565b5d9d-20b9-45ee-80ce-922d493ba22e"
        },
        "item": {
          "id": "a2553ff4-aca9-41d4-adf8-e2a265df8b21",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "666d9f25-5174-4d23-b19b-a84ca02b3a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f884cdc-d0c5-4a7c-9ae0-f356f6b0449c",
        "cursor": {
          "ref": "a41b8215-ff4c-446f-b330-6989b52934f6",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "042c9203-ab46-437b-b6bf-13420d72674e"
        },
        "item": {
          "id": "6f884cdc-d0c5-4a7c-9ae0-f356f6b0449c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0e65aba4-ee90-4ca3-9494-50d58f5714fd",
          "status": "OK",
          "code": 200,
          "responseTime": 329,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:195)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:195)"
            }
          }
        ]
      },
      {
        "id": "202571b2-a28d-44d9-84eb-d3093a369b80",
        "cursor": {
          "ref": "3e3d5638-32d8-4d27-ad45-e434b7b6f34e",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "23b5401e-6bb6-4a23-9ed9-84e85803904f"
        },
        "item": {
          "id": "202571b2-a28d-44d9-84eb-d3093a369b80",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "0d2abb89-19a4-4ad5-b95b-7f8c5d6a1d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44051f34-e38c-4684-aabf-dc502eab85f8",
        "cursor": {
          "ref": "ddd60ea0-872f-4ad0-9d5b-f635513d2121",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "92f40ba6-dbe5-41a4-9175-4c40c515b6da"
        },
        "item": {
          "id": "44051f34-e38c-4684-aabf-dc502eab85f8",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "cb437be0-ce59-4d82-91cc-31ead07e4ee9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e43f22-3463-43fb-88f5-717e7d60fee3",
        "cursor": {
          "ref": "73472caa-9cf0-406d-a62e-ef54c788bcd0",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "a28d9855-9175-4982-a502-500efcb9cc82"
        },
        "item": {
          "id": "03e43f22-3463-43fb-88f5-717e7d60fee3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "9144cd15-0246-41a7-9741-a9f5e55e5fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671d24d8-2b50-4601-957e-2308713f490f",
        "cursor": {
          "ref": "72802020-e834-45f6-b72b-0dd0e199b894",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b0d9f824-7252-442e-9524-8e033693d381"
        },
        "item": {
          "id": "671d24d8-2b50-4601-957e-2308713f490f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "23d2fd70-b378-4570-9c56-693e9782bb09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb1cf05f-986d-499f-a590-2feee5678ad1",
        "cursor": {
          "ref": "6142e75e-78fc-4818-bdf5-18c398f29f8a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "72bc98a4-6192-4c06-9100-798e0dc4ad91"
        },
        "item": {
          "id": "bb1cf05f-986d-499f-a590-2feee5678ad1",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "61de1292-f19f-4dbc-8c80-c68435058aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e9ca472-b644-4502-8e2e-2a5c49ae468a",
        "cursor": {
          "ref": "840cd9f6-711e-4afc-9ba3-ce575d57688b",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "4a2ac22e-6f3a-4c17-8573-c6a0668d9c32"
        },
        "item": {
          "id": "1e9ca472-b644-4502-8e2e-2a5c49ae468a",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "77c7e50c-2a37-43f4-b20e-880663947686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a73c4b9-d595-4ac9-b74d-951ac486cd10",
        "cursor": {
          "ref": "ce8680a2-86e0-495b-bca2-b43dee6e881f",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "a951dc05-aa9a-4cd4-9250-29f03527f39a"
        },
        "item": {
          "id": "2a73c4b9-d595-4ac9-b74d-951ac486cd10",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "668b8152-fc38-4cd3-a688-630074031e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8da22ae-afa9-4c33-bda3-1332b723dd5d",
        "cursor": {
          "ref": "636c6de6-9555-4a46-9160-fc006a7e943c",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "df41f518-1a87-4504-a4fb-3bfa17ad1f99"
        },
        "item": {
          "id": "d8da22ae-afa9-4c33-bda3-1332b723dd5d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "65cf2929-639f-4fb5-b321-6625a822108a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac1ea313-d0f3-4894-88d2-02cbc34636cf",
        "cursor": {
          "ref": "77d90ee8-c6b1-4bd3-bea3-d68450635c03",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "09b5730c-179e-41d0-9e36-9e158643d81b"
        },
        "item": {
          "id": "ac1ea313-d0f3-4894-88d2-02cbc34636cf",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "651d5f12-5e1f-4646-aacc-4dc4e0cea9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3db351d-c50a-4907-8e04-7ee4fd34da8a",
        "cursor": {
          "ref": "7917b348-6b2c-4312-b9bf-8b2dbb0ec979",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bc19df53-f174-49e6-b2c5-6b1b250c0fe5"
        },
        "item": {
          "id": "c3db351d-c50a-4907-8e04-7ee4fd34da8a",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bd755d8d-f263-42b7-9a79-b0064521b75a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5d79488-77a9-4b51-b831-071803501d82",
        "cursor": {
          "ref": "6bfe3487-988a-4d51-aa91-7e152aa55a70",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2eb0b9d8-ed54-4ed0-ae3a-21c797ced9e5"
        },
        "item": {
          "id": "c5d79488-77a9-4b51-b831-071803501d82",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "5ef0aa2c-4826-41ef-8c55-0f4e5a958719",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5fc4b2b-5df2-4921-9cda-96442cdd478c",
        "cursor": {
          "ref": "d4bdbe35-d5c0-43de-be05-efe9335966a8",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "74e0d1dc-5fd3-43ab-8861-558f8dbe7020"
        },
        "item": {
          "id": "a5fc4b2b-5df2-4921-9cda-96442cdd478c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "a681e946-cf22-4b49-8c27-b8594c3c5d8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b47cd75-8a1d-475a-a984-22b0c9aba52a",
        "cursor": {
          "ref": "eb7ca969-1197-4b83-8aaa-5e9e4eadf2f4",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "33607b52-34e8-45e2-951d-a9e2b7b62521"
        },
        "item": {
          "id": "4b47cd75-8a1d-475a-a984-22b0c9aba52a",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb336c5c-11c4-4040-8e9c-9b26d8d9cabe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8a23be6-d78a-432f-99a4-4c82780c63c3",
        "cursor": {
          "ref": "9dabea97-8f99-42ea-843a-9d833dd9d7d0",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "1c16eb38-4af2-49a1-8f0c-fc5caefc2667"
        },
        "item": {
          "id": "a8a23be6-d78a-432f-99a4-4c82780c63c3",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "17aa5410-0745-4374-b0ce-525400121974",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 95,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccb5ab3e-85d5-4cb7-a749-d55f1190d797",
        "cursor": {
          "ref": "318fbbc5-0567-4267-a350-88eb18580ded",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4b3c1473-4c18-40d6-8e3d-9bf40b928548"
        },
        "item": {
          "id": "ccb5ab3e-85d5-4cb7-a749-d55f1190d797",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "febef196-f330-4748-b124-d577205d7143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bad8aee-4730-46ca-aeb0-a202387fe41a",
        "cursor": {
          "ref": "b3e4cd82-fbf4-4fe9-8ba8-c7b7c5f034f5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a97f28a4-4ad8-4a41-8823-86e7c6eff9e0"
        },
        "item": {
          "id": "5bad8aee-4730-46ca-aeb0-a202387fe41a",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "de0f2d2d-249a-4b36-9219-7692f5b1a21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fff296c3-1100-4c43-b1ff-b1d09309cdcd",
        "cursor": {
          "ref": "72868828-1d9b-4b52-ba22-fb09f3b4c61e",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d1029680-89c5-457a-b0e0-ef3170bdeba2"
        },
        "item": {
          "id": "fff296c3-1100-4c43-b1ff-b1d09309cdcd",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "f9081c98-a823-42f6-8479-e20b4a366262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c8b2f21-2545-446a-94a0-4f30e40aeb78",
        "cursor": {
          "ref": "32d9b6e6-f083-4f72-8685-c19572fdff7b",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "bb2ace16-f934-47ad-a824-7f7049027468"
        },
        "item": {
          "id": "9c8b2f21-2545-446a-94a0-4f30e40aeb78",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "db81498e-a47e-4780-ac63-2c824a04d56b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd338d8-b42e-4220-b5d1-adaac334faa7",
        "cursor": {
          "ref": "dac0ed55-9b83-40dc-acd1-02f76810dbe5",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9dae81d4-51bb-491f-8079-0c799ccb3fa3"
        },
        "item": {
          "id": "0cd338d8-b42e-4220-b5d1-adaac334faa7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "36f6f37d-e0e5-4361-8368-2c02b24ae5d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db11b1e8-3d35-4f6a-af33-9980dadbfc26",
        "cursor": {
          "ref": "259838ea-f8de-4158-8e37-ce0ee3a02f22",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a9388e7b-1b76-4d79-94ad-8b8a501f421c"
        },
        "item": {
          "id": "db11b1e8-3d35-4f6a-af33-9980dadbfc26",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "49669865-7de4-4bf5-a300-5321a5a15559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc158e4-8912-4727-b285-2039ea9e00a9",
        "cursor": {
          "ref": "6c67d598-6f86-4a50-a82d-9f646d2a3e13",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2a211bdf-3c59-4a92-86ce-edf71d2a0af1"
        },
        "item": {
          "id": "4cc158e4-8912-4727-b285-2039ea9e00a9",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "00aa2807-cf8d-4d4f-9fed-1d46b8368799",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "962875ee-6daf-4419-a6aa-2798b838b014",
        "cursor": {
          "ref": "f8a14451-d707-42ee-8bf4-b43a932f584f",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "beef1633-4fb8-496a-aef2-983d845d9ac3"
        },
        "item": {
          "id": "962875ee-6daf-4419-a6aa-2798b838b014",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ed7e0ab3-db9f-4a23-adf0-a9abc1b355ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe3dd4d-6164-48c7-9046-2e593c88fb00",
        "cursor": {
          "ref": "dfc45c6b-076e-4179-b89b-8d8d401bd7db",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "2eb1c6dc-1019-42c4-b424-0b26cf1f4725"
        },
        "item": {
          "id": "ebe3dd4d-6164-48c7-9046-2e593c88fb00",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "4fca059c-9426-48c9-bf81-e01c97e16b0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f25fbdaa-0f0c-4053-9565-4524388aaf74",
        "cursor": {
          "ref": "2392a44a-18d7-4465-8511-e7bb89458892",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c6078742-cd13-4188-a02b-09ec8525fc3f"
        },
        "item": {
          "id": "f25fbdaa-0f0c-4053-9565-4524388aaf74",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "9069bf53-51f0-40c7-8f1e-18908a23dab9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29af95e2-87b1-4733-bef1-e68fdd84f2d6",
        "cursor": {
          "ref": "28be8da0-77e7-4f48-b0d1-f1d2adb967b9",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "76ac810b-505c-4d4c-bff1-3b114484e34e"
        },
        "item": {
          "id": "29af95e2-87b1-4733-bef1-e68fdd84f2d6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "24937dcb-857b-4a43-bcdd-85fd0994569c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91596e78-73cd-49d9-84eb-7da67e3232c4",
        "cursor": {
          "ref": "e2507da8-48c1-4e88-8f14-138f4531b31b",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "9c1ae666-0838-49ec-b286-84892f015d58"
        },
        "item": {
          "id": "91596e78-73cd-49d9-84eb-7da67e3232c4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "89ab2265-aa2f-43dc-91ca-ea5c343e9ed2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e632c78-b457-4b77-a46b-a2166645fafb",
        "cursor": {
          "ref": "adec25e7-5394-46ca-99ae-6ddeddbbb389",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "97db0be7-3b58-4ae2-8739-ba4877a63fc7"
        },
        "item": {
          "id": "0e632c78-b457-4b77-a46b-a2166645fafb",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "87e3fb3a-955d-4e68-9033-75f757c189e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc1b4437-04a5-41de-8047-5b74376b0e4e",
        "cursor": {
          "ref": "a70f1259-c465-404d-880e-e44f07b27b5e",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "1ffcaa55-9ed7-40d3-9fe5-eab2b74b8c4c"
        },
        "item": {
          "id": "dc1b4437-04a5-41de-8047-5b74376b0e4e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "611e0d4e-5882-423c-91d2-f13fbaa853ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb753ede-2358-48aa-b9fd-b693dfcafc33",
        "cursor": {
          "ref": "cb865a96-2820-44f6-9580-f69c9fe149da",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8082b5eb-20b8-4233-b456-7ce91057da03"
        },
        "item": {
          "id": "fb753ede-2358-48aa-b9fd-b693dfcafc33",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "574536c6-7815-4ad2-acbd-b959a8eb4122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc66ac1-8c86-4e66-bb2e-f8090131c566",
        "cursor": {
          "ref": "0ef720b3-b266-440f-be16-9bbdc5f735cf",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "67d9fc42-1971-41d5-93f6-2c4b83638d14"
        },
        "item": {
          "id": "fbc66ac1-8c86-4e66-bb2e-f8090131c566",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "36145508-26eb-41e2-a218-6822da93ca62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f9554d9-c81a-4371-a62c-38e41d8b9841",
        "cursor": {
          "ref": "bcf38650-ff0d-458b-99a7-c478562ddccb",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "64664138-cf25-4a49-8dfc-9faa826863ba"
        },
        "item": {
          "id": "1f9554d9-c81a-4371-a62c-38e41d8b9841",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1cf722f7-706b-4238-9fe1-12c2d9e5902d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d0a670-3a8d-411d-8b2b-8195a04574dc",
        "cursor": {
          "ref": "48787bd0-cda1-42bd-b507-2270d2c23a2d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "bd447917-2cbd-4276-a128-0b89f104b1aa"
        },
        "item": {
          "id": "24d0a670-3a8d-411d-8b2b-8195a04574dc",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "88708069-bb83-4496-92c6-a12f7c26d741",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0158cd28-cf8d-4ec9-ba54-31209ae5da61",
        "cursor": {
          "ref": "d301a749-b95c-4c5c-b8c6-6204e1efb404",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30dc837c-79f0-48fa-b1c3-e498aed09686"
        },
        "item": {
          "id": "0158cd28-cf8d-4ec9-ba54-31209ae5da61",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "8d6d78ce-ffe2-43fa-8157-0ea7498a52a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33d1d9b9-bde2-4b1b-9b6f-a6d52090c771",
        "cursor": {
          "ref": "7b04967c-4d1e-48e9-8264-0af97419da35",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "247c0985-29bf-4f97-85c2-f90a76d149b7"
        },
        "item": {
          "id": "33d1d9b9-bde2-4b1b-9b6f-a6d52090c771",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "f607997d-28a2-4be3-90a3-f837e2a067ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c12393c-23e2-41aa-96e6-03b8ea2c14d2",
        "cursor": {
          "ref": "5979a3e6-a31e-4ecb-b4f5-48e0e0d7b48a",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "8d0f8659-9d04-4cf0-b0eb-97f160544e3a"
        },
        "item": {
          "id": "5c12393c-23e2-41aa-96e6-03b8ea2c14d2",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3ed5217e-c9b1-4363-9623-f759c41f1b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d699a419-6788-4100-abda-f586c4d100de",
        "cursor": {
          "ref": "99d155a0-ebf1-4d42-a56a-0d1b77eb05a0",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "a3a88bd0-1936-4920-b7ed-05653da8390c"
        },
        "item": {
          "id": "d699a419-6788-4100-abda-f586c4d100de",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "eab9c7c5-4237-4c4d-8573-0c5acb92be61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d79a9b6b-294c-44d7-a347-bb2b9a2ed45b",
        "cursor": {
          "ref": "35a20757-5cfa-49f1-9eb8-f7992a26d561",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "d480fd26-a969-4f56-a6d1-51475a4459f9"
        },
        "item": {
          "id": "d79a9b6b-294c-44d7-a347-bb2b9a2ed45b",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c81819f7-be46-48e2-a53b-f3b530129240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ba93e20-0b7a-44d9-8ac9-7d9b401d92bd",
        "cursor": {
          "ref": "8c00084c-fb0f-4f66-b112-e7b4086074a9",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9deff247-cb6b-4711-abb9-89c12cb3cc51"
        },
        "item": {
          "id": "5ba93e20-0b7a-44d9-8ac9-7d9b401d92bd",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6a7864e8-44ae-4440-ae2e-f1aac4cf0a95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56665ae5-6f63-468b-8c13-8901df6fd862",
        "cursor": {
          "ref": "c32ca774-c34f-4bd0-a7cb-2c04fa6b9223",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "275f7214-4394-49da-a3e3-b99a6c74dc98"
        },
        "item": {
          "id": "56665ae5-6f63-468b-8c13-8901df6fd862",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "571f5ddc-3314-4bfb-8478-346aec5a6cdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b171289-b828-490e-9726-ebaacd47cca7",
        "cursor": {
          "ref": "dd936e1b-aefe-485d-8684-0f60ce96446e",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c6cc2589-f182-41c3-9bea-8939ebb005a6"
        },
        "item": {
          "id": "7b171289-b828-490e-9726-ebaacd47cca7",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "915dad2f-1de3-4962-a271-2773b3aec8f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b600cdb-d7be-4846-8b54-4aafee36dd9f",
        "cursor": {
          "ref": "cf370860-54e1-4445-b4b5-5e6ee496da25",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "beee0c73-8d44-4dc7-9b0f-37c446da311a"
        },
        "item": {
          "id": "8b600cdb-d7be-4846-8b54-4aafee36dd9f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5ba49080-eb77-45a3-871c-5a24dfa3fc55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdd085eb-9187-4ca8-b24d-2891906ab31a",
        "cursor": {
          "ref": "6855616f-f5be-4f61-881a-ef26d7b02b50",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "03853cc8-101b-4b95-896e-2040f1883fb0"
        },
        "item": {
          "id": "bdd085eb-9187-4ca8-b24d-2891906ab31a",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5ec72ce4-cc0d-4cca-9861-fbdeb61e8c73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9936fdb7-8845-45c7-a33e-53293ba16377",
        "cursor": {
          "ref": "e4fd0827-c35c-4791-82a0-f60ac1238c3c",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e5715762-bb47-4d8c-bbce-eae855ae82f5"
        },
        "item": {
          "id": "9936fdb7-8845-45c7-a33e-53293ba16377",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "f6660995-35e5-4ad5-b8cc-1918120587f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aece4fb-f936-4013-8ad1-84ffaff81183",
        "cursor": {
          "ref": "028cd495-82a8-4b0f-978d-9218362c9fe4",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "4fb6b2e8-1f74-4fd9-b0fe-5c4f97a85061"
        },
        "item": {
          "id": "4aece4fb-f936-4013-8ad1-84ffaff81183",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4fd2fb6e-9149-4c39-886a-79b3afed44c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4409df66-52a8-4edc-b228-4fd50b369819",
        "cursor": {
          "ref": "95f2d1ba-2123-47ab-ac47-39b8c0783a38",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "ada3d644-0fff-4777-9c70-82802b8e7f66"
        },
        "item": {
          "id": "4409df66-52a8-4edc-b228-4fd50b369819",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "d30c05a2-309d-491e-bd9a-63b16b577870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8c62159-df4e-4537-9d6a-97d083048908",
        "cursor": {
          "ref": "d520ab3c-cc39-407c-beaa-61a604d74bd4",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "47a14400-d603-4cee-8a1f-24766b1f300e"
        },
        "item": {
          "id": "d8c62159-df4e-4537-9d6a-97d083048908",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c27a9f48-8818-454b-829a-db5584ac8f89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "184f40a7-3014-443e-a038-a3587add1af9",
        "cursor": {
          "ref": "eede68d5-4e7b-4047-91c7-58c25058f9be",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3bad1da3-694a-4399-8900-e92c9a2a3974"
        },
        "item": {
          "id": "184f40a7-3014-443e-a038-a3587add1af9",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a695c9bf-421d-43d3-8a80-cff867979071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16adf66b-76c1-4083-8d78-121246d094f9",
        "cursor": {
          "ref": "c3c05b1e-e11e-4626-a680-a49139ccef8e",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "21465cd5-6824-43a1-832e-1ec9040f66c4"
        },
        "item": {
          "id": "16adf66b-76c1-4083-8d78-121246d094f9",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4a9154ca-b280-46e3-a3b5-5f06b267ffa2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27180b56-a32e-4e18-b27d-662cf42d716a",
        "cursor": {
          "ref": "fc5f3a0c-4946-4c4e-b162-f9db40b422dc",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "8e34521a-d31d-4362-89a0-618004255f72"
        },
        "item": {
          "id": "27180b56-a32e-4e18-b27d-662cf42d716a",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0d0b737f-f341-4724-8b55-4b7295d40dd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ac419f-6cb2-47e9-8d3f-6c58e3981331",
        "cursor": {
          "ref": "302ea5f8-dfa9-4ca4-a90b-c63ce630989f",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "19527cd4-f59e-4e5c-9773-e39da2772bce"
        },
        "item": {
          "id": "08ac419f-6cb2-47e9-8d3f-6c58e3981331",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3700d82c-7793-4ecf-9194-2904cc4c99ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920b1c15-71bb-46da-8b23-3648d963e8d1",
        "cursor": {
          "ref": "0223f15e-f0a8-4b6f-8e4a-abdd36716d9c",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "cbce57c1-2482-41cc-b885-205b2c2d5ba5"
        },
        "item": {
          "id": "920b1c15-71bb-46da-8b23-3648d963e8d1",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "f0cf2826-975a-46e1-8a56-050495e652dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16e375fd-6a66-48bf-97aa-0a7ebb35ec58",
        "cursor": {
          "ref": "623a39b1-48fb-4270-ba3e-ab72ceb382b8",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "841864cf-5b92-4270-a3a8-ab69634fdc5c"
        },
        "item": {
          "id": "16e375fd-6a66-48bf-97aa-0a7ebb35ec58",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "6d68d798-f858-4818-a56b-c1e21890ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "998ec8d8-1f99-4bdb-9d3f-0867b271a365",
        "cursor": {
          "ref": "c7d17e21-5a11-4e10-b731-2afd8ac187aa",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "8f76e5da-2cf5-4f15-bbf6-c90a7cd3ccd2"
        },
        "item": {
          "id": "998ec8d8-1f99-4bdb-9d3f-0867b271a365",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6cc194bf-d905-4d54-9134-f2b09f1c2782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2c872c0-d5f1-489c-a6d2-3fdd49527cbd",
        "cursor": {
          "ref": "a7c2c318-a398-40ad-bbe5-13446a3356f0",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "51ee0697-58c6-4a93-9c93-0482eb11b7a4"
        },
        "item": {
          "id": "a2c872c0-d5f1-489c-a6d2-3fdd49527cbd",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "54bcd199-33ec-481e-9ca0-d8022dce8251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d367458d-b0e9-415a-a931-6ddb3d552560",
        "cursor": {
          "ref": "4c43c23f-b120-488d-9856-5650ab349e68",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "259b8f26-fad3-4f58-9df5-fcbb3687acab"
        },
        "item": {
          "id": "d367458d-b0e9-415a-a931-6ddb3d552560",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "37878f34-21a2-4d7a-94c7-75729d4eb2bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07d9c35c-ecc6-4af1-a664-31561a707ed4",
        "cursor": {
          "ref": "5ff074a9-738a-4ef2-95aa-ab3d5a0f7c4a",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "77807bdf-2fab-4722-8083-b0b2e23a9156"
        },
        "item": {
          "id": "07d9c35c-ecc6-4af1-a664-31561a707ed4",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "08a9f1da-1133-4c26-a1c9-99aa23fc4b00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9f64035-f033-4bc5-a216-89f628fd2998",
        "cursor": {
          "ref": "dd19a496-6145-4316-9912-f52380c367c4",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "705690a8-f531-478d-bd84-047622ec5946"
        },
        "item": {
          "id": "c9f64035-f033-4bc5-a216-89f628fd2998",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f96728b0-7e04-441b-92ed-3089830a2496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19cccf56-a99c-4b52-ae5f-cd10df934e3b",
        "cursor": {
          "ref": "74f9e072-a614-4163-96b6-5b3ad4f956cc",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "21e12635-6387-40a4-aa9a-f7e8d6852616"
        },
        "item": {
          "id": "19cccf56-a99c-4b52-ae5f-cd10df934e3b",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "9530b5d0-b892-4017-9eba-544f8b3feb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51319f36-6c80-40c5-a354-64781b221f1a",
        "cursor": {
          "ref": "140f16b2-85aa-4605-ba6f-ff9e3fa2a2f3",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "49e834be-4d0f-4b2d-98c2-7be0104748ae"
        },
        "item": {
          "id": "51319f36-6c80-40c5-a354-64781b221f1a",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "2c63e661-0a53-4faa-94b8-beda0aa06ff9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09499491-d14d-467c-8a65-5c3ecc209cdd",
        "cursor": {
          "ref": "f72d0157-9f5b-4e00-a4cd-b5872d1e8a27",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "a45f8d9c-1584-41b5-aaec-6b8a6267e094"
        },
        "item": {
          "id": "09499491-d14d-467c-8a65-5c3ecc209cdd",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "02a5fc1d-c956-46f7-8077-877e155eda0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b8b945-9fe2-44ba-b425-7dbd14a3b3f7",
        "cursor": {
          "ref": "d11d5203-6b79-44f0-801f-446b27070214",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "855f846b-09cf-40be-8be7-6e121ffc0737"
        },
        "item": {
          "id": "33b8b945-9fe2-44ba-b425-7dbd14a3b3f7",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "5d324143-4270-4183-a3b1-80c90b994918",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a266c7e-9ec8-4188-8a64-53ca2430e555",
        "cursor": {
          "ref": "0a664624-654a-4393-9c1a-8b3aa203d460",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "0690f443-127f-494c-92ae-0e87642746fd"
        },
        "item": {
          "id": "6a266c7e-9ec8-4188-8a64-53ca2430e555",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "7080f071-303b-4418-b141-15b0cad85a77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c14267-bbd5-421e-ac8f-73499b0d8e14",
        "cursor": {
          "ref": "b6433f8c-f115-4493-8926-2eef26122274",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "56541926-6f28-4eb4-bcb8-3866eefc1437"
        },
        "item": {
          "id": "91c14267-bbd5-421e-ac8f-73499b0d8e14",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "f5929b6c-573f-467b-8794-a4f0f050daa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93abe304-afb0-4370-a4fe-5c897d7d3cd8",
        "cursor": {
          "ref": "388be4ef-a126-4747-8ff9-b22f0ef935c8",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "9470fad7-7089-47b0-bc7c-de4ff6c5f2cd"
        },
        "item": {
          "id": "93abe304-afb0-4370-a4fe-5c897d7d3cd8",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "a3e305d5-81b1-43c3-9bd0-8b1ef28c4a98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc78a8d-bda2-4db2-9448-e0e526e3b1f4",
        "cursor": {
          "ref": "eac3b618-8a5b-4278-8a08-9be2afb2c27b",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "a04a8539-80a3-4ab5-862b-6f317b2ae5bc"
        },
        "item": {
          "id": "0fc78a8d-bda2-4db2-9448-e0e526e3b1f4",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9ca8da0b-9c58-4a64-a021-afab42b143db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db58d42-b623-41e0-b889-f8df0af728fa",
        "cursor": {
          "ref": "0d307b9d-5551-431f-af7d-6ab29c7dfae0",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "127a9868-55c8-4a5e-a182-06d43ead1110"
        },
        "item": {
          "id": "5db58d42-b623-41e0-b889-f8df0af728fa",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "c66e19bf-ff2c-42cc-9fb6-abaad76c0388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd915d3a-d8f3-4473-afc6-9de8154907ea",
        "cursor": {
          "ref": "cb2d81e3-d45a-40b4-bf78-b4820cea00f8",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "d3a0f9c2-d3a1-41c9-b873-6861a661fb65"
        },
        "item": {
          "id": "fd915d3a-d8f3-4473-afc6-9de8154907ea",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ce81864b-1b78-4ff1-be1e-38e73e73193a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e26672f-ec76-4831-820f-728a3749ced9",
        "cursor": {
          "ref": "99a98e93-7982-4e73-9712-56f20b2ba90b",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "698577f6-5714-4c50-8f7b-b050d00084ad"
        },
        "item": {
          "id": "3e26672f-ec76-4831-820f-728a3749ced9",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "f7754ecb-b8ad-44bb-8d02-00931c28dbd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3da8b35f-592b-4478-b24e-81c813c14613",
        "cursor": {
          "ref": "4f402499-6eef-4646-8ccd-d615d9aa3dec",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "013c5161-c7e3-4f43-8ef3-8133c7161122"
        },
        "item": {
          "id": "3da8b35f-592b-4478-b24e-81c813c14613",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "f5de861f-bfec-4c6b-bc74-d4e4ed5f89f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36454f13-2693-442a-bf08-92749c7c8d8f",
        "cursor": {
          "ref": "333506d7-c270-4ce0-82da-29ef5a8a8b24",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "1c86a64b-c643-4c60-a9e9-5900c6371c25"
        },
        "item": {
          "id": "36454f13-2693-442a-bf08-92749c7c8d8f",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "f26ad51b-db8e-4e42-99b4-457763517648",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df49f595-b028-4120-90e3-4850af2d18d0",
        "cursor": {
          "ref": "e7b12f3f-4ca4-4354-bf9c-acc8690596c4",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "ed54acc3-e1ce-4746-b052-38e156d0ef87"
        },
        "item": {
          "id": "df49f595-b028-4120-90e3-4850af2d18d0",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "cca7013e-0cad-49c2-8cad-e6117ac65fca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf2a2d1d-5492-4243-b3a7-33bbdb3e0387",
        "cursor": {
          "ref": "1068a44f-959d-41ae-8237-c270c1a5128a",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "1d430bad-c033-470a-9fba-4c1e0bcab247"
        },
        "item": {
          "id": "bf2a2d1d-5492-4243-b3a7-33bbdb3e0387",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "23fa8079-b1a0-44eb-89ce-d3dee1060217",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "880f5bdc-76c2-4045-a177-b20c2ab6ea43",
        "cursor": {
          "ref": "58de430b-fa50-4f7e-8051-a17f2bcfb5a7",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "e41d06a5-d944-4076-bbc0-52e09a847087"
        },
        "item": {
          "id": "880f5bdc-76c2-4045-a177-b20c2ab6ea43",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "a20b1194-d2d4-4e40-9b67-4245ff2c2aff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de73662a-7077-4105-9047-7fd9b9634cc9",
        "cursor": {
          "ref": "5bd5dd34-1906-4cf1-b52e-30f6f6209428",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "fdd6709d-2f77-43e2-a09d-b902afea3877"
        },
        "item": {
          "id": "de73662a-7077-4105-9047-7fd9b9634cc9",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "fa98de4c-9262-401b-b02d-dc9dc90a3dca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d39052e-8142-4980-9d69-7b2655ca6e79",
        "cursor": {
          "ref": "7c32d8e8-fa1b-4a5d-9f79-d973ded3d1eb",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "e0292a7f-bdca-452b-95ad-2904e3ab4af7"
        },
        "item": {
          "id": "2d39052e-8142-4980-9d69-7b2655ca6e79",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "5d9685fb-be46-4f02-960b-374983bb0319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91aeda69-d8c5-4143-907b-a0a68118c0e3",
        "cursor": {
          "ref": "7e24ef9d-3bc9-40b2-9ecd-fe910e902549",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "587bb44a-a78c-41fe-abd9-02d5d5b55b59"
        },
        "item": {
          "id": "91aeda69-d8c5-4143-907b-a0a68118c0e3",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0743d437-26f5-4c54-bdfb-c96ea760f21c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f45a6fc9-f03e-489c-9480-64294ba74d52",
        "cursor": {
          "ref": "31f0027e-6d3d-4d96-823e-74a1af6506b6",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "95b7e0da-0442-431d-b204-043da96ce91a"
        },
        "item": {
          "id": "f45a6fc9-f03e-489c-9480-64294ba74d52",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "195a6ede-2c18-4c64-8dcb-582973a777c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 51,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5a0bc95-28bf-46aa-bd19-18c2138c1025",
        "cursor": {
          "ref": "6c2cdb34-eb46-479c-bf09-def98859da28",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "41a92333-cb49-4843-80cb-64724a08933d"
        },
        "item": {
          "id": "a5a0bc95-28bf-46aa-bd19-18c2138c1025",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "1aad0623-261e-405c-8a01-402af2f7754e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b45f7881-6bf7-4883-923d-bdb36db9976d",
        "cursor": {
          "ref": "2181db6b-4e62-404e-b3eb-ee54d5108f45",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3863237b-b7aa-42c1-b7a8-5fe2d516686c"
        },
        "item": {
          "id": "b45f7881-6bf7-4883-923d-bdb36db9976d",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a8602b28-2add-4cba-8477-66a50e32cae7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33eee557-bd5a-4b14-b31e-50a23fef5696",
        "cursor": {
          "ref": "36ceede7-ca1d-48c1-99c8-f87ffa2f9c7a",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "de90f28b-d9fc-42e8-92c0-753c4262adf5"
        },
        "item": {
          "id": "33eee557-bd5a-4b14-b31e-50a23fef5696",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "58a14800-8b52-40f1-9c98-80524b035535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aeab81b8-366f-47b7-997a-ad7060540920",
        "cursor": {
          "ref": "66c39729-b74b-4215-be1b-7d17a1ae031a",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "c798964c-cffd-4751-a438-41fab08e74bd"
        },
        "item": {
          "id": "aeab81b8-366f-47b7-997a-ad7060540920",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "358201ca-bd18-445a-93ed-b566ba24c269",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb38d35a-9b77-43b3-8e11-9f913fa53bc2",
        "cursor": {
          "ref": "3d5ecd5e-5d43-4fc7-ad2c-a7b1c6886cac",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "bda8dc3b-5992-4af7-ac21-8c17123dcb66"
        },
        "item": {
          "id": "cb38d35a-9b77-43b3-8e11-9f913fa53bc2",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "836330ee-db68-4757-b945-9d2e69f8ebf4",
          "status": "OK",
          "code": 200,
          "responseTime": 69,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb466887-717b-41c1-9f4e-93eed4c9dd45",
        "cursor": {
          "ref": "85b711ed-1ddc-4cef-a473-07e59f1be0ae",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "79ec3ca0-1075-4660-ad79-f7436b2ff629"
        },
        "item": {
          "id": "bb466887-717b-41c1-9f4e-93eed4c9dd45",
          "name": "credentials_verify"
        },
        "response": {
          "id": "635b4fcb-2b7a-4c3a-9b51-4c31e626c4dc",
          "status": "OK",
          "code": 200,
          "responseTime": 2271,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe199430-4b29-4d3a-9db6-29b1ddaa656a",
        "cursor": {
          "ref": "e03edc1d-92a4-4fd7-8e31-849bad2bb2bd",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "7b7b20f5-cf38-44f7-965f-2e94efb8bfba"
        },
        "item": {
          "id": "fe199430-4b29-4d3a-9db6-29b1ddaa656a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "b70bf06f-a149-4cfd-98ef-3e782876a44c",
          "status": "OK",
          "code": 200,
          "responseTime": 2740,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0887cb25-2219-43a0-be78-c8462760845b",
        "cursor": {
          "ref": "243b9f5d-09b5-4ef1-b230-310540095011",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c6dec332-b5a1-4fc0-b3e4-63b196a2740d"
        },
        "item": {
          "id": "0887cb25-2219-43a0-be78-c8462760845b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df2e9b8c-ac3e-4af2-8725-474aded4735f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0887cb25-2219-43a0-be78-c8462760845b",
        "cursor": {
          "ref": "243b9f5d-09b5-4ef1-b230-310540095011",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c6dec332-b5a1-4fc0-b3e4-63b196a2740d"
        },
        "item": {
          "id": "0887cb25-2219-43a0-be78-c8462760845b",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "df2e9b8c-ac3e-4af2-8725-474aded4735f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11446e5f-6ad5-4ccb-9650-e0d72171a242",
        "cursor": {
          "ref": "5a2bbed3-a4f3-41b3-a6d7-701b1bf49440",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0e4716f0-8fbe-4c4d-9f88-120e0dd5face"
        },
        "item": {
          "id": "11446e5f-6ad5-4ccb-9650-e0d72171a242",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "a67df052-e101-4100-8280-73e03859c463",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 21,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a52363b3-300e-4819-8be9-6dd9c2f08b28",
        "cursor": {
          "ref": "55ce9b4c-10c8-4a51-9e87-bc77e40f2858",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8680ca08-7d02-43a7-95a6-1c071304fa18"
        },
        "item": {
          "id": "a52363b3-300e-4819-8be9-6dd9c2f08b28",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "d7901f44-7ddb-4eb9-99b7-a9cafe887d35",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 20,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}