{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "56ab6b20-5a9e-451d-ba60-8bfde2666be2",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d55b214f-e9f4-41e6-9c80-b4087b5dd04d",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "13dacced-d0a6-4b35-90b1-e16958fe0835",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72e84ecc-7788-4e66-a08a-5df987acca19"
                }
              }
            ]
          },
          {
            "id": "f93f53e1-66f3-42ca-a0ed-a346d77777cb",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ea99b999-0e74-48d4-9e44-04cdd825d188",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "b8bf0acd-2531-4c6e-92fd-a2ccdb3a47b1"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3f945de0-148d-4d29-9d80-9b9730844323",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "28470d04-3d2c-40e6-a176-288c8864b15e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a1383260-d64b-4ba0-8211-60d5921520bc",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8bb4a7a-820f-4458-bb0b-7ca1c0cc0ac5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "036ca890-e928-45bd-b7fc-800fcaa37214"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "0df7af02-bfaa-4edb-9dbf-69758df2838b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "55a30dbb-1268-40bf-827f-c9996e6a6727"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "43658712-4cf2-44a0-a00b-edd140467f1f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4918fa3d-9fe6-42c7-8963-bedee09314f4"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "45fd0599-f7f3-48c1-8c05-e5045bed7d6b",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "f19ec6c3-1a0f-4a46-907f-1711c7aa2819"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44184c1f-fd6c-441e-8c06-2897e69e4278",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "080c29f6-226f-4733-b492-75433ef1f309"
            }
          }
        ]
      },
      {
        "id": "6e00f999-47d8-4bd7-8979-de1e6a9830de",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "75c30f64-2a26-4ccd-bdb3-215e8b0b450a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cf587326-d3b9-4213-8774-06abed16ce60",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bac7410a-7b95-4fc5-a9c4-b8051c760cfa",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f0c54be-0f96-4ccf-8dd4-a8a0e4b36193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "40be9c95-7f63-4866-ba2c-f1ec770e9084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f827e611-7aac-4679-bd7d-a6440035ad76",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "869db920-748e-4623-ad4b-9d039ca08794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "27d2d60b-acf1-4130-8c41-5fbd592c4578"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96e76ac4-8643-495e-8864-e1826c76e518",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f16a692-df49-4780-a8a5-8b9ec4948908",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fcd79e6a-a701-4919-b589-f81cee2fb88f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "327fbdaf-7713-490a-857f-c903a61c2ad5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7465da1c-d5ba-4524-b60a-d950d735b83d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ab6cb1-4558-4419-954f-33857abf47f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "70d69545-ed03-419b-b0bc-4aa1e79bc87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e12b8d45-d1dc-4c41-8aec-a69b0c785dcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "783f4710-849f-4163-97d3-50d48d41dc47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "12c48d37-9073-4cfd-85b5-e8b18daca270",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a313b6a3-5bf4-48e7-9c6c-b57caf91330b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8015f928-769d-4030-a52b-ed7d08b61b60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb388240-91f5-4b35-89b4-c24288d2b755",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "53e0f5a7-cfe1-4428-85d4-c26d52f1aa1d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b2ed5530-a837-4899-96de-3a361c2cd974",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c77fbcf9-df3a-4eb4-b692-4900b327141e",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a61d3e86-b7ad-43dc-91b0-52b7f18f75eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "33b7bdd1-d9ba-41a4-86fe-e5faeffd5a6a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7ca5c3f-0f07-496a-81a4-1d17731f7e14",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "7288e172-0690-47d0-8a58-d04450dd51c1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "43673a05-b14b-4f91-bfe5-d47500485b09",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "532248b1-704c-40a8-a341-1c7aa1efdef4"
            }
          }
        ]
      },
      {
        "id": "6d6a17a1-b8f0-4f1b-ad2f-bd4fdbf5af68",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9d6b2419-e988-4361-a8f0-5b84198620d8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "aa573a0d-b422-4cfe-86f4-667b99b55cd6",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "497d9f98-f553-40e7-8e6b-3dc38502f5c6",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3cce4eb-04cf-4883-a448-6dd85742a986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73353233-c582-4ad2-a8d6-cd3a0412ce0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e1d2cd0-b49e-41a3-9d48-f670a14840a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d5f8f1b-7b12-43a9-b069-be53417b0b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d441c31-4cee-4187-920a-e444e2fb40aa",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f834ccaa-50ef-4559-9f87-1a02dcbcf0f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "779e2aa2-3a14-4297-9ac1-f3e952830425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ffafd7e-24ac-4a1d-b0d6-0e65894a97c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ebe71e-c864-4a15-a6fa-2fc83978d276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba93a923-a804-41a2-a3b9-4d973dbdd80b",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af88621c-56c9-47f7-9d95-50638a7a8aa5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e285039-a052-4f6a-8f9f-1105f5d3901e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a6d5cb1-5da0-43db-90ec-2dbce33213db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7f095bfe-bd62-4789-9f96-67cc101de866"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cc902c7-50df-49b7-8f63-2442d7216612",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "767d3e47-5843-427b-868c-1672ba34ad14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b2d0fda-87e5-4ea7-be33-b344db52997f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf9baf2b-84c2-440d-b5ac-6df24cda0e34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d57de059-aecc-4e81-97ef-1d49201247a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e01e24f-e058-41de-8fbe-d8eca5f79ff4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c4c6178-ccb7-4d59-80cd-4bffcc2e370c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560f190c-7719-4c82-a4b0-5de9da0938e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be424156-ebe0-49b9-9044-9ca6274c5497",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ec05865b-b2d2-43cb-aa70-ac6a685b7d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7aa4c7-3174-4788-b5e6-7808948db0dd",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d755c251-8e11-43cc-ab32-e7f308ceadf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cebc17e-3950-411c-887e-39ca9c9641e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced3c0b0-8d35-40c0-bf35-8744ab590c12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "59281292-1d7b-4312-aa34-28c101e207d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6815cf7d-1c4e-4eac-bba2-1f671b3baaf5",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2d6823-6e8e-40db-84c1-c997ccc4f7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73afe653-6aaa-4c15-8796-16af6daaf28f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d01a212b-a285-4c70-a518-62c0a0e7d3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bcd0cf99-2377-4aae-a112-e08ad29e4d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bd3d038-1132-4cd4-9f1c-b795adfae73e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38ad492c-e55d-4191-a724-7b4afcbeb2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef7e5479-c20c-4eb5-8b15-4123bbe77922"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a16c301-fe72-4d55-9433-9a8c60acf961",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2658a0c8-4d7b-4d13-aaa6-66cbd112b9b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e90fe1-dd6a-4021-86f0-c9651e11abfc",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6eba984-e024-4cad-9772-b998c2a808e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6543ec11-e428-4b69-a503-539d866c7bc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2ff7712-59f6-4d62-a78a-8b7c070ce3bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "521ea309-67da-46bd-94b0-c9ba1811aa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e5cb74-4593-4ba1-9e7b-7f3cd86e81f5",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6187c8b-c110-455b-8ecf-803d75cba2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "855a8d5b-4f04-46dc-9d75-19f874c17834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "881f74dd-0568-44eb-86b2-03f8f73fa59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5f8c453a-abf9-49ad-811f-f32dc70b83dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c66eda66-ff52-4247-8f08-da87a6d74011",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f1adf3-be22-4046-a122-e19d6fdb6d6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae877f78-b613-4e81-81b8-fc47a15a7ccd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13a69dc6-56d1-488b-8c9b-91df2df4b0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "36cca544-3faa-41ac-a4ff-046878219c93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c44087-7686-4e35-be05-958a60796a74",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1e3d694-3912-421f-b419-a9999d53c138",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8409930-5c24-47b9-91d9-cb012371c496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6baef53b-c385-41f2-b4dc-33f3d653bab3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "292870ab-9bac-4572-81e9-008822bda35d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "420bd314-4050-42c2-8f1f-66057f17488e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c177172-9bb3-4c46-b977-5d6d4c1dd5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ccc0075-c7d5-45eb-a6b0-be7315f6ac88"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af022f18-4a88-4ce2-ae32-32d54ac9e36b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "12472184-8777-4828-a47e-293ac140c4e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dec413cc-f2f0-4d95-a8b4-e46249cbb5f1",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd09ed3-62c2-4742-ac4a-e7aa789259ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4fb952-793f-4214-956b-8e5a8e981c57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc41d0ed-c1ba-4d23-bbed-5aad4f59609a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c48022a-3e64-4c9c-a788-57d9f7496b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e2516d2-8457-48bc-bf64-afa7b93e3427",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f01dc94-2dc3-42d5-b480-185672391a66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0880e4cf-cec9-4334-a23e-25e99463ad91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "702ae824-289b-421a-83ac-dc633ec14ca8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "20a017b3-a966-4a3e-8301-0f9398332791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "696c316d-c018-4739-82b2-eb4377560e23",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "463992cc-a0ec-4b7f-a536-ea2d8dbd47bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d501dc-398d-4bb0-afbc-bdc561ea33a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9caccdca-7b49-4cc3-a871-154fe75d396a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "855d5891-bb90-491c-af8b-e451966da57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b87c295d-9430-434f-8036-1d4dcdbc81b0",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59162c6-f667-42d6-8d33-023bef071064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3bc79a7-e9e5-4a79-9db5-ddd86658b1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5825cc95-d379-47b3-87b5-3d2090688925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb8a091f-bb54-49de-8f49-7fd290c67b08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6eb0fc2d-d1a0-42f4-98a7-59e067b3585e",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8f0bb0f-7c35-4351-bdb3-dd64bfb6bff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ea8b1d3-5cbe-49c9-8690-5a0231177b56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8afdff-8441-4898-9de5-bb003a35cbcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a9450d3-fb86-4e4a-9733-da1a9d4a4096"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f03fb2e-9e12-4e3d-a6b2-7bb7689215e3",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95810d96-9b9f-4da1-91fe-630633beda65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1058d83d-ce39-4923-a50e-d4ca7b9a514c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3203586b-cdb1-4402-9f10-22e55a5bed70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33a34a1c-e561-4719-a8b7-ad14a27de09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9924b4-9c66-4f22-94a3-86d795d96296",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61e27dbe-a599-483b-8d72-b1f1ae803474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "315720f6-1c36-4e33-a630-ed4c3fd899fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9d4444e-0de1-48a4-93d9-111ab57bf30d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7a75255-0de6-49b3-bacb-322069d277ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161d7fe-a0ba-4af5-b054-e8e21fcc3fb6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "220a914b-ce47-4a4f-ad79-0ab98398f4e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93010bc7-c179-4868-9284-39c79e8ec058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fb5efac-df4e-44b4-94ea-5f9121ac3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab2b3e88-ba0a-4927-b8ce-bc90d3619cbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "878bbce5-5b7d-4cd9-83d8-4093fa9184a5",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1edea78-8a51-4763-9e8b-17d775daf62c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6694958f-c39e-4db8-aebf-fd6820883fed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3faaf4b4-7a82-40e1-b522-9b7bcc77d04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "dd2c3216-834d-46e8-9dba-299ef204dbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36358120-cd05-4331-b494-555a60a71944",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aa2f895-d626-41be-8adf-8f60d4d50194",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52fba391-993c-42fc-9ff6-304e1d653bec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81e7a59b-9db7-4d59-9f84-429f9711cb44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d3270121-c7da-4f62-9c82-8a053af1c586"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98e2c1ba-99a3-4273-85aa-149a3c05496a",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fedbf6ae-2cac-4836-8f1d-20ef4c0fcebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8666ca0b-e3e2-4ea8-b746-be3e0c1a59b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12d66a7b-bd1d-42df-813f-7d7ff01028a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "47175a01-ae26-4835-88a1-a3cacbbb5b74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c10a000b-050a-4860-bcfc-54569bbfdf3a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0c2b30-c75f-4819-81a3-1c7fc625f7cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb03b45d-6727-4b57-ac38-c30070608882"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7183b28-a087-4fcd-a7be-9f846f10b368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb3db9ea-874b-4a0c-b6c9-3260e4e55d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c8604469-5c92-4321-94b5-3508530e8f76",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa2395db-6c5b-4967-a78e-393af7d6ab82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54c4ecae-e94b-4562-91bb-a2599ce48f10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab50e58c-81cf-4f11-afff-6c96abbf614e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a4909651-f024-4135-997a-3419ae179a7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67761cf1-03df-4911-8037-563ac5939f94",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "575cb558-dab1-4e48-8f19-a1eee362ff15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33937ed9-54f6-4060-bed3-3f5bf15b1ce8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "613b9053-3790-46d9-8010-e2f7401ea26d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "65173926-7252-44e5-b150-71ec70f0eac2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27114f37-1f17-454e-94dd-1b8f44357897",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27c32f7a-187e-45d1-a797-1d7850a39ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df38b218-dfe7-46cc-9723-f526865a35e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1959a53d-5a73-4c86-aebd-8790b791ac2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a3104b6a-8595-4e61-80ed-4144e8fa9ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c130a1-76c7-4bbe-9623-d8f697c90ded",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc681a01-1e49-46f0-846f-779b80161947",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "117a6a59-5b6a-4321-aff7-3b3634b37299"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1337b8ee-9285-45c2-9317-91bcd00b2753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c9f4ad7-60b3-4eb4-818f-af6433315403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc4350f8-db6c-4e78-937a-116b2432fcf8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e41e25e-fce1-4451-931d-375f9662ac47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20c5b864-6523-4536-9df9-700fe880f6fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8583677-6032-4cd1-8f5c-713481145dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe077687-9852-486c-8d21-862c763b3e02"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abdda149-983d-420c-9637-b323d6f01983",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49e1a277-7c56-4697-913c-9a1d7fa69345",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86aefe66-7f67-4550-8371-3ceae6e220b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cccf52f6-303f-49b4-b571-4058ae7f283f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "58eaabd5-f4ca-4367-87fd-ee6cd82701c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "79e0c8a1-5831-465b-963c-70c000886a96",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a21b96dc-c81f-40a8-8b19-347078b4404a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f826405d-0761-4b0f-91eb-c98295f1af92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a6dd2b4-092c-45c8-834f-fae2ebceb2a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "562356c9-482d-466e-a69f-e454e84ef99a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba3e5764-df49-4d6a-98fa-38e548a8b6a7",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e7cb7f1-65a9-4cd0-9816-b6dad048da95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4592dbe-0520-4f24-b9d1-59a83a498d02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dfc49af-10d9-4efb-8bba-17d52fd9c433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8a88514-ed79-48ba-a7ee-73cc64379a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddffe9c5-c655-4cb4-a6b4-2695eea195c2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dc730af-a83e-4f18-90f5-c808a1e52dce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cafba2d-5416-4d0f-a306-980d9eea316e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5052cbf-3f16-4e94-ba80-e3bde794f20b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0740f5f7-6ad6-49b6-a2a7-a2521a784802"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3fe17f57-3e1f-4e22-ad00-af72417491ea",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27759c7a-1ded-4b96-bb44-9ebfa078a768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbf0b491-cee3-4671-ba68-fff8185ebcb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ce99b1-24e1-466f-937b-fdfa11ea091c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "43aee826-daeb-4ca7-8267-f5626cf6db60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66afdd1-20e3-4d81-98da-5eacae737161",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "096cdb3d-7d4a-437c-af92-f761847419ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "77d0acc0-b23c-4721-9785-803346e53930"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3334518-cf61-4e6d-84c4-d90b6f26307c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "04c51112-a7da-49a9-a867-eab3c805c287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ad51ff-5b35-47cd-82c5-35863047d378",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa5f044-26a7-494d-9e23-b64055f25101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "782672b2-29ca-4fb3-929e-263a18369fe9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fe4c775-5a17-4544-a592-efe347e16c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6b7a5b0-5406-4137-a367-b2d9ad5514c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a30339f9-9917-4aa3-93b1-e8be9ee362aa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12df6e41-94a5-48cf-8c8c-dfce03d9629d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3eb709-887e-40f6-ad08-be086ce863b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98b291af-2477-4525-898c-f015e814eefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2de9ba4-2a43-4958-a462-1f7d1be3ffcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bd2fb7-2d01-4969-8f7a-21cc2aa3f8ff",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d7e2e8-3f29-488a-ac45-a3bb656aa1ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a852aa-783c-4eab-9097-c078c36e4a14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ba21b2e-d8ef-4799-be5f-5d15a7fc4eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "37a2c36b-77e1-4e49-b7e4-97075609068a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7931f7c-96d8-484e-9009-dadbed075e50",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "411b36ef-e2e1-4913-8650-c27cd9576413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d191036-0acc-49a2-8270-a03fe561319c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd13397b-55f4-444f-b20f-858662d8720e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd8a1ee4-9f12-4a6b-ade2-5e54cc2d6ad3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39d57183-b959-4ff9-84f4-8a4c746bf245",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "677b145b-e2ca-4f79-91a1-0ec2089386d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e22c994c-93ca-4f55-9ba0-e3a3e717fd90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bb391d-0627-4ea0-ba80-5235fc1dfd82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "724ff8a9-a960-474b-bf02-369350bd94c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceca40f-b07f-4948-b4aa-abc1247c458d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "679fa213-55b5-4681-ab97-4373f7441bd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1b549b-f72e-4429-9c2b-9fc3a2702847"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887a6d92-b05d-42f6-ba0f-6ea3feda420f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "5211a83d-65fe-4b1a-8a7b-77009d48a0b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b2fa58-4c14-480b-b4b1-340765f51fd3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b25d7dd7-17f4-438d-aaa8-75d6a2d5f055",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "741049cf-e6c3-46a1-8f6a-6d34b64ce6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "847fe0e1-d428-4ecc-8479-45551add30b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "307a2a2d-8824-44a7-b945-629c0145942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ed90fbf-ce72-4517-9b1c-2abff9020eff",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "377f3ee0-631b-4867-aa64-6f38189a1983",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49171134-cf03-4fe6-96dd-85307da0d5ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb89519e-3428-4b91-bd9a-414ffb343c40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadd1902-dfd6-4b66-982a-3b9bd932d2c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ef890da-bf4c-4ffe-966d-7b65616016f9",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6949103d-0c3c-418f-9fb8-cdcfc991efce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24e6b80d-7f9b-4503-9c0e-c7aeec1f1e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05539693-ef3b-4745-84ea-bd29c8c1e263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "da8e7634-b264-4195-8c22-46862771e234"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3719c0db-51c8-414f-b913-08dc6caab905",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13194d7d-6567-4261-a509-10d432f613b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99b8d547-f2d9-4c79-b7e5-b823a4bf8823"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c706d6-a644-4557-95b8-33919f4c506c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "74b3624d-063d-47f1-a871-4c8fb35d34a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088a65c4-5db4-4715-8a95-b5fe5f399fca",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e230c2-1260-416a-8ae4-44e5f325a4e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbdba567-d3c4-4cf1-8082-6146268c9738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "916f453a-7383-4fc6-8b04-3f4a20e8014f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef03079a-9b27-4d95-961f-ae415cacaeaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061e23e6-68b5-4843-aba6-0235402de882",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbc14bc-b2fb-47af-a8e2-0c8be5b5d496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7682a9b-b256-4f98-8af0-09c258fee379"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48dbe0b3-b43e-4ea9-a14f-7d9b96a97a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d00cbbd4-e75a-4efc-9d7a-a88d7bb7018f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a9670f6-01fa-4e7b-8cde-f9acd5ab39b2",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27a146a8-a6b6-4c48-a544-41f3e4e31722",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d96605-2b9f-455b-8bea-34e60cdaa3dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2784d2f2-95b0-414f-a740-322e3a229b3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6f1e25e3-61f0-4af4-b71e-8bda5739d79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cf5c2a-ce26-48db-b094-2ac67b89fa2e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7ad7d1-a1b1-4661-b62d-7c6637b88f9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03f8ae9e-3902-4684-a0f4-735aae223dde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb0b786-0233-498a-bfb8-c1cec15bc9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "193d4df5-aa6d-47ae-a827-891066fc8b4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d719dbc-3f9e-4729-b72a-14db329839a0",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c3af63-c084-4978-8db3-8805b515a347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92de8ce2-6947-42f9-901a-b0547cb09bea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4cbf7dc-4074-4f3b-88da-9d064f905817",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ecc3d6b-9f50-4f3c-a9a5-b796b79ff395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c94531-71f2-4315-a727-4e222181e645",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28f513b3-b3a7-4859-8781-9034f3a24619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "746b5604-ae14-488d-be64-e5204d647a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6697f95b-9f6e-4278-a704-35e7ced050a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "84386907-13d1-4415-b3cc-5898eed4050f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e76c5214-657b-461d-aaa8-fe4b1c78dfa0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "168d5ec9-60ff-4200-b16e-03e132dd0781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbb6b0ab-3313-4777-bdf8-75fb6081ae06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82fdac68-9c88-48bd-a8c7-7eb76d06ea00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2881b29-249e-43ae-a9bb-a6852e9120b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88b3082a-2048-413f-96b6-800ca500128d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf15392e-7ca6-4933-97d0-a7d96dd02315",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a39cd36-1b86-4f5f-bdd2-c0a3e4c58cb2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9069462b-cdb2-48fb-bd56-d160c1f304dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c26364c9-9257-40a7-ad3a-89dbc565d232"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e68d8487-63b0-4e92-969b-67c7f3860651",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbb9046d-d524-4a45-8f59-cf8e6d37a7d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4edef72-379c-43ee-abea-a1051d7ef15e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e94d9890-663d-40a0-9e6b-0b348d78a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b341a574-3706-4862-9aac-5dadf3c2b84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63909fa2-9e1b-4326-a825-aada433e8faa",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89cb0793-cd8b-4ac4-b337-e4777977cd70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37c0ebfa-471f-461f-ac01-2bd8e5824444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b1f8bb7-365f-462b-8492-c51b14fe9172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "b1fe8287-fe59-41bc-844b-e32b2a9af8c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89aae464-2e53-428b-9e02-542ab35df72f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d49a2047-24ea-4fd6-9276-1503e264fc5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24a2885f-b808-48ea-8dc9-29fdf21216c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3656f9e5-ce2e-4539-b0c2-f6749c8c411c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "79de77b0-428a-4ae2-84f1-1878ade189e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6b69a6d-ffe1-48d0-8e7e-3638c3fed908",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbe0e8df-03e4-4352-9ada-dff6a6b10147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d02252b5-de19-493e-8760-03022ee78e38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8145388d-6237-46b1-a5d2-8a7bc1a76f41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0267f2-8cfa-4a38-ab5d-089ed1127ba4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1998d658-dd52-4f75-9d01-e415304d2d8a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9dc4d2b-04e1-49fe-9988-13356dd132b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b3bb19-48f9-457f-9aba-07966238cf60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d2e37b-bd59-4de8-9622-36ad32065f37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "2484e761-5edb-417f-a4df-6d7352bd9e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76a5831-2377-4484-975c-9067fc3ee4c4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b897125f-2046-4a26-9458-e5a7694e5dcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d12b6d0-5414-41b9-96de-bade444742ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "343549f7-c1b0-463d-952b-840949a59712",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "be328da7-6a52-416e-8084-7b89c08559b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74509b17-a24c-4f79-9378-4ea0db8196a2",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdf1980c-6610-4bac-90a3-5b19b85e7365",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91267548-c75f-4693-9dc1-3d81d032eac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66a1628d-eb61-46ea-9176-45d2b9d1d748",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0de9dd5-b6ea-4ac2-b964-1dbdfe80b25c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbc4fce-fba1-4e81-a168-5a41e112a446",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa7765e7-5553-4f2d-807b-14dc79b68080",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "009f864b-1cdd-45bb-a97b-922bd8c81246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9543e5-e7f1-4603-ab34-f51cc1273c94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "fdd588fb-20d6-4780-979c-f078a0f680eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c53657a0-48f6-4ba0-922d-bf18a9aa2452",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d6940fc-87d8-48a8-950c-204f3b875562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af685c43-ffda-4d70-bfdf-6db9fd1cdd8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "223b47f7-964e-4453-b99a-65a7aaa1a960",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e2bc8a3-1df7-4caa-9480-75c408f11b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb02cec1-838e-440a-ba95-f7119d3a4214",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3045afba-5423-4e29-aac4-02d454b9f68a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faaeeb83-2406-4cd0-922b-d357bd330342"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8eafa69-fa6b-481d-9a8b-e4d738748972",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2bb223ed-4703-4fb3-a53b-d693f502e08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d12aaeb-02f5-4fe5-abfa-fe3a1df82f36",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80441e9-ab0b-4f0b-893d-ad0a68ecdd3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "405ebe4f-8157-42b2-a393-fc5c6b3f8258"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "140f5ef9-65b7-4c62-bef5-ad5d613fc86c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d320c6af-7fa1-404b-8e82-058ea74e6559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1068e8b9-50ec-456a-9ca5-d1020ee31969",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "811699c5-aa6b-4e6f-95b9-ac7b8b6750cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ae8f01-8638-4ef9-b420-325e3a22e4ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dbd55b0-60aa-4348-a39a-414cdd32c09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "47364ff1-4739-43b2-a21e-df54647f36cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04e3c22b-1f34-44e6-9e59-67f6d1c4a527",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "073deaf4-cde3-4a1a-8821-297ac3f9d04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b9a11b-0d6a-4806-9338-5281bde18e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecb09e37-c64a-44c9-9aec-e7fa611ef74d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4387cf59-5b9b-421d-b76e-e5f3a1d1d5b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "127d5a09-c758-4aaa-8d67-e2aa54007b8d",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51592652-a882-41b0-a775-1ced6814293c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5615328e-40e7-4776-a236-283bacab42a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024b8549-e141-4ecf-ac62-34bce24c6b81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "96e2f870-5007-4ec0-b5a7-63806585eed8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a912b85-09b3-4d1a-ae81-3798dcb438d9",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6646d4d8-5308-4c86-bb75-8404292289d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "becfef0c-ccb3-405d-9da6-799d9415790a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6542081-224d-4b5d-aed0-a143cda7f2ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "14f2d111-28af-4bd9-a4e4-e66178edda8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad656653-7a63-43d5-b1ae-62563cc321b9",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d11e27c-54af-46cf-a698-c06d9e0eea80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7759813f-4cc0-4aeb-b17d-99884265e542"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e735e56d-d953-42da-b83a-5968b94fdfea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "36320a0d-c3c7-4a37-b55a-42305abf4889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423a3009-cad2-45ae-99fe-ecc2a89d69d5",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a010fa-0be3-4506-aa3e-2b673c38f1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c957e76-61d5-4966-b72d-9a77d4d24e61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebd64afd-c494-4605-803c-3547e563e13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "582fdb63-a48d-4e7a-8506-f28303d78dc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "746182d2-f3e8-40d9-b4f0-e8d12550617e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "084fe0c7-30a9-42e2-aa09-03a3b84997eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ec736b-aa60-4b87-a4fe-38803e1d3b5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a29c278-1c86-44ce-8b78-a46f6501cfa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d5d8c7a-c209-4c52-a61c-0888fbce2705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747d643b-2127-4c36-9b96-6011d9fb986b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afea0e17-c864-4c5c-8edd-d6b82d66ca42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13c1d1c-8336-459c-badc-b66915df44ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9e7613-61e3-43cd-bedb-6db0945de11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "fcfd744f-acae-4ffc-8759-f759106608c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f00163f-c682-4127-a081-8e5d7371fcab",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9117ffa8-ef66-4687-b1c4-7ff8bf812605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10114757-f2cf-4610-acdb-45a1c018e97a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde11713-59d3-43ee-a344-9f4a870e76c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5aba0ade-2e29-4d7b-9862-365a524a0bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2492110c-670f-4866-8896-0e9237ee7645",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ed20075-3090-47b1-81d0-df866ddfcd66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1f5743-8efb-420f-822d-a4736fa52630"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912358b1-292e-4baa-a454-a3ef58e08625",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2fd7aa3b-4694-4f34-b907-e1cdd37f132d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3246090-c4f5-4eb6-a085-417ac717ab63",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d5ca7ff-6904-46fa-ba79-1f77a1e415bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28258fbd-2d36-4102-9518-7856dd00ff0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bd514b9-9e36-4140-8d46-d554fbcffd60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c557bdca-e02f-4167-a062-aaed470975ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fe55d4c-3a52-416b-a6ab-1fd0ccedcb4f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "485566db-de38-4a95-826e-3ed42713ebca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f088b613-276f-406a-aacd-5fe04ecf20a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74de0a5d-6241-4739-8092-4aee39c0de23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5b02101-a548-4f1a-b1a6-d9f7323152e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bbf34f-6179-412e-be09-fbfd1f63e0c9",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79da507f-73d0-4e14-8c2f-af7d5c07cf7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c82d1f8-3f1e-423b-b4fb-083424244fc3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb00ca8b-f10b-40a4-9aaf-534e4742f11c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0bf1e9fa-f541-4375-ba43-0e16ed94ef85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f79c2f-aa78-485c-9401-3c6ca82f8406",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4544322-a65f-4063-8d9f-6a9d2265ef6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc301988-0713-4553-b822-ec8c897b5fbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef6dc9a-9853-442f-a919-7b78f516b657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2fc0ed5-478b-48fc-8617-e118fd0a4b11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c45ce819-639a-42a2-b9e5-47df4deda6f4",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "751c3f73-dd8e-4f07-a251-6b2d686da13d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd35ce45-1952-48e5-babf-dc21c766d970"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997c126c-8440-4ae0-bab7-a2aad5c6ce52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d9991c32-bda5-45f9-8a2c-57e37a7129c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b39f088-1daf-4451-aa1c-4b66a0eca80b",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2509f86-4bf3-472d-b999-6347315f72ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c18dc3c-16a4-4135-8762-7f8da344d644"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "153e7013-5d65-4d9f-9d7c-2332b8334af3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca870ee6-1bd3-448c-a37a-d638b0f24650"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8837d084-b80d-4651-8929-4eab0e5485dd",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd35a30a-0292-4fb7-ab6a-40114391d25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e17a524e-5ae4-46dc-bdec-903bf158a301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e30f65f-e380-4325-8200-f7d751ccb282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a74d7fde-d20a-49e9-9092-57bda463901d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98c65966-94e7-45b0-8644-450065d7022c",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6407c2bc-6374-4000-9cce-57544e6d67c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5c7add5-eec5-4eef-81b5-0c95a2a15271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42df733c-c456-4780-a096-8cde5d4e96b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e6246ff-0ae7-451f-b5d6-70deab222aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3e3a8e0-35c4-4453-aa30-f4bdc940a4b8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d9dcc2c-3342-4091-add9-e9f7fe2a3186",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b725490-a845-4152-95ac-fce972cd7fae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a979ac09-038b-47c6-9054-f83173c15203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f4d7861-0794-498c-b3b4-f3539a72ecef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3dc11f-df11-4a51-bb8e-3748af6a283c",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd1f7df6-19a1-4d66-8258-ab03190cb0f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fe9ab58-8152-4305-838d-67bc3de8ce0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24b09e14-2a26-4e30-bbae-aaa693ffa190",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faf6fe66-5eaa-4c5d-8cbb-d806e858c386"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad02dcf4-0dc5-467a-b29e-98450ffc3ffb",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd0873e1-a2e2-40ba-a7dd-7bfb932165eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71ef361a-311f-4ac5-a535-d9be376befc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b49fae0a-4006-4e42-84df-14b2e100b8e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cf2e606a-511c-4dc2-a944-5cd7a6f6e370"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9284abd4-a4b0-4bb1-993a-1a889611cbef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f1e713-e74f-4124-b836-31f98ff89a7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd7416e2-2e8c-4325-be79-bb220d275ad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d943c01d-37fc-4c1a-b9ff-0492587fbd5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "bdd44bec-ea84-46c8-8f38-194fea268a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06988132-973d-46bc-929a-27e8fb62e8cf",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7cf72c3-4882-4060-8db2-9603b2724a0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59319bb-3217-4b5d-b03a-7de08fff1fea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef35aa7e-f6a1-4fca-b8bc-d469c65c09be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "2fb91305-4712-4a23-9fc4-b6722a1a5648"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbf0367-eebf-4f3b-8480-446c0b9aa2e9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11da1479-2642-4e66-b509-ee3b0770df56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12e5b991-cb2b-469d-a8b5-19e9e665c838"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d356498-daa2-404d-8b9a-99752a02cda4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c103a893-4a1d-44cb-a0df-79c16b88f659"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8175f65d-8113-4eee-97d1-ba818ccd7b9a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "455fde3b-8030-4e89-9f68-501146455940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26bb0aa-9ac0-4670-aab7-117e8602053a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "accf1d66-8c6c-48df-92c6-27e21ddd9982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbf4366-b47f-4b3d-bb3b-2c2e33596768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d212281-ec70-4a8c-8854-d5e4210b9375",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb2c083-5d09-4859-8e28-7be37d3bab7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83634477-da5d-47e0-968e-f796f63255fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2f5525e-344c-44f9-9230-01f074692639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "beba413d-50df-40b3-a69f-91993e44b57b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6547d2f4-dea4-43a2-85d4-291cdbd8c749",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "06374ce2-7c12-49e2-89c0-e82e8046da35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "2fe4bcf0-bc62-422e-bf0f-00a9871604a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf1b801f-1e1e-4844-8af9-5b67e7324381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a7a8594-b68c-4e74-9533-b3e445e62f50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c019a2ca-72bf-4643-af37-7514e73f85de",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d931b6a6-74ad-4d68-9e8c-0d3a378470a2",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccbd0eaa-8f13-4efc-8eb1-8b33db3c6cb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b911e97d-8e3d-42f1-8a42-fa8e8a498399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e398ad0-755e-40fd-901b-2f9554c19d7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4ea248f-b839-48b6-b225-ef69768588dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31d36532-c84a-43fe-bbe1-8f79fe529ccc",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb30b4e9-0cef-4b6b-82a7-d3711f819533",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d6686d3-19dc-49b1-92ab-6734acb1f473"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107828fa-c190-40f2-ba97-33273836d0e4",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ef1cae9c-ba2c-49b5-a03c-9ec84378502a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aba9613c-817f-431a-abf5-592a3e640adc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5afe080b-e88f-44cf-9df8-88bd1eacb7a2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "56ec2840-1b8d-4dc6-ac51-f7cc35d61bf9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "996c1392-5eab-4398-ba4f-f1ed641068e9"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7d48cf42-5acb-4f4e-aaf3-4d7edbe73e66",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "450feb08-0dfe-40c3-9c54-67f8091ffabf"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4af71961-4a1b-4375-9aed-bef154ed6fce",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7336e05-3927-4966-a900-71272d3422d2"
                }
              }
            ]
          },
          {
            "id": "11627636-dc1a-4552-a3e3-57eb0a70bba6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4170e48f-7b3f-41af-afc0-b375da9177a4",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fcf070cd-504a-4090-bd14-4981aea7f7ba",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "868b103f-8f81-4ecc-861d-af9de94884bc"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "00143f34-2d4b-46f1-ab84-4c6a640572e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bb993ba8-fe66-4f2b-91c4-e85c71a7cb7a"
                    }
                  }
                ]
              },
              {
                "id": "b43d99ff-2795-4cd6-92ac-ae5c17da979d",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0eb5cea8-3afb-45a6-87cc-2cbbc1157249",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0e7aea94-57f0-40f8-9302-cc1221c3415a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "92b44106-8cff-4cba-8fed-145e4f4f3348",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "960448ab-4736-491d-b4fa-65e81c56b4fd"
                    }
                  }
                ]
              },
              {
                "id": "687f0a0a-2e40-4e33-87c2-0b3c390d1605",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "59ce7d6f-03cb-4ac0-b834-178c9b85880f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "931b383a-2d5b-4179-889c-c8a8404fb591"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d23b31bf-eb38-4afb-9894-52eaf92cc295",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fab45c41-9624-4f89-884f-9d9593df084e"
                    }
                  }
                ]
              },
              {
                "id": "3ae6955b-19e3-41e2-ae19-fcb8a73bf504",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "455d3b6a-d511-45c6-9416-c9d045c2da50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2aa44fec-7263-46a2-bcc0-a6390ab34e69"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f4b224f-e8fa-42d2-9d70-d751da2704bf",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "3c75196d-5af4-4c97-805c-bc2a7d58fb20"
                    }
                  }
                ]
              },
              {
                "id": "65467f46-9798-4e7f-a09b-55b030615fd7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a03e2139-b222-4148-8ba2-ec98e7b9bdac",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e3854193-6150-48d3-90e3-f511f7db2674"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9f4e7b1-e497-4938-9a9f-6cf4d9420a9b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1988abc4-7cf4-47a7-9c78-a2b742cda166"
                    }
                  }
                ]
              },
              {
                "id": "455f61fd-dff2-470b-8a89-37bd36d2b546",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "75771344-41b1-4017-89ab-d1127acc1c82",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5344eeb-e812-4f02-b142-de3cbeb79ce1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bf6faa92-1a4c-451a-9613-ae583a7fcfe9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "243c1609-ade7-492b-b6a0-33b751d33152"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "076859b4-18d9-4290-9132-535b22b2b24b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "d433cdd7-f19f-45e3-9a0b-6be0fd28939c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ab5d111c-5630-4e8e-8b9e-c4b549eca69b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "39fc1bea-06fe-45e4-bae4-96bbcc90e6a6"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "92ee1ac7-3af0-42fe-8d31-9e8d1e0ad87e",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "64a1f71d-74ff-4bf1-bfae-1316e5cc6de6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c0a5bca0-f21e-4f70-bca7-33709f7a2c1c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ebeb7952-9c68-46b6-a8ca-90b5a1d008d7"
            }
          }
        ]
      },
      {
        "id": "adef592d-4938-4742-a2ea-6c29cc81f9b6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "2e4dd340-6ef9-4248-aa2e-c99f95108a1f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "97596f80-c310-4c41-96e8-53136ff2b078",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "23513e40-b116-4bc3-a98a-f191c45e98e5",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d07144d1-0c82-4b4e-afe3-25ca62f41293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23faea30-cfbb-41c7-83c4-685d8c7ee278"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c5cf5-8f95-447b-9a75-a368a61f738d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a3bae45-5883-4019-a0e6-e853b8c60d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b784c12-f127-41eb-8eeb-7361497c754f",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecaa29ef-cf78-45c9-81a6-5b0ba762e933",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51453ae4-2288-4784-84db-1e5414a669c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d55030d-1428-4f1b-9bf3-abe24e2566da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b671bfba-72a0-410e-ad8d-9cb2a35534db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf593945-e259-45d7-8f11-e1b3fddb7d3d",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56ea9251-9017-4130-9574-43ed16840352",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fec40dd1-89a0-43d1-ad4a-2e4fc290ea6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a5a2c03-652e-4189-a23e-e41039a36f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b49a0f7e-ef82-486d-9963-475d6d1b71d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f69887-84e6-47aa-90a0-e4ae8d49822a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c97a70d-e679-4e18-9c12-614320e13b26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a1d36df-eac0-4896-b2a4-c8d8370329d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76561e4-0a5f-44c0-8c25-880fb78ed51c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a175c9c-dbeb-41dc-8994-ffe79f9b3289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8000c37d-1f90-497d-85fb-1d0b4c62c212",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc0fa038-83cb-499d-bf50-06f4c082b045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4701285b-5151-4145-afce-b1703b57fe51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e6868eb-7917-4d2a-b506-de6764bb2b2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "90439ea8-64bd-4fac-bef9-e8dcf633892c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "791e7050-28a6-4f10-9034-dfce9d81bcd6",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1411738c-eb08-4647-a333-4403f4d55563",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a617e981-240d-49bf-98a2-4b4b219a85fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dbc49fb-a349-47ef-be6c-7e66561e7e5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "58cf202f-2711-4b47-a194-a04e76af5ecb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f9cecc-900b-4e3b-97f3-7a23b286378f",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9fc31d1-d8e3-4080-9050-4d19a37b518f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acb4de93-5069-48b6-92b4-7afa2abaea68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba474ede-eefe-4549-a0d8-1f366e81e959",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "68043f57-ad9d-4fd5-ae54-a984f2d5f459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35e7ce82-784c-49c4-987c-d4d76ad7f8e8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4b2714c-8b2e-431b-ba9a-359e852d33a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c12f159b-5eec-4cbf-82b8-eb02b319fec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c462558-0416-48a2-9ced-a0edd4c27d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ef9f543-af16-4eaf-8307-d9d891ef4b7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a0c12a-4ba2-42c8-b3c5-6b7ade78d032",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a16c431a-956a-4b58-acc5-c43bc20a24c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88ceed5b-0cb6-4364-b285-c30f74076b80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4741921-538d-43d5-b1e1-43a5b7df1559",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "382820aa-4f7c-4475-b9d1-756e5694fc9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb4a7c7-3479-45de-92b0-a94e7eb4feb4",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1693967d-70c3-4389-9709-c9fa990c81ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1269fc-5632-40f0-a493-6d797cce013f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f1328a-4e6b-48de-9cce-9b2f3ec76185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e25420b-92ee-4015-a825-24446fdd43b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baccfbe1-398e-4b3d-aeb3-bf0f04e25b80",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f8a68f7-6a35-4c8a-8979-ef4c2b78ac64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b79a7b47-d116-465f-a041-8d5b371f2a2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aacfb331-8e16-4e9a-acc8-3683071cbc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "6c460253-004b-4bb8-96c2-9dc9462d3e0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97b8d7e5-96d0-42a1-8a9d-c8e31be3c2b2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f21edb43-432b-44cb-b1a3-67c792302ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b46ef91-1ec2-42dc-8610-8d0ab60dbc58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c1121f-3111-4058-bd77-222d2eebbc7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f159938-bd6b-449f-9ae2-1eb7901d5bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80700f5f-cd2c-4f0f-bda8-3696a77fc5fc",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0722f025-24e1-46f9-8196-58e21a56f863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa0da653-9419-4669-be5b-027b8aed37cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d451e876-4ee5-4d93-aadf-4f0e2f60cd6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8489e71d-e7f4-497b-b408-45c21dd1484e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2128a14-3d39-4a3b-b491-b91ed64b441d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e47abb4-a182-49cd-a609-c71f6d69a4c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbe50182-3906-4986-8620-2adae707696f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bbdd182a-679d-4688-bc3e-0ef93f041404",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "3e638272-9932-48dd-8736-fad8542bee2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b2ad1d6a-af2c-480e-b242-6891e84107c9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474657c3-99c7-4ea0-ba48-e27a82e47137",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0809772a-4f91-48b0-bd85-7fe576c52147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f4cc0b7-e504-4be2-a056-e47ad9ae2da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf875f4b-b317-4df1-8356-3cee2eb0f660"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa49df1a-0400-4f57-a820-aca4b112eaeb",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e63a7296-e741-4b4a-9c9d-54a3429f576f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab50b0ce-091b-4424-a3f4-529219b696c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de4eb932-117d-44ea-9601-8432843e8a63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bd5fe39d-1c1a-4b90-8aff-cdbf0a02e0d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e3f9a90-2905-4ab8-866b-a8e666549615",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca72ce85-d042-424b-af0e-a1fa88b04f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc2b141d-eeb9-49e2-9ed7-1f8dfde7b47b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1196c940-3302-410d-9e0a-09e765060da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "9de80fe6-f6cc-450c-9cff-f70ca8ab69d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a03b6631-4703-42f5-925e-98c2abe432e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0370f374-8671-44e3-8af6-466b03f5d289",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9f44945-54c7-4ddd-8459-6f62e292a37c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c69190ad-6712-4918-83f3-26be7da29cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a42647-eb7f-48ed-b8b7-bfd1b9156441"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de167e9-f38b-4743-bb7e-08f337b9efd3",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6eab9471-ccad-4b71-95f5-39d855b5129b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6af4840a-e3f2-40a4-81fd-cfe962dedbbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8481b6-18ae-41c1-b7cb-2f70cf88f673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2a3ea3-cbf4-457f-95e1-ed9e27545e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28ed183-12c7-4a2b-863b-7e9be8e200ea",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f983902-1a5c-4b86-b4fa-7f91149c7ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16f22377-694e-42ab-8b40-67b9f534f286"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d2b30de-ddf1-4ae8-8e68-5ec32cf412b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "188f4f92-e15f-40ef-92c4-b0d4c3c3d6c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "585aa281-8eaf-4fac-b83b-ddf870cd580a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49cd5353-fe2d-4e47-bfb1-5ba37787c318",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44eaf793-a286-451e-bbf7-86ae4c035eab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2772a54-7f14-4970-a217-9a899707d709",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "563c64f2-e1a8-404d-bc08-257555336616"
                        }
                      }
                    ]
                  },
                  {
                    "id": "526b70bc-4329-4975-bbfb-966a209e64d6",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ee6a6f-2fc9-40be-a4d4-865e6c4c3685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "275f76c7-9350-42c8-911b-b3b0a820dd64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70506b1c-bf41-455a-8bd1-2f9a2ac70a14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d82c10be-f35e-40f6-9fd7-2b856fa2ffb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3e540d8-a6b7-4d93-9b3c-033240a7b0fc",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4740c304-3127-48ff-8399-342bef93029d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95fadad6-2b8e-4731-b997-ef04a217ba1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c4a0f5-451c-4eba-b65b-1304bf984f7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a9a87064-5536-414e-b37f-de6d7f78a740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f33ae09-589c-4a89-b912-7df64c9ce090",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e3aff4-b319-4dd9-8e98-93f0336a0f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eee551e6-2d43-4d75-b9a1-94869316273c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2fab74b-cacd-465a-a5bc-d3d2d2acfd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8111c2f4-6575-45ce-875e-0a50c8ec6e28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95dbd372-d3d0-4b6d-9db0-0e764d6734cd",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d981fad2-48f8-459c-9109-ca6fb69259b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a4f8ebc-6d83-4775-bddd-3256989085c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ca147f9-0759-4470-aa57-ee2ce3923ff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b89e9bd7-d11c-43fd-99f5-191adf3c947f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "721e303f-3d71-4cf9-9fd2-e2b792511c4b",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b61fc985-a412-4cf0-87e9-7bcc5403d42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2447990f-bdd0-4b92-a81a-eaf0753e5723"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "288ec459-21af-4cc5-939d-e9695a5b9658",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "190e0004-569f-4562-8bc1-a154d2731a1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062578c8-1f9b-4ce7-9cb4-7de5ec932cc1",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d538a5-4519-4546-be4b-72f04383986b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8629db-3c08-4105-83ad-1677c8fb6aca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99261b46-fda1-43f2-bdc0-b110bbb4ec9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c6af3bd-e97f-412b-8bf8-e99b9dc31127"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4cc936-6721-48c6-8ea1-3b255c3443c3",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c1e3a90-3ff4-4fbc-8562-a3610ff6c2e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e8340a5-4e2d-432a-8c42-da721c38c1da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe8f20f-9fbf-47c0-90d6-99c73e1d42fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcd63b13-8410-4ddb-b312-2b591af5efd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed770d9e-9326-4657-a435-bea4e68b7005",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5909c9-139c-4fe4-a950-1b50abb76950",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d62df183-6a8c-4ec5-beaa-09e540b254de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a45d040-a499-425a-b70f-171809a21863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d4eca40-2028-4f08-a6a3-d559743abfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da2697ad-c25d-41da-8f90-1791625658e6",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93ff9ae8-4ff9-4f8f-92ff-fcb3be24198b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5caf389-06a9-44df-a4e1-a18bdb33638b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64426852-c6c1-4ca4-8ddb-fd9d262c2deb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "41949d68-7429-4f67-bb02-590bfd3498c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9128f21-c166-4a1e-b8ba-42f826e07144",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70a7e74c-f38e-4d7f-8925-52ae520ab043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c5d913df-768d-409f-8548-d608d888982c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c1d5f2-b6d5-4d04-9d9e-9305b7ae648e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe47239e-203a-46fc-8a22-028ed15a4a83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fcf8e21-0a0e-42d6-9267-4d1ba6869268",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89358345-8682-4778-bca9-6ab7431f2cc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fba788f2-d46f-4b15-a4fa-3f75c098b05d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f7c22d-9a64-4098-aa81-aa2f161506b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3df637f-18ac-4fd2-ad68-e068460e31cc"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "626ad5d4-7ad9-4268-a376-1e8df8cbf258",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "177a73c5-ae0a-4b72-b820-3f617c06aae8",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c835eb-65d5-4457-93cb-f8724ad316eb",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "92bc4b11-db27-404f-947b-8775772505fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b66290f-357e-4f17-bcb7-14989641cc46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b5cfc4c2-ed30-47cd-975b-5b1a71b5e9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58af10b4-ca23-468d-81e7-2d23a6b988fd",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6ebe313-77e6-4042-8501-53a25dad189c",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "93693780-c84c-4a98-9623-2e31b172507c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd6a4cd7-c31d-42b7-b1d6-bfacba9c37b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7b2b93c-8549-4aed-8c2f-3fa80548a224"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f949e9d1-6512-4364-b7bd-1f36c1972a70",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2855720f-0b21-4598-a5ec-43e47c3b6d0f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b5886adc-b27f-480e-8413-f96bff2b67ac",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e0c1c518-852b-4fbd-8461-248b410e7988"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a01b4c5f-13f6-4f41-83f8-21829aea979d",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "81dbf5ba-7afe-4a41-a6e8-2483f4235789"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d834acf5-af8b-48e2-849b-d94ca960b3e1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8100ae21-1d84-466f-ace7-952aaad71747"
            }
          }
        ]
      },
      {
        "id": "28b42c88-c0c4-4e08-861e-717a085e4558",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "3cf90fea-c106-47cc-bc62-0d939d06199a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f40da0c7-03b9-4f9a-a0bf-fa19c70bd5ce",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "fe357fc2-4ffe-4cf6-b2c3-9211ee0bdf4d",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb14ba58-5fc8-432f-a6a0-9f196e6b73c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5522ba5c-0863-4429-8f64-ccdca390c407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36166d9e-b1a4-4eae-b37b-2d60e7964f4f",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e3f1959-d240-41ab-82f9-eb26745b99cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e43cf274-b855-4068-9f8e-abe7f7a33b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8d2ec6d-fd08-44c1-902a-1a78d6ce8d3b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72568802-56bd-4c94-9217-c2514d8290c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7560a464-d482-420d-b7ea-82cfdf608eb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87eacfc0-14c4-48c9-b328-13fe5ff2e8c6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc2712cf-bcc9-4460-82ec-17dfe52052fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ee8c55a-3e33-4704-8741-fc01522cad2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25856dcf-7c7b-45a4-9490-85e29051b7ae",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49b0fb5c-4f26-4ad3-9a8d-a8b93a4775b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "327ea016-bb4a-49b0-8ab9-12453d9be694"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fa4021-7e87-43fe-942e-4356bdb1d9c8",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7908e96-6c1d-449d-9485-d7f72d804bac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fafc7f7-7548-458f-ab4d-edeb4eeee59f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4c8c001-df50-4825-a02d-2a0573ff6b01",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39dd8d82-a2a2-4c7c-95b2-2dbb9f57a153",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f886f58-3e00-400c-8e6c-e632a0d17d17"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e0e15d-700b-483a-9449-90ec953da26d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2716a963-7f43-41f2-bbda-d53bc99f9712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84292b17-a710-4570-a999-9f778f9305cb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a08c00-a136-4828-bc08-5af0c5c85bbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1d014ebd-ac63-4567-bb40-cf0aa1e3c7dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcec731-8791-48e1-a3c9-d36d0d172ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9da56b-8965-480a-9ae1-8f574fd37421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b96856c-0a54-47f5-a7bf-867eef087a0d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cb8f477-b3c2-418c-9471-98ac33ad5608",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d62c120-bd31-40dd-9d31-39288e4c5974"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99162106-253b-4dbd-8548-24b49575d234",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "436571ae-fe33-4240-b73d-d03b02706479"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed043d41-12d9-43ab-9bf8-e1ade773280a",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c17b20-8838-4913-a8bb-6e01cf99452b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "348ffdae-4cfd-4fc9-a97d-23d7888ff002"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb101bf-ba2c-4a6e-937e-d81d4196d685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9883e301-993b-4ec5-b6ab-b2b46605e6da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc536ef3-ef08-4b28-9923-2ed6db32ac1b",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73a59c10-2dac-4c4d-ae86-d993d476370f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f9adf7e-e2e8-4cdf-8bd4-32233d0ad9c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d0fb90-203d-45c6-8074-b80496cfd011",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e86418c-aa92-4cfd-8716-e38fed56f4dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07deb6e6-bb16-4167-a9c5-ee00b890c51a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e882817-3cf0-4cb7-b2dd-981321c77ee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2b07c84-fd6d-4666-bfd5-1bcac0793bb8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa72335-9a80-4d96-b381-8fc107e85095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f78d7786-2850-46fa-9c24-7858860f4184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c599f6c7-420b-42fb-bce3-c11f17b303b9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e58c30e-a63d-443a-a22d-7a677ec51329",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7b4fbae-cbb0-4439-a620-82a008c67371"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6019bf40-939a-4844-b15d-6d5a15185370",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8b59e758-1cfd-425c-ab1c-9ff2e8de254b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9fe4618-1921-44ce-b9bc-24288f6d9aac",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab05679c-b3ab-484e-ac45-591e89941242",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6ae965d-7c82-41f7-8e84-836171ac71ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6d8479b-1bfc-4f93-af57-b913b9a649a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "887757e3-5d6b-4e84-bdb8-a851f35fb4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c265831-739a-4617-9df4-6cabb1bd3a53",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c901098f-1fbe-4367-ac23-19f63b04cb09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5f790e7-edb6-4196-951e-43f23c16a124"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "336df98a-1006-48bd-a9ab-e1d2792e2af0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0536d5d-1768-4f37-a016-c9543a1eb85a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b5279c-1622-47d6-af01-631b331ccd44",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3ee3ce0-c8f7-4eaa-951d-cfacb4d49d0b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0cde6a2-6928-4c2d-83cb-a2da9de904db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0daf92af-b7a5-4723-b783-37f0563f0fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c57da74f-1a90-4769-b31e-5da21b52f8f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfe66856-1810-4cc8-afa6-935d3452785a",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71a9eb1-df0a-49cb-a073-1b2d01c55b31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5257158e-1442-4c2d-a0b7-ab09aac4c60b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55164982-755b-443b-ba9e-89f45dc2c747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4e2a376-700e-45ee-a9aa-25aea1056e42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c9ec6fc-39a2-4239-a0ce-8c6f0849735a",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9170aa6f-fdc1-48aa-9afb-0e5fbc600bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "311d6513-3544-4e1d-8873-de5938ea31ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8f70b58-1b1b-467e-8196-ed1df81e4b86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc2fda95-e7c1-4582-864a-8c9c4e0ad34f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96c034cb-bb1d-4208-baa5-f6d68a0d88d9",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "340c3ce1-0c72-45d8-9258-c92172cfc72f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b39e6028-71de-4d27-ae41-9ad41da6e3bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d69ef919-e0e8-4bf0-9cb4-17dada4babda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcf047d6-8e55-41a5-8fa8-ae528549db65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73358721-c232-4776-8b28-2eac899979f1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eba63ca-7d24-4138-ba6d-e804bdfd5606",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "092624ec-d5d1-455c-a11c-0f9d214f9920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4ba1219-4a28-48f9-8bdf-69c32b8d7318",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e521a6-a526-4586-992c-a53b14a92ee6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04b8ba14-f48d-4279-a5e8-050f011a73e5",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d135933d-856b-45d6-9a8e-cc5ab01d3805",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56b79eaf-48b4-42df-a918-9d8bbafebb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ffa7e96-5c01-4aee-a951-3f9ab67161ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "534f2b19-dd32-4f6a-ae35-16093e643487"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fb2ff6f-610c-4ca6-b5ea-f2d35a62a490",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e941b87a-b282-41e2-8f89-bad9a4a0c74d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6f81ab-cc78-4d9d-8fbd-6c18b8ce111e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "db17187f-77d4-4c2c-84b1-9c9e77cb156e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b699701-86a1-4bef-855e-21aa5b77eb29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edf8bcc-1476-4a4f-a51f-e896665c81fd",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103f6b48-2953-4fcc-93ce-5a86f37cefbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69470551-5fd9-4dfd-8962-001a172d1928"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "349a267b-f8b7-41fb-a2af-bcae11c40024",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78701fa4-d9a7-40f9-924c-55832df0f7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7c993d-5001-4275-8c86-886cbb21e010",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "656f3788-3876-4303-9be4-4c665f85fe09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7cd10b83-28b5-4da8-b0d0-7e2ef18c5c4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021719ce-f2ae-41b7-8e9c-512633264ff1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1be32bc-327e-486a-b2fe-7e9f4c1a08bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ede87744-019f-43e7-8bff-714b1dfbe375",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "290dda87-a8e5-482f-8543-e97191f483ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "10433b69-7376-4673-832e-34d5b3fe73fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29b167a3-25c2-4060-807f-0187639860b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e99571f7-ecd1-4e4f-9c9a-876ab275a35e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bffb9ce5-03a2-4b66-b518-791b6bfd7610",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1c6216b-b818-432e-808f-0467948b39e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c78ea3a4-eda4-4416-91e0-aaa8709fdd49"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d7e41e0-4740-4d5e-b4ff-cbeb1b9ec0f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddecec04-61f0-40a0-ac50-2704922b62c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbaa6158-a268-41c5-8019-405961c4fa89",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfee3cf4-cd20-47cd-9aa7-645bfca707f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ada42ed-d437-4b1b-bc3b-7c4376df1fe4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c72c7d6-3a5f-4816-b120-37529a1f3015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc8d1f12-db0c-439e-9262-77ad0938339a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f3e6030-661e-4c2e-8efd-717f37393ac5",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffa2bdc8-9697-414b-92f5-8ecbe6f89fca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dec6d052-aa8b-42bb-8157-cf9c5e16d4fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17dcc452-a0d8-4838-b25f-75b1ddfa9074",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d50d8013-49d1-4ed1-924a-f1ff2013c44d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f993f77e-d33c-4027-9673-19be0ae84f15",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84d0099b-02ad-473e-aa3a-14ce3e05623f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c4b2a334-d269-4121-a001-753c541f3eab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2c2920e-2cc0-4bc4-bbd3-2c5e2a2ab4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74d0020d-10ad-4826-89f4-65a2109be403"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a80422a-dbbb-46ac-9879-8268d55b1849",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0f2bd5-80df-4449-8a5d-626a9b8a6b00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5b3891e-8205-4ab0-9e4c-a616d427e795"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "612a291c-c596-496f-b731-ed19c6de0dab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c7d3a45-2002-4460-a526-c7b895c04e37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02d2f48b-245d-4caa-b8f7-35507f2eff7b",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e113f3-5904-46ec-aa52-0889c5d3096b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "92b48898-4eaa-49ae-834a-935792b03c91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f58f2ff-01dc-4740-a9a7-ea3bc0b8e178",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86cb3967-6e3e-4aae-90db-0c0431609bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "671dbfe0-5c2e-4c61-ac26-c3de04d04e5a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23ced5f4-9838-4217-a954-af4f7d3e9ea6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "261c6a84-0abc-4193-a6de-d7be60dff010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec0745fe-0212-4dac-8e0a-010004480e63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55558a47-9055-43bc-96ad-cdcaa7601fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c968f054-96f1-4fb0-a2e8-2a91a1e50645",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "031b9318-e517-4b28-8a78-2ba09a22e3b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5580063-03e1-4a86-afa7-b7bf0768ca7d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048eaa27-68a1-47b2-a18d-310aad211ecb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34b4a38b-01c2-4502-abbb-c55827c741ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc091afc-ffb0-485d-81ce-200dfd4b600a",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f866f4a-f19e-44e0-ac66-f6fc172ca266",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe31815-523d-489f-8003-1415c7d817ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8849823-3358-497c-ae23-1db85b4b235f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac12ad0-032a-4b99-b700-ad89464f6ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ff5321-baa0-4c93-9f42-b79b860ae537",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cfb2d0f-d4ad-40e2-98e3-40f2e221fbdf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10b667a-d8a5-4fa2-9de6-84aa9dc84957"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "693ca348-a186-4f08-83ad-9ebdd0b9ad35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32960b1-88a3-4017-8da4-8cfe3daf065e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7600834-4f6e-4338-ae28-800a4ddc63f7",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac0989e4-7059-4e77-b415-c56e73b6ec32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144f6c8b-d793-4e8d-aba9-7c01c0d6748c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39eac63b-48ba-40cb-aee5-5e2cc8375b1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68a51870-53b4-4714-84b1-4e705dd6cbb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46beb052-ae3e-4621-95d1-eb7e57165a28",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15c90e29-f908-4cd3-9461-65c1b61a46fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1e77a6f1-7934-4bad-8902-3ec488173828"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e86b1bf1-9bb3-4a2d-b53f-34b41afcf6fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6accbaa7-3f14-4494-8c92-25f505592e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ff70ea6-7d7f-4ef4-bd02-7508d0adf239",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc2da6b6-7329-4a21-bfd3-c856b0cd3dc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ca0f9d8-99bf-4352-8d1d-975d118caebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbeab2c0-e7c3-496c-bd24-506bf10a0783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1f460e4-6388-4a24-8cf3-d61c85d2b9f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "618a50ba-f4a1-4b09-8a4d-b2ae41ea8def",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "527b553d-d8d8-4024-ad1c-8d7796f5c3a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e4da53-e8f5-490d-87b6-a524717b08b7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e68dc1d-ea42-4ad6-ae7e-a0ffdf37e0f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "361ee7fa-2bcd-4823-9237-90da771d39e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9652e84-99d0-482b-8ddc-b737382afdf4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87d3a5d-701e-47f0-93b6-03ec34f89b19",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "490d45f0-453a-4937-9ef5-fe29bdd781c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bec12a57-3d41-4122-844e-33f7a308a7dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b79f1a06-a3ab-443d-98be-6f421b007d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cf191b-affd-4f9e-94de-09fdec7947ef",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52c204e9-4ae1-45e5-9286-f1587833dc6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15daf7be-a2df-4962-86a7-ec1014bbb75c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "276ad09b-62ac-46aa-8b34-5fbaf7946876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a380c42b-a136-43da-8878-cf1f1a388b47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9dded50-d89d-40d7-9ccf-e1105fff5d94",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69831a4b-f3b9-4426-ba6f-2181b0d8fc2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67d9f1e0-3633-4433-a45a-bba43a0e0420"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b69066a1-87b7-4000-95e6-87e300eebf85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1149243-76da-402d-afb2-8ee0e4930fdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26f6f154-dde9-44d4-9c07-35119b5e3764",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad73a2ae-7a38-4d46-890b-b3b4d65c048d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b04eb4b3-7eb4-4834-9f34-d9e46bbd04ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f8d085-2181-4071-a0f6-fb8a2b8e047c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1cf4581-1b48-4227-a759-0eb81f3840c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f74aea0e-da6f-48a1-862b-64c219c2305b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10cd3dfd-05bc-4729-8b0b-9f5362cfdaef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0d114e3-635b-484f-a2ff-527fda543afa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9979c113-36d9-49eb-9d37-ee58150de5e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03afeb54-553d-4e81-a0cf-15c5a9419ccc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f7b9358-fcd2-42eb-b148-00d16af230f9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8344c259-eeed-4b16-9ffb-a9bcd8dfdfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89ebe27a-0ac3-4545-968d-57b1dbfcabb5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e0af2e2-9e5f-4649-a549-50a1f700ace8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ac7627d-b44c-4419-b1d8-18029ae53b4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cfaab94-2bfc-4260-928c-741446b66748",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59e51452-8cb0-4f9b-9d3d-88979b076143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c59d859b-e8ae-47c8-a46f-ffa2dc20af74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a249c30c-a57a-43a4-98fc-587c83e66481",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8545daa-db0c-4f48-a695-85627612c666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fcd29c8-ba5e-46ff-a21d-0b0069b98abe",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d3a934e-7bd6-4a7e-92ac-4ba2ffedec6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56859373-74a7-4e1b-9f0f-c8b48d4d8717"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51ba04d-b928-4944-824b-39a4527342f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0d5b3d2-ad68-4feb-aa20-f8320465b601"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5085b135-6514-4559-bfb2-4502cf7b8519",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08f0dbcb-5b86-4963-8022-0752a5a8cac3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60af4bf1-d0a2-4b64-b5b4-036095596154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35baca7d-7d2e-4d8a-a779-1739c8010da7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1dc0e563-5d20-4342-b44d-3c17a7a1d080"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05623cf9-a396-4a0b-9bdd-f8e1e0f9698d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "438108d6-6081-4e7b-8db2-0155f5892839",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b48ca5-2d4a-44e9-9fbd-1d9ca67aa839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4555dfed-5f92-4a17-8f38-ef1a78dd6fda",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6edc567f-5a64-4420-a83a-960922969620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "113d8ce8-7086-4e0d-9a85-8a1d5863b2a7",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6439d387-0057-4b35-b513-7a081f0b51b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00239e51-0e5b-475d-9f8a-2b0e7e4e180d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f427fc-c61f-4597-ba46-427e0f99b0f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f834a62-e714-4406-9d3c-b6eed6d11719"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3c9b3c0-99cb-4c9e-835b-1446bd3970e3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46e9bb70-7392-48f7-b397-31b5d3dd3760",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a317b03-4d56-42cf-81ae-a9e1eceeb8a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e16aa2c-a10a-49bd-a9c0-6d16805423e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daed201-4bf2-4f53-8888-9ccf9483e7a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fb9eeac-8bab-4ea6-8be0-72859e088a9a",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da4cc085-d608-4e51-a7d6-412dcbc4954e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39d7f1a3-d21c-4376-98ab-59ba5494e664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "694120a8-c5b6-4b1a-af2b-e84b3d881ced",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "227391de-f933-413b-8ccb-037e9d2b9559"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d15d049-8f15-4de5-b024-0b17646c849f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f886d7ea-9c12-41f8-b850-23a6d4128736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d75df52a-b860-492f-9497-46659022b030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc788a0e-c6b5-4f16-8399-d656e140d369",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f5b3f59-3432-44d8-87f6-04a3f0cca3da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f973dc31-f887-48ba-94ac-bd546499c2d7",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ed39f3d-4aae-45a7-be91-179a1d294984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4474067d-f5af-4119-af85-55170dc18142"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b44263bf-04f3-44f5-9ed0-c0d90f14ad12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19fb2e23-6350-471c-b0bb-ea695fd4ecb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b4be711-fae5-499d-86fc-8753c55455bc",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f054c011-8982-443f-a0dd-308e846a5e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d36d5fa-d22e-449b-bf1b-c9f6a1f40e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "251972bc-bbfc-461c-ae4c-e9220535fb8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5715b3a-dfa3-4348-ab75-56a8fad48ea4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c122cf85-e6fa-4616-8d74-8ab339a8fc70",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16068ed4-d5d5-492d-a16e-8b1c5a0ce6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "532fc38e-1a55-4a8b-8cc0-6a63aa53061a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "077be86f-0a33-4cfb-88db-c9945aaaded5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91f31b94-077e-4d11-8f43-8dc20729f4fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4abda56-b2ac-4e89-9aa3-76ca9f5c6ce8",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7299d945-91b9-4b2e-8554-21c8768726bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0e8c07-c769-4656-a039-e914f0b1b94f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e95a47-fd36-4577-80b6-84055c310fbe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f92abf-08b8-487f-a1d0-3e08ecbc4450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6836cf4a-b353-41a2-a16a-defe88662a1f",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "461f9379-9040-4925-9397-dfb152c6c7d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3debc1d-063f-4f6b-8add-deaa689851dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0f0ce72-d963-4bab-b765-8a442818fa1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0c74e3c-1e69-45ff-81ab-561ff1d794a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f3d25f-a38e-456c-8651-789e07041dde",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fe04808-361b-4746-ba0c-7dc628f8013b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27babac2-64f1-4784-ad19-e5a7f10c7824"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f77240c8-5808-4d77-b01e-fb12ed745e4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbd234b3-4ead-4b15-9f30-2b54043e1564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6f7269b-cca7-4cf5-8ba8-3733e695f363",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8c649fc-a1d9-40a0-b2b7-6f9877de4231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "688d7a85-a39b-4c6d-a6e3-a4a5defff385"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd8f78a9-a952-4b69-8f1f-501e85586add",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e24376c-31fc-461d-afda-134fe551b83e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "429ce792-433e-49e0-8a43-970432f7169c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "709e0aa1-7109-4a30-93a8-83d5f97017a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63f9cd21-572d-4db8-8c19-5800cf6c9bbb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd83de3-77cb-4908-9b1a-541d8be13e33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "53d69ed2-88c1-4a76-bb14-a7c684e9323d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e58ca29-1d6a-4621-956e-4d894488b42c",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3675562-1ae4-47b1-bafe-ab6db8c013e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd081a02-8c69-4adc-bcf7-8bf53adb1c09"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30afaa66-9d12-4ce6-b75d-a838c71aac15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2e111fc-935f-473d-946c-547abc986e83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0cc798c-4334-4949-97aa-3efefea4829c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e4724b-57b5-460e-858d-9af347677933",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0136075c-482f-4503-b827-4ad30e1da9cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "34f287f2-a2b2-4866-b6be-0254ca2d3bb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b44d642-e26b-41e9-9fb5-180f5a700f45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36264156-5d87-4cfe-949b-1778f34c0f9e",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbab7778-5ace-4176-9a0a-0524bf7ad447",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cec4ca16-5d2f-434b-a845-a98aa5c82eb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7797ed92-bd51-49fd-8a7e-74c4b454f0ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82a3d65-bead-4eb7-9d88-c9d540050585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66348aa9-2c18-4247-aaac-960dbe8c9f05",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8babca82-cd57-4448-b10e-8aac994f435b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "00e32732-c3f9-4241-85c9-488d8ca0db83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "219b26e3-7e5d-491f-b152-e01cd3a2ae59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8133b2e-e6fc-4fda-bb2c-8478c011a089"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08bbf215-ca47-41f7-a6e3-6fc62a993259",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d32e57f0-fc88-4f7c-86f5-cd46c0a1c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98c76ca3-a18f-4354-87c7-3ad3eb0b10ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acdbe0e-59a4-4bc9-8c6e-64c8d3ec74fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea5b412d-945b-4144-b0e0-7b449e58c061"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8f5aa2f-5f83-42e4-8816-645cae1a1253",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af68e888-c6a6-49fd-ad53-c8b78078989b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3de4aab3-8cf0-4a88-9949-ad0bcf284d91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d942f37-b649-4e70-9bd6-65106615de33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac748b71-c9c4-42ed-a32d-b7900d977b64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1a5fec-564c-4640-82f7-a79ccfbe02f7",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baf822da-81ad-4cdc-baf3-c500db7561d3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e653bebe-1227-4ea6-85b0-68ced1825272"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b4c07f-c196-455a-8fb2-f8054ae6bf75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e9b216e-c021-43ef-b90b-d6a8098e182a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e708050-78fd-4421-8b7f-9028c912457f",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab21c09-1f2b-4988-9585-f151339d9d96",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a974e89-8e2f-4381-ad49-2a8206e1e8ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87346303-817f-4354-8456-236f008a290d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eae54a6-7a5b-4faf-ab11-65fa5218156b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71e8ef2-50d9-406a-9c6f-7e06182aaba7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5393732-273b-42f3-bbc4-cf793b84aecd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1edcd8ac-28fb-41a1-88c6-cade5f175298"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d79a234-4b4a-4414-8a41-35bd940b51e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd958153-cf29-493b-a406-f6354ff384fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1037bcd-7b4b-4736-b6c9-fcc872b73d02",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eea01d4-c8a2-4b98-8b40-bba4795ec3be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d82224c1-3e0b-4841-a901-6e0f328d8540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2db99cc-54db-426f-a43a-d3bcbc28f47b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9831e188-0449-4c22-9aa5-aaee323672aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7d98d7f-fe78-459a-b333-06a5897051d0",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fb0588-67cb-46e7-9d13-b14842ba18d6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3766f52b-34ad-42e0-8930-217a855de446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ffe1e1a-2abe-4fca-a5c7-14f934615680",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c74653e1-470b-4e10-a351-f0424feea4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5111e0b3-b788-4d40-81f1-9bb8ff5d772c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6eb62791-b09a-4b04-a8e7-9d0704a75436",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5d2735dd-7fcb-4148-873e-8bd9cf33d152"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ee90ae-c5ae-4980-8d03-3fb2107a92c9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cd2c7c9-935d-464a-9d11-86a4534108ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4370e597-77b9-4498-9723-87b23758e5b4",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba1bfbb-7881-457b-9bdf-cc60d9baa5a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf7d711a-286e-4ed7-a7f3-732f6c197478"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e318856-741d-460c-bd74-9c19eeca1ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc7b6298-5d52-4773-b738-3a8dbfafa994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f9b91b2-17eb-4ccc-9db5-c1246337e0ac",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98a2e7e6-bc76-448e-b1cb-a67e1a14aea2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0214f536-83b1-4113-811e-adafba742d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1831b2c9-c46d-436d-b783-7ab7a33444d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6c11e59-4355-4aaf-8c8d-13e4e4b37899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b8189c-dfd5-45eb-9df0-ef0fa9a3cd1c",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e39df3-dbb0-4af0-95bf-a0c8d6e36dd8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ba66805f-d3b9-4747-9433-4f3567cad028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39935087-e834-4c1c-bae1-5dd4441821bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f33363a-e31e-4cc3-87fc-9276b07915a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebffb674-deae-4f7b-b1c2-bba31988ad7d",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2240d9f-eced-48b3-8445-8a8352760ab3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "769cfc24-664d-490e-aee6-2d8eacad6f5b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45417e2-931b-44e4-8e8a-077849e63048",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c1d0ff9-6cd9-4313-bc20-88e26be66438"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dfacdf9-c50d-4504-8f1c-f2b720f8bf46",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc93728-84c0-42d0-bd5b-76bec12bd925",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3924c841-e522-406b-8734-eec83150e81d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ba3ccc-2d50-4b91-9855-d6229f75fb6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a6288e0-14bf-468b-aee3-f116e9bd7fb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "956aff24-2ae4-4636-82f5-526e3b700606",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad26ba46-4040-4ed2-846e-ae2429e8fc62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a303fcc-958e-4eea-b1b9-ecd74b51336a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53f31dc-e619-46f4-a284-d4fb2927c44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa79993b-bad1-457b-9248-f0c5e87e2374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6331351-f1a3-4cb4-91d7-37da4a5a2eb6",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8f8c5b-69c0-4750-8918-a1b33800b638",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e664d8c-80b2-4fc8-92a0-5f416783a6c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef7c907-7a61-4bdf-ae0d-88cd7d070129",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "890fac54-d628-44ff-8d06-b2b6b2e39c6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f66b92-cbb2-4bd2-8246-1096bbe22546",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16467977-be9c-4bd1-b80f-3b8185ad5257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df01e8de-2128-4ae7-b015-76384c6bfa05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f30beffa-91e6-4fbe-8684-eca7a0a2e29f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8b1ba79-f577-4528-b6c3-588358f2c510"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8733a3c2-f93f-41c2-b20e-889ebf22e1ed",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35d965a-0b40-44c9-bb38-da5d30e14df0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d66581c8-4779-434d-8e7d-9560fdd19dcb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4634a1e-adba-404e-879a-7634d756955d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4622846c-6e89-412b-becf-83afdeda8c62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60f35b0-f863-4860-a168-bc7c31cdecb4",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebdf87c3-863f-4b19-8061-28448f933b49",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "335ff6f5-6f91-4b61-836d-9061a511c730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfd2030c-a8bb-4d14-be41-6b69fa65b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "039a5efe-3962-49c6-8923-d40aef29bdb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd1fac09-3021-4923-a027-2103065e9e71",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb730eb2-7278-46ae-97d5-8639b8235c97",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7631e8b-360d-4b77-b756-f6fcd02ff2be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0765cf2a-80e7-4a2d-8b89-e191098b3dfa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1080df19-c1a0-4d86-a9b6-a856d07be86b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ad1f06c-2e10-47f4-a35b-3ccad81e6068",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b98556-8c10-416e-8450-ab3e3804c4ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1609578-c450-435e-a69d-1dae085fdd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e4002b-82fa-48d0-b0bc-945b5875bd36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1c2472c-1721-4746-b6c4-37e14adae8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "734523bd-fb23-46ca-a323-e93aa8d5cea1",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0827ea8f-ab31-4395-b6a1-c2da10c47867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "022eb58b-a86f-46dd-9b7b-c33330871ea0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87628603-f601-43ca-bc94-03ef85672265",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83bf8f6d-9161-46d0-ae15-08b183b7a0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220eee57-457a-47e5-bc0e-820c8ff1a096",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abd024e2-befb-4140-b54a-8621cbe343c2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71c1e2a5-a8c8-4e54-a34b-cf31e61987b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9ae925-d566-40cf-b298-879e4112f207",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7a39986-0fee-42fb-b33a-3c0efcca3f76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d9c643d-affe-4a9c-98aa-6db93f977f6c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3648b2cd-8de6-40e4-adec-4666e5d3992f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9316dc33-7022-48a1-a47e-849a5a4cdfb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eea7911-de9c-4f7b-bdd9-e1d2e65c3a11",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2ae56dbb-9525-45d0-8c52-ea9867b44eb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f433175-9d6c-4562-acce-7148cd2c0d4d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d246c875-f6d0-4f14-b65c-55680ab0aff9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9dd4d0fc-255a-4c17-8462-2aa191bae459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6e846f5-db78-4061-a080-cca98ad0ebe0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99211f80-2c6c-4cc6-9541-428814ebf4b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eca7770-8208-4033-9afe-525abbb304a6",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d69acb1c-0203-4236-8785-326f02f86b50",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34fea1e9-c9b4-496a-825c-3e2fe2ce4a24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11bc3f75-7b7a-4962-8d1f-af4500132c9a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "180ed167-ddcc-4288-b100-687133a9bcd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6990099b-1216-44eb-9a4e-1d3b02d5629f",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44c3199-0144-4b2e-b43c-344b25844b1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4eb4e880-a4ea-46c6-a0e0-634b6d73e768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15b245a0-f518-401a-bec7-7f284d0b3333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd227dd6-5b4c-4dcb-9544-71f6b6ebbfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2be8688-60ce-4488-b3fc-04c8445364c2",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f64bdce-8fad-45ea-a31e-887e7172e59c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91e6d0eb-4bba-4487-a0ba-33fb023c3e91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca801720-5848-40cc-a199-69fb86f3efb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dd792e2-71c8-4969-ae39-c22c4fbccbf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d09bb77d-cfb8-487c-8ed5-84cdf26379af",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f87190ad-3fd7-4ef6-8f63-269394208daa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "789ee946-6850-4be8-9be1-13cdf9c436a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "09e991d4-5c62-4fbd-98cd-d83912cb2cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e75563bd-1814-4a43-b333-314ad3adc8b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fa79d2e-254f-4991-a0bb-16354a92bd68",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "912e3b44-1814-403f-885c-1ab274f6cd1b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c379f918-3871-4d58-b4bc-dca4cd221807"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a0c8cb5-3348-4847-83a4-2867d32506f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5caf4c30-9c7b-456c-8f5f-7f706fd3643a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5383d488-30f5-49d7-a8a3-a19aec3c82a6",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dec1eceb-3d1f-4c65-89f3-e7477683265c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c9d5f85-f287-4834-b408-425fe6bcfcb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73d84381-87b7-485f-ac3b-046a5232702d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bbb99e5-4c75-4095-b5c1-c36cc139f1b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16b60831-584d-4df7-9801-e9d265c58ce7",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7c50c55-6261-408c-8259-57726e10a4ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb5df5d5-7e55-441b-8389-30a5b2498d80"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ee3c5f1-3c6a-455d-a9f4-1de38acd8c1a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7311b7ff-4955-4d30-a369-2972a464d146"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e067b5a1-d0c9-48ad-ad54-887237557a82",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc7527a3-b3f2-4530-bf31-83e54bcee45f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b196a6c-d080-442e-8c48-9a200d774670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a47c19e0-9730-4480-89cd-fe25855376b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e0f15d-c2fe-462d-8b60-a3fe6ac2b9ad"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e9823697-7d93-44f2-8354-6937090eeedb",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "05e9e876-22cd-4377-917a-1ca0f787627f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "708e6936-9525-4da6-aea2-2c93f7b62ad5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "bea4d850-0f69-431d-b3ab-66bcf0433bee"
                    }
                  }
                ]
              },
              {
                "id": "97307edf-5f4f-4d88-aef7-4c7fb2a4324a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a410405e-d990-43de-a010-fd750a773d6e",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05e19b73-5896-4007-add3-12e513a7815f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "c1b17c7c-d710-4753-8521-277b96b63500"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6a59be7-81bf-4f74-89d9-a80d1b515664",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5646393-544e-4dd3-8b99-4e952385357a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdedc9ef-e537-407d-84f7-9f4d0438506d",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163b056e-ce27-476d-8f06-8f82e8378113",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f180ddaa-20b7-40cd-a02b-e6ccf8844c28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71797ddb-6ddc-4ba1-8666-755b1637b5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "216d0471-75d5-4461-b4f0-cde59ae1d987"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8e1a21c8-3f27-4896-bcc5-c12b72591c66",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7299997-c2c8-4ba3-a50d-171e3f7e463b"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d87210e8-76f1-46e6-a39c-650a91dfb540",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ce7522a9-5493-45d6-af5e-5cf05b4f53b6"
                    }
                  }
                ]
              },
              {
                "id": "60d26cb2-7d8b-4aab-bd67-05f0a87cd617",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "6b4fe304-b2a4-4c63-aa0c-93449099438a",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2c7687b-dc4d-41bf-880f-34cf2ae8a0bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "4349746e-9834-45b9-b669-9385b279871f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4907d0d9-f0a1-4432-a16f-17c9fc8b5689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b7e5d77-cc73-49ed-94e4-8e3cebefd419"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fc1dedb5-6e32-4ce7-8901-ef6aed76f6d7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4664aea0-203e-4e33-b02e-b479f6fa5e79",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c2cb202f-393e-4632-a1fd-3991503015a1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "043740d3-c49a-4eef-898b-7fa3483f4691"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fffd45f7-e916-4e7a-9bc8-0dfcea89e498",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7e83baa2-b129-4489-985f-24f22dfde116"
                    }
                  }
                ]
              },
              {
                "id": "a1cf9d0d-8bd3-4f95-acb6-812fe40662c6",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bcd96472-5d8a-46ea-b371-7bf6b02b1b1c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "d9c63710-c226-4549-ac8c-ed3488c1c2a9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f143abf-18f2-4337-a7dd-3eaf6f3e3380",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c4389dcf-c119-4fef-aabd-c6c6cd343921"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8f223da0-b628-4051-ad15-b4944cef7df5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "663f03e6-e70d-4f8e-acb1-a0adfcfa4afe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cfccbca5-52e6-405e-9d64-404ab0ba655d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3c05adda-ee99-403d-8430-23b812da3273"
            }
          }
        ]
      },
      {
        "id": "57b8a261-9082-4ece-8a21-f523651b0318",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "cf3d3fd0-b984-4a8a-9221-53bec00b9dae",
            "name": "Negative Testing",
            "item": [
              {
                "id": "89656ea2-4e9a-4c62-8268-dd5fc489d59b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9551e418-0dc9-4638-9ad5-adc46fba0a9d",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "709ece91-5a3f-47e0-bbdf-061eef74fafd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58c1f980-82a3-4fdc-9933-cc59d28787a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c92bbe54-2f73-4083-bfb2-8b606e9f6710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c425994-aa82-43d8-aeed-2cbf63e375be",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6441abc-fffb-4f46-baa5-ba00332c7289",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "59617857-6a04-4993-8a45-bb7fd7253d74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ec2784b-008c-4da9-9bb5-9236ebec4599",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "07bb40d6-2736-43ec-88d6-a478ab98ecf8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "024b39cc-1c62-4029-8155-7344333e38dd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bbfd236d-a69b-4047-9481-06e9d36c1e1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "c298cd9a-b0a3-4346-a113-ab7cb26f0b1e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a50a223-bd4b-4a46-be83-7ffc02718844"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9d119fb2-e2e6-4cbf-908c-3dad6d01b4ee",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "743988cc-e900-4031-85a3-3b19bde9926f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbb839bc-4382-4450-8d9d-f83246d481fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7b83a30c-6219-4921-88a1-9c40570045dc"
            }
          }
        ]
      },
      {
        "id": "490d6da9-7301-4f7b-9fb4-795e64549a21",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "6bb7162a-5212-4371-a4d0-a820f262de29",
            "name": "Negative Testing",
            "item": [
              {
                "id": "22af9221-9baa-426e-8330-ede3037ada38",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "47b6b5d0-1041-4296-86c9-81c4dcbc45ea",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1bfbd4b-68a8-42d4-b588-4ba2ce838726",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e6b782c-458d-4809-a0e1-97c47d1ddb21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e5c3695-55b3-4cd4-beeb-565a66d0d2b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ce5adf9-6fcb-4d27-8b1c-e62dbe3790ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "179b18db-7471-40df-8120-f522f3164eab",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03ef8399-98cc-487c-be61-8f51453fbec7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b35eec13-4f8e-4acd-bf2d-35dc73b062f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc448924-f48e-4310-a5cf-1d2f94659645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c1811701-8feb-4ee9-bbb2-310b74f6fc3a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f6401255-a06d-4377-8fcb-f45c32154534",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "88009a51-3df6-43f5-9cbd-1c10fdd97c71"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a0079a80-2241-4526-af4a-b897d41ef0ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41c1cfa7-1e65-4638-a637-4838d6f62e29"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44e20696-fc44-4e84-8804-d6867aa9592e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a9f782b3-dceb-48aa-8fe1-3822088bc23d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e68d6682-8d75-49df-b5a8-11a75315174e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "17c3b103-8604-443c-87cf-b6141d40fa0a"
            }
          }
        ]
      },
      {
        "id": "c22d2f7e-32d1-48d4-8a3a-73be69132f71",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "96b16e63-621c-4406-ac8c-befa1b335b3d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf1d935-30e1-4291-bad3-02c3130fda33",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "52bc4ee6-70c2-40d3-9fde-4d9dd476a8ef",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9559c87-e320-447a-9323-c381dfa24a44",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a6ada403-19d0-482c-9b68-e166a104574c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15a66b7f-de51-4e38-8057-3a8fe4f0400a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7059ee57-f6b7-4f0f-81cb-e8dd2bbbc3cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ceda5a3-babc-41fd-80ce-42f24d0c6dee",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e4d7766-e115-4833-a191-cbc4ff4adfe1",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "881a7e1c-a720-4ab1-8aba-b36093d9b11b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1960736a-8ad2-447d-8216-e6b1bbbaa939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "191e5ced-d0b1-4545-82bf-d1312b981d44"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7241efb7-f393-4dfa-8972-40f9c8648988",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "539814ed-0946-41b7-b305-f180986c09ec"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8478ec4c-03f0-439b-a2d7-38e3a06b023a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "94c4b273-91ee-4ef6-a472-20ceecbcf692"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ad2795f-982a-4063-a5ca-a24f4a3a1913",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f7fa702d-7021-4ffb-86c6-93e753b78031"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2f7a706a-ebd3-4ddc-8f92-14e73cf083e8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "108a46c5-e696-4f9f-b309-70e4725cd0bc"
            }
          }
        ]
      },
      {
        "id": "975345d0-55f7-4b3d-b930-8f3e0fcaa0b0",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "12c4dfb9-8a2d-4d41-8881-5dcad792af7a",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "143bc4ca-ae8a-4790-8d3f-fbb6dc245ed9",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "95608007-32aa-402f-ba35-39ac8fdc7157",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a9efcc23-4a4d-4998-ab9a-1e97d2b18efd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2e4d613-3d54-454a-b526-bd831c6e5e26",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 40.43076923076923,
      "responseMin": 18,
      "responseMax": 445,
      "responseSd": 40.571672281482066,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680050543709,
      "completed": 1680050564976
    },
    "executions": [
      {
        "id": "d55b214f-e9f4-41e6-9c80-b4087b5dd04d",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "81ba1176-5881-4ec4-a8de-2f1b08815f73",
          "httpRequestId": "934d1876-a4c4-4f0d-ba11-950c2b2444fd"
        },
        "item": {
          "id": "d55b214f-e9f4-41e6-9c80-b4087b5dd04d",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "08000ea9-f797-4812-a5c3-ad7778223077",
          "status": "OK",
          "code": 200,
          "responseTime": 108,
          "responseSize": 0
        }
      },
      {
        "id": "f93f53e1-66f3-42ca-a0ed-a346d77777cb",
        "cursor": {
          "ref": "e5df5bb5-14dc-489d-9f93-d34468a08e14",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "a883e747-f396-47fa-b372-d5b72c0d3118"
        },
        "item": {
          "id": "f93f53e1-66f3-42ca-a0ed-a346d77777cb",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28b13cb8-cd6e-4664-8af1-e48e6623a8e4",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 0
        }
      },
      {
        "id": "a1383260-d64b-4ba0-8211-60d5921520bc",
        "cursor": {
          "ref": "7f3ec0f6-7008-47b4-8bd2-84f03c6e4f17",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "51003818-af54-4bab-b03f-e452a6b447b3"
        },
        "item": {
          "id": "a1383260-d64b-4ba0-8211-60d5921520bc",
          "name": "did_json"
        },
        "response": {
          "id": "00a525a4-997b-4c84-953d-90269078740f",
          "status": "OK",
          "code": 200,
          "responseTime": 135,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac7410a-7b95-4fc5-a9c4-b8051c760cfa",
        "cursor": {
          "ref": "aeb4073d-b1fc-4902-abb8-a2451c6102fe",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ef998aef-f0be-4c77-99a4-611a11ac49a5"
        },
        "item": {
          "id": "bac7410a-7b95-4fc5-a9c4-b8051c760cfa",
          "name": "did:invalid"
        },
        "response": {
          "id": "79151212-4a09-47eb-9783-ed902d48b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bac7410a-7b95-4fc5-a9c4-b8051c760cfa",
        "cursor": {
          "ref": "aeb4073d-b1fc-4902-abb8-a2451c6102fe",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ef998aef-f0be-4c77-99a4-611a11ac49a5"
        },
        "item": {
          "id": "bac7410a-7b95-4fc5-a9c4-b8051c760cfa",
          "name": "did:invalid"
        },
        "response": {
          "id": "79151212-4a09-47eb-9783-ed902d48b919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f827e611-7aac-4679-bd7d-a6440035ad76",
        "cursor": {
          "ref": "925138d1-3c77-4cdd-be32-38867c25ba5c",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "608a7669-5d78-4b8d-8857-7a572fceef17"
        },
        "item": {
          "id": "f827e611-7aac-4679-bd7d-a6440035ad76",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "85600ffb-6026-4881-8767-88b14a218797",
          "status": "Not Found",
          "code": 404,
          "responseTime": 68,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96e76ac4-8643-495e-8864-e1826c76e518",
        "cursor": {
          "ref": "e16a3d9b-3e96-4bcc-9366-84b89ddbbbdc",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "5add47e5-0d96-4870-abfc-71233ee57e47"
        },
        "item": {
          "id": "96e76ac4-8643-495e-8864-e1826c76e518",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "7ce00b1c-344d-4236-8a4c-45d96c9f0ee2",
          "status": "Not Found",
          "code": 404,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7465da1c-d5ba-4524-b60a-d950d735b83d",
        "cursor": {
          "ref": "6edf2fa5-b9eb-469c-b9dd-50d9676d5bee",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "b5ab74b7-89e0-4540-a989-e11933aa22d6"
        },
        "item": {
          "id": "7465da1c-d5ba-4524-b60a-d950d735b83d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d10e65fb-b163-4a28-883f-6e2de111b952",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c48d37-9073-4cfd-85b5-e8b18daca270",
        "cursor": {
          "ref": "11318c98-fc3b-4a64-93d5-9d7e5830b89a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "277ab454-8a19-4c45-82da-22ad8dca0689"
        },
        "item": {
          "id": "12c48d37-9073-4cfd-85b5-e8b18daca270",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d659e4e3-6120-41e2-bc4c-9a1101e03a31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12c48d37-9073-4cfd-85b5-e8b18daca270",
        "cursor": {
          "ref": "11318c98-fc3b-4a64-93d5-9d7e5830b89a",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "277ab454-8a19-4c45-82da-22ad8dca0689"
        },
        "item": {
          "id": "12c48d37-9073-4cfd-85b5-e8b18daca270",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "d659e4e3-6120-41e2-bc4c-9a1101e03a31",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c77fbcf9-df3a-4eb4-b692-4900b327141e",
        "cursor": {
          "ref": "9a140b3d-54d2-4ede-8963-801fd2fcbdfe",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "781905e8-2e52-4481-b2d0-5bdbee798506"
        },
        "item": {
          "id": "c77fbcf9-df3a-4eb4-b692-4900b327141e",
          "name": "identifiers"
        },
        "response": {
          "id": "1ea3b3c0-1983-46ec-8b47-f17629991154",
          "status": "OK",
          "code": 200,
          "responseTime": 81,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497d9f98-f553-40e7-8e6b-3dc38502f5c6",
        "cursor": {
          "ref": "1f8257c6-6fdf-43fe-af3d-49b5af41ecc6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba042196-a537-43e9-923d-d8d844bbc97d"
        },
        "item": {
          "id": "497d9f98-f553-40e7-8e6b-3dc38502f5c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "711c727e-48cc-45fa-b87a-a1c00d2c58a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "497d9f98-f553-40e7-8e6b-3dc38502f5c6",
        "cursor": {
          "ref": "1f8257c6-6fdf-43fe-af3d-49b5af41ecc6",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ba042196-a537-43e9-923d-d8d844bbc97d"
        },
        "item": {
          "id": "497d9f98-f553-40e7-8e6b-3dc38502f5c6",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "711c727e-48cc-45fa-b87a-a1c00d2c58a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d441c31-4cee-4187-920a-e444e2fb40aa",
        "cursor": {
          "ref": "a2665cb1-4c1a-444a-ab0f-ceb40f839f94",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "5e743c73-5728-4af3-8624-e39c21394477"
        },
        "item": {
          "id": "7d441c31-4cee-4187-920a-e444e2fb40aa",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "adbb542c-25aa-48f8-b73c-73a9a2bc2ba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba93a923-a804-41a2-a3b9-4d973dbdd80b",
        "cursor": {
          "ref": "29708a47-0090-416a-ba5e-32152f1fcdcc",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "875e8153-fd37-4168-8757-9e563db2a4d3"
        },
        "item": {
          "id": "ba93a923-a804-41a2-a3b9-4d973dbdd80b",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1a46d24a-d8bf-4333-b6a3-c066f83ef8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cc902c7-50df-49b7-8f63-2442d7216612",
        "cursor": {
          "ref": "1ce92dd2-428c-4d4e-aed7-b270e63265fb",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "d7f9a105-b9f7-434b-b04b-e91d595f11f2"
        },
        "item": {
          "id": "4cc902c7-50df-49b7-8f63-2442d7216612",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "8afb6d5f-61dd-4081-b96d-53c2814b1d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e01e24f-e058-41de-8fbe-d8eca5f79ff4",
        "cursor": {
          "ref": "357d2a3c-eac1-4a47-b934-01bbf59293a8",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "63687ec5-be73-4101-b720-4a89c8cbf113"
        },
        "item": {
          "id": "1e01e24f-e058-41de-8fbe-d8eca5f79ff4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "d38850fa-dc00-4bad-9287-00cf9f97d8a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7aa4c7-3174-4788-b5e6-7808948db0dd",
        "cursor": {
          "ref": "7a6693fc-d406-4503-b5d9-82c5644bca6e",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "aa019ad5-ef60-4e64-9728-343be9a1a22f"
        },
        "item": {
          "id": "ec7aa4c7-3174-4788-b5e6-7808948db0dd",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "05de38aa-19be-42ff-b521-f9b8b9208db0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6815cf7d-1c4e-4eac-bba2-1f671b3baaf5",
        "cursor": {
          "ref": "45b00a16-f3f7-4d10-97ea-5e052800d7d0",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "334b52db-a9cb-451f-baff-971fa7a1df52"
        },
        "item": {
          "id": "6815cf7d-1c4e-4eac-bba2-1f671b3baaf5",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "b882efcf-9187-4637-949d-117f720bce29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bd3d038-1132-4cd4-9f1c-b795adfae73e",
        "cursor": {
          "ref": "1a4e95cf-542e-4272-8a99-6ea0a788f563",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "91c4644b-1f23-4622-8355-3ad887a6b59e"
        },
        "item": {
          "id": "3bd3d038-1132-4cd4-9f1c-b795adfae73e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "feb4f342-1949-487b-8306-84e1fc82a9f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e90fe1-dd6a-4021-86f0-c9651e11abfc",
        "cursor": {
          "ref": "ce9de08a-5f0f-4364-b630-8a8529ddca81",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "2631ae36-ad2c-4a1b-80e0-a042345c78bd"
        },
        "item": {
          "id": "b8e90fe1-dd6a-4021-86f0-c9651e11abfc",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "302d18f8-ae03-4d70-abf8-026bf9f9c712",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e5cb74-4593-4ba1-9e7b-7f3cd86e81f5",
        "cursor": {
          "ref": "157dd3bd-60cf-44c9-9a4f-9480f40f9d3e",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "4f59e08e-5b8f-408b-b87e-23fd07bb4d8a"
        },
        "item": {
          "id": "67e5cb74-4593-4ba1-9e7b-7f3cd86e81f5",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "edfb4666-126c-4260-9289-1f8f7ae26551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c66eda66-ff52-4247-8f08-da87a6d74011",
        "cursor": {
          "ref": "47eb0c22-5257-407f-b4af-a08f638420b0",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "c834ebf7-0d63-478e-94ac-9918ec4eb522"
        },
        "item": {
          "id": "c66eda66-ff52-4247-8f08-da87a6d74011",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "46e5816a-c32f-4be8-a2bb-069f551b32a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c44087-7686-4e35-be05-958a60796a74",
        "cursor": {
          "ref": "2f6f4b7c-779e-4a1b-930a-67c80d68b2b4",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "31f825de-0155-4867-934c-fe00f3a4d17f"
        },
        "item": {
          "id": "53c44087-7686-4e35-be05-958a60796a74",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "8ffcf73b-8d53-4b2a-940d-b30b664a46d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "420bd314-4050-42c2-8f1f-66057f17488e",
        "cursor": {
          "ref": "39e2a1c6-cdac-4295-b04b-884fd732987f",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7b4c6279-9854-4f78-87b1-402e0ae01686"
        },
        "item": {
          "id": "420bd314-4050-42c2-8f1f-66057f17488e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "b331c276-5e01-4593-a005-aacc6e6a9d43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dec413cc-f2f0-4d95-a8b4-e46249cbb5f1",
        "cursor": {
          "ref": "1f5cf61b-17d8-4fb4-93ed-412ed8aae6fe",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "531ac308-6f99-473c-bd9b-e7d5f43c2486"
        },
        "item": {
          "id": "dec413cc-f2f0-4d95-a8b4-e46249cbb5f1",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "57b34475-fa57-4eea-a3a7-0a8792839b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e2516d2-8457-48bc-bf64-afa7b93e3427",
        "cursor": {
          "ref": "fe4a9961-f0ef-408a-9e2b-9dbb256db18d",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cf8a5d61-46d7-4a87-a1c7-06cd05ab9c0d"
        },
        "item": {
          "id": "8e2516d2-8457-48bc-bf64-afa7b93e3427",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "4e53f716-53ef-48dd-9778-864163b67540",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "696c316d-c018-4739-82b2-eb4377560e23",
        "cursor": {
          "ref": "519d1c2a-7d59-4881-bad0-5f7368b6b572",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "f87bee7e-a9e4-4660-81ec-f3c562398003"
        },
        "item": {
          "id": "696c316d-c018-4739-82b2-eb4377560e23",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "743d1064-1eb3-4d15-a86c-7d5dc4a02834",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b87c295d-9430-434f-8036-1d4dcdbc81b0",
        "cursor": {
          "ref": "6b592dcc-4d85-49a8-80ed-a6757f1adfc4",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7d611bb5-b895-4065-b904-a381b59ab157"
        },
        "item": {
          "id": "b87c295d-9430-434f-8036-1d4dcdbc81b0",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a1bae77c-c7c6-43ae-9cb8-f45fa0d37f5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6eb0fc2d-d1a0-42f4-98a7-59e067b3585e",
        "cursor": {
          "ref": "9900e19f-540a-4b05-b3b8-eff9f87bcca4",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "8bfa56fc-fcef-4e6e-8cce-ef34c034525b"
        },
        "item": {
          "id": "6eb0fc2d-d1a0-42f4-98a7-59e067b3585e",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "805b393a-cf10-4218-b286-eb3fd2ee8c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f03fb2e-9e12-4e3d-a6b2-7bb7689215e3",
        "cursor": {
          "ref": "a248c91c-18e8-48ef-acc7-7cdb28c209cd",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "73996d40-5900-46f9-83a5-5dcf0c3ae023"
        },
        "item": {
          "id": "6f03fb2e-9e12-4e3d-a6b2-7bb7689215e3",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "8c61237e-189f-4611-bf2b-a053605ac8fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9924b4-9c66-4f22-94a3-86d795d96296",
        "cursor": {
          "ref": "1d6c56dd-b509-4e55-8623-2e9215ce7764",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "8af87348-e0c1-4de0-8f96-4c668905f18e"
        },
        "item": {
          "id": "3d9924b4-9c66-4f22-94a3-86d795d96296",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "3aa8ca70-27a3-4005-a453-40b0c0237e54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161d7fe-a0ba-4af5-b054-e8e21fcc3fb6",
        "cursor": {
          "ref": "4ac411d0-9a48-41f3-b96c-e01b64c5f289",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "dc0d353e-031c-43af-8c69-3e66748be80c"
        },
        "item": {
          "id": "2161d7fe-a0ba-4af5-b054-e8e21fcc3fb6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c58ad82a-4053-4ff9-9f2e-52cdb789cd01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "878bbce5-5b7d-4cd9-83d8-4093fa9184a5",
        "cursor": {
          "ref": "14809922-9664-4dab-9b88-14f17f13065d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "a68ec47c-6f97-41ca-8cf9-94b9c2da8226"
        },
        "item": {
          "id": "878bbce5-5b7d-4cd9-83d8-4093fa9184a5",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "d4e3d30e-42d2-4f90-a75c-591ad8de7203",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36358120-cd05-4331-b494-555a60a71944",
        "cursor": {
          "ref": "6879486d-cc9b-41d4-9d4b-6e03bbd132cc",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "a6dbf207-0ba1-4701-bbf2-26c2e58fcf3e"
        },
        "item": {
          "id": "36358120-cd05-4331-b494-555a60a71944",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "9f5cca35-5019-4f20-adb4-d0253e058ac3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98e2c1ba-99a3-4273-85aa-149a3c05496a",
        "cursor": {
          "ref": "808c9418-408f-4dda-9c7d-1ef53e0361c3",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "4bd0630d-22d7-44c5-81e7-35dfaad0c725"
        },
        "item": {
          "id": "98e2c1ba-99a3-4273-85aa-149a3c05496a",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "72dbff60-2de7-46f8-a9b3-3dedb86e01f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c10a000b-050a-4860-bcfc-54569bbfdf3a",
        "cursor": {
          "ref": "6453e127-cec1-4c1d-ab03-9926816ea766",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7ea45a73-04c8-40a7-a5ec-2477507ca463"
        },
        "item": {
          "id": "c10a000b-050a-4860-bcfc-54569bbfdf3a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "c1571938-1999-4ac5-8048-60598ea987c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c8604469-5c92-4321-94b5-3508530e8f76",
        "cursor": {
          "ref": "3e6f0b60-328e-42b4-abc0-032b0f84c9bb",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "73a76758-0d2f-4b1b-835d-e276622da731"
        },
        "item": {
          "id": "c8604469-5c92-4321-94b5-3508530e8f76",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0c901ed1-5d9d-4747-ad70-3ac51cd8a032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67761cf1-03df-4911-8037-563ac5939f94",
        "cursor": {
          "ref": "773e48be-6ff5-4a7e-9a56-c8f720c46980",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6618d237-47ac-4cb5-8a4b-a6d73fc68db0"
        },
        "item": {
          "id": "67761cf1-03df-4911-8037-563ac5939f94",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "03b683b0-cf93-469f-83df-3782f9cda117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27114f37-1f17-454e-94dd-1b8f44357897",
        "cursor": {
          "ref": "93134bf3-2a2f-4121-b448-4a5e2d03e415",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "8e503d92-ef8c-44a8-8d86-017666a8de90"
        },
        "item": {
          "id": "27114f37-1f17-454e-94dd-1b8f44357897",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "bcc29a8e-6365-47dc-b259-d213b75dffdc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c130a1-76c7-4bbe-9623-d8f697c90ded",
        "cursor": {
          "ref": "06cb5989-2bef-4522-afcd-c7ad3e9c06f0",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f119e126-e40f-4297-9634-83a9a8f5da92"
        },
        "item": {
          "id": "21c130a1-76c7-4bbe-9623-d8f697c90ded",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "9d9166d7-5d1a-410f-8c8b-d303cbc44d96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc4350f8-db6c-4e78-937a-116b2432fcf8",
        "cursor": {
          "ref": "fbca9599-4e19-441c-9e59-22df26804ae7",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2f3e3242-8f75-4f28-a922-4f6bd2aa0a02"
        },
        "item": {
          "id": "fc4350f8-db6c-4e78-937a-116b2432fcf8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "c73d9e94-61b5-468f-8eb5-6fefd960a155",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abdda149-983d-420c-9637-b323d6f01983",
        "cursor": {
          "ref": "72ba84f3-5b9e-4df7-a505-20312c4129a8",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "ae68903a-dd53-42be-bdf7-e33d24b0d93e"
        },
        "item": {
          "id": "abdda149-983d-420c-9637-b323d6f01983",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "72e43489-22b4-4758-a50d-b872e1f8a160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "79e0c8a1-5831-465b-963c-70c000886a96",
        "cursor": {
          "ref": "f617cc2f-23e9-4611-b6c7-98b8f8617e89",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "ebbd1665-0d32-4e55-a8b7-0b8998b9220e"
        },
        "item": {
          "id": "79e0c8a1-5831-465b-963c-70c000886a96",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "015b2f13-d4cc-4b43-b436-c6764f09f372",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba3e5764-df49-4d6a-98fa-38e548a8b6a7",
        "cursor": {
          "ref": "7c67883d-91b6-4df3-9a08-a59a8fd52974",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "9b25a7be-5dfa-4024-840b-9462c0c430f6"
        },
        "item": {
          "id": "ba3e5764-df49-4d6a-98fa-38e548a8b6a7",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "1b4805b9-4ddd-45c6-a0b1-fe643c5e8826",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddffe9c5-c655-4cb4-a6b4-2695eea195c2",
        "cursor": {
          "ref": "be67096d-0572-4109-828e-57e59919e6dd",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e0613a48-005a-4b24-8f5f-ce337ecc81ea"
        },
        "item": {
          "id": "ddffe9c5-c655-4cb4-a6b4-2695eea195c2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b77cb331-bc5c-4d47-9ed6-0964aecd1526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3fe17f57-3e1f-4e22-ad00-af72417491ea",
        "cursor": {
          "ref": "1abdfad3-f30d-4c91-b2fb-d71d751e8a45",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "cb424351-3049-4d7a-8e1a-074cd0cc2290"
        },
        "item": {
          "id": "3fe17f57-3e1f-4e22-ad00-af72417491ea",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "edcf36d6-40c3-4979-bd6b-a16e80d896d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66afdd1-20e3-4d81-98da-5eacae737161",
        "cursor": {
          "ref": "a6173727-aed4-457e-ab98-225d28264c00",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "dff5ea89-e140-4150-81ab-f807fb50112b"
        },
        "item": {
          "id": "a66afdd1-20e3-4d81-98da-5eacae737161",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "722411a8-c173-4d99-83b7-9f39f1c4f815",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 38,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ad51ff-5b35-47cd-82c5-35863047d378",
        "cursor": {
          "ref": "b5620048-210f-4e66-94dc-09e3e5ea592e",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "ccfcfd61-7343-4fb0-a5bc-38da1ebb8ae4"
        },
        "item": {
          "id": "e9ad51ff-5b35-47cd-82c5-35863047d378",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "8c0e7e26-cf97-42bc-884b-66c40e80d861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a30339f9-9917-4aa3-93b1-e8be9ee362aa",
        "cursor": {
          "ref": "a3c852d9-a7b3-4e40-8bcf-3777ce48ebd3",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "56e31ac1-c670-47dd-9f3d-7f249cc80b64"
        },
        "item": {
          "id": "a30339f9-9917-4aa3-93b1-e8be9ee362aa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "1f08e266-3106-4d05-b8c4-220028d88bf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bd2fb7-2d01-4969-8f7a-21cc2aa3f8ff",
        "cursor": {
          "ref": "c8c9c642-42d3-492b-9082-0497917e8cac",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "52ff4c05-1ec5-46cb-b2a0-b316fca85df5"
        },
        "item": {
          "id": "84bd2fb7-2d01-4969-8f7a-21cc2aa3f8ff",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "db92e413-bb4d-489b-a3e2-75b16135ec06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7931f7c-96d8-484e-9009-dadbed075e50",
        "cursor": {
          "ref": "bbd07b99-2009-43cd-b3ec-c125e2385929",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5d0588d8-d5fb-4a31-9c60-6983a51b42fe"
        },
        "item": {
          "id": "e7931f7c-96d8-484e-9009-dadbed075e50",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "a614c932-5486-4c98-b017-343fd1f4b6fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39d57183-b959-4ff9-84f4-8a4c746bf245",
        "cursor": {
          "ref": "01774cfe-274e-44fb-9e74-5e96f6322357",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "779157e8-fbac-498d-80d0-b4c693e4dfbc"
        },
        "item": {
          "id": "39d57183-b959-4ff9-84f4-8a4c746bf245",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "d8d79d5a-366d-4be2-81bc-249a6de08880",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceca40f-b07f-4948-b4aa-abc1247c458d",
        "cursor": {
          "ref": "769d6819-aa7d-4d3b-ace9-05eaee6a1124",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "15a8140e-2ebf-41bd-806d-117fba0872d2"
        },
        "item": {
          "id": "fceca40f-b07f-4948-b4aa-abc1247c458d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "0c3385c8-d201-4131-bbaa-f90d6221eb83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b2fa58-4c14-480b-b4b1-340765f51fd3",
        "cursor": {
          "ref": "fdbcec91-5ba7-4b04-8e2e-9d3d70909df8",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f53560c3-fec8-400d-81b6-09c1c673545b"
        },
        "item": {
          "id": "48b2fa58-4c14-480b-b4b1-340765f51fd3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "1816f510-a824-4806-a136-5802c59b6190",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 39,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ed90fbf-ce72-4517-9b1c-2abff9020eff",
        "cursor": {
          "ref": "79e2301a-de39-411b-9158-e7ff2b2ce3e1",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "6f1d77f9-aa6f-4e30-8562-011e9fb5cd67"
        },
        "item": {
          "id": "5ed90fbf-ce72-4517-9b1c-2abff9020eff",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "d9dad7e3-d4b8-49f6-81f9-00694444d9da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ef890da-bf4c-4ffe-966d-7b65616016f9",
        "cursor": {
          "ref": "5e5a5dfb-6fa1-42ca-abf1-2a70775b9621",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f3bd1f5a-56fc-437a-84aa-7042925f9079"
        },
        "item": {
          "id": "3ef890da-bf4c-4ffe-966d-7b65616016f9",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "9f34a392-edd2-4eb8-9717-c759c6d0bd57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3719c0db-51c8-414f-b913-08dc6caab905",
        "cursor": {
          "ref": "a3b9f202-43ab-4764-afb5-38c50783b6ee",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1a70f7ff-f18d-40f0-b345-d0e06da734f1"
        },
        "item": {
          "id": "3719c0db-51c8-414f-b913-08dc6caab905",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "60066fe0-50a7-4205-85c5-8ea66002ca4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088a65c4-5db4-4715-8a95-b5fe5f399fca",
        "cursor": {
          "ref": "171ff567-65ea-4351-989c-69e3355a7000",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d7317d19-8d39-4c98-8ee2-2e1e6ee2313c"
        },
        "item": {
          "id": "088a65c4-5db4-4715-8a95-b5fe5f399fca",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "cee0f9af-f23d-4b3e-8d71-e7d171720449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061e23e6-68b5-4843-aba6-0235402de882",
        "cursor": {
          "ref": "caf39107-ca67-4a0d-8156-c3abb0ab9cc8",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "71e5cf58-1c54-4b26-a3ae-d4273c0421f8"
        },
        "item": {
          "id": "061e23e6-68b5-4843-aba6-0235402de882",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "d8a301a4-ccfa-49d6-90f4-ea47c8fafd24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a9670f6-01fa-4e7b-8cde-f9acd5ab39b2",
        "cursor": {
          "ref": "82f8cb48-6013-40bd-a722-10ac974291a3",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "5420ac12-0ef4-49c0-8379-8f0f4177ffcc"
        },
        "item": {
          "id": "0a9670f6-01fa-4e7b-8cde-f9acd5ab39b2",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5acb02a0-ecdb-4790-93ec-b0f52b5af069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cf5c2a-ce26-48db-b094-2ac67b89fa2e",
        "cursor": {
          "ref": "ca27aa48-ece8-4426-98e4-7ff183ea1bf6",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "6f54959d-93e3-4a88-83ab-6ddc8b7dded3"
        },
        "item": {
          "id": "28cf5c2a-ce26-48db-b094-2ac67b89fa2e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0b54292d-e759-45c4-8b8f-b4e0e93e49e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d719dbc-3f9e-4729-b72a-14db329839a0",
        "cursor": {
          "ref": "1b5daada-ec8c-4b86-aaf3-efdfb622cc0b",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "757e7fdf-de3c-442e-80d6-403d37801237"
        },
        "item": {
          "id": "6d719dbc-3f9e-4729-b72a-14db329839a0",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "5eec0cac-4551-470e-a123-7cbc7a4889c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c94531-71f2-4315-a727-4e222181e645",
        "cursor": {
          "ref": "a928f795-d6a1-47ed-a990-94049983fff9",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "6ee5d274-f63d-47d5-85d2-27b4ab21ac14"
        },
        "item": {
          "id": "a3c94531-71f2-4315-a727-4e222181e645",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "74bc1c11-a7a3-4fd0-8da5-c952f619dcab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e76c5214-657b-461d-aaa8-fe4b1c78dfa0",
        "cursor": {
          "ref": "05009e4c-77ed-4b4b-9ea4-893cb697d08c",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "11406018-513f-482d-85ee-598ce80e8736"
        },
        "item": {
          "id": "e76c5214-657b-461d-aaa8-fe4b1c78dfa0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b3155d84-09f6-4368-9ba6-b7eab7de9619",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88b3082a-2048-413f-96b6-800ca500128d",
        "cursor": {
          "ref": "48d1bcb6-e153-44fb-acfa-c762c7940a3b",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4e4f5b7c-3246-46a0-83be-06b912539c99"
        },
        "item": {
          "id": "88b3082a-2048-413f-96b6-800ca500128d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "25f47a0c-1cc3-4040-9fc6-b28d75f429f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e68d8487-63b0-4e92-969b-67c7f3860651",
        "cursor": {
          "ref": "287d61e4-a7fa-4c0b-ab84-81ac907a0440",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "8060d2fa-9c34-4de2-a4d7-a6e6243a6dcc"
        },
        "item": {
          "id": "e68d8487-63b0-4e92-969b-67c7f3860651",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "dce90f2f-c7dc-4ec5-8975-22aeb49eca09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63909fa2-9e1b-4326-a825-aada433e8faa",
        "cursor": {
          "ref": "cdb34e50-5ecb-4e5a-a86d-fb4941fa3e81",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7f9c3562-99be-4e78-a454-b002366913e4"
        },
        "item": {
          "id": "63909fa2-9e1b-4326-a825-aada433e8faa",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "e19f3c7c-d535-49db-b104-7863cd375bce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89aae464-2e53-428b-9e02-542ab35df72f",
        "cursor": {
          "ref": "a6b01eba-7dcf-4709-996d-e1f207f8b885",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "1616b2f4-f86a-45ed-95fb-66fbb05f18e0"
        },
        "item": {
          "id": "89aae464-2e53-428b-9e02-542ab35df72f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b640fd57-177c-4172-b534-b68c4347e1c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6b69a6d-ffe1-48d0-8e7e-3638c3fed908",
        "cursor": {
          "ref": "6bb54c24-5de2-4120-b304-3a923811fbd5",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "bcd0a84f-88dd-438b-a8e8-8c14a0e04ab9"
        },
        "item": {
          "id": "e6b69a6d-ffe1-48d0-8e7e-3638c3fed908",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "ec852e67-99bc-4a27-b4a0-9c838daf4a5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1998d658-dd52-4f75-9d01-e415304d2d8a",
        "cursor": {
          "ref": "7d29ba02-cb18-41f7-8565-09a5bd2ba042",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "abe20a10-4a0c-4040-b9c3-9bff9f430d90"
        },
        "item": {
          "id": "1998d658-dd52-4f75-9d01-e415304d2d8a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1f686908-8a4e-4344-a1bd-f309b43ab8c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76a5831-2377-4484-975c-9067fc3ee4c4",
        "cursor": {
          "ref": "5e81e5bc-1929-4a15-9c97-1837e7f057db",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "2f996e01-ece6-4c9b-af1a-c299d958efd6"
        },
        "item": {
          "id": "a76a5831-2377-4484-975c-9067fc3ee4c4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "f3afc74c-81cc-4116-a902-eb61bee9d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74509b17-a24c-4f79-9378-4ea0db8196a2",
        "cursor": {
          "ref": "87c698db-ebf1-4dbd-ad19-04e354124452",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "6b000234-d265-4a01-8ad6-e2a290fe299c"
        },
        "item": {
          "id": "74509b17-a24c-4f79-9378-4ea0db8196a2",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5fcf99e0-c337-46e6-9973-35c145080de8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbc4fce-fba1-4e81-a168-5a41e112a446",
        "cursor": {
          "ref": "f068a91f-c92c-47af-9649-ba0cbecc6113",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "a29c2f89-936a-45f4-ae9d-9f20d5f9f8eb"
        },
        "item": {
          "id": "ccbc4fce-fba1-4e81-a168-5a41e112a446",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "72bbdf1b-49c5-4452-a66a-61c34fa0e194",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c53657a0-48f6-4ba0-922d-bf18a9aa2452",
        "cursor": {
          "ref": "beee2d9f-4327-498c-9d61-ea8ceed3939d",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ec2aaaf4-d27c-49e8-9940-919f98922e43"
        },
        "item": {
          "id": "c53657a0-48f6-4ba0-922d-bf18a9aa2452",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6c438fc-6db6-4362-bd29-1bac09f95f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb02cec1-838e-440a-ba95-f7119d3a4214",
        "cursor": {
          "ref": "512b93dc-2f5b-4639-a1da-a4d3218907fc",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "69889257-29da-4399-b022-33f57c064a66"
        },
        "item": {
          "id": "fb02cec1-838e-440a-ba95-f7119d3a4214",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b8738e17-f3a8-4e8f-b01c-c54336b50d1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d12aaeb-02f5-4fe5-abfa-fe3a1df82f36",
        "cursor": {
          "ref": "a4548eb0-4846-420b-ad8e-7a040639571c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "a3764bfb-aa9e-48d6-bea4-9c1b7c9aa95d"
        },
        "item": {
          "id": "2d12aaeb-02f5-4fe5-abfa-fe3a1df82f36",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d5a2c7a3-ad2e-417f-9749-be0fa46367ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1068e8b9-50ec-456a-9ca5-d1020ee31969",
        "cursor": {
          "ref": "42d86ec3-df77-4bf6-947f-b36d50b17857",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "0c63ab3a-b000-47a1-977b-7a286cb1527a"
        },
        "item": {
          "id": "1068e8b9-50ec-456a-9ca5-d1020ee31969",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "73913db9-4a5e-4235-8a40-a3213ed4ab31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04e3c22b-1f34-44e6-9e59-67f6d1c4a527",
        "cursor": {
          "ref": "53123b1d-0637-402b-b8eb-347413959009",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0f40e9f2-ae72-4c33-83dd-ee1b77303322"
        },
        "item": {
          "id": "04e3c22b-1f34-44e6-9e59-67f6d1c4a527",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "c4da030a-2c8f-4282-a0fe-cccf3f4af14f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "127d5a09-c758-4aaa-8d67-e2aa54007b8d",
        "cursor": {
          "ref": "ec7176a1-b1e7-4722-abd1-a84ec59ae970",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "226d5290-a9cc-4591-a73c-289e1bd9b868"
        },
        "item": {
          "id": "127d5a09-c758-4aaa-8d67-e2aa54007b8d",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "cdda98ff-3cd7-4cfb-ad95-80ce0b9f5a5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a912b85-09b3-4d1a-ae81-3798dcb438d9",
        "cursor": {
          "ref": "055e048b-c9fc-42e6-8c40-9b32b64c4a2e",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "9c70cfa5-e04f-402d-b3c7-a5f26a3c6ebc"
        },
        "item": {
          "id": "5a912b85-09b3-4d1a-ae81-3798dcb438d9",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "933765ff-d215-45cc-9b43-ce6db7c8d8ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad656653-7a63-43d5-b1ae-62563cc321b9",
        "cursor": {
          "ref": "462453a0-e0d9-4bef-a36b-6c0542a5e5c3",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "190c7383-1749-4fed-a2d8-981bcff240d2"
        },
        "item": {
          "id": "ad656653-7a63-43d5-b1ae-62563cc321b9",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "28e61083-975a-4dc5-a858-7e888d06a46f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423a3009-cad2-45ae-99fe-ecc2a89d69d5",
        "cursor": {
          "ref": "27ef06f2-49b3-4c3a-a785-a7dc5e7dbf0a",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a561358d-33ba-449b-8741-e1cafe5617eb"
        },
        "item": {
          "id": "423a3009-cad2-45ae-99fe-ecc2a89d69d5",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1b2b6405-b7cf-4ca4-8027-f5d93b878960",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "746182d2-f3e8-40d9-b4f0-e8d12550617e",
        "cursor": {
          "ref": "017d011c-c158-44d2-a6c0-80e3ad07cd7c",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "97708ba1-3a51-48ab-bcd3-b1154e6794bb"
        },
        "item": {
          "id": "746182d2-f3e8-40d9-b4f0-e8d12550617e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a81c990a-ba35-445a-8b99-2ad1c57c132c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747d643b-2127-4c36-9b96-6011d9fb986b",
        "cursor": {
          "ref": "df6f4b45-acb3-4f5e-8b91-667d6d454a92",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "6b451f7f-22a6-4c87-b446-1ea26ba11a75"
        },
        "item": {
          "id": "747d643b-2127-4c36-9b96-6011d9fb986b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "b1476ad9-26e2-469d-82d1-29899e4072b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f00163f-c682-4127-a081-8e5d7371fcab",
        "cursor": {
          "ref": "7cae50f9-296f-4470-802b-e4e2c92c28af",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "d3b98ea2-f82d-4417-bd07-0c8affa96e8f"
        },
        "item": {
          "id": "8f00163f-c682-4127-a081-8e5d7371fcab",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "11dedfc6-2278-441d-a552-e03b9c407192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2492110c-670f-4866-8896-0e9237ee7645",
        "cursor": {
          "ref": "afb7c567-e0d7-4ac2-a4be-81d80fcb9b92",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "54dc3be3-755e-449a-a82c-2a4489617956"
        },
        "item": {
          "id": "2492110c-670f-4866-8896-0e9237ee7645",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "c91b1bd7-82a8-4d3b-82da-d3481447fcdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3246090-c4f5-4eb6-a085-417ac717ab63",
        "cursor": {
          "ref": "ab2abc50-f09c-407f-a919-043103cac0fa",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "07735de7-6e5d-47b9-bb71-b321f735edb5"
        },
        "item": {
          "id": "f3246090-c4f5-4eb6-a085-417ac717ab63",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "52990d21-371d-4410-9164-94e935e39a92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fe55d4c-3a52-416b-a6ab-1fd0ccedcb4f",
        "cursor": {
          "ref": "b55478cf-c6cd-445b-a1ec-58b68d34732e",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f2c443e5-ebb7-4b6e-9ee9-88223ffdffeb"
        },
        "item": {
          "id": "5fe55d4c-3a52-416b-a6ab-1fd0ccedcb4f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "707cb757-03ef-4f74-9e72-d3af37664817",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bbf34f-6179-412e-be09-fbfd1f63e0c9",
        "cursor": {
          "ref": "c5503f50-8034-4b47-ab8d-799da095f944",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "ffae6b4c-1209-4812-90c7-61c01677dc70"
        },
        "item": {
          "id": "b7bbf34f-6179-412e-be09-fbfd1f63e0c9",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d7d1e4a-084f-40db-87f8-5d73f3f6d627",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f79c2f-aa78-485c-9401-3c6ca82f8406",
        "cursor": {
          "ref": "f95b4fac-249f-4667-b979-2d2388f69cde",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "bffa365d-5512-422e-af6a-0049a70432d1"
        },
        "item": {
          "id": "24f79c2f-aa78-485c-9401-3c6ca82f8406",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "f2c6da1f-48a7-4903-82b7-29540302bb6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c45ce819-639a-42a2-b9e5-47df4deda6f4",
        "cursor": {
          "ref": "b18f9874-b425-4df3-9f0e-9c56758c4218",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "5f84b4f7-2c01-4bd7-8a8b-f971d2b43200"
        },
        "item": {
          "id": "c45ce819-639a-42a2-b9e5-47df4deda6f4",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "ce1133a4-5ea4-433d-93ed-847c440f4bde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b39f088-1daf-4451-aa1c-4b66a0eca80b",
        "cursor": {
          "ref": "b9158cef-496e-4f4d-9b48-5a827f786f6d",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "702194d5-a9e5-4e5d-a092-098f8b4c5f0f"
        },
        "item": {
          "id": "5b39f088-1daf-4451-aa1c-4b66a0eca80b",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "7da63c3d-adbb-42fb-b98f-eec1129b31fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8837d084-b80d-4651-8929-4eab0e5485dd",
        "cursor": {
          "ref": "4a92db61-2fc9-421b-b696-55e37c9cf498",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "6410b5ae-8036-4c58-8563-7913e37e34d8"
        },
        "item": {
          "id": "8837d084-b80d-4651-8929-4eab0e5485dd",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "61aa8b55-8f96-421b-97e9-9da9b68f97fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98c65966-94e7-45b0-8644-450065d7022c",
        "cursor": {
          "ref": "59c4f251-43fe-4376-aa30-cad15747315d",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "13058a93-6c12-4aa4-a92f-16ef92278046"
        },
        "item": {
          "id": "98c65966-94e7-45b0-8644-450065d7022c",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f47d6db1-08f8-47c7-9416-d658b8474fde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3e3a8e0-35c4-4453-aa30-f4bdc940a4b8",
        "cursor": {
          "ref": "38221c3f-435f-4d6d-9193-a383d07d004e",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "390b3f37-6685-4279-9b4f-87873c8fbb7d"
        },
        "item": {
          "id": "f3e3a8e0-35c4-4453-aa30-f4bdc940a4b8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2304a785-cab9-416f-be03-5efa44dac33e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3dc11f-df11-4a51-bb8e-3748af6a283c",
        "cursor": {
          "ref": "31a1883e-11c0-4b7e-9ebc-23510faca532",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "8be1dbb0-50d6-4110-90b5-664c260bdc58"
        },
        "item": {
          "id": "dc3dc11f-df11-4a51-bb8e-3748af6a283c",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c6299697-f21e-4f8c-92e1-721e7e5345b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad02dcf4-0dc5-467a-b29e-98450ffc3ffb",
        "cursor": {
          "ref": "a069934d-2f47-4ae8-a6cf-16c6ac280446",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "65609f3d-8d20-4783-bd98-fdc09a4a85fe"
        },
        "item": {
          "id": "ad02dcf4-0dc5-467a-b29e-98450ffc3ffb",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1785970c-9ba9-43b3-955a-037bb668ed64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9284abd4-a4b0-4bb1-993a-1a889611cbef",
        "cursor": {
          "ref": "1d3472ef-12b2-4210-b94c-5d51e8793ecd",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "0427153d-c176-4e9b-8ede-b44a2c0769e3"
        },
        "item": {
          "id": "9284abd4-a4b0-4bb1-993a-1a889611cbef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "c3fa4934-2aec-4b2f-b063-99ddbad82b28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06988132-973d-46bc-929a-27e8fb62e8cf",
        "cursor": {
          "ref": "064276f3-a8a6-49c5-a59d-7b50eb282e07",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "bdb8ce0c-b053-40b8-a64e-0552931ade5d"
        },
        "item": {
          "id": "06988132-973d-46bc-929a-27e8fb62e8cf",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "0d848b7e-30a6-49dd-a557-1261ed67b432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbf0367-eebf-4f3b-8480-446c0b9aa2e9",
        "cursor": {
          "ref": "55958c3d-4948-476d-8b9d-530a2bafffca",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f62bf23e-e491-4359-8041-70931d66cc5d"
        },
        "item": {
          "id": "0bbf0367-eebf-4f3b-8480-446c0b9aa2e9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "14de251b-6096-4b95-9af5-b8bbb70e2ea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8175f65d-8113-4eee-97d1-ba818ccd7b9a",
        "cursor": {
          "ref": "bd051d7a-03b7-4237-97dc-c5127adc6db4",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "f5ff38b9-0ba1-4a9b-ac25-fc0528d0d682"
        },
        "item": {
          "id": "8175f65d-8113-4eee-97d1-ba818ccd7b9a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "adc79c41-d81d-4ffc-b102-bdf58ac4a3fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d212281-ec70-4a8c-8854-d5e4210b9375",
        "cursor": {
          "ref": "c37020c0-e538-486e-9dcc-d207c41e39f7",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "97ba2540-4d36-4095-8bea-a6c41a6c6d74"
        },
        "item": {
          "id": "6d212281-ec70-4a8c-8854-d5e4210b9375",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "a5a15ad7-9571-452b-8345-d442cca6667a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6547d2f4-dea4-43a2-85d4-291cdbd8c749",
        "cursor": {
          "ref": "f4abdc57-5511-4303-969f-788bad2ffd00",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "48e8a93a-e107-4d0b-be6e-ca67abd1f1bd"
        },
        "item": {
          "id": "6547d2f4-dea4-43a2-85d4-291cdbd8c749",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7ca14d63-1c50-4641-ab4f-33b0cbcffd8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d931b6a6-74ad-4d68-9e8c-0d3a378470a2",
        "cursor": {
          "ref": "1c35e0cf-546d-4470-b47a-0862088a4385",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "5793c266-7a1f-40dc-b912-b8215a7b0586"
        },
        "item": {
          "id": "d931b6a6-74ad-4d68-9e8c-0d3a378470a2",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "60d7c4de-90e7-4bfa-bdec-45f739efc982",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31d36532-c84a-43fe-bbe1-8f79fe529ccc",
        "cursor": {
          "ref": "c896e685-0481-44ed-8f64-29093a5b2b31",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "69acd831-7622-479c-ac11-765f7bd43425"
        },
        "item": {
          "id": "31d36532-c84a-43fe-bbe1-8f79fe529ccc",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "f03075c9-d999-4293-b8d0-173d48646c80",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 116,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4170e48f-7b3f-41af-afc0-b375da9177a4",
        "cursor": {
          "ref": "0ca0bcf1-b90a-486b-8300-5c9e33b6f54e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "08845ec4-4345-44b7-970f-3d12eaade81e"
        },
        "item": {
          "id": "4170e48f-7b3f-41af-afc0-b375da9177a4",
          "name": "credentials_issue"
        },
        "response": {
          "id": "e191f730-5e8b-4fb0-b87c-e2648871eb2e",
          "status": "Created",
          "code": 201,
          "responseTime": 67,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "b43d99ff-2795-4cd6-92ac-ae5c17da979d",
        "cursor": {
          "ref": "0d4eccf6-ab9d-4c67-a03d-aa7219e7c1dc",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "2fce7edd-0ea4-4a17-8f23-6593317dde51"
        },
        "item": {
          "id": "b43d99ff-2795-4cd6-92ac-ae5c17da979d",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d584bd6b-c6f5-4ee2-ad97-6fecbf769eee",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "687f0a0a-2e40-4e33-87c2-0b3c390d1605",
        "cursor": {
          "ref": "96fbda99-8077-43cb-a362-69a1c16c254e",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a37af45-7a99-48b8-8ce2-b708c0cdf5d8"
        },
        "item": {
          "id": "687f0a0a-2e40-4e33-87c2-0b3c390d1605",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "a968b559-ed84-4426-b86a-8b7e2a303a8c",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ae6955b-19e3-41e2-ae19-fcb8a73bf504",
        "cursor": {
          "ref": "1ba15033-957e-4468-9c53-97df1a71d4ef",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "185adcda-bcd0-46c8-8f19-f40893697789"
        },
        "item": {
          "id": "3ae6955b-19e3-41e2-ae19-fcb8a73bf504",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "64983ffe-722c-469e-9c84-7e9e43da89d1",
          "status": "Created",
          "code": 201,
          "responseTime": 50,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "65467f46-9798-4e7f-a09b-55b030615fd7",
        "cursor": {
          "ref": "bc63da27-c2af-4b3e-b764-75e62a726ac0",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "e3edd10d-9091-4fd1-91c2-d1f220320f67"
        },
        "item": {
          "id": "65467f46-9798-4e7f-a09b-55b030615fd7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "7d5f7583-3e2b-4a87-b4db-a6d83d9fc526",
          "status": "Created",
          "code": 201,
          "responseTime": 51,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "455f61fd-dff2-470b-8a89-37bd36d2b546",
        "cursor": {
          "ref": "007786ff-38e7-424d-a9ee-ff93c5263543",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "6722cd18-9b7c-4b2f-b170-4c65a209b5da"
        },
        "item": {
          "id": "455f61fd-dff2-470b-8a89-37bd36d2b546",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "d0a01964-4ab8-4503-a5df-00946d259185",
          "status": "Created",
          "code": 201,
          "responseTime": 52,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23513e40-b116-4bc3-a98a-f191c45e98e5",
        "cursor": {
          "ref": "3ac681a0-86ce-47e6-af13-a45b719048f4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7cac1cdc-d66c-48f9-acd9-234a66179f83"
        },
        "item": {
          "id": "23513e40-b116-4bc3-a98a-f191c45e98e5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17d24eaa-dd8e-4220-a337-ca5b5cd27ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23513e40-b116-4bc3-a98a-f191c45e98e5",
        "cursor": {
          "ref": "3ac681a0-86ce-47e6-af13-a45b719048f4",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "7cac1cdc-d66c-48f9-acd9-234a66179f83"
        },
        "item": {
          "id": "23513e40-b116-4bc3-a98a-f191c45e98e5",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "17d24eaa-dd8e-4220-a337-ca5b5cd27ab8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b784c12-f127-41eb-8eeb-7361497c754f",
        "cursor": {
          "ref": "1a824cfd-4bbe-47a4-a874-b0bb00d573e7",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "602429de-4eea-4ec8-8a9b-8ce855b9342c"
        },
        "item": {
          "id": "7b784c12-f127-41eb-8eeb-7361497c754f",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "0b625c47-129b-48b8-bd9c-fc45ee462d79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf593945-e259-45d7-8f11-e1b3fddb7d3d",
        "cursor": {
          "ref": "3ac61af1-a4f6-475d-8429-528b10e24c2a",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "4114b549-0d8f-47d1-aa58-2e630eb09aee"
        },
        "item": {
          "id": "bf593945-e259-45d7-8f11-e1b3fddb7d3d",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "b011b16d-c60f-42e0-a587-e106ffbf61b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f69887-84e6-47aa-90a0-e4ae8d49822a",
        "cursor": {
          "ref": "a050c780-dd18-429a-bfa2-7319e2514f34",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "a2d1030c-80d9-4898-9398-4f30656eb115"
        },
        "item": {
          "id": "d6f69887-84e6-47aa-90a0-e4ae8d49822a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "cb15d94f-ee29-4f53-81a3-8cb89641a8e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8000c37d-1f90-497d-85fb-1d0b4c62c212",
        "cursor": {
          "ref": "5daac31a-41f5-47bb-b078-48194779ed44",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "de43053f-ad90-462f-97fe-bcab854fde01"
        },
        "item": {
          "id": "8000c37d-1f90-497d-85fb-1d0b4c62c212",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "7dcc5c92-594a-495f-82e2-e5fe9be32ff1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "791e7050-28a6-4f10-9034-dfce9d81bcd6",
        "cursor": {
          "ref": "65e0c15e-c14c-4341-9633-512c6d6afd41",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3ea1233d-fb11-4148-a782-59102f2ea281"
        },
        "item": {
          "id": "791e7050-28a6-4f10-9034-dfce9d81bcd6",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "f3d07f75-0d3c-4773-a380-5c36ec37209f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f9cecc-900b-4e3b-97f3-7a23b286378f",
        "cursor": {
          "ref": "ef53d3ab-37f6-49d0-bac9-27e554907880",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "30e38f60-3a34-4532-9a0b-d7d33ac52b13"
        },
        "item": {
          "id": "11f9cecc-900b-4e3b-97f3-7a23b286378f",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "92f6e28f-32ef-4554-bc6d-793019f5fe07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35e7ce82-784c-49c4-987c-d4d76ad7f8e8",
        "cursor": {
          "ref": "9fb3b663-be72-40ae-92fc-df60c10c27ee",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "e2e7580c-5cb5-49b2-9034-eec8b77fcb47"
        },
        "item": {
          "id": "35e7ce82-784c-49c4-987c-d4d76ad7f8e8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "144cf47d-03d6-4aaa-a1dc-01f39647da82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a0c12a-4ba2-42c8-b3c5-6b7ade78d032",
        "cursor": {
          "ref": "9fd57b64-27c7-423d-bcb8-4abfb7126ade",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d100a98b-a6d1-4f86-87d4-531faebf5162"
        },
        "item": {
          "id": "13a0c12a-4ba2-42c8-b3c5-6b7ade78d032",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "e960e20a-e886-427c-b72c-97fd709cefa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb4a7c7-3479-45de-92b0-a94e7eb4feb4",
        "cursor": {
          "ref": "1eaa22ee-dda8-4965-8cd4-b6879bbcdf90",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d72d3e86-8268-4ee1-8d31-61c0c32d8c12"
        },
        "item": {
          "id": "ceb4a7c7-3479-45de-92b0-a94e7eb4feb4",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "33e640b8-c0ac-4781-b448-64c40d2f1c0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baccfbe1-398e-4b3d-aeb3-bf0f04e25b80",
        "cursor": {
          "ref": "70911985-8e88-480e-9726-f27b24041a1d",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "df48cb7a-d12d-4ecb-8c9c-e39f5710e05b"
        },
        "item": {
          "id": "baccfbe1-398e-4b3d-aeb3-bf0f04e25b80",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "0b3b3d76-48cd-415b-94f7-61d05779e111",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97b8d7e5-96d0-42a1-8a9d-c8e31be3c2b2",
        "cursor": {
          "ref": "23154f98-4f83-47a4-b970-9294622e2711",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "26be457f-e3a4-4e6d-8226-88501f3deaf7"
        },
        "item": {
          "id": "97b8d7e5-96d0-42a1-8a9d-c8e31be3c2b2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9ca3eb73-c417-406e-b60e-2d19e62c3909",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80700f5f-cd2c-4f0f-bda8-3696a77fc5fc",
        "cursor": {
          "ref": "76dfeaea-ce90-4788-8f67-66f69c1bb8d7",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "c209a7dd-14c0-41fb-bd57-dd253d39d50f"
        },
        "item": {
          "id": "80700f5f-cd2c-4f0f-bda8-3696a77fc5fc",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "d01d1566-3fed-4521-9f51-2280eac38e5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2128a14-3d39-4a3b-b491-b91ed64b441d",
        "cursor": {
          "ref": "1c802459-917d-4af0-a5e1-c38485373450",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "925e598c-0116-4734-bb74-81050ba7981c"
        },
        "item": {
          "id": "e2128a14-3d39-4a3b-b491-b91ed64b441d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f51f34f0-88db-4cf6-8b6c-9c0f500cc606",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2ad1d6a-af2c-480e-b242-6891e84107c9",
        "cursor": {
          "ref": "d49c6c54-0abc-4af1-a0bb-f9e7c8397a8b",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "103bb244-6e22-482e-92f6-65e509cfad20"
        },
        "item": {
          "id": "b2ad1d6a-af2c-480e-b242-6891e84107c9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "1c6be854-70e0-4545-8e8e-52d6b67a3d5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa49df1a-0400-4f57-a820-aca4b112eaeb",
        "cursor": {
          "ref": "d4dc3d22-4c10-4d7c-8172-22bb883e6eb0",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4b62527e-37c3-493a-9b2d-a37a1a8f71ac"
        },
        "item": {
          "id": "fa49df1a-0400-4f57-a820-aca4b112eaeb",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "9b01666d-2f2b-4b9b-80f8-bd433669d7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e3f9a90-2905-4ab8-866b-a8e666549615",
        "cursor": {
          "ref": "944dd4fb-1a2a-4ec7-8c82-f09c3bc3688d",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "55bf5d37-cd1b-4cd3-a937-86bf0f4e65a8"
        },
        "item": {
          "id": "9e3f9a90-2905-4ab8-866b-a8e666549615",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "810f4eef-131a-460a-9aa9-ec90a6564d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a03b6631-4703-42f5-925e-98c2abe432e7",
        "cursor": {
          "ref": "99878053-c10b-42df-9c55-d88c7cf2ab8c",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "11a6921f-7810-4546-870c-9bbbed83e508"
        },
        "item": {
          "id": "a03b6631-4703-42f5-925e-98c2abe432e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "1656d620-67b3-4440-9864-791d9b28e94e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de167e9-f38b-4743-bb7e-08f337b9efd3",
        "cursor": {
          "ref": "07cb4ada-f5da-4bf6-9c44-e61bf44e8538",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "f19e5b2a-e593-419a-be9c-6f2087cae0b8"
        },
        "item": {
          "id": "0de167e9-f38b-4743-bb7e-08f337b9efd3",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "71c9fa24-1e28-4f90-8df8-4dce6a1a2047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28ed183-12c7-4a2b-863b-7e9be8e200ea",
        "cursor": {
          "ref": "9f5bd7a8-18c1-49e1-9572-f00b1d441eea",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "bc4f50c2-a900-49ec-816b-85d454bf1cf0"
        },
        "item": {
          "id": "f28ed183-12c7-4a2b-863b-7e9be8e200ea",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "68428347-a0bd-4e56-8a4b-c2f47de7d428",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "585aa281-8eaf-4fac-b83b-ddf870cd580a",
        "cursor": {
          "ref": "843e3cb3-6900-41fc-97a0-71f5d7386272",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "8a373acb-6d44-4957-b19e-b4615778d678"
        },
        "item": {
          "id": "585aa281-8eaf-4fac-b83b-ddf870cd580a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "29745d57-9eb8-4f5d-b84f-72d31a8dcf51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "526b70bc-4329-4975-bbfb-966a209e64d6",
        "cursor": {
          "ref": "190aae84-6c5e-4708-a22c-8d62b81df87a",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "737e39cf-b3cd-4eb0-adf0-64d1e0d3adc2"
        },
        "item": {
          "id": "526b70bc-4329-4975-bbfb-966a209e64d6",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "4fa09f84-3d33-4a18-8417-e9a208b58e0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3e540d8-a6b7-4d93-9b3c-033240a7b0fc",
        "cursor": {
          "ref": "07030c59-7218-4884-9793-1ffd0243c384",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "a3135e19-6637-4015-8a53-3cac0e1530ae"
        },
        "item": {
          "id": "c3e540d8-a6b7-4d93-9b3c-033240a7b0fc",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c19db4f1-dc40-417a-81a2-258fff252d41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f33ae09-589c-4a89-b912-7df64c9ce090",
        "cursor": {
          "ref": "249cf3c3-05f3-421c-85c7-a829da267cb2",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "2abb2df7-7d37-48ec-82e1-5a3f201cd143"
        },
        "item": {
          "id": "0f33ae09-589c-4a89-b912-7df64c9ce090",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "270e5be6-ac0c-42bd-9c1e-d6df7f7d200c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95dbd372-d3d0-4b6d-9db0-0e764d6734cd",
        "cursor": {
          "ref": "bd12c16b-8c5a-4bd0-9f99-8cfac93865bb",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "21e14d85-f767-44dc-9f78-2d0de52c63fb"
        },
        "item": {
          "id": "95dbd372-d3d0-4b6d-9db0-0e764d6734cd",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "e54e58ba-859a-4d8b-a8d5-83d358a36ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "721e303f-3d71-4cf9-9fd2-e2b792511c4b",
        "cursor": {
          "ref": "a4ee8ac1-ac48-47a8-ad2f-1019b24b447b",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "ebebd0f0-8c92-43b3-8967-2464cf080c76"
        },
        "item": {
          "id": "721e303f-3d71-4cf9-9fd2-e2b792511c4b",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "5aa96375-9719-4d16-8c76-a95570b314be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062578c8-1f9b-4ce7-9cb4-7de5ec932cc1",
        "cursor": {
          "ref": "12b260e5-f5e3-4243-918a-639e77981a58",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d366e15e-498d-4fa7-b455-1f1ffabf6166"
        },
        "item": {
          "id": "062578c8-1f9b-4ce7-9cb4-7de5ec932cc1",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "a9fa9047-5813-4fa8-96d0-947a55eb88e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4cc936-6721-48c6-8ea1-3b255c3443c3",
        "cursor": {
          "ref": "7101d3cd-65cd-4851-8576-9efc3e297194",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "15900ba1-b732-446b-98b4-88b6745b2170"
        },
        "item": {
          "id": "7b4cc936-6721-48c6-8ea1-3b255c3443c3",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e95176a4-49c4-4957-86d2-a60a1c78fcb7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed770d9e-9326-4657-a435-bea4e68b7005",
        "cursor": {
          "ref": "473c2dcc-254d-498b-b2af-8dade0280d08",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "5f8d238c-e1b4-44e6-ad9c-892e5b5256f5"
        },
        "item": {
          "id": "ed770d9e-9326-4657-a435-bea4e68b7005",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "be5d74e5-3f10-4c11-8cae-fa0a0b5f6882",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da2697ad-c25d-41da-8f90-1791625658e6",
        "cursor": {
          "ref": "3af77ad0-38b0-44fb-9853-28b790ab67b2",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "57e88b38-d287-45ca-b4ae-e92b79d8cd12"
        },
        "item": {
          "id": "da2697ad-c25d-41da-8f90-1791625658e6",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6c05e3a1-32ff-457b-b7fe-0cb79d6d1df0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9128f21-c166-4a1e-b8ba-42f826e07144",
        "cursor": {
          "ref": "090b3a36-e710-4e2d-b685-8e5ed86f9481",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "11392576-fb22-4f6e-b58a-a0f32d434475"
        },
        "item": {
          "id": "e9128f21-c166-4a1e-b8ba-42f826e07144",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "90c89c92-0f86-4e7e-9662-d9202c01bbca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fcf8e21-0a0e-42d6-9267-4d1ba6869268",
        "cursor": {
          "ref": "a36480fb-7066-4b9f-8f6b-e26999b40bb5",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "82ca069c-1a94-453f-aef8-ede400bdb9ab"
        },
        "item": {
          "id": "5fcf8e21-0a0e-42d6-9267-4d1ba6869268",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "7c85d31d-1e6f-475b-b683-1d5e04f163e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177a73c5-ae0a-4b72-b820-3f617c06aae8",
        "cursor": {
          "ref": "d050ffe7-67a0-4445-a9be-d7d674989b48",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "2896f518-bd53-479a-8b3f-29b44de8cbed"
        },
        "item": {
          "id": "177a73c5-ae0a-4b72-b820-3f617c06aae8",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "34c2f86d-3967-4bc2-b7fa-bfc9662fbc01",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58af10b4-ca23-468d-81e7-2d23a6b988fd",
        "cursor": {
          "ref": "242cdced-ffcb-4d71-af46-59fa201ec64d",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "f4b4db8e-a820-4042-b241-014825de0528"
        },
        "item": {
          "id": "58af10b4-ca23-468d-81e7-2d23a6b988fd",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "b255fa94-2d5c-4e85-99d2-a119f3cfc2bc",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 33,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe357fc2-4ffe-4cf6-b2c3-9211ee0bdf4d",
        "cursor": {
          "ref": "9a9c44a6-497d-4e9e-8898-4b2c3858afd0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2c40c46b-e04f-48d1-b1ad-71935b0a6c19"
        },
        "item": {
          "id": "fe357fc2-4ffe-4cf6-b2c3-9211ee0bdf4d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9601e59-f26a-4f60-be50-27dbe7aa3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe357fc2-4ffe-4cf6-b2c3-9211ee0bdf4d",
        "cursor": {
          "ref": "9a9c44a6-497d-4e9e-8898-4b2c3858afd0",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "2c40c46b-e04f-48d1-b1ad-71935b0a6c19"
        },
        "item": {
          "id": "fe357fc2-4ffe-4cf6-b2c3-9211ee0bdf4d",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "c9601e59-f26a-4f60-be50-27dbe7aa3dad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36166d9e-b1a4-4eae-b37b-2d60e7964f4f",
        "cursor": {
          "ref": "267f0de9-3deb-4313-81aa-4f6fc9c87261",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "355b6a0c-4263-4e72-8f59-d6a54e875d87"
        },
        "item": {
          "id": "36166d9e-b1a4-4eae-b37b-2d60e7964f4f",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "1152caa0-258f-47ee-9557-fbb8a34f1fba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8d2ec6d-fd08-44c1-902a-1a78d6ce8d3b",
        "cursor": {
          "ref": "89b64545-fe7f-4bb8-9b86-b2ec38256bc4",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "aa576bd9-8999-4e05-a306-5d065a2c4ba3"
        },
        "item": {
          "id": "d8d2ec6d-fd08-44c1-902a-1a78d6ce8d3b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cab01fc8-567e-43d0-af0c-7198d7d4469b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87eacfc0-14c4-48c9-b328-13fe5ff2e8c6",
        "cursor": {
          "ref": "5c110ad6-5bf9-41e7-9277-3937b6e41c1c",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "302611ea-1cd1-43e3-874c-9211c52be4b4"
        },
        "item": {
          "id": "87eacfc0-14c4-48c9-b328-13fe5ff2e8c6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "2464639f-f021-4780-80ec-80a514eac19f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25856dcf-7c7b-45a4-9490-85e29051b7ae",
        "cursor": {
          "ref": "a950deb0-84f1-40bd-88d2-0a4eb36e0f94",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "752ec7c9-2f98-4d63-a6f1-be232c780e8c"
        },
        "item": {
          "id": "25856dcf-7c7b-45a4-9490-85e29051b7ae",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "09dc60c2-b005-4f88-8404-974147400d18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fa4021-7e87-43fe-942e-4356bdb1d9c8",
        "cursor": {
          "ref": "d14147eb-bd13-4ea7-a78f-2648605ce874",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "f98bac45-0d82-46d2-ab8a-49c943ed4ea5"
        },
        "item": {
          "id": "74fa4021-7e87-43fe-942e-4356bdb1d9c8",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f5def4a1-225d-43a1-8476-5b295baf5b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4c8c001-df50-4825-a02d-2a0573ff6b01",
        "cursor": {
          "ref": "297ee3e5-9d0a-4727-bfe0-d2cfaf6de7b9",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ca496e64-5205-4280-b774-9b99a6f52a86"
        },
        "item": {
          "id": "c4c8c001-df50-4825-a02d-2a0573ff6b01",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "4307ddb3-4eed-4533-924f-d9915effa109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84292b17-a710-4570-a999-9f778f9305cb",
        "cursor": {
          "ref": "35fb9a1e-6cfd-42af-83f2-4d86852f2d24",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "93a8f4a4-c5d5-44dc-9bff-42d61061d2f1"
        },
        "item": {
          "id": "84292b17-a710-4570-a999-9f778f9305cb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d87f8aec-fa61-4844-9b97-fb5149725b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b96856c-0a54-47f5-a7bf-867eef087a0d",
        "cursor": {
          "ref": "5c0f885b-98fd-45f9-9c92-e5bc67537e8b",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5b76f99b-3ba3-4c6e-9f09-0bf989e02cf6"
        },
        "item": {
          "id": "7b96856c-0a54-47f5-a7bf-867eef087a0d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e26697ec-9bfb-4d6c-a1ca-398c3b449448",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed043d41-12d9-43ab-9bf8-e1ade773280a",
        "cursor": {
          "ref": "5fd07090-9551-489f-bffe-9592b18f793d",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "5857dba4-6414-472e-8c53-03c49884bf89"
        },
        "item": {
          "id": "ed043d41-12d9-43ab-9bf8-e1ade773280a",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "944740ad-444b-440c-a0c2-158aa615a5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc536ef3-ef08-4b28-9923-2ed6db32ac1b",
        "cursor": {
          "ref": "373156f5-c24c-4911-a093-ff0bf728a9fa",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ea42fa08-c62c-41c3-a48d-c5cd94be4bec"
        },
        "item": {
          "id": "cc536ef3-ef08-4b28-9923-2ed6db32ac1b",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8d943a16-0755-4d6d-b0ac-9c2367d38e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07deb6e6-bb16-4167-a9c5-ee00b890c51a",
        "cursor": {
          "ref": "6efe7314-a8c2-4e5a-8e65-bd0f8cdfa8f1",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7a5e4bc5-b75c-4a4b-9216-d477fb943292"
        },
        "item": {
          "id": "07deb6e6-bb16-4167-a9c5-ee00b890c51a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d45f46b0-96eb-41cd-8f4d-d84881428a6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c599f6c7-420b-42fb-bce3-c11f17b303b9",
        "cursor": {
          "ref": "f7e5b81d-97a3-4da4-af80-5df49b1f2dbb",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "185d7d7f-fbc1-48ae-af49-1ef868246890"
        },
        "item": {
          "id": "c599f6c7-420b-42fb-bce3-c11f17b303b9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "a1f12c01-0df8-4576-9bcf-178851fe1694",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9fe4618-1921-44ce-b9bc-24288f6d9aac",
        "cursor": {
          "ref": "83c977cf-ac61-4cf0-b66e-07817df08727",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "aa12f7b9-e5c7-4a51-9d9d-0fa9e7111f33"
        },
        "item": {
          "id": "e9fe4618-1921-44ce-b9bc-24288f6d9aac",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1ddeb235-8819-4531-92cf-47c59702a45e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c265831-739a-4617-9df4-6cabb1bd3a53",
        "cursor": {
          "ref": "e72ee02f-5c85-4146-82a8-4f7d87f0149d",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "31bac34d-ccea-4de2-8e0a-68a55b7f11ec"
        },
        "item": {
          "id": "1c265831-739a-4617-9df4-6cabb1bd3a53",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1e048653-5e6f-48d2-ab24-10fedd97a3d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b5279c-1622-47d6-af01-631b331ccd44",
        "cursor": {
          "ref": "a588bdf4-0de6-499f-a53f-c14bedcf49b5",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "0ebb07d2-c1fb-4caf-914e-2f5a862c309c"
        },
        "item": {
          "id": "16b5279c-1622-47d6-af01-631b331ccd44",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "cd650be7-b544-49b0-9c51-94b4b81f265b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfe66856-1810-4cc8-afa6-935d3452785a",
        "cursor": {
          "ref": "22436a56-777a-4dc0-ac9a-173d95188c11",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ab23cafc-d586-43a4-a47d-a24cfc85bdc7"
        },
        "item": {
          "id": "cfe66856-1810-4cc8-afa6-935d3452785a",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "105fcf4f-7f63-4a33-ab65-eed6acf2c0a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c9ec6fc-39a2-4239-a0ce-8c6f0849735a",
        "cursor": {
          "ref": "de01e55c-8c29-4af2-85fc-c08f3be1f82b",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "7ff0e306-6e29-4b5c-91c4-72120c8a6f42"
        },
        "item": {
          "id": "7c9ec6fc-39a2-4239-a0ce-8c6f0849735a",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8c5a4b78-6505-4273-8f64-e6a40b2f4e6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96c034cb-bb1d-4208-baa5-f6d68a0d88d9",
        "cursor": {
          "ref": "9ecc7137-e197-44db-856f-de1b9e098de6",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "54654316-3c90-4553-8b76-caf5c18291f9"
        },
        "item": {
          "id": "96c034cb-bb1d-4208-baa5-f6d68a0d88d9",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "f8483064-6564-4f46-bfb9-05c463b038e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73358721-c232-4776-8b28-2eac899979f1",
        "cursor": {
          "ref": "aaa10832-3b76-4116-b366-ada8ba2ce164",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "514aad9a-1dc5-45c0-9522-48c5a1634b18"
        },
        "item": {
          "id": "73358721-c232-4776-8b28-2eac899979f1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "f66aa4f5-91cc-497f-8c78-1f7129800268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04b8ba14-f48d-4279-a5e8-050f011a73e5",
        "cursor": {
          "ref": "ed4ee9c6-7d6e-48ae-a32c-44f6556250bf",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "c5bfb54b-3bcd-4aca-ba91-9748ce2aa99f"
        },
        "item": {
          "id": "04b8ba14-f48d-4279-a5e8-050f011a73e5",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "e6a842db-83eb-43e3-9cdc-1b5a919284ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fb2ff6f-610c-4ca6-b5ea-f2d35a62a490",
        "cursor": {
          "ref": "bc9207dd-4042-48cc-89e6-2fcf6ec13078",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "cb516fc3-7ae0-4d05-9b36-729d959a187e"
        },
        "item": {
          "id": "0fb2ff6f-610c-4ca6-b5ea-f2d35a62a490",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "9ec256da-455c-4ea4-934d-d90acd708b7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edf8bcc-1476-4a4f-a51f-e896665c81fd",
        "cursor": {
          "ref": "981e4ff6-9a4b-40cf-82db-f5b67ac4a947",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e1f6e244-ad85-4ece-bcd9-d7b403744bea"
        },
        "item": {
          "id": "8edf8bcc-1476-4a4f-a51f-e896665c81fd",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "719313ed-ad7f-4048-b444-40e831741d98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7c993d-5001-4275-8c86-886cbb21e010",
        "cursor": {
          "ref": "33890e16-54ad-468b-9e00-6b4410cb8108",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "a40cb535-c2d5-485c-ae14-c91b54c55741"
        },
        "item": {
          "id": "4f7c993d-5001-4275-8c86-886cbb21e010",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "6b880825-3151-4cfd-8428-6268aa48cba1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ede87744-019f-43e7-8bff-714b1dfbe375",
        "cursor": {
          "ref": "c57b6533-65bd-4d30-b152-1c39a23c45fa",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "b52638a7-1c23-424f-bce9-d9ceb1e9194b"
        },
        "item": {
          "id": "ede87744-019f-43e7-8bff-714b1dfbe375",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "79b1ceb2-7ba1-47a4-bc35-124454e3b1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bffb9ce5-03a2-4b66-b518-791b6bfd7610",
        "cursor": {
          "ref": "1fdc28f3-4d8b-4457-b11c-66b3256d9ac6",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "618f109b-aacd-44bf-96be-e1f8bf5250d1"
        },
        "item": {
          "id": "bffb9ce5-03a2-4b66-b518-791b6bfd7610",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f1045d12-beb6-43cb-9993-df776fb5f36f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbaa6158-a268-41c5-8019-405961c4fa89",
        "cursor": {
          "ref": "708d5ad6-c8d2-4c0d-ae59-7cc4971df6b6",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "2258e72e-1bdd-4236-8523-676a7ff51d4c"
        },
        "item": {
          "id": "cbaa6158-a268-41c5-8019-405961c4fa89",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d8387b78-f893-4c2a-b4cc-4f8613bcc277",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f3e6030-661e-4c2e-8efd-717f37393ac5",
        "cursor": {
          "ref": "78f31b55-c9cd-4729-90da-5d0ed7e30eec",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64c4a7fa-32e6-416a-9481-2649bb73059c"
        },
        "item": {
          "id": "9f3e6030-661e-4c2e-8efd-717f37393ac5",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "b4e843d5-9f2c-4d05-8914-e206ed95a6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f993f77e-d33c-4027-9673-19be0ae84f15",
        "cursor": {
          "ref": "1063cc8f-77b2-4907-b25f-ed4ac20e6217",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "00794c28-8169-456a-a38c-6717f1a0c1d1"
        },
        "item": {
          "id": "f993f77e-d33c-4027-9673-19be0ae84f15",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "cdc27267-06fc-42ea-a046-79a7b8a825f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a80422a-dbbb-46ac-9879-8268d55b1849",
        "cursor": {
          "ref": "a6e5b5b2-1257-4fdf-93db-c1152bb3463f",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f7585702-021e-42c1-9c20-35704332034f"
        },
        "item": {
          "id": "8a80422a-dbbb-46ac-9879-8268d55b1849",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2111375e-66eb-4b86-aa06-08004e3c6df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02d2f48b-245d-4caa-b8f7-35507f2eff7b",
        "cursor": {
          "ref": "c0e1d003-09f3-419e-b5eb-ed36859e7d2f",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "0c47f048-08df-4682-8f35-afbced267ec0"
        },
        "item": {
          "id": "02d2f48b-245d-4caa-b8f7-35507f2eff7b",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "d796b7bd-26c6-44b8-93b2-26860cc29a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "671dbfe0-5c2e-4c61-ac26-c3de04d04e5a",
        "cursor": {
          "ref": "f1249ab3-07c4-42a1-8c21-14c7dc54cbb8",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "ab38e6e0-a1f5-44ca-8d5c-028633d058cf"
        },
        "item": {
          "id": "671dbfe0-5c2e-4c61-ac26-c3de04d04e5a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "08aae427-b6fd-4b09-b143-5ce16d90af98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c968f054-96f1-4fb0-a2e8-2a91a1e50645",
        "cursor": {
          "ref": "51c04e80-8e87-42a8-a470-3e8dfd647a5c",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "b27f9b5e-a518-46ff-95ee-57b5856779d8"
        },
        "item": {
          "id": "c968f054-96f1-4fb0-a2e8-2a91a1e50645",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6eadd157-0d60-45fb-82dc-c159b8f8eb8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc091afc-ffb0-485d-81ce-200dfd4b600a",
        "cursor": {
          "ref": "cd98fb1e-5b9b-49c9-8bcc-967517a35810",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "284fe160-a543-4308-a1ce-caa63d23fba0"
        },
        "item": {
          "id": "bc091afc-ffb0-485d-81ce-200dfd4b600a",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "90c13257-6b4f-418f-92e7-fa526a25c8b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ff5321-baa0-4c93-9f42-b79b860ae537",
        "cursor": {
          "ref": "06759144-dd8f-4636-bffd-22415fd04117",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "dd006eb1-95dd-4257-92e4-d7ed55787a18"
        },
        "item": {
          "id": "71ff5321-baa0-4c93-9f42-b79b860ae537",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "7c30ec31-4e3d-42b7-9589-d7c8c69536d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7600834-4f6e-4338-ae28-800a4ddc63f7",
        "cursor": {
          "ref": "f07a5eb6-3dcd-46b8-93b4-bc8bb73ed8eb",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "b5d95cc4-5102-4aa7-9958-5450a5f00151"
        },
        "item": {
          "id": "c7600834-4f6e-4338-ae28-800a4ddc63f7",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "07f8beba-4ac8-4752-b8c0-5019be5c0a60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46beb052-ae3e-4621-95d1-eb7e57165a28",
        "cursor": {
          "ref": "003dd1ea-eac5-436a-b04b-bd505e2ad5d2",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "eb1e8eca-d1b9-4cad-a500-eb8a476c9475"
        },
        "item": {
          "id": "46beb052-ae3e-4621-95d1-eb7e57165a28",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "e36ae358-21e6-435c-9d36-01705e298116",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ff70ea6-7d7f-4ef4-bd02-7508d0adf239",
        "cursor": {
          "ref": "fd2d485b-b171-4d05-ab80-7a65025d1a91",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5ac1717e-7f30-4579-a02e-cb1864aa274b"
        },
        "item": {
          "id": "6ff70ea6-7d7f-4ef4-bd02-7508d0adf239",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "c937b40c-cfb3-4673-bfbb-dfeb620efb6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "618a50ba-f4a1-4b09-8a4d-b2ae41ea8def",
        "cursor": {
          "ref": "31df9b78-efe9-4e9e-89d2-9afc129b465f",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "2d709247-dade-4bc0-94b2-4f68de6d4aad"
        },
        "item": {
          "id": "618a50ba-f4a1-4b09-8a4d-b2ae41ea8def",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9461e8f4-ca3d-458e-8fa7-9421ffe611b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9652e84-99d0-482b-8ddc-b737382afdf4",
        "cursor": {
          "ref": "a2af4334-88d3-493b-b7fb-dfc95790bb11",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ac93ed4f-1875-4b8b-87a9-5ab8acc99ede"
        },
        "item": {
          "id": "e9652e84-99d0-482b-8ddc-b737382afdf4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "aa41902b-b810-404b-aa1a-ae210ae1187e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cf191b-affd-4f9e-94de-09fdec7947ef",
        "cursor": {
          "ref": "0dae32e1-60f9-4575-b24a-d155a898137a",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "113d993d-1001-4e2a-8627-23a1e3949f64"
        },
        "item": {
          "id": "f7cf191b-affd-4f9e-94de-09fdec7947ef",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "2121261d-78ee-44a4-8bd4-bf653a93fd2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9dded50-d89d-40d7-9ccf-e1105fff5d94",
        "cursor": {
          "ref": "fe54d3b3-c9bc-4751-96ca-15a8cf64fb71",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b043d2f7-ed87-4994-8784-4ec5449f864e"
        },
        "item": {
          "id": "e9dded50-d89d-40d7-9ccf-e1105fff5d94",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0643990a-be62-44af-ad64-f588c160acba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26f6f154-dde9-44d4-9c07-35119b5e3764",
        "cursor": {
          "ref": "ac0a6939-4946-4fb3-9412-38802b1f4df9",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "ab2e90eb-553b-4e46-8630-dfd5f9b8cfc7"
        },
        "item": {
          "id": "26f6f154-dde9-44d4-9c07-35119b5e3764",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "6c996d8d-b93e-462c-a226-8ed5373391f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f74aea0e-da6f-48a1-862b-64c219c2305b",
        "cursor": {
          "ref": "604ffbdd-b25b-446c-88ff-6befe2d69d42",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "a9f588b9-2c4a-47a6-94a1-950d819d9eb9"
        },
        "item": {
          "id": "f74aea0e-da6f-48a1-862b-64c219c2305b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "4530d47b-37b1-4d34-8f2e-3d20f1e712f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f7b9358-fcd2-42eb-b148-00d16af230f9",
        "cursor": {
          "ref": "27bb0d99-24b5-4de4-9542-6c4cd1526e21",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "394d1dd2-895c-4a57-b3c5-6eb785b74d87"
        },
        "item": {
          "id": "9f7b9358-fcd2-42eb-b148-00d16af230f9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "215e428e-a599-4927-a4fc-ea1404c5da5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cfaab94-2bfc-4260-928c-741446b66748",
        "cursor": {
          "ref": "2107c029-e665-4d74-8dbb-da5913bbc92e",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "f130fe89-a0f4-4eae-ba80-efbcd53a370c"
        },
        "item": {
          "id": "9cfaab94-2bfc-4260-928c-741446b66748",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "bf13317f-aeb1-4d8e-9a8c-c8f765bdee59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fcd29c8-ba5e-46ff-a21d-0b0069b98abe",
        "cursor": {
          "ref": "d2526538-db67-4604-9286-dc60ffec52fc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8fd767bb-40b2-4a07-ac87-0d01aee49c30"
        },
        "item": {
          "id": "6fcd29c8-ba5e-46ff-a21d-0b0069b98abe",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "56dcfd5e-c280-40bf-99aa-06ab2b7c8873",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5085b135-6514-4559-bfb2-4502cf7b8519",
        "cursor": {
          "ref": "dba2a97a-b169-4013-b792-cf9375065c68",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "350c9464-7570-432e-b355-f210bc92eafd"
        },
        "item": {
          "id": "5085b135-6514-4559-bfb2-4502cf7b8519",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "80b59918-0634-4413-8e08-3b299ac7f12d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05623cf9-a396-4a0b-9bdd-f8e1e0f9698d",
        "cursor": {
          "ref": "a2944f7f-49f0-4821-b695-7fd79072cc63",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "fc7511fa-017c-4d39-9ba1-93f777ee17b7"
        },
        "item": {
          "id": "05623cf9-a396-4a0b-9bdd-f8e1e0f9698d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c6ab9453-6b03-40df-a2d1-15f11d802e86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "113d8ce8-7086-4e0d-9a85-8a1d5863b2a7",
        "cursor": {
          "ref": "99fccbd9-a3c1-41b2-b41f-a67b817defbc",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "246b83a1-1d0c-454d-8770-155294398a92"
        },
        "item": {
          "id": "113d8ce8-7086-4e0d-9a85-8a1d5863b2a7",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b25e6701-c191-41f0-aa83-ab5afee465bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3c9b3c0-99cb-4c9e-835b-1446bd3970e3",
        "cursor": {
          "ref": "df171e36-01cb-47b5-aafe-428979f303d8",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "fb828c80-6182-4b6c-b284-ec43ea131510"
        },
        "item": {
          "id": "e3c9b3c0-99cb-4c9e-835b-1446bd3970e3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bf3b631a-3985-4d00-8519-11fe5a072db4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fb9eeac-8bab-4ea6-8be0-72859e088a9a",
        "cursor": {
          "ref": "3089b608-41a5-4bb1-8ccc-32f47e2ef41f",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "894c5278-44ce-4649-a00e-fac0265339bd"
        },
        "item": {
          "id": "5fb9eeac-8bab-4ea6-8be0-72859e088a9a",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "61c141ef-223b-4bf6-bd4f-6f3751e7334a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d15d049-8f15-4de5-b024-0b17646c849f",
        "cursor": {
          "ref": "d172d6ab-bc8e-4d70-a2f5-dbb0e1f18695",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "89fd7e8a-7bd1-4b61-9e67-0dd1f48d7aa4"
        },
        "item": {
          "id": "4d15d049-8f15-4de5-b024-0b17646c849f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "cb8652c8-7f52-4e39-8c67-933ef26ce8cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f973dc31-f887-48ba-94ac-bd546499c2d7",
        "cursor": {
          "ref": "98aa094a-76c7-4214-96aa-e7cda5974be9",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "9188907c-3503-4cb4-bd07-ee38222636a3"
        },
        "item": {
          "id": "f973dc31-f887-48ba-94ac-bd546499c2d7",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "959f8344-1e72-47ae-8d45-fb8d7ff518cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b4be711-fae5-499d-86fc-8753c55455bc",
        "cursor": {
          "ref": "14d30f4a-5b19-4743-9e5b-9f7b06c10007",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6cb5549-2139-4550-bff5-7a31c8805109"
        },
        "item": {
          "id": "7b4be711-fae5-499d-86fc-8753c55455bc",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "b66b42fa-2da4-49de-9341-76c78b77db45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c122cf85-e6fa-4616-8d74-8ab339a8fc70",
        "cursor": {
          "ref": "ab62ffe0-752e-4a6f-ab7f-dc85ef985d59",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "8321692f-f8d2-4b48-9714-ab5d6a5fe3a8"
        },
        "item": {
          "id": "c122cf85-e6fa-4616-8d74-8ab339a8fc70",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "a6ccd7bb-66d3-458c-a536-892724c45941",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4abda56-b2ac-4e89-9aa3-76ca9f5c6ce8",
        "cursor": {
          "ref": "14b694a4-c638-4356-9dc1-b8beded3ac7e",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "f9921ed0-e0ca-45fe-9163-a22426c3829a"
        },
        "item": {
          "id": "c4abda56-b2ac-4e89-9aa3-76ca9f5c6ce8",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "1923a54f-cb13-464b-9a8a-2b15497d7ef4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6836cf4a-b353-41a2-a16a-defe88662a1f",
        "cursor": {
          "ref": "02ede853-d8fe-4bad-b3d5-c61ac4f84dfb",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "ca08aef0-d73a-4c90-a2e5-f1b50dd637b6"
        },
        "item": {
          "id": "6836cf4a-b353-41a2-a16a-defe88662a1f",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "5d7f2073-23c3-4b37-891f-f1af2122ea5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f3d25f-a38e-456c-8651-789e07041dde",
        "cursor": {
          "ref": "f5320c39-da53-44ed-a802-fb84e4a82d51",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "bf0b9044-208e-418b-823d-3c25ac02786a"
        },
        "item": {
          "id": "b0f3d25f-a38e-456c-8651-789e07041dde",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "865d2046-c7ef-4b4c-a7a8-1863969f6b6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6f7269b-cca7-4cf5-8ba8-3733e695f363",
        "cursor": {
          "ref": "ea7cc716-a3c9-4b6d-ace6-ee434c194759",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "4cfbc704-c643-42f8-aa4b-413c443b0540"
        },
        "item": {
          "id": "d6f7269b-cca7-4cf5-8ba8-3733e695f363",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "aa3e4f75-3c4e-4829-adea-f7170eaa5b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "429ce792-433e-49e0-8a43-970432f7169c",
        "cursor": {
          "ref": "dbda203b-a59d-4156-aa5a-9a5aa8c14edb",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "cea0d1de-6a64-422e-bb1c-8d170638b51a"
        },
        "item": {
          "id": "429ce792-433e-49e0-8a43-970432f7169c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "4ce3888c-cc41-445c-afde-2fb21fc2d06d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e58ca29-1d6a-4621-956e-4d894488b42c",
        "cursor": {
          "ref": "cc3360da-cf40-4337-856a-cdf267cf044e",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "73dc1701-9aad-4c79-b1c6-4cc09fa128f5"
        },
        "item": {
          "id": "9e58ca29-1d6a-4621-956e-4d894488b42c",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "11e0647c-5b8d-4f63-b4e1-9ef67a289098",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0cc798c-4334-4949-97aa-3efefea4829c",
        "cursor": {
          "ref": "27e91a68-cc20-4aec-8dbc-44d0d4bfdd72",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1aa58280-a6a3-452e-9770-33c9cdcd2133"
        },
        "item": {
          "id": "b0cc798c-4334-4949-97aa-3efefea4829c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "12899877-3108-4eca-aba3-4bfeabf17ec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36264156-5d87-4cfe-949b-1778f34c0f9e",
        "cursor": {
          "ref": "40c328ae-4e9f-4096-92e0-9145e2b46dee",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "b421b60f-5210-43aa-8e28-26e70516fcef"
        },
        "item": {
          "id": "36264156-5d87-4cfe-949b-1778f34c0f9e",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "afd95db1-7a51-4cc6-a3e5-057e52d7ca89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66348aa9-2c18-4247-aaac-960dbe8c9f05",
        "cursor": {
          "ref": "eb51cb8f-b976-4e82-ac34-bf05aa9002da",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "8db8ae5f-fad2-4406-817e-1b9e0766ce54"
        },
        "item": {
          "id": "66348aa9-2c18-4247-aaac-960dbe8c9f05",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "9ddc7bb8-ae0c-4f7b-8964-a83ac83612b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08bbf215-ca47-41f7-a6e3-6fc62a993259",
        "cursor": {
          "ref": "a9f2a4c2-5927-4094-8303-75282ea69766",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "384f8351-3f93-4e53-a369-12251268d494"
        },
        "item": {
          "id": "08bbf215-ca47-41f7-a6e3-6fc62a993259",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "dc94e6f5-efb8-4275-8723-446c3810b38d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8f5aa2f-5f83-42e4-8816-645cae1a1253",
        "cursor": {
          "ref": "8c6b65b5-c459-464c-93b4-be648884d3fd",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "817ed841-4dce-4955-9d14-ddbfaba7cd3e"
        },
        "item": {
          "id": "e8f5aa2f-5f83-42e4-8816-645cae1a1253",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "66b4add5-6a46-4404-98f8-3ad8ece3be4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1a5fec-564c-4640-82f7-a79ccfbe02f7",
        "cursor": {
          "ref": "c6293294-ac13-4ea2-9cb1-1419d1a456a3",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "0087d4b7-a62e-473c-add3-66b381dc5510"
        },
        "item": {
          "id": "cc1a5fec-564c-4640-82f7-a79ccfbe02f7",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d5e5a1e6-7f8f-4d43-b4a1-0825406ab133",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e708050-78fd-4421-8b7f-9028c912457f",
        "cursor": {
          "ref": "c84a4f1e-cfaf-4d83-8927-291e555a26f7",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b8e40608-881c-42b5-aeae-159b388dedd8"
        },
        "item": {
          "id": "4e708050-78fd-4421-8b7f-9028c912457f",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a2f91eba-29f0-47dd-b4d1-77eb32bc84b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71e8ef2-50d9-406a-9c6f-7e06182aaba7",
        "cursor": {
          "ref": "6e49405a-cf32-41d5-aad3-8aa7804dcbb7",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "80e85b8b-870a-477f-af4d-f4c0d2cbdd2b"
        },
        "item": {
          "id": "a71e8ef2-50d9-406a-9c6f-7e06182aaba7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "025be8d8-a446-467e-8a5f-7b0fa92074ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1037bcd-7b4b-4736-b6c9-fcc872b73d02",
        "cursor": {
          "ref": "a6a4d826-b067-4fc6-89a3-52753cd51193",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "1a57fbcb-45d5-420b-a112-48e989d386c9"
        },
        "item": {
          "id": "f1037bcd-7b4b-4736-b6c9-fcc872b73d02",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d00eef4d-f50e-4441-bdea-796b3f63d10c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7d98d7f-fe78-459a-b333-06a5897051d0",
        "cursor": {
          "ref": "3309ee68-01c4-4c6f-9c7f-32321fb2039a",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "552fcdc2-0a56-48f6-a86e-e39b73986be0"
        },
        "item": {
          "id": "e7d98d7f-fe78-459a-b333-06a5897051d0",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7e7ed658-0dbd-44b6-a2a8-c1775f967d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5111e0b3-b788-4d40-81f1-9bb8ff5d772c",
        "cursor": {
          "ref": "97b3c576-6afa-45e9-9223-a86b2e77510e",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "6ed8d191-8480-4f57-8205-09b46e3fb097"
        },
        "item": {
          "id": "5111e0b3-b788-4d40-81f1-9bb8ff5d772c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "290872db-74a5-4f45-807e-4529c54b2d83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4370e597-77b9-4498-9723-87b23758e5b4",
        "cursor": {
          "ref": "bc3af5a4-78e9-4106-a93b-ac0be1335da3",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "b2448f90-9d9f-4ef1-8d2b-1197abddce8b"
        },
        "item": {
          "id": "4370e597-77b9-4498-9723-87b23758e5b4",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "217a78bd-1dd2-44f5-ba81-a0fee24ac373",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f9b91b2-17eb-4ccc-9db5-c1246337e0ac",
        "cursor": {
          "ref": "af7d41f1-a1cd-486c-bce5-c7ba3327ae05",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "5170171e-0388-4a98-b68f-ec61f8822569"
        },
        "item": {
          "id": "2f9b91b2-17eb-4ccc-9db5-c1246337e0ac",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b4564ef1-a698-4dd3-b4f3-41cf0a351e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b8189c-dfd5-45eb-9df0-ef0fa9a3cd1c",
        "cursor": {
          "ref": "fca18baa-64ef-48f7-99ae-bc42b61e24fc",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "145e6c6c-93f4-4867-b7b0-a49bb548f959"
        },
        "item": {
          "id": "93b8189c-dfd5-45eb-9df0-ef0fa9a3cd1c",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "f660ca2a-df2c-401c-a0f1-84e16675494d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebffb674-deae-4f7b-b1c2-bba31988ad7d",
        "cursor": {
          "ref": "12c8afea-eb82-4977-aac2-c598588e2401",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "1373d128-47ac-4419-8a2d-4388f9860540"
        },
        "item": {
          "id": "ebffb674-deae-4f7b-b1c2-bba31988ad7d",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8349121c-27e8-4b7f-9232-79ace6499b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dfacdf9-c50d-4504-8f1c-f2b720f8bf46",
        "cursor": {
          "ref": "7768cc77-0674-4be7-bc7d-8aaa4868db0c",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "e1e552c6-e9f3-4140-98dd-b63249cfd564"
        },
        "item": {
          "id": "4dfacdf9-c50d-4504-8f1c-f2b720f8bf46",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "de0a667d-2add-4621-b9fd-f305360521a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "956aff24-2ae4-4636-82f5-526e3b700606",
        "cursor": {
          "ref": "a26affb5-514c-4d4d-b311-4bdf57f889f0",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "16d61bda-f43e-492e-84f9-0083bec482ed"
        },
        "item": {
          "id": "956aff24-2ae4-4636-82f5-526e3b700606",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "fcdd75db-bea8-413d-bacf-694f31489190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6331351-f1a3-4cb4-91d7-37da4a5a2eb6",
        "cursor": {
          "ref": "96af5ec7-6cd8-4ad6-9176-4d8889858170",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "00312c77-30de-47d1-a8c4-f9057ed9d610"
        },
        "item": {
          "id": "c6331351-f1a3-4cb4-91d7-37da4a5a2eb6",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "a4f8db88-1263-40b5-b419-f7d3d97bfb5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f66b92-cbb2-4bd2-8246-1096bbe22546",
        "cursor": {
          "ref": "4ecd18cb-47a2-4bab-9582-4cc048674996",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "261d2ec2-674d-430c-8a12-d17bb8c639b1"
        },
        "item": {
          "id": "e3f66b92-cbb2-4bd2-8246-1096bbe22546",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7c57d09d-eeca-48f6-bbd9-19a6fb223e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8733a3c2-f93f-41c2-b20e-889ebf22e1ed",
        "cursor": {
          "ref": "458cca7b-c41e-4ebb-b264-c67fb520ea4f",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "7a3ea475-ff5d-472f-bd0d-b397f76f2b23"
        },
        "item": {
          "id": "8733a3c2-f93f-41c2-b20e-889ebf22e1ed",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "58d13734-25d0-4ede-a2b1-6d3a7080bc92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60f35b0-f863-4860-a168-bc7c31cdecb4",
        "cursor": {
          "ref": "abfbaab0-f7ce-4104-a515-2c78c5e1e5a4",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "196ef1ba-c729-4dc3-a2f7-6803cfc573ae"
        },
        "item": {
          "id": "b60f35b0-f863-4860-a168-bc7c31cdecb4",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "f402bb54-c179-416b-ad19-725853ce8b25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd1fac09-3021-4923-a027-2103065e9e71",
        "cursor": {
          "ref": "cc9ade69-7832-44ec-b6b2-9df27acbb7ed",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "b8bb1173-0341-4425-af87-ac60e0b7decf"
        },
        "item": {
          "id": "bd1fac09-3021-4923-a027-2103065e9e71",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "bc3aba33-d52d-41f1-b442-6f7271e74327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ad1f06c-2e10-47f4-a35b-3ccad81e6068",
        "cursor": {
          "ref": "d91cb6ec-ffe5-45de-8d87-b0dabbd13ee4",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c3f436fa-09fe-4f72-adfb-cb9380eb65f6"
        },
        "item": {
          "id": "4ad1f06c-2e10-47f4-a35b-3ccad81e6068",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "03b1b9ff-4bcd-4dcf-b3f2-c41aada096ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "734523bd-fb23-46ca-a323-e93aa8d5cea1",
        "cursor": {
          "ref": "c9f84463-6ab8-426c-9474-a3794fe1a363",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b65e7860-13ac-4ea0-8923-1e2b7747836a"
        },
        "item": {
          "id": "734523bd-fb23-46ca-a323-e93aa8d5cea1",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "9e0b1af6-4c29-42f4-9a46-9946cc2d558c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220eee57-457a-47e5-bc0e-820c8ff1a096",
        "cursor": {
          "ref": "376028e7-097b-4698-9d1d-77f02272df11",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "83f257b7-fca8-4bc2-a0e8-f3acecb946c0"
        },
        "item": {
          "id": "220eee57-457a-47e5-bc0e-820c8ff1a096",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "111bb8ff-ba96-4b8c-86d8-c2c44a053572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c643d-affe-4a9c-98aa-6db93f977f6c",
        "cursor": {
          "ref": "0ec7f1c8-1686-4d26-ba33-261a926382a3",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "518e5ff8-d6f5-41ae-acf7-9c5fc1187e64"
        },
        "item": {
          "id": "7d9c643d-affe-4a9c-98aa-6db93f977f6c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "2d5ffd37-23e8-4dc8-bbc5-a1fbecda64cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f433175-9d6c-4562-acce-7148cd2c0d4d",
        "cursor": {
          "ref": "d7c4ae83-ccdd-4749-8891-bc2fba207ffa",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "78f48ebd-8b26-4ba4-b7e8-436c8599e351"
        },
        "item": {
          "id": "1f433175-9d6c-4562-acce-7148cd2c0d4d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "4c2cb423-85da-4af2-989d-c1bd849c12f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eca7770-8208-4033-9afe-525abbb304a6",
        "cursor": {
          "ref": "0ac541ca-0399-45eb-8566-67c6471d4f19",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9dbad5a6-daab-47fc-b948-25189e342acf"
        },
        "item": {
          "id": "7eca7770-8208-4033-9afe-525abbb304a6",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "0404ffd8-524f-4768-ae33-66f357b403fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6990099b-1216-44eb-9a4e-1d3b02d5629f",
        "cursor": {
          "ref": "d94b3c4a-57bd-4055-9316-bf3e776c1e97",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "25618858-d75a-4db5-a9c2-80c44584867f"
        },
        "item": {
          "id": "6990099b-1216-44eb-9a4e-1d3b02d5629f",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "c29dee1c-32cb-4399-80bc-a99e141d2ea1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 31,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2be8688-60ce-4488-b3fc-04c8445364c2",
        "cursor": {
          "ref": "f156adf8-44f0-428e-9e46-db1a5ed7c740",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "66768fc8-f383-4b5a-b5f4-dc16afe85f44"
        },
        "item": {
          "id": "d2be8688-60ce-4488-b3fc-04c8445364c2",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "03e149cf-251f-4b45-a1d2-dd1825ebdb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d09bb77d-cfb8-487c-8ed5-84cdf26379af",
        "cursor": {
          "ref": "0ee52d35-6225-4119-b9e5-a22e1ec2d0f2",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6d9a9ef6-920d-4ed1-984e-5b3d216bc984"
        },
        "item": {
          "id": "d09bb77d-cfb8-487c-8ed5-84cdf26379af",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "69ee8f38-3a87-4219-9194-667d8afbdda1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 30,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fa79d2e-254f-4991-a0bb-16354a92bd68",
        "cursor": {
          "ref": "9de82a95-56ea-4b75-b3ec-fcde429d518a",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "52916335-3231-432b-a756-92a73ea048b8"
        },
        "item": {
          "id": "9fa79d2e-254f-4991-a0bb-16354a92bd68",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "df6e9f68-df17-4d9a-b4de-cb89fe74ea39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5383d488-30f5-49d7-a8a3-a19aec3c82a6",
        "cursor": {
          "ref": "7b51c8ad-85c5-4c9a-af4e-a75e29412caa",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "5d5e456c-4ed6-4595-9967-2e35e375d381"
        },
        "item": {
          "id": "5383d488-30f5-49d7-a8a3-a19aec3c82a6",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "5b734a9f-5087-4b06-8b59-b05531172bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16b60831-584d-4df7-9801-e9d265c58ce7",
        "cursor": {
          "ref": "b851ac4b-31c4-4787-93f6-e36ce2f004d4",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cb337ab6-6c78-4a4a-80be-6d5ed5b65d68"
        },
        "item": {
          "id": "16b60831-584d-4df7-9801-e9d265c58ce7",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "0f932e05-6fe6-4c05-b46b-29694e304ed3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e067b5a1-d0c9-48ad-ad54-887237557a82",
        "cursor": {
          "ref": "3d5b264a-baaa-43fc-a691-d85245f650dc",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "aa8808f4-d83c-448f-83ac-a9531fd6d6d7"
        },
        "item": {
          "id": "e067b5a1-d0c9-48ad-ad54-887237557a82",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7092ff01-729f-4310-bcfc-473e50682fff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 29,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a410405e-d990-43de-a010-fd750a773d6e",
        "cursor": {
          "ref": "9ba341bc-2cbb-444c-a547-b16c4704e7c5",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5221458a-fdeb-4c47-88da-495a153b1301"
        },
        "item": {
          "id": "a410405e-d990-43de-a010-fd750a773d6e",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "4f6226b8-b76c-48ae-844e-f97c01028b5b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdedc9ef-e537-407d-84f7-9f4d0438506d",
        "cursor": {
          "ref": "633c7903-fcfa-4941-a67b-1ea497cfce97",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "91a51902-cc3a-4071-adc0-a8aac04d0268"
        },
        "item": {
          "id": "fdedc9ef-e537-407d-84f7-9f4d0438506d",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2895ae30-aff0-4378-95b9-c26d59d2f822",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4fe304-b2a4-4c63-aa0c-93449099438a",
        "cursor": {
          "ref": "ab16709b-73b4-44f1-b204-e266a47849a2",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "653695ea-ce05-40af-bf3b-121c84903ca4"
        },
        "item": {
          "id": "6b4fe304-b2a4-4c63-aa0c-93449099438a",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "2236b71d-6fca-4406-a2dd-315accb4cc4d",
          "status": "OK",
          "code": 200,
          "responseTime": 31,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4664aea0-203e-4e33-b02e-b479f6fa5e79",
        "cursor": {
          "ref": "655edf3c-becb-4eca-ad9b-9d942b0451f6",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5c464acf-5557-44a3-a435-e23cab0e25dc"
        },
        "item": {
          "id": "4664aea0-203e-4e33-b02e-b479f6fa5e79",
          "name": "credentials_verify"
        },
        "response": {
          "id": "e4f65fb8-59cc-41ce-b69c-b846724c411f",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1cf9d0d-8bd3-4f95-acb6-812fe40662c6",
        "cursor": {
          "ref": "0c2ebb4f-7799-4e05-b2a0-4b3ff0917f33",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "807b1e56-f27e-420f-8196-13667ad7c4aa"
        },
        "item": {
          "id": "a1cf9d0d-8bd3-4f95-acb6-812fe40662c6",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "9975abc7-8b84-47d5-9ec2-252c37cc518e",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
        "cursor": {
          "ref": "d8f509cf-9ed4-4dd7-950a-d5f852e65ebf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a92c0ab-074b-4e31-8522-f3ba8b487adc"
        },
        "item": {
          "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f06409f9-099a-4c10-ba78-d1d12dc3aa14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
        "cursor": {
          "ref": "d8f509cf-9ed4-4dd7-950a-d5f852e65ebf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a92c0ab-074b-4e31-8522-f3ba8b487adc"
        },
        "item": {
          "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f06409f9-099a-4c10-ba78-d1d12dc3aa14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
        "cursor": {
          "ref": "d8f509cf-9ed4-4dd7-950a-d5f852e65ebf",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4a92c0ab-074b-4e31-8522-f3ba8b487adc"
        },
        "item": {
          "id": "b26d713b-e0d1-4877-bf75-8e31a6b98515",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "f06409f9-099a-4c10-ba78-d1d12dc3aa14",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c425994-aa82-43d8-aeed-2cbf63e375be",
        "cursor": {
          "ref": "f8d98d8e-fe9f-4854-a1be-e3efc8e194c2",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "877a3c5a-dda0-45f0-b953-4f97c6337b9e"
        },
        "item": {
          "id": "7c425994-aa82-43d8-aeed-2cbf63e375be",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "dd0f6d77-1426-4509-ad31-a4a96bd635b6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b6b5d0-1041-4296-86c9-81c4dcbc45ea",
        "cursor": {
          "ref": "106fd70d-51dd-4e53-a49d-0cd0d0d4f1bf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "819b2bc0-7bf6-40f1-82c2-45727c703ece"
        },
        "item": {
          "id": "47b6b5d0-1041-4296-86c9-81c4dcbc45ea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34ec04fa-29d1-4adb-b99d-6a38487ff0c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47b6b5d0-1041-4296-86c9-81c4dcbc45ea",
        "cursor": {
          "ref": "106fd70d-51dd-4e53-a49d-0cd0d0d4f1bf",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "819b2bc0-7bf6-40f1-82c2-45727c703ece"
        },
        "item": {
          "id": "47b6b5d0-1041-4296-86c9-81c4dcbc45ea",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "34ec04fa-29d1-4adb-b99d-6a38487ff0c4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 30,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "179b18db-7471-40df-8120-f522f3164eab",
        "cursor": {
          "ref": "68c196fd-b0f7-4a59-93c2-94c698461aa6",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "933d94fc-25ca-4347-9cd9-4949af426996"
        },
        "item": {
          "id": "179b18db-7471-40df-8120-f522f3164eab",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "88f2cbd1-94a7-41c3-81a8-34b287792a1e",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 30,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc4ee6-70c2-40d3-9fde-4d9dd476a8ef",
        "cursor": {
          "ref": "d5327b21-03c5-4771-8de9-f8df17bde85b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "21ff2903-a83b-45b4-9ba8-482660f60c8e"
        },
        "item": {
          "id": "52bc4ee6-70c2-40d3-9fde-4d9dd476a8ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "14453ee7-fd50-45a3-9e26-423dc9e72216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52bc4ee6-70c2-40d3-9fde-4d9dd476a8ef",
        "cursor": {
          "ref": "d5327b21-03c5-4771-8de9-f8df17bde85b",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "21ff2903-a83b-45b4-9ba8-482660f60c8e"
        },
        "item": {
          "id": "52bc4ee6-70c2-40d3-9fde-4d9dd476a8ef",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "14453ee7-fd50-45a3-9e26-423dc9e72216",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 29,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ceda5a3-babc-41fd-80ce-42f24d0c6dee",
        "cursor": {
          "ref": "a11d15b0-b324-4acf-9cac-32f5963bcefc",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "71a56fac-a651-4250-b692-672a10343aa1"
        },
        "item": {
          "id": "3ceda5a3-babc-41fd-80ce-42f24d0c6dee",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "afedb67b-3641-4b54-a2b7-2a45d8e8b5ec",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 29,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}