{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "b5d26039-fb62-4355-b4fa-416b6d896bfb",
        "name": "Clear Cache",
        "item": [
          {
            "id": "66f37059-8a70-4b61-a4e7-e762a8a82970",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a02a850d-f637-4eaa-9155-352391c8dbb2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "72f5e7fc-9261-477f-9873-814ad2ad1fb1"
                }
              }
            ]
          },
          {
            "id": "ed1f8b94-466d-4462-8014-244ee0ef4edf",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "63966eaf-b4c2-43d8-9ad5-08ba41f8dd75",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "d1779bec-dc53-4ebb-9a01-1b554216a4ef"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "fb0e7d05-2174-4249-87a7-573b9ec88cbc",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "fcadfadc-e877-4763-be00-a61bc3d37c10",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a0d807f-0951-4db1-9d69-d345c0f16e89",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99d94d21-56da-4b2c-a485-0d3960f4ef2c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "182777ef-286d-40d4-b89a-c5553a9666e3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ef37187a-5690-48c9-86c2-c956c61f46d4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78707189-042f-4991-a27f-675dba8dfe06"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cf4ed63a-0771-4d9f-8ef3-85e846b38e46",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c3cf8b16-d2b3-4e55-8cf8-6dc3131521cd"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ff91507-78a3-4f3f-9178-d49baa7e5998",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "86be854c-6e78-4e93-bfc7-a60313f5b3ad"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b2556e75-fcd7-4f96-bcc2-fe30b43ef17e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ead326cb-3343-4c93-bac4-bfc27fd56156"
            }
          }
        ]
      },
      {
        "id": "5e10d6de-f0cc-4864-a100-c8fc7764690b",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "4eb6c2df-2e96-4a74-bee4-84da16c09767",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b81c533e-d1db-4141-bec9-1a49f15cf507",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "81faeb03-366f-4905-9941-2a8154e907b7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "124b0935-22fd-4c8f-a91b-87849704543f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ab267b26-5444-4bda-b5e2-bbd2172393ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1320dcdd-1a3c-4472-8612-d61d3ee2efa8",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4404c2e-bb1e-4848-8e60-2f69e76ec893",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6f5a5997-7cb2-4ede-a901-381fd6c16588"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f0221d-a5c2-4f0d-8b2d-3edb7449c771",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3e95a8c-df3b-4d6a-a5be-818bca6a5554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f5742dab-fb4d-48f6-a647-ddb5fa8450f6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "df5e1931-1da0-4a84-9488-347c3b962362",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4a8ee78d-b763-45b4-91d3-2191418fddd8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb7f60d-efd8-42f7-8df4-5e74e27935b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c9f30342-0999-431a-93b3-a1d655c33863"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e216c078-ac0d-434b-882a-bcca18d67cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d14b5426-8458-4d7e-acfc-cb36c4ffd375"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c45766d8-3e71-4469-ad53-ae1727e65cab",
            "name": "Positive Testing",
            "item": [
              {
                "id": "051b7fe0-c471-414a-ad95-99f406ab5519",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1650b71e-6123-4eea-a755-2084079dcc2e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "bee95cbb-577e-402c-a758-454e4918929e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f778552b-de6f-4ceb-8efb-174fe6a19e64",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "78d3429e-1219-4282-b7b0-a0c78625634d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5449af78-2424-4dd9-b8d8-1e41d4db5ace",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8fbf7f64-0968-4d23-8b79-1c1d3100ce49"
            }
          }
        ]
      },
      {
        "id": "a78b8fb7-dd77-4ae8-84c1-b1fe1196614d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "17a0fb6d-61fe-4224-b012-a456224606ad",
            "name": "Negative Testing",
            "item": [
              {
                "id": "21c332c2-fec0-4a95-9b7f-a5f88b951814",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "ce6dd4a5-5909-490a-9389-d273f6f95d44",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6bfa0b-45c5-4155-b038-80da2e19bede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbc0b16-80a9-403c-a81b-e0e55a9d8fbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f80ddc-bebc-4177-856b-d8acc7796329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7de4eb8c-d1c0-4a1c-bfb1-a5943723fb01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bbe4a24-5f03-40fb-ab28-8974aca69e48",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b8023a2-5c9d-4d5a-892f-d13c1b69d101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7d95ba2-dd5a-421a-b873-9b891f52968e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2de738d-89ec-4e0c-9276-dc47d22f2335",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "134b9f52-a451-491b-81b3-1cf301a58cab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "977f1e0b-37f5-45a2-b1b8-5539c7f9be88",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9fa9b68-0a98-40a5-90ad-2cd5510abc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d4ffa4-8613-42b0-8b2b-5d76686c422e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9911e9e2-969b-4b5d-b23f-30f5d75141fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c214605d-a15b-429f-a2f8-148d08f64c8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36de4e27-52ce-4642-90d1-3ef117c152a0",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4449e11-b574-423b-ae2c-07ebbc7a2327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f36c257-3122-432f-9a04-a79c6cdcfba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "471e44b6-737b-4266-8cf8-8e3d44c62459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb4c409c-5bd5-4b5f-90b4-7699e773a432"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d29ca4f0-6513-4666-b429-a6d0efac673d",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e740758-82c3-4e05-89bc-30cf074c98e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5126375d-15df-4d21-a95e-5a2b38b39619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9966cf05-ba43-4a91-8ee2-3779a7aeac00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f81e129d-4003-4c9c-9f84-0a903c7b12d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a1e489-84d5-4e53-bb3b-9a6e5d45483a",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5bfff57-2bcb-43ef-b32d-bbc73da79009",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ab70ef6-271a-47be-bb33-f19f2919b584"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da48ae65-2227-4d33-ae3e-b1ba11351fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a8d94ce3-8a3d-4640-82fe-76a2755c3c9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "051e74c2-5cf5-40d7-96ab-4ea0e94cc22d",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a61b944a-5d85-4b38-8872-a6896c334b87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "343066c0-602d-400d-a633-bb000668e738"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcc4692-91ea-431d-b58b-da0aa3676c33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9e3a1ec-e566-4976-8afb-3b716eb79509"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d2be262-782e-414b-bcbd-21274a8bcf40",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "946b0be7-59a0-4833-8571-d7020c072cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4d4cecb-b9b3-4555-a394-ef9356437f70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cdaf2414-e06c-4ba9-a98f-a9c8cfb3445c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7bc83859-c600-4284-9cd5-205a88dad667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152dc33b-cd28-4a4c-829d-ebb7e2388a2f",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ee0a4c4-8930-49d8-a036-98bfdc1e5e21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107b1b0b-44ba-4ec7-af4c-697baaf589f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72714f6-e990-4dde-9030-31fe1e6aa349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "51b9ca7a-6cd3-47b2-92a5-5a69730f5942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8636880-5f86-4bf8-9609-e41a20b847d1",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2cf39e7-75a2-4a09-8c41-221cca015d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b85fa0b7-7f3b-4ed4-a17f-5908c7850402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c41821d-4687-4c12-a703-907c477aa273",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4cc90d9b-a340-4840-9d03-c8d15dbd5eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6febad-76ff-42b7-9ff9-84f4a452eb59",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a8c914-34b9-4dd3-8e48-0f2e9a73cde5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "416ac796-260b-46ea-9fb6-bf8a196da93a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7fbaad3-d5ec-4240-8186-88ea2489e250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5aaccf8e-0a90-40d1-a875-dc46959f78fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e1a5af4-3861-44de-8b88-68679c47a7d8",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e461f1f-aafc-4c4f-adc3-fc12b7906b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69d5da6b-2a91-41af-b904-e0c1f735d00f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e3eb7e-c056-435f-959a-c2ef3eb43f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "86d82b08-9bc5-4900-93ba-1edcaa4cc362"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35190ab5-72cf-49aa-a642-b94b9aef93e7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e0478-174f-4cfd-9ce2-998c8872cb4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5de0355f-8fc9-4774-a950-8009c3bce24e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4327bd83-9376-48de-88e2-d8e1fa7b95e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ddbaddd2-4e1b-44fc-9e03-8f7836f4c654"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215cc6d8-e8a5-4d7d-a1ac-6bf18aef048c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be4fe637-8172-4a6b-b0ac-959290c15f22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe3c6f33-2081-4dc0-9a67-a401bc460656"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eee0bc0-af08-4a11-b806-a7ac97304b96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cb0d468c-05a1-408f-87ea-f62f85c1fa34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55cf4f36-a0aa-4d38-9b09-d7d309648b03",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "540b705d-574b-44b0-8efe-92632620158d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637273c2-b2f6-4113-bae1-d2cdd7bac8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1082784d-03e1-4a5f-ab23-e040c37895e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2ab62bc8-d7e4-4a8a-bcd1-42b3ccf80a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8745578a-5911-427f-9233-075e67694207",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efbbdc55-d69d-4038-9106-ef2344c9df94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d7b5346-f25a-4a18-b78e-423de827d42c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af077bbd-c50d-4c44-854b-ccc14696fc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f7460eed-ff40-4ed4-bbb5-654cb929b253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e5679e1-a9c3-4053-86a2-95e548635f57",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b171ccf8-4501-434d-b476-3a6564d6d7a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "589ac66f-6754-414c-84b5-cb942e533d67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e195c53b-29bd-47f2-ba32-1e11a79c9310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9a0c811b-e1c4-4fbe-8511-fdfe1d261a18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "499cd868-9b0c-4d27-9f2f-2e4bd336097c",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87553e19-d1e3-4af5-bb4a-608917cbf8db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72616b5d-ae5e-459f-bba6-9681871dba7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42bed698-853b-446d-8b1d-7d073eaf8e8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a6c7932-94cf-4059-ae1b-7f27ab3af098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b8c1b3c-a683-4201-93c6-a83a910f6044",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecb36b63-ff54-4265-a58f-8d005be568ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2496627-39b5-44d3-aabc-82ae614a08b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4b7a550-9e0d-48c8-9b00-e5312897faaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3608137-cc1e-4a70-8e0f-3968f5234b41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31995ecf-f0f1-44c5-bd01-9ea5965ef6c3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a1d2093-e003-4dd4-bc9d-109023acabca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf34de3c-3a30-4c53-9a8e-c61b17d24fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bc81b83-bc26-4c26-832a-61ba7384abd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "b463860e-62c4-41a5-8f8f-6515cc216711"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dee2a6d-836d-4a4b-8b05-bf869011b7d1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78829e6-2691-4f08-b354-08ed9a4ddf6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5880a477-d314-4393-a169-8be77a897dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13d0674f-3f01-4c87-b3f0-2e782f4d6560",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f3479e77-fcf6-4f98-86ea-aad296c19f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73458ef6-db2f-4ea9-abb7-1f9a185d1622",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acfebf77-474f-4f96-858b-f1874b5a4054",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adeb3f09-cf86-4918-b776-31392ff68764"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "668a3cf1-615c-4b71-b382-b1bd26bd99c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3bb9dd21-396f-4ee9-84e0-dcad09a29741"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2854490-e66c-42b4-a442-8ee9bbf40879",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402fef85-3863-4c66-952e-da91eb7efb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "356b121a-5b39-4160-9967-0018dae8ea65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46684f7c-1de1-43d8-a198-e198229a9703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "95211a79-f8c1-4598-adbd-3b4de2fae9ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c3546b3-cc4e-4563-a82f-7de8d474716b",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62a81bf3-59fa-4c58-bf60-c7dfb64d9bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0192bca-5678-46ce-a6a4-d278505bb41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d010660-f502-4571-8a0d-156f79d89ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "39c572c6-f955-47e8-b87b-d34376b996fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d32b78a-5bb8-4bf5-aa66-d76ef289cdd4",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24cfa7c8-cc24-4074-a9c0-c443094d4718",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff8267cd-8be7-4c9b-a6a5-2cceb81fe993"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb45b81e-5c5a-4912-ab6d-f65a17ca1548",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1d51a20-1e6f-4ceb-8a40-3e7a55c3d702"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be5b7966-657b-41f5-99b0-310e033d46ba",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fcee303a-08d2-4c4f-b493-c7de6334dd5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b242024-f1e0-467f-83ec-aed5f96ed6b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "024e6e5a-ba14-4a6c-ab6e-773b49e5b150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b528ea14-fc9b-4c28-9f0a-0bc87eb70307"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6484fde0-6f5c-4932-b4d7-c782fbdd67cf",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b8507e3-b340-495c-b915-7d0fb2c85af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13591445-3524-4d71-8b08-e7dc59bd2622"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee341ad-5a15-47b4-a3d3-126eee517ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ddf2540-9fd6-4815-a9f8-c845b6c77c6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de506f3e-6fb7-449e-97f6-914a07f08f9d",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f45fbfe7-d317-4dc0-824e-c25c2cf11b84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bcc3f932-e49a-4ee6-824a-d563b6863fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de10d99a-d979-434d-a728-dab2eb2d2e99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "b727ad09-059e-45ae-bb82-a40f50b2d287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a6c056-dcdc-46b3-a49d-6252728493b8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d931b2a8-30bd-442b-9de4-e011bd508c66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b91632d6-85f6-4b5e-b017-590ae13b4de9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f276031e-eaa4-4077-b9cb-313c0df40e24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "288773f9-f0be-46f2-84d4-9d4427d10add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89a02cf2-9e82-4cd6-a070-3d0f5b5eb392",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "649580bb-ae47-4b18-9739-db1d38dc3f8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6f55a53-6456-4d9d-850f-f2a9f419dfff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8eccca39-f965-4b74-b1e6-6489075090ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d74b758-bb66-459f-a0b6-2af88573c0b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e36899-b249-4585-93b8-0e3821b0dfdf",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3132f09d-b2f0-4ab4-adf1-1936a60c702f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "360d55ac-f651-43d4-9218-af6512ad5a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94cde204-237b-410e-b774-0a27204d11b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c81c1d8-ee98-448f-9c22-ad8239cfcb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29e4d7c9-29f5-4581-bd4b-b2838b529fa3",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f639e58f-9e39-48a6-85e3-9b37f95ee0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88793649-6062-413e-9188-79d134ed2dae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d2f4453-0c96-4f39-b47e-810cd39c9609",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "608ae37a-b332-46df-9a03-31695f517b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf34726f-3efe-41e3-809c-ce8aef6416ed",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d99614dc-a51b-4e6d-99b6-aa8a3b71b288",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05290fad-5790-4151-9ee1-a62537869213"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56cdb275-5a0a-4644-9611-4451f6669a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c49829e7-a972-4983-a68e-f10e2175e7cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6365503-6d39-4043-903f-a91db768c0ee",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b3563d3-845a-48f1-b481-924223469a20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a407a5f7-eb58-43d4-8316-8d68b5d5d27b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ae4d6c-b11c-48a1-b198-6dc0c6386376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "73a7949b-b4e5-401d-8c30-5a8490b33b68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8640a9e6-3352-4965-8111-6769c0e52b7a",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78e7790-2dc8-4b97-9abe-4cc01cd2085c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba1f5a22-5e80-4030-a70c-38e0a2ab01e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58c4cad-4dd9-4896-bb86-ec9a50eea641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d159b211-ea16-4cce-842d-b305495da050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4ae6d4-d08f-4de2-ba67-31c18707a620",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c814cd8b-31f4-4959-a370-e3c508268e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1eb930e2-a770-4bfe-b2bc-f2b756f496f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea04c76a-f972-4f59-81d1-a0ca3eac1179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e0604de6-d02f-4402-bfa3-f6446519fe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50116881-78fb-4807-a185-4f206c5da591",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "497541f3-5640-426c-a8c3-5438104d02b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fd918db-6736-4f95-8112-aae121e83340"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2e543ff-1a87-4a53-80a5-0dc6a707f5e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "b837c4a6-d4ce-4027-9616-57bdb3f4252f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d34c166f-c8af-49c3-9f90-c2c42fa4a6d8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea4ad14d-c701-477f-9db7-0c0427660603",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1760ff55-4968-4fe7-a5fc-8118bbdc7896"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7d71e0d-dda7-4027-8088-7b7777dd7ff5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "92d52cdd-6bd9-4f65-8654-6c69e9ac62e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a19d314-8746-42ab-ae1c-c84b139ab1fa",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "baf439a1-db49-42d7-8be1-057ada69f37c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73a6ef53-306c-409a-9bb0-0f3b13e8c066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4559d363-0cfe-409d-9f5b-ebeccac4fdba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "bee03ea9-4418-4552-a9df-e32ce07815e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbfd1384-f86d-4612-81c1-4439714bd158",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c1681d-9d08-4f2d-8d8e-b37e0915b062",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90f505e9-2583-45fe-a9ec-25470aa71936"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715361f4-b26d-440a-879f-6c56e53892ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ccbdb4c8-b275-4686-9b8d-de8b6bc37d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c8d7545-98d9-4932-9369-0c859511b5df",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe6c2d1-7b72-426b-9095-8fc3209c0553",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbd1460e-b521-4c6d-9afc-31fb58a06d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "084ed8cf-94ea-4116-80f3-993b9a572ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "9225cd06-3107-404a-836f-3828ff3849f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70fa2b74-1c0c-4275-831c-f8cb4206da8c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb5af32a-f032-40f7-98a4-7e2524e46c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a08d388-2ce0-460c-bd46-aa27bc21c9c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc11e4d-5929-484e-a321-fd78fb5795d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "bb868e6c-d6f1-4b51-8929-0273ce6bd8b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "560ecae4-2903-42dc-9734-d0fadf32d0af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc5027e0-cb55-4d72-84c4-4d96e1cca0df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "928e7280-ad17-499e-94a7-5ed5e7a9217e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9765b2fc-9a1e-485b-915d-4ab5cd3c66a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a67c5e09-462c-4178-9a7a-50d016acf24d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68e2d177-19ca-4d9a-b5b6-9ea07b3850bb",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3358b898-697d-4abd-8dd2-4b43df72aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40771300-b459-44d6-827a-6d2808fef2e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d633fb-8793-453a-8f7d-7803017f3397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "05698d0a-0a26-4566-a6d0-a733b038eba7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a527df7-4031-4158-8fa9-a46bcfd98eba",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48c7069-3d6b-418a-83b9-7180fe31475d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be4d738-a215-4851-b180-d23869a7cef4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f12ee9-a8ee-444a-99be-c5c2ac96c3c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a64c9563-a572-4b87-843d-bf5fa26d3644"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4804be-4255-4e14-b80f-2f6f901c8f26",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c8274d-c3ea-4c3f-921a-8b9ca046dbad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfcbc322-38ab-41a4-b505-fb2b99623a66"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76c53de-97e9-4e61-bfbd-857d8389b7fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "09773812-2c25-4f8b-ab78-02af12e3c397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f8faac0-5d36-4d65-b00c-9d6ad8d07da8",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39aa1a69-dcf6-433d-9dad-ba6b054eed30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f93a405d-35cd-4ec7-a608-d62f8a4b5276"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e697efd-7fb0-438e-ba5d-e56e7f3980f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2986b70e-4a69-4ae2-803d-c69f8366eeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59bc6be2-cd66-4a4d-9e88-8b30f2be9dbe",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08409c73-7c21-4af5-8fd5-98cea6acfd83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a828f4b-cc16-4cdd-a504-66c1cb115dec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56be425c-8b90-41ed-af88-06a5b879c9df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c8663a1b-44ed-40be-ad3a-da64ad058ede"
                        }
                      }
                    ]
                  },
                  {
                    "id": "254e8dfb-6ae6-4178-a2d8-ea86746bcf02",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58a15002-8a43-4cab-b162-43f7c4baecf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03dec395-2767-467d-9cc6-aac63eebd38b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc9f1cf-4f7b-4219-bbf6-a38465676ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "702962ae-da05-490a-b002-9bfbcc5965fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da13472b-cdc9-4bfc-abe3-66b22d2eaad7",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ac839a9-f375-423f-9fca-73b090e3cd73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2fb7d20-7730-4d1d-871c-71c98e7642ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f30708-924e-484d-9ac9-5009c5ec74f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78b93cd8-3ead-4db3-9ff5-bd05d4d73161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc749df5-59b0-49b2-a752-47c1febbefe7",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "78ba532c-9f90-47a0-bff0-bf72925e3302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecaf1f57-979c-4a6a-b199-e627ec1ceed1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ccec75b-ea60-4040-861e-f49f061b6f56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "42329005-5754-4dae-83fe-93323e98a4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db9e226-6414-4620-97db-b822bd5077d3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd632d9-805f-4a53-b03f-887f7d2a6711",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2ffbb53-2765-4279-a5e3-567bba27662e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1297f53f-a9dd-441c-bdec-7fadf6e72d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "30dbd9ad-3cb6-4b40-9249-c6606c888d68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece9758a-0f3d-4878-95c9-adb4701f6cb2",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d85e4fb-3e42-49cb-ad92-750e9a74ff71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a58dffc-8a76-46f0-8b35-9eea5412afee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87d6343a-ece1-4161-a8b0-954296a4978c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "616a28c4-3dbb-4d04-9bf1-c8c4898efdb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "936cad47-79a0-4efe-8210-f3226dcaa9e3",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea27ba0-23e1-4212-9b5a-55352a729917",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176b65c0-bdb8-4c61-8ef8-3acd9f062e1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00611ef4-7434-4a2d-b1eb-5b61f32a39a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "84ed711d-788d-4de1-b815-f880af0bd047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f82298f8-d134-46c9-8f23-b55d3b4cfcc6",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e50659e2-f930-4f81-add6-84926ed80fc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "468a8604-a8f9-47cd-9e2e-ebcbce4b3603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0687379-3e20-4d90-97e5-c2c1b36bbe32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1830142a-aa94-433f-92ad-884546d3dfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a196b52-add3-495b-ae5d-13a0b558adec",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "095c98c2-ebda-4389-930c-eac2aa5d05b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe924aa0-0c4d-41f1-8054-0605645cc2ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2cc1c85-3d0f-4ea8-baee-e0eb293a4923",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "be47b1b7-01d1-44fc-9a6e-1981c8f32d08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccbee6e0-fdf5-4020-a06e-ff9de761449a",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73b6ff04-4e37-4418-930f-67f2b619db07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8c4c00f-3707-46ba-955a-2d1c8e37160d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd1bcee2-bd0f-430c-b47b-d1ed5874b66f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "319eb270-e1fa-4298-b960-fb41dff519f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8149cd5e-1c15-4a04-b48e-a010f4b10d55",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a034349-cb8a-4cf5-a73a-49916775d697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3f5b324-959e-4dad-a2fa-e67e392d3643"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d9de59a-7256-483a-9a45-a8d7b0fb966b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6048492b-cb00-4e86-92b0-6e75a5bfcdba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01342690-c316-4fa2-9010-40534107cd65",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "929f9390-91eb-4ab5-830c-6e0ea327f079",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "952ee356-a995-478c-9694-f8cf3b13310c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88e5b717-34ef-46b2-b51b-5ccdfb4b8dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "71f0cd1f-86f3-4d43-8918-432cb88b0a49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11a2921f-8fc5-48bc-98be-2e3b4315f30c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c1e73a-1827-469f-86e4-a7fa4fc23539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c7223e3-56ad-4845-938e-b1d2db09b425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85665942-780f-4722-84b0-495b1dd1feea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3ac73684-9853-4cb3-9e2d-1839d9b899f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6e69842-7530-4ea3-9ac4-f4163f2b458a",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bcf365b-18aa-4213-9059-d55973bfe579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d2dfa80-b236-44c2-92ea-8b1d595d1e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f086f56d-3efb-47a2-ad63-4ca1efbdacbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1c654034-4b24-43cc-a2cb-3057f5027eb3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4e2283b-96c3-4c49-97da-4e3675333aaa",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f614e96-5a27-47fe-aa44-c926bf3eb0a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37dbcfc4-8cec-43c0-a27c-b4c3bd155986"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5caddd96-c2d0-442c-8625-98b11acca24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "5faa4c4b-1bae-43d7-8598-d1bf296e0161"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c6838d2-a5ff-4849-ad2b-26f492270190",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9207df5-bfeb-4213-a136-6b30ccc301b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92babb65-c51c-4a2e-bb69-63140a60bc80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91713e36-fbd4-4254-9d64-024efa073b9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e6ecdf3-480a-4fac-a3da-2a4b6334d6df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10462c8a-f0d6-4a96-aeae-0ff0a5152a6c",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4dc064-40c1-4b1c-a93c-856a0c6534ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06e80ef9-a601-4843-9f01-5963ed61ef29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a80a6665-72db-40f1-a68e-63db578d41af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95056559-2b47-48b2-bb21-ad440463903c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54b437fc-efc5-4913-8b7b-cab9e493d29f",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a475ef0e-3424-4694-ab93-bb0035b5d30a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4acbce9-41f0-4303-8487-e791a27cfab9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af9a4f80-61e4-4b81-b89a-93375f1817f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb6f7156-69e1-45d8-8f9d-ddbab4283143"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d72ce3b7-6d1c-4b8a-86d3-0431475d5862",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e97e0179-9b8f-4204-b068-31af4f68d040",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82d76dae-beff-4f3d-adac-6ef33e655161"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ec8147-1504-4cf5-8454-7cd1a2e3fcc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b41891f5-625f-467b-a86a-a27526f83dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4a082b0-760f-47b9-81f3-9dc7892f53ca",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca23335-5bd2-4b48-9df9-ecbe30efa04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4105a2bb-575d-412b-8213-e0bcb5491910"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97c7e279-4fd0-4c9e-a9cf-1fbcd4650f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "270785a3-79a7-4f91-bd21-248d1b676874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8b6ffa2-0f47-4e95-ac10-383f6be5612b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2370977-627e-406e-9647-f251f5aae9b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a4b9a9-4a96-46e0-8249-12cecddba05b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c519051a-adf4-4c9e-af49-52278db9f8fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "639a8a9a-494b-4fe5-9c63-1777ed99941e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d249606-c3d8-465d-91fe-12512e122576",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75a421cc-e32b-424e-8af3-85e49063ccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddb50ea5-24fe-4341-a4a1-b9ba6b8a2214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c430e2e-ba27-4ffd-949e-636005f9d406",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "043fe0bb-7694-439b-9dbe-a23be99061e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9919577f-cdf5-42c1-ac34-110c055e6d19",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0ff861f-331e-4a92-8eed-080cd319162b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7120cd89-4cae-4e50-b545-5eefadd88a60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697b02bc-fa82-4024-8163-881d2a662645",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1605a14-6e76-4230-85f7-c80267b3a778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04462319-31d2-43e4-8844-ba8566eaac10",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc502391-6fab-484c-a813-15051a9a9369",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eef5e2-b6bc-4e2a-82eb-0dced3049843"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd901d2b-3719-466c-b2a1-08794e9298eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "adf070f5-291b-4f56-b1f0-d99eee3bb3d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e517d91-5b8e-4e9c-bb70-137d6786f216",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c198bef3-e3bd-4dcd-ac66-d94c109b7660",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b5724f-a0d2-4bb5-89dd-58e4f069aecd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90de174e-4051-4412-b695-ce4a01e0e82b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bd17f8c-a141-4cbe-a424-7ab98a8a5dbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f64f2e24-be4d-40f6-b587-1deace4ce68b",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "926e777e-aa40-43c0-981d-b89d271815e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82947640-b45a-48dc-a05e-790fcb30d665"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c30c67e-9bbc-4f0c-8894-2d09c834272f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "13ce19e5-9562-4902-93d6-2e2f9b5d7145"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e49fde1d-91ce-4587-a049-e5302304cada",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a022b7a-4a85-4349-a01a-fe2bbc56fbb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa7a7a3e-314e-4a80-933b-f42907cc3921"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbe87cd3-629b-4b00-a818-741692a0451b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d390fa8f-e6b5-41af-a91c-6401de76de11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "103538c1-6ecc-4437-b327-e29b7c29555b",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5bc0d28-ab94-4aa0-8487-aaec37b45d0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4057635-2547-444e-96e7-63e83689c927"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd45fa9-2ccd-4318-8c5e-af0e89b19206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32352782-47ec-4fd8-91e8-19c8ee5de296"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d50f11b-a8f6-4411-af83-d420ce3261d2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "889c2821-62f1-4cd9-b0c6-10d1b26e3178",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f849182-5953-4e39-a64e-f38aa7a0701a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "611f80dd-0366-4c14-b103-2e7b9c7e5035",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6580b6f6-ea05-4801-8c01-536ae44461c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1a4a199-2dc4-4082-a9c3-9961a76a12f2",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f760fa9c-ecb6-45d8-9668-5bcb8f298d56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96630dfc-0d5a-47b9-b868-107c4cc89f8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc3629d9-6488-4f35-99fc-f2343fbadd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f838eb6c-92ce-4ef2-9884-a597b2f08721"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9a554ac-666a-4791-8fa1-965d43c0afd7",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a412c4b-6ed0-4ed8-9678-7c6eb04a3aa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a69e3d97-727f-4fc7-b276-832c8c448ce2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecd75ca2-440a-4837-964a-5936c0ba21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bece6407-e5ff-4aca-9693-a73c41d13149"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b9c3fe3-de8b-411a-bc84-48adf782971f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b79044d-cc6c-4318-a91b-3c165a44ee88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba9bd48a-26bf-4394-854d-5379d2dc4f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8519b6-5be5-4e34-8254-7341496a029f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2239d237-d9b8-420e-94d5-4995fe469203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "deb8b5b7-f4ac-4afc-b8ed-e95694936b27",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39308a43-49a1-449c-82a5-aafe6d3b88cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c52c90fa-5db0-4d7c-8804-1b7fe8c5da90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd1a64f-2a99-461d-8efd-39ebb9178fa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28846a2f-e4a2-4aa3-9dfa-fe4f2e17d269"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef4f9578-d506-4dff-9518-69e632df94a4",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be4e23d-54ef-4c68-9764-de0f8223da42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "813b3f7c-4b4a-45e5-abe3-99f2096364c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "861f1458-ab30-4b67-8581-f8dc9c020912",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e36ace0-b7e1-4e04-8a2b-89c8d473018e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01205902-d7de-49fe-a847-01eb2a33e15c",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd4f0d5-b1fd-43b5-a2b7-e0d082fe3282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f08040cc-9000-4a02-91da-1042ea8dd8a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183eedfa-ca43-458f-9f63-ed664fed8099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e8b7ddcb-0ec2-4c19-bac9-0eb877124573"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb7bd86d-ee8f-407b-a8d7-cfdb44940b2a",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff488d20-f0d0-4502-8064-671e94d4a819",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7936324d-74e5-4524-b973-a5b665110bd5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "133b2cee-ca27-47f9-905a-2078ed09d982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fff51da-bdc0-4749-87b8-c6a4ce503d59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "248f347d-ff3a-4579-bf73-a12fc9fa29b8",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e685e8-0d1a-4208-a96b-51340b1acd3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc2486d1-0675-4da1-9319-492e82978f2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ca1c164-727f-4d4a-b59c-357ce9deb8d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1621048c-8f8a-4bb3-a70c-89ba69a19c17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff284296-5b81-4880-9a0c-5c8e638e6821",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aec416a1-fd4f-42f6-b586-2b56e3324254",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dbde603-9c2a-4c6c-b523-5efa76473284"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed72644d-0fcb-4c82-988d-46e9c7402948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "09ca0e3d-a581-4071-95f3-c81820044b13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8528292-56e4-4b79-ada0-104394dd3ac2",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b152bf70-73ad-4d29-abd6-7c2e72db91cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de12f473-9d08-438d-ba71-c31421a4c603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "058319d2-7792-469a-b090-f482ba04be56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1c9c019-e553-4200-a2de-60cd276d3620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ab95936-1d2e-4d6f-8754-be2e78ace188",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22979675-2943-4511-9e14-a14f0a4555a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfc332c1-1d5b-44ca-9f45-82d01371fdda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ff4a53-3258-4de2-ac5a-0eecee77b0ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "7e281f55-fcd2-4334-bf3d-94db47ce2871"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de6948fa-a4ae-4b69-b6ad-48bb09d345de",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63eb907-3f9d-4151-977c-27bc0186eff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f213449c-b862-4b21-ba4b-9c1711c81270"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a234a1a0-9aef-479e-8051-d8744487e4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c5dcb4b8-743c-4bbd-93c7-b56c08d19128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46a78e38-4671-486f-9c1c-5047a869feaa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68ebc340-99f0-4c45-aed9-87ee547743dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f159cf2-9288-463c-be1d-a53e21f39116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bb3a76f-72dd-4c6f-b1ae-0af97e9f0d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0a21ff32-932d-4c15-b334-ec08f9def3f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0eaf595c-b5f3-45da-911c-ae172f64f3cc",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12e76d77-6b6d-4236-a477-336a802bc1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1edfe225-de66-4480-a830-cc31392b4899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adb31f61-9c21-43e7-9da4-d6f77e43a329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "32aebf55-97e4-4030-9bb0-5549c94a2a64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b625efc-009f-4aae-8e3b-1257e41897cc",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "200e0013-9a5f-4aa3-ad38-7c776d4c832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "495d5c04-e6ff-42b3-a4eb-8cc8984dc9da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55567396-c412-491b-a023-cadcfff090e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "853d2647-85cb-4c8f-9057-6ef086dfe26c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae3088e2-ffab-48be-86ff-e883bb01cd35",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "beba89aa-7312-4d2d-b177-c79b707bb59e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "02528d2f-ccbc-486c-84f6-f16ddfd029c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5196ef3-2efe-476e-8018-40361c7eb486",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "acf1d900-12cb-4c3d-89de-edcbf7a56326"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "b1575321-0094-4a5f-b4fc-281dc65c2030",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e4e39815-94af-4371-883c-0c9b66a38450",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae8c950-37cf-4b88-b2b6-9d654230c90f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b9f0f172-1196-4908-b146-3229d1fdcd08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb528f8c-14e9-43aa-ada1-6e9ccc3af0e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c095aa38-ceba-4bc7-b2c0-77474636afea"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4cc459c1-7513-4c32-a1a8-24013bb8e2ff",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8d957c13-315f-4916-95de-5248014dbdbd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "354d6d21-b16f-4bb1-96d2-122d23ad70a3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6a34d9f4-0896-4a6f-b20a-bff407a7bef0"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "aee78ebc-22a8-443b-8034-961ba06cae3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "73d3d04e-e841-430a-a58f-1f0e96679596"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "4515d9c4-f35f-4ead-b99d-00cd19a8e773",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ea2106bb-f22e-4e93-a65d-1467e6214949"
                }
              }
            ]
          },
          {
            "id": "13b623fa-7892-468b-b003-0929715f4630",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b6bb085-cb2c-4e5c-bdc7-b3066fec57e4",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8396a8a2-de53-408f-9c46-fd40d641e9af",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0505b00-c355-4f54-bbe4-b1c4cb20cf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "0d466b0f-b32a-48c1-8783-c3b5bc6d3336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0fd263f-cc0b-497c-977f-b325dd936088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "116e1d3d-9c17-4aeb-8fb9-745126dffd54"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "8ed7bcdd-fd45-49bf-ab16-5872debfa54b",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29cca6f9-725d-468b-a00c-5fbc52df3ca9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "aab54dbe-c802-4653-9ceb-6ad7d14ef33e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1db6399c-7272-4e27-981a-b2b731adfd0b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b75f99ef-461d-42fe-ac98-7afaccc21a53"
                    }
                  }
                ]
              },
              {
                "id": "25f229a7-3f13-48aa-91c2-818b374abc28",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3ebedd9b-1fe2-49ae-9d6a-e9257702cc3d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cc33caf1-dccf-4c29-adb1-f0a4f0ea8147"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "191b7ce7-fe5e-4d81-9582-3adfe9300889",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "fc6d628f-1b92-4ef6-a4a3-ac3fc1065be7"
                    }
                  }
                ]
              },
              {
                "id": "7c8f26d1-14d6-41de-8306-bcac1c175e5f",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2e14b58a-5d27-4489-b9e1-1024886afabe",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "870a4b9b-1df2-4881-b8d6-ce6697eb7baa"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "13f2157b-a76d-41dc-ad4d-60f69f5fd627",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "8c46bbf1-22ce-4cca-9e1e-0a773c45d03d"
                    }
                  }
                ]
              },
              {
                "id": "09a0fbb3-60e6-4ebd-92fa-9f5743ad26b4",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1f3117c9-6ffe-41cd-8a66-55535d6a534a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "53d0cfb4-dd7c-46ab-af47-0113f33ee3c9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdffcaa8-caf9-47cb-8145-ab109ec7eb3f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "1d1ae50b-c53a-4e1f-aeda-ed2b160850e3"
                    }
                  }
                ]
              },
              {
                "id": "5da68a41-8016-4c48-b0de-87c9bbe02bc3",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e7bf9be-a7bb-439c-a243-65343aa0276c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "296d2a97-4e11-4627-8785-bff692b6bac1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "364bd7c1-1f2d-440d-8ccf-a8b8ea9eacc4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "bd71c6a9-4ae1-4cbd-8f18-c021619a6b09"
                    }
                  }
                ]
              },
              {
                "id": "e303d983-7a93-4852-88a5-1d086902ee7c",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a93b754-3753-491c-915a-825916c8568d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "fbc870b6-dd54-40ac-9664-e7035885b37d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5d08911b-388f-48a8-9dc1-4b23f992a784",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2035aef9-4254-4290-9f8b-4d3b09854bda"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fc1e256c-5d78-498d-9850-738dc343975d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e3f12316-be33-40e4-b09f-5c3879e90c6f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3060b9eb-6575-4a85-a69d-9a003c545124",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "60923bf9-3975-4cd8-96ee-0721ebe50699"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "339c24b2-d17a-45d8-8b15-720fb5a37c67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "ac5c3ae6-6042-4543-ac10-ccd44948c996"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1181b841-c6cf-4d64-b603-045cde592b50",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "31f30648-78ea-44c5-842a-4ff1d66ec0c9"
            }
          }
        ]
      },
      {
        "id": "451ce9a8-730f-459c-b798-b49e0a3b524f",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "808792ef-e35a-4689-a1c6-0ab7733d9a42",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e54cbda-8f8f-437e-af6c-4bfe9ce72aee",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7012342a-16a8-4e51-a9c4-38319db7c744",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eda6e09-a73e-40b1-824c-1bc47c4171df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4479a774-2542-46f4-9d6a-1802439ff569"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45bca600-a5db-404f-9814-b9e30bdacda7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "9614f456-22cd-47d2-b61b-56540ed480f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6530906-9b43-4314-997a-926d49e0a8f0",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b743935-2c15-4f21-a0bc-993571de2cff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22dcb8f1-01df-4807-b536-5250d31a081a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d054b93-277d-4d6a-b452-819ca34ae87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef3e349b-6c19-4565-a77b-9eb438d94ba1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0712e96a-3a82-4034-8731-65a145b24817",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1d3b4f0-67ee-410c-a454-de91279d4537",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d04ccfd-bf24-4a40-adac-3bc3db3c7dcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fcb25bd-4224-4972-a8c1-ab9093012edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "db1c094a-698f-407b-be38-6b7a71a74b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87776019-fbc0-4398-aae8-b0fb790c7c8a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec9ed203-37ea-4c3a-907f-8c9c8f22bb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39c32bbe-ecef-4172-af70-e8a79d0eb496"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e986edd-a504-47e7-8992-f282a1a7d5d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9cd61b4-cb99-4f2b-b62c-d6730bfc75ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a167066-a6b7-4f87-b477-dea31c488b28",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26444ed7-de45-4ae8-a75f-8deedc8e555b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2527b122-96bc-4037-82f1-a99d3ed14072"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a532e55a-bb8f-4c10-a64b-c147daf6d05a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f64abda-2407-4c6b-b085-295a3b721ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91efb27a-85ce-4960-954f-6612a0c51e77",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "807c69d2-abc9-46d0-a4d5-090a8b9facee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "939f5607-f24e-4802-bc94-4f30d438c559"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d89395e-6459-4106-b6fb-b7a4da44a637",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7351501d-cf74-4017-a138-c535f0cd415a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "393be25c-9f7c-4b74-9ef0-8e4250588e1a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9956a705-6a67-4cb5-86fe-36ec74b82f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cd94da57-4792-4129-b291-8617a63c31c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f58871c8-ba59-409e-b31d-0a3012100f4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eaf1cf7-1aec-4467-8fec-377a2e1fa743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b793fa58-e456-48f1-b493-d182e9d2c0fa",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7cdca74-f7f5-41d6-a5f7-9f0712f7252b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc666649-685e-4877-b32e-62244431fe01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd41be84-6e22-4c8c-bfde-5d2071843f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d693955-72c9-493d-a41d-263d42a05219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49857514-1af2-4f4c-9632-a92671d892a7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60ad262e-5695-4ebd-8fec-cfb205de354f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3082f0a-7a2a-4268-9523-fcae45fcdafe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96ed5478-7e59-442a-9eb2-a11f1e8329cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "4fb709f7-6e64-4ab8-8c87-46140a2ce090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1fc7246-9284-4333-a521-ced4a15be05e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e13aac9-e7fe-4097-8c55-bf60409bad35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "346bb890-4c4f-4a56-b3ad-5366dd89d855"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8e7e52-a6a4-42e6-a946-b6c0d9926338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "10ec5971-9467-4aa4-8556-228dc572283a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "085110e2-2f6c-45bd-8672-4b8965a0b8d9",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00ea0db3-d3b4-4fae-8b27-138c71af2673",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e96bddb1-6939-422b-86cb-bbded7d5329e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a9ff9d-2859-4fd5-b077-f16d5202e3ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e622ad07-dc8c-44a7-b602-9091cfd6ee4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bef5f12d-7b06-435c-aa43-99e35342fff4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b873d3-19ab-4fed-a4c1-7c6bf876d857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c15819cf-8fa9-40ae-889c-d40ef24f4865"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68f0ff06-6c25-428c-a1c8-ce80287251bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "03da9973-0f7c-44a3-9ccc-02ebeb68285e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b7e7d2-3b18-4cbd-b34f-4212d9b70b7d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a79b85f0-e408-4843-8b44-b3f27467ad9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e4f9017-aaf4-426c-905e-f1b2343d4f96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5008157-b260-42e2-85a5-237ab74b7355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "08751474-d7b4-4a5e-913f-f097c4990f50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37f4ecf4-d0bc-423a-8ae3-7354c33dfb1c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa724f88-c4f3-4dd3-9281-5b61c430fb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "886bc9f8-a788-4510-bf1e-5062b8616b41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c50da8-ef1d-4bde-a5e4-c0222dde4d40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4bc3ca4-2ec0-4486-8f0e-0f220df40b09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb0219e7-5094-4957-9532-05eed4ed0166",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2b04a47-e6ff-4cb0-8b4a-8926cf5563ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af518932-3492-4d1f-a087-48daa10f2647"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6427e9af-b460-44ca-bf3b-0c00604e9adb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "96b64fe5-80de-4ae1-8072-d5a7e86b10c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec3cbe0f-f21f-452b-9639-cc314ac38ed1",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba2b54a2-3f31-44ba-a907-ecccf330221d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3dbc677-875f-4365-a2bb-d63bca1b9abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ffaf7f2-d39b-4a15-9740-1a485d40fbfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6aee565-414b-432f-93f9-d5483fdc452c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c615a9-0cfe-4006-8fd7-58dde54a15f7",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac92df0-794e-4080-802e-58a21c9136ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c16602-48c1-414e-87c9-ef79a2b99602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09b22538-473f-4eb7-8644-5cfb762627a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8f12d45e-61ae-47ed-846b-d58b026461a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "effd894b-2368-4bec-b6e7-6d1bd47932ad",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a702cbd8-8571-4b07-a7e4-69dafe5f0108",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac5f75cb-19b8-41e6-9485-3bfbff342155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ffea8ac-13ce-4df0-bc81-be16c6a98851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3f60003-701b-4760-81ba-9bc7161317e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1311684-6ee6-48b9-8cee-0edce5d9970b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2edfae80-3a08-40da-80cc-aac5fd2f4eab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c63c0579-dbd1-4fc3-b5e5-1da613d8b926"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8748a6f5-0a88-4f65-88d5-2b3488567cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "51305372-4100-4487-9769-e9e1b29342b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7769d65e-b439-4e53-98ab-da434dcdb096",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cc0e52a-136b-48cf-8b26-90831e1dd070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e5a174c-b6fe-4cde-b101-3f7c8b48ae77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f79eb5-6f33-4325-8aa4-c97e003bcc3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b1b6cdbf-d18a-4c53-8aa3-6caed3cf14e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff34df00-0b4f-4c4e-bcc3-66876e9f36be",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20a9c205-b774-45ec-9d69-999292344957",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f15036cc-fb52-4219-a25b-c78f2c19a0a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "118fb3ae-5fa8-425f-a431-558df7d15bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1ca9ac-86dc-467b-9987-baded17ed44b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f7f052-7c74-4e85-9546-d6f20f2c4a37",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffc4c3a7-135d-4f83-ad99-1bf0a1afd85c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2779afcd-2831-42f4-b135-83f70a5c5fde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7114a09c-2c6e-494f-b2ba-93457686322d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7e7c42f-fa60-4dfa-9a12-a81a69ba14aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "089c9ab0-2314-40eb-bb1a-2ca23a3fc1d7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e53972b-ab82-4d40-8b98-fcfddc24af95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "038a194f-0def-4935-9ab5-dd19d995bfd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2e518cb-a6a4-4c49-8406-ef2a402476ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab9dd45-dbb8-454c-9ba3-bec07eaa07c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "959a60f5-7358-4cf5-8b3f-3831618bee51",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63951adf-7fa6-4094-baf2-70ca90a3c4e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be1cd9f-8e10-4169-b1bf-87e63cb7141e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2212549-5969-47d3-9188-216fcee0e342",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e8dc3fe4-886b-4f74-a614-5b82a5bb2ad4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3f889a3-07bc-42e3-8adc-7ed770e7f8cc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff28584c-20ff-4287-99b6-4ababb791fd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a90134-ef87-43f3-abf0-bb18b76c981f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6387473-2fd8-4669-a1b8-4ca5bd7c6b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3feca8c-f131-4c1b-b697-36daa9455460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "373647e3-28ff-420e-971c-fcd617bfbe45",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7273c31c-3d76-46d3-90cf-7774a53ebca3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dec7102-afeb-485c-a47e-cbfc5e2ba6d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d564a705-8a77-4d79-9538-c1d2eeba3b2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1710b353-02ae-4825-8656-b8886fd145de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4283db9f-55bd-4a86-8f40-b098440d3e2d",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0c8084-e3b2-4842-9de7-4f16ea349e97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0b1d320-1abc-4650-86a5-648015876c0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb30f3d3-c048-416c-8f6a-353fc61fb212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe6e0514-daa5-4ed7-a3ac-5b6c0b876e5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bcec01-0111-4a82-a562-192aca9aefbf",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b294c25-6d48-4be8-a27a-34f64acd5a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bff439bb-da59-4892-8ad0-06ea001b50f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fc047fb-d788-4abb-ad25-8a095ac27407",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7ac7888-2c67-4dcf-9f1d-2d5cbb12b1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc357af5-b5ac-499f-b0de-152cee251a79",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c9848b-a7db-43d8-877a-8e777f4dc62b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83e1c723-0105-4976-967c-9306ed963f6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02b092aa-6512-4832-ba7d-e9b410583440",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e07f4352-9508-45c5-be0c-6a730cc131f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2154f97-0062-49b0-9732-20c1a2aeb82e",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c29df9-0a5f-4c3f-ae4b-dd261c45c8a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720d0887-404c-4a1c-a65c-0f02f1e310b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5c9320b-0a73-4c23-abfb-80182effae77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0ff993-79eb-4769-889a-61bb0ba4ad40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7bbfc6f-6f35-46ed-aea5-035e37d76630",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "154e8304-d5a7-4870-b64d-24c689b49b9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39b0d42a-1579-4492-8ea5-51f8e649f929"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c77115-3d5c-4e20-9501-016e379bdbd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9d092d2-f45b-43de-8b1c-90559d8bd408"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77551af2-e429-44c5-8173-6b43333be496",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a694d7cf-630c-4881-834a-cd46acef7f31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48592458-f1a7-4eda-9245-49c8d7ef7d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fada6566-3499-4f22-90fa-ecfb09d2d95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac8d6f2b-efeb-4565-9a0e-c3235b802fab"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d5985e86-d0d1-4aa8-bc38-cae91f5a1dcf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "25dc32f7-82b3-4a59-995e-7699d9cd83ca",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3655d37c-ee86-4952-88a3-05870dbce1d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a26a5863-14b5-43eb-aedd-9eda0e9838ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a8be32-172d-46ab-868e-82de541e74fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b0cefc6e-4463-41cc-a286-b76db6d8c26b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79237cc5-8830-4f5b-8896-efdeb9cfed38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f0a70171-324d-4896-a4f9-734197890c7e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "50b0135e-4794-4b64-b372-7dfc5a88bbf0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c7b4106a-f910-4694-bf96-3bce5df61978"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d7bf24be-7068-4dda-9764-173c9c94bacc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d1e3f161-c62e-420f-a52c-4fc415d511eb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "51cd4b5d-358a-4a57-af15-e54044ca3f0d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f5c0e2d3-274c-4df2-be83-ecf4a0c97acb"
            }
          }
        ]
      },
      {
        "id": "77b4b75c-25ae-487c-847b-f2e26d3eee8b",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "6d625369-fa52-40ee-869b-b1633f0013ce",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d84e8adc-1fd6-43d8-9820-81eb4bc40559",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c776e279-457a-45c5-848d-e9d260244535",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18422c8f-d781-4946-94df-3b9975730150",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26e0f057-2da1-4f26-b80c-feb5ba90a2e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd0e147f-ab5a-484a-ae40-1d9b1cd2c734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "09fd8f36-4fad-4cf8-ba48-9c61bce16b96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8011053-9efb-47de-ba15-dedb5e953339",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393dec1e-3ff9-437f-ad13-6da4f29367df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "acc32b95-8899-437a-a4ca-f7a0cb4d5f17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc81bb8-3ec5-4fce-8485-b898ed6f34c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec2621f-012f-47f2-9325-ff746606a474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc22e73d-73ea-45d7-9325-1e17bb7d8060",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0a6865-7470-4222-8175-d9f06071b017",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "502c9d6b-3309-4d32-a493-5ecc3b1efccc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c40f59-9349-432b-8fbc-31dc50ce76cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bfd5d5ad-420c-4afc-9ce1-d7930efc2203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c7acf2f-aeb0-4d6b-9537-6100d2c10e64",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "400a5342-63d8-4f47-9fd8-4d63ab307297",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3e61d9e-5ece-4091-8296-ade702d95f46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40a3198e-c38d-4a61-8f0f-0afbcf28ffc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af8fdd12-b0a0-43d9-a8e7-2f3b8c5cd897"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03661082-8f40-4c05-8312-19133230504b",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dbaa53c-9165-43b4-84a0-ba5dbfb89b82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e4a34fc-04cc-4207-9047-4a5e81540224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "675dcdf0-fe0c-48a0-82ab-0c9c64f9fd27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3ec30d83-1f2f-4b8a-832b-3bfb4ed494c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6d93044-2068-4323-88ee-3c3b32081228",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20804da4-19c9-4f20-b393-4cad6625f487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "630fcfae-a5e8-4f8f-a159-df9bdf5b69b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d133700-7810-44bd-b718-bc198dc96ba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40573c42-38e6-4ba4-be14-485d0fea70bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21c7f65e-64ff-46e6-aa4f-265e2f12a4cc",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a358062d-16da-4c9a-98f6-3911e4285274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "588c34e7-a6f6-493c-a07a-935f5cef264d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15b54e93-cf4d-4c1e-8831-7d1ad89ce13e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "f537ce13-c7e8-496d-a221-580bdeb68d7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f13fe8c5-c7c8-4fee-8f7c-e8cd62aaac13",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c4f464-d5d2-4036-b1bd-c30120405f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4e53d7f-4cf3-4e95-9cc7-5335c2dbf35b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed95a2f4-0c08-4190-9ff5-1847382218a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "efc61ebb-9d20-4c80-bea4-e897acee6750"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21ce357-4f71-4572-a36d-da8ad7dc6406",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8994364c-3c4a-40ea-846e-c073b5f41331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc2dddf-095b-4065-a7c1-355e418fad7c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82cc8826-1587-4599-aa55-c9a5be7d8bf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7957b50e-0e6a-4aa3-b856-68a098c1ed35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e85159-fc68-4b0a-b493-ab9a2a7a678e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcfaac48-85ef-4b60-9d13-c7099763ff0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "04de8d40-9d3a-40d5-9839-64c3238ab40c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c259293b-d84e-4267-bc4b-edc62c4ed025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "647a7f21-8ea2-4285-a7d5-86c948a97d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68de219-179f-4935-9201-72ada79bad17",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6cb17cd-f38b-405f-94f2-fad6f31878ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53b1e33b-261d-4e22-99bb-e9db07105e23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "276e73fa-4d7e-4693-8214-35d11546da10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "c7a594ee-3074-4767-8f3b-652c5440feae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb478490-2fe1-4403-afa2-b76e74adc749",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cad1109-7413-4c60-a697-3f614f83054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09f0e19a-d922-4f58-a1c7-a6c8be553ff5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "092b0ff5-d8d4-4526-9c09-284ffc6e246f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "78207f99-a505-45a6-a581-f51884820452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53b869a9-86d9-47a4-a848-69d7ad093628",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e0789710-5781-46c3-8659-d0e9b13cd76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8274ec4a-1fae-431b-aee0-2b31ca0d3a8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4068346f-8d9a-4251-92c8-c5e4c5c3071e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cff381ca-2eef-4420-b38b-8e7f004ec6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f83a00-dfd4-4362-a849-223682ea0581",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bbb0cd9-6291-492d-8b22-cf2627f9c7e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee504f83-8149-4f36-a99d-135038a5a334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a2989777-5aea-431d-8ea8-a2b0b51b54a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc1b4a70-0de0-45c2-ad56-47dd7d9a6cfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9736bcd1-5d13-451e-a3e6-f6a6fb45c190",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3ae2872-80ad-493a-a348-45477e169154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3857e12-315b-452e-b0fd-92b9f57b08a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0c2e4d1-081a-48e3-b8a1-1c38b46c324b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "7799e301-618a-4615-ba3b-3e29c0a83d57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "168f7721-1d37-40d5-8687-12315d8fcf8a",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77ee3c1e-f09a-4171-93a3-e7536b9e6089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a96df971-978d-4077-9aaf-f8a92ecf6163"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117b7fde-6643-4c7c-9fe2-24c2c81e512b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8d71951-6c7f-4375-81ad-ff2b6fe95047"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2f74963-5b18-472d-81ce-44d458408444",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822c19a8-86c4-4ae3-8c00-1f0f49427050",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c005c85-de6f-4ca7-8b11-37e9fc3117f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17e756c3-765f-4519-b24b-8d4146761592",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "8414140e-bc1c-460c-b734-539c8f440c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69bf6536-e5c5-4092-9874-36fe1cd406a5",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4df74c7-47a8-4664-9691-89ea5c0f92a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d541da93-831c-4b42-87dc-e6784ca0e24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef658ef5-1f28-4319-9a79-e517b956f944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "69e7c60c-9094-4659-9a13-a0c480ba0a13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4dbfec32-765f-4cf2-b8fa-e1bd3fd80c80",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "574d8caf-1ff7-4aa6-863f-adf6f80d8a69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad7c05ce-e4f8-40db-93a6-6858edece7be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3bf9bb7-41ec-47d8-a195-4bb8d06b76c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d1e63682-52af-49f9-bffd-354783c98fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c31902d-3c43-4fe4-9baf-1193c2af15bd",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "074b989f-b8cf-438c-9577-79dbbe9c5c75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8270529c-cb38-4759-8d4e-569ac25bdb0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e62cfd9-feb2-494a-b43e-f177d708cbf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a00a3ee1-2873-4cfc-a881-d73bd2567d15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da86b79-e942-4e38-af2a-5cd7c5cbaf94",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b90654b-5751-4349-906c-33c7a9d5cf26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99af286d-518d-45b5-8e66-df00c59c4664"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95b4b30a-f759-47a2-8e4c-7d56cb08b6d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2866da2f-6305-4dac-8560-f77dc20b6872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7707033-4302-4b69-a702-f84f4d893f34",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb00af61-b260-4206-8cac-56f170a06cf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c991d13b-744b-484e-a35d-7b5957270d65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "015af555-dfba-4e24-884e-73c1dd6f4cbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "579d2ad9-6d25-46ee-bfb0-7dab5b2309cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c27c909b-3525-4890-99a0-ae0ebee24458",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bea3961-ade0-4929-b03e-cb49bb7bf979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58f5f403-8672-484e-82e9-05c3f6544cfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59b1b6c0-f901-4778-8e61-3227e2ebd7ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fd5df084-b48c-4026-9c81-ead5d74389be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "147d3e84-1795-4f69-9e0c-1350f9d2b937",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e0590d-a71c-449a-8296-a654a5b55309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26f30542-d7a9-4431-ae30-ac379373629a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "093bbfab-6970-4092-a011-8a3c53d76699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "701dc5fa-e8ea-41d4-ae72-6e1640140ee5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef9920c8-42b3-48b7-aa85-b7c36301535e",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07660282-26f7-42f5-82be-71fac5f32558",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3f22a8c-e65a-451e-9d7f-ad06eef20f45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "324e2ed1-d8da-4885-b3b5-ba6ef9e49ec9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "499ef2a5-3696-45a0-b5ba-95cd50d2a825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1028e646-ed5e-4a68-a6aa-233d5e59d236",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "382ca02d-ebd1-47df-8b0d-36c0a8c646f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e60fb14e-bbd4-4b1f-a567-54765a3b8c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6025fd80-d896-4946-8386-b3053b6c75fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "46889207-d1eb-429c-9c69-2384799ec03e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86e4345b-a274-45f4-9598-baf6275176d0",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9143a934-34b9-4920-80f9-f80ef3570a40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a71197b-3033-4f01-9d26-8ff323c74bdb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a02a5041-f7a2-4ac3-a89d-59473a37d909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ebbaa2-4c7d-4121-883c-10f73af76dda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32ac5e3b-85db-4eab-8594-0aeef14c3aec",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "13c45c1b-de2b-488c-bd9f-090558e3ec66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8757893d-2c34-4ba8-bf34-39abc567a3e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "575cea92-9027-452d-9694-90e55d6aa4d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d972783-848d-4004-a03f-4e7c51737de0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6a9ac19-cd8b-4e0e-8c05-f8c77d9d00a9",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d9bf758-cfe2-4089-8ece-3d18f96cae7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c2e8bbb-1c0d-46f4-8aea-3ca6564210c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0245e029-8008-4723-b210-a70768d53d1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a93747bf-4161-4e23-a9cb-9100ad1d8ad5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5786b9ca-cc38-4f5b-8f2c-9a51ac02237d",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc1d5b-8f11-432b-8368-20501e6b5e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44186fa5-1e7c-401d-b618-0f3b55d40504"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4e8bf04-cf49-4dba-aa02-c452f750b04a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60204cfc-1573-4f3a-b144-ec1c4cd51c68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d61227-f863-4576-a2ce-24ee87ec8997",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d8172ae-f19e-4e39-aa40-a3f43bd5fa59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e11619b7-b17d-447d-9092-2c36e688a0dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90c12b10-1e3f-4fcb-907f-0eb583245723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e697b3a-da60-461c-9299-447ca1df1705"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a329f250-17b3-4ed8-a94f-99105782c5c5",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aab75b-7c06-4ae2-9949-c898ca53b09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ec8e007-2f4a-4102-8825-c4daba6b59b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8840a001-1f6f-42f4-9d47-cde8880f23a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2a802c51-d001-4af6-988f-5cc92dacafa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17d92bef-4f06-41a0-b6e8-50e3afdd1780",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b6370b1-a24d-4a50-80f5-b8ce53a04808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fae1ff5-538a-42fd-bae7-e274091906f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba5744bf-fd39-47a1-894e-de49ff605fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d86fe0d8-19d2-45f7-93cc-5051dad9855d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7269838a-691f-4841-9dc4-1ede02659904",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "608b856c-3bad-4080-a94b-6d1b9f2b0280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ddc3464a-6e14-442c-8423-634c77528934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a80eb8-93f3-4d07-8274-b4e24654e16c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "648735c2-bd81-4bd8-80b3-8f832d3e78a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae287dae-6ee3-483b-a5b6-7a0c432fa9b1",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ec1e3cd-b7b4-4bce-8e87-2a24aa926a87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e60632-47a1-47da-9c02-2a7ee26b3291"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b75bfc6-7a15-44c6-9d0d-679585388eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae3ab545-3bb1-40a9-a82c-85326dfa27d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66c8f564-6434-47b5-a5f9-57f96950faf4",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "29ad117a-3ade-4252-bb0b-9f66f7638745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6d3fb68-3358-4833-9c55-f643f560f487"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdebf295-de68-48b8-aae8-7662cefe923b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "979fcf51-534a-46a0-905c-5bdef5668c01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e451531-4b61-4e93-8bfd-965f2493ec19",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "524100f1-fb49-40e2-a5fe-56d03ce12fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0900f816-9b30-4107-ae64-6b1e7b057413"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d2a9ef7-7f97-4e97-83f4-23f2f492ad9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9343c574-2bb5-42de-91d5-7fa25d51f65f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "0e3494b6-9778-43d6-b5b2-c892590d8f57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1bbb9477-8b20-46f8-898f-a1202b79f13c",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f014c8b-c42e-4184-9367-a775644928a4",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "1cc12932-ad7a-462b-9ae6-9c6a24c461cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7540026d-9f35-4b27-82db-a28c93bf8414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83a26ee3-c995-49c3-b803-cb81db14052f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da01eb8c-550a-4d18-a13c-8129279603c6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8062c4bc-a4cc-43cc-aaf6-5a2e4d4436b8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c652fc6-ccd2-4d20-8575-bcfbdda0c0be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def9ba6a-b95f-4093-bafe-c065d134d32e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89351504-4426-42ae-977b-7edc8380c79f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "2db08655-6b05-46e7-ad78-31201ba36fb8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0ddca1ad-ad5e-42a0-8292-b810c454b74e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c852616b-7ee6-468d-81cb-cf81c4e20ed5"
            }
          }
        ]
      },
      {
        "id": "680e6a5e-4b90-4c0b-bfe8-ca1c6d9a6de2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "404fde5e-097c-4cb2-b6dc-720ed9882a71",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2066888d-7473-4668-92a5-c69cf0b613fb",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f92e5868-2466-4c3c-a0cb-39ebcfce20db",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ed1358-8a7d-47b0-ac93-cbf5751cbd9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09380fc4-dab7-4984-b327-8aa6db7afba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b42fe103-9b61-4a7f-b09f-50af23193bd4",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1870b581-a9ef-4a33-a1c3-2229b9009da3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff61fc24-27f5-488b-979e-f504088bdeec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1cc9c8-bf2b-4b7d-8983-9da591773837",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "629bb221-2ada-4596-a0f6-bf1c2be49632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415c487d-2a23-4898-bfbf-3f817463f09d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a76802cd-537a-4e4f-b2ba-bb8d21936419",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84c83793-2b8a-44da-a267-21836e455c17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71629ddd-43dc-40ac-ad70-043fbabd79e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ece19f9d-54a8-4e48-a39a-48044cba58c6",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df81f29c-5a38-4298-98ed-18999069d071",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96e5cc5e-30ea-4f1a-a982-040705ae6377"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc76aa11-8fe0-4c93-abab-060bb25f081a",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "298967fa-27f7-45c6-a362-b2fa4b44f540",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ebf7336-2715-4d2d-99c0-9e5e02bf8624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "824afbd9-b730-40e0-bc14-317f1ddbeed5",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20816da4-7d99-4e7c-95a6-17e452b6aeb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba48951f-4dd6-4ab3-8ec4-526a8d2944ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f5a9a91-419e-4e8d-8e8e-9a62ce2ec98b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec83b585-796a-4753-8235-21ec75db3a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "554fa21c-7d23-436e-9195-3d926d9a3a50",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "972fcbca-5e95-4722-8486-e7b3b696437e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3468b653-8b91-4cb4-977b-ceaa7c21b336"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce6946ec-0172-444e-b5d2-c4da37d8c62e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6414e237-6f3d-470c-97a3-7e38e61fdbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ebbe3c4-5e4b-442a-95db-488d4f48df2b",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "586e1a9f-0f2f-4552-a706-70b6bdcd453e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c62a03b2-af44-413a-92a2-15654d823f61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ac78eb-1b6d-42c9-97e1-378624caf7ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ac2fe62-74c5-42ef-9393-ae775d7b5c7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da19b9f7-597e-4679-86e3-da05ed8b05a3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d8c6e4d-8ef6-4de1-a0a2-1e966f375a08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0d2b007f-44ba-46c4-af08-efe34190e696"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bc1ed7f-2e43-45bb-9fd2-84ef700d77a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5443f4c-478b-4c9e-a001-1841b9d85bc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6ec95a3-3e10-4dc9-a820-87325fb8254f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc39f6b6-16e0-4a33-92b2-799cbb9c507a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ae63d4e-88cb-4b6d-bf32-89f585261e6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19b3ffbb-5784-4520-bfbe-5f8512b1db34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fa96871-cb10-4eb7-a93b-0b2b01488862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb1fc224-c4d2-404e-893a-8239ae884d62",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5bd7379-d452-474f-9585-43113327cdb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b53574c-e5e8-4594-b495-6583c3b8a778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f8833e-9307-486a-b4d3-88127376f649",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff140db5-ebe4-47b0-be9b-9fa1624f3492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d26883-5d49-4d61-9abb-fb1e657183a9",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f7ebebb-d378-4fe3-bf5b-bfed5c6167e3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2900f924-b6d1-42e5-b13b-897b33844284"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c557117-52a9-4dc3-a149-8d0040f6ac69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3edd695-c056-4268-b98b-7c5d84fd03fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6982423-b027-4f47-97aa-a8eb65dcbdc3",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34356951-5dba-438f-914f-4e72db0f8ef5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dfb5b701-67b2-4626-a999-bfb8029210f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78d650e5-5e8d-48a3-abc4-dd92486383e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b40157f-5633-4653-9cce-41d5c18905c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00cfb9d1-22b0-42f7-8547-d953cf970250",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9f06fe4-0f68-4424-aaba-1197e96973b6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3c27512-38ff-43b6-92a4-84c123a7e2fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63de09da-a1a1-4645-a3ae-b19ac5f4534f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be82c05d-2944-4762-91d7-069cd7f0ac49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68cd003e-4b4e-442c-b26f-fbf126bc2074",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "281183f2-0ee9-42c2-b4d4-3a512bf85164",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bad010c9-b426-4d2d-8feb-8098783c834f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8df3b69a-3b21-45ef-b653-95d899c82e9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93b2b9f7-0a9f-4f2c-a760-6620b92b9afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e15979-26f6-4502-bcb0-4304390baae5",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9009a685-0add-4772-8851-0493529a2156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ee6fb8-9f72-4e84-ba60-d30d925dd920"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d19ccb3-983a-470d-9bd8-d06ecc9f927c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1faa9fe0-9e08-4af0-8f47-ffe76f6bc40b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0dc17ec-5d3a-4ac4-ba8f-58474f5bb10d",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f603e90c-cb3b-4e2d-8dc7-28f8c32e01cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7793ad7-cf44-4844-88e0-fa85b8e521e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "374aee87-18fe-4c64-95c8-0c75307d2da9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a17dd68-b3c0-4095-b7ed-2c701407109f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bb50a16-9632-4a07-83ad-9b1d8394821a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05fdf81e-09d0-41c7-a5ca-f44b5b9609fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75faba37-de1a-4f43-ac00-4b8b6d646a98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db49b2c-0212-43e4-86ad-6c591a70b266",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed0d0817-00f2-4959-a762-fe194fe78a30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d775bf-1542-4d5e-b5fc-8ec3b9efd422",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a1e1a7-2160-4212-aede-9febbce9f807",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23373f5f-9b00-48fe-b8db-a100f5e847de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0e34bd-a69f-455b-b1c9-b1918b521c61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fd42b228-f2df-4920-8396-f6ffad6a45d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0146bd5-a3cb-4481-8ccf-d1b0cf08a8b9",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7355bc83-290e-45a9-a488-8f60869caa08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2987ac1b-9106-4239-a6ef-14802480da98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7f2f828-8596-4a0a-ad75-f4bc73ba5868",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f04f6ef-c166-4e04-a2cb-1691d8969f7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc8a294-6c6f-4d48-9a04-8e1966fd1187",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0888085-2418-4e7f-8715-4786249801b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "692c62b4-9db3-41cb-8e83-3e5893d8c346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5d7e0e9-cc39-4032-b618-283477342f1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8c5eed-107b-4464-b24f-760fd76d96b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23020638-aaf8-4a69-bd9e-5822245c88a3",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "904feaa2-bb45-49d9-b995-8f23f670e4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67c93302-1597-4ee3-9eeb-4336c86ff91d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a78ec60-a564-460c-a1b0-23953a85edb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a29e4ee-b247-4b8b-9f0e-f0fb235b3d64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a867940-407e-4332-a312-18df04b567bd",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "582ed6c7-5569-45eb-bce9-22b8217e2a7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c45ced5-a734-47b7-8bfd-7b226e49cd9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eed6f413-f0e9-490c-805c-9bc27b8ec16c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0005c2e9-a06e-4a21-b1a3-9be6a7a0ae03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c37c95b7-5333-4d86-88b0-6cf34e04bc69",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57607aa2-f4fc-47fe-9ec1-9914e5ffa783",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fd894bb4-2c6b-43c7-b7c6-1ec928d5b208"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8846f302-f3fe-41a3-b7a4-84664bfae7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58489db1-5b66-4527-8f7c-5d128cd53297"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2096c2b3-798d-49cf-b7d5-1f9cbc7258bc",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f887448d-57ef-4aec-bb1a-1a78a1f40745",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3898bcb-f681-4f4a-966a-1dbefd0015dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46bec0c5-fb1f-4b7e-8e57-382934f97170",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dffcffb2-abe6-4da0-b0b2-566ff205dd5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75fb3b71-2572-4902-adfd-70365e984510",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22260b70-82c9-4fcf-b8fc-1708ea2d96c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0155c40-6f7e-4d7d-b497-05af10b38f27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "358eab12-9314-4fbc-a399-73c392e23615",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "360ad426-50e3-4245-973a-605a7283f28a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "875fd9ed-8134-4fe7-a9a6-a417a56a169e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20d7b517-2068-42ae-b6e0-94f83c63befa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afefea6e-2aff-4e40-8ddc-a04aa1f107f5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1c9d45a-2f1a-4dac-8132-ee20a681dc05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06fb17e5-ac5c-46aa-b4bc-aa1b820bf407"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e6095f-6c61-4129-ab11-28815c43ea45",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b64f2e8-8704-44fc-a6bb-a0603cb1cb42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7065f0c4-bc9b-42ca-b742-c4d4fc915d0b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26913f82-e6b8-4e3c-b318-d95e0976dda5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "422d3ae7-3169-4934-922f-80443df4c825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8d8e2b3-0319-47c2-97bb-17736174ad97",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ef89830-5975-4fb8-9fba-9dc46f01d142",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b4cf9b0-bcac-4643-9164-0612f9ffddf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70f90286-06dd-4f92-ab22-909be809dfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "002820e5-966b-43e6-8f3c-22f9dd1b79a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c18d84d-89bb-4a04-8e25-b3fb0f85b600",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2805ce44-25be-4578-823b-6dad59fc468a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6c69237-fd60-4280-96ad-c4dba1b07e6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbabca77-207e-48c8-a9a5-f10245c81c99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7936f53-5d4e-4c53-8226-d477c04ec8ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5562b657-5c16-4eb1-9c1f-ba54b13c2d1d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1601c644-83da-4afc-93a8-a30a138b0197",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c5c1bda5-612c-4c6c-9d86-e0057f5abc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "928398a8-0b60-47e9-b7e2-dcdcdb9b877c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d6f3fc-2c9b-4c74-b19e-894b9a232065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f29fa-213c-4afb-a9bb-41631406528c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05c68818-2aca-43d0-a55e-2422cf6b8dae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "49becb96-1906-4d75-814b-94302fef9193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9852a6db-da54-46b8-ad17-12ae2bd9b169",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d789ac9-c251-46bd-ad73-e8faaf395aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0c5f032-1745-46bf-8d50-8f8dae76911c",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610c678b-9fdd-4133-a23e-5e7c2adb61a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74fd063c-0015-4e51-ae66-bd5273cc7c1f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f2941e-a441-4ae7-a8b3-2fb0f26e3a80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a0275ad-6dfa-459c-9940-41b62c990a11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cb70011-a1b0-42f1-a2cf-8cc2dc6a161c",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b382b2bc-7059-48d4-b4d5-769084341188",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e70ca611-d075-461b-a75c-cae729ec57c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70a0ea1-a63f-444b-a7a8-62e28e826d31",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69915440-3758-4895-a1c2-83053080b188"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc2ca05-2486-46ab-aecd-ebed6ec791db",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b589cb53-c85a-4e33-9ebf-370fafcbd1a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa03c37f-1206-49d0-a870-f0a5ea001347"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d527cd02-a10e-41fd-af8c-db4e7c2a60fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5168861-07da-4147-ae07-fbe9c4c1419b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27cd825d-1a5b-45f9-9c2c-6f6ebf183759",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c716c5ec-983a-4856-ad56-7c7542c50465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ab5ffb-a465-4565-9d52-08f4b2f04211"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b5907c9-abe8-4ce8-8888-84ea7836cd67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a54da754-29a4-41da-8396-b424c3087f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a733c9cd-f8e9-408d-9521-b15fb330f907",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cdfe4de-5f7f-4d07-9ec2-504c7a0c6ee9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a07d35aa-6687-418a-b0e7-7612833100b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbae26c-e09f-47bd-bac3-a3ecdadb5484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6af9e2f9-442b-4c39-b217-5c5970f7cbed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "256572f2-4de0-48d7-a7f5-e9583c69e3d5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f14d11-be9c-44ea-a9eb-f7fe0b3444d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c982f50-52a4-4973-a0a1-81e214ce3fa8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1b948e9-83cb-4f1a-bb34-acc75f2e853b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "089068fd-8b26-46e3-9e34-c51135c7f532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b567d01-015c-452e-97ab-41f204506997",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12a72073-6319-4bff-9bf7-085cff0722f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c130a49-c167-42e0-94fc-928e688e399a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ed1499e-a4f3-46bf-9d3d-ffcbccae33b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1c0e883-f579-447b-ad42-5f0b61c62567"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d430135-f409-482e-9b70-51e00221e17f",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "478a2de7-e746-49dc-8021-4662392d099d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "72a466d5-9763-4786-83b5-bcad28cab2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c79ce09f-eefd-49f0-9fdc-13c569d09a3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc996ed-c9d5-452b-a3e7-54689dccafd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24227967-eb50-413e-b1b8-adecf5e63326",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83fbc365-18ec-4f81-8cd9-a34fac7dbe3f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a3e0bcf-bb96-4ecb-9c65-707688a3efdc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c89df7a-c2a4-4cb5-a8ac-ee85e2891a51",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a85709a6-87b8-4bc5-8089-60fe026321e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a97c2952-cae9-401f-b703-900b929a2b87",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2bee17-b4fb-43da-9054-bbb841976f42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4287cd-d65b-4b0e-8d41-70f88aaa292f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "862220f6-ddaf-4c07-8fc5-5925d5bcc9e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c25d146-03c8-4a43-92f7-c7f2b9b31c79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d18609c3-8914-4ab8-bafb-3e339f5953a1",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eecfc93-1c17-4006-b721-2f3b10b5a7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264290f8-cb60-408f-84a1-f70fa21a57d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eedd20de-dc36-4ad9-b549-87fc79e1bd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "858cc030-d4a0-47c9-b669-c43b94b3e561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f9121fe-f625-4e2a-b281-8ad107b282a9",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1fc6a7b-0aa3-4ac6-84dd-caac545c1bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "83b88cd3-a772-4b3a-9170-f6300d148714"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e48fdc3-3e4a-4fd9-a1bb-da763819c74e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbc314a8-58fb-45e1-8d64-9a82514586a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52252f9a-c2cc-4751-abd3-5d42ffcbbcf0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3988630f-cb58-412c-b07a-0fc7a6118ae5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "415eb003-068c-446f-bc55-cb9fa26186f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58bef25e-5592-47ec-b705-f3062eb6cc5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24df43ce-e94d-4310-b446-b8756a13ef75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e84fb5c-d168-4573-b825-ef1181a2b141",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fecb24f-9126-46c8-943f-71cd6f658cd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb45c150-5288-4b9c-ae33-5b2b9542f0ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd36fee-7906-411a-a7d2-40afce2fbd54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adff7224-a938-4ce5-9e5c-942092435412"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2316a7e7-5ab0-42dc-9087-a263109397b6",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ab137c-018f-4cfc-b448-5d55f9541483",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abc4979a-97c5-47a4-a017-590f95e6f155"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed8f1d9f-2de6-4558-8bdb-b39f2960987e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe1123fd-9ba9-40d2-857c-f969a9bde460"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acbf13a4-620e-4b65-9074-f84597b9560b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "063089da-a901-4e40-b58c-5f86d7010a1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2676e91-74e1-40ae-93e2-28d5963e4c1d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70e8c021-6a91-480c-a3f2-78b22c82b0c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "703cb26d-26a2-48a5-8401-a486fb50a7d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ca87cc4-f4b2-4da0-83b8-47f2e8190d02",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59a562ee-cd21-484d-ad0f-13605c0daa15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0b90dca-cf54-4575-b5ed-370089e7708e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9fc2d6-a56a-47de-b2c7-c3190966b818",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82d35dd2-cc2b-4303-a5fe-c5531f66a2db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d71ba-5726-4439-98bf-3e31eb7762f4",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04b31e48-a102-465e-8985-0b4bfc240e58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6cf5c2-709e-43c7-b124-b509e8775467"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89df58a2-2aa9-4733-9229-d9e2e99f4f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cc6dc1a-20af-45bd-981c-68fa0d79b805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191a5e88-5dec-411c-a96b-4f236008551e",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6765420e-9392-4471-907d-6bcd908e250c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21021f92-0262-44e4-b35c-7ecdcccadd01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50ee70af-a6fa-492b-bb4c-61ce6b3bed1b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7986e65-d54b-4767-8d8e-499aa2e5666d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0622e440-637b-4b38-b070-6012d7c31829",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deda1c30-9b5c-46fa-89a0-8b66d43f260a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33c8a4b8-8b9c-4e27-9375-c1501c131089"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b81ef590-fd85-4fcb-80c7-6ef7a93db2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f06618ca-f341-488e-921b-c80fab9e3daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "669ed97e-c961-49e1-9558-5a567e3be7e9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8daf429-c36e-436b-9877-292ba0bca44a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74851772-e63b-44f1-b6ae-4e2741985df5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ff46b22-7cad-4b5f-a24d-ebc525e81c73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c06e37fd-343a-4a24-b175-fa5fc32aef91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89e7cb71-0bb6-44ef-a9e2-95ca7297e636",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72afcd27-1f1c-42bc-a12e-ede35bb57b42",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e808c8dc-a68f-45ca-b307-a757f157a489"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2669481e-5afa-437f-b76b-e79ae8aa56b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36ace72d-9e72-466e-9635-f57dadb47b4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd0c8fd9-bfd7-4139-85bc-b6ebb8478b9f",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07661ee3-9ca4-454d-b186-74ee72276cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d44e2932-e2c4-44c8-8a3f-9ade72cf54f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c8b9836-2b38-4373-a08b-f6311f56fbd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c95f3791-1241-41f4-b77b-925f4c015073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac3ac64-7d3b-4ca6-a28b-e7e694c86d64",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2080cadc-9df9-4b5e-906d-f3b06ba9a4e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8175367d-96d0-445d-9d79-363a1a484d8f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f1641d-5f43-4e79-be03-02352451556b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3bb7258-2af7-43f8-88d6-1bcec8fc9e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc2086c-44f2-4c79-91f3-7d468eb10e8e",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ac67b1-d2df-45f4-b303-4f6e85bfe329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a66497-a44d-4046-9577-de6dd5885aa9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a4ea24-b714-4d40-ae80-8fa096741e91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0e19f50-580e-4c7a-bc40-39017ac59d84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5376214-cf74-4ce3-b64b-2424d2926246",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40dcba0d-de52-4eb7-87ba-2a2c1289daee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bad222a-a192-4b4d-869a-6a60879b63af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "38389083-1591-4596-8b01-fc18e390b48a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ac054e7-29c9-4708-9d5e-aa217c4debdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51753039-5bea-4998-b844-5efc45bcdaf6",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca57af4-59b5-4ee2-a87a-f3148b059cd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c1a31a4-c917-427d-8e43-591287ec82d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b379484d-74fe-421f-8217-095581fc13d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "147d9f8c-5597-47d7-9f93-270654cf096d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9569d59a-7f3a-4121-b357-6a34bffb6f4e",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ddf33cd-52c1-4c88-8972-e7f3aad285f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56202a2b-a8ec-4cda-93a6-5d9e597ba2c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c1ce359-3cb0-4133-8d80-ba70aeefe8aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b4f29ff-51f4-4225-bfdd-a9407f899d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237fcfbe-f8d8-42f9-91f3-0b462027fcec",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d674a97b-cf76-4fa5-ae19-7d32560984f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e72efcd5-e1f2-4662-927a-679d61f7d914"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f882e078-6ef0-4801-9442-60e132a7385b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3524e476-4601-47e2-b735-df8f99d54d48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c94e608-9901-4aed-85c6-c4e63e6ff10f",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f676a52-565a-449f-871e-822f64d4a4c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5c346bb1-a733-49cf-abd5-26bfba1dd015"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4584bb0a-7ac3-4105-876f-f4dfa9447d78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fae2d14-5933-4d83-a3d9-d911d0558138"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ddfc4ff-c48f-4661-a8f6-a76f5ec7f579",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1b611b-e967-4b71-a6bb-241b71cec41f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "075783ed-d0af-44e2-b1c3-32a7a394af21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa638117-bc8e-4b82-a105-47fec0be8b47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9cc8e3b-d532-4bef-b056-83506987fcf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7632020-8cb6-4818-8000-7d2a97406a59",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42d13957-ae4c-4cd2-ade2-eb020ada10b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef38018c-0e9c-4e7e-841b-4e7b1a4080bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd5056f6-560c-47a2-9346-5f74ff7b7aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6290da4c-9b3c-4dc8-903b-3ae8a01f7ddf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae81dca8-68ae-4308-9916-0ba63ec81994",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1526a90b-42b5-47f8-866d-23b52a8865ff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "acc10480-e9aa-4344-8711-77a58d3a4068"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec3c6f6-677d-4c9b-a08f-e4ba93c5dd1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be24b7f9-53dc-4ee3-966e-74c7afa37c4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a3a08f-324f-48ad-ad94-aaac2eae11cd",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c56bfd0-9f06-4654-8f9d-1a29a841f137",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3470cc7-b34d-4e37-a25b-5f6361a23146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7b80a7-35eb-4595-9e9b-f0deae78198d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54f2cd74-b0fb-4212-aa75-671891f0fbf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d070eb2-8b4e-4adc-881c-6487580376cb",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb7683fa-e012-43a9-a52d-25b8a8aeeb11",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bf539a7-cd31-440b-9b55-085c6b81cf9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a180f94e-715b-4a1a-807d-641fd380e4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1954ceb5-158a-4c04-a5e4-5b0a4793618c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c662e00-5cb3-4403-b367-12495e8e14a2",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccf3ca6b-aae1-483b-9b71-1ceaa1eb2ce1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cafbd711-065e-4570-93a3-3eaaff9ae312"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aed017a2-d3d2-4283-85e9-ec42350dee05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "963f8e83-10f2-4a08-be7a-04149c5a17e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0503ebf-b9dc-4f97-b952-99e556615930",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75b00eff-b68f-4a80-a73a-3c39e84f3d1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d1226f0-0bfb-41a8-bff8-b85dff1540e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbd163d-77a8-4fc7-8851-99f031c397bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c857b5d4-b335-4105-b243-f5235fb3e13b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab87571-da31-4d48-945d-dde3e5c26931",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55a3b57f-9c8a-4606-ba33-bd5077fafbee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "83fa4d7c-2e71-4790-84e9-87421b7a0f92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8e5b325-5333-4586-aaa3-03387044e939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a5e1a9b-391d-45d4-9165-ca4d80a9e880"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a5ae102-e8e5-438a-9284-de15cef6b11c",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763d6a15-7bbc-42a9-909d-94a1da82cb63",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1e9c97d-6869-43be-8c4f-d1d6be7f3325"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "82ab18ac-7ed5-49fb-9f52-d97f9e5d694d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c69b3e8-8486-4cf7-ba00-0d1add691d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f661ad1a-a086-4fd6-ab64-18209d3f0f4c",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c332788d-d679-4466-a88e-f6827b55007a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd35deac-97d6-4c16-86c9-b35a8c070953"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fadc6027-e35c-45da-bda4-b6189e0cc75d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a56747f-e661-459b-9627-bf17207b836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2860a466-6d0c-420e-b922-83a9499d002b",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "583c4309-50d3-4fcc-a7e2-663dbbea29af",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55ef72e2-9e8a-4b61-9414-612a6fbf42d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b3bb082-7bf0-400d-87a2-f92753e88262",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58bad077-d8e6-4a02-a006-acd695fdac81"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40966c3-f98b-444c-9c1a-ca9b43b3569e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b274df67-543f-4fca-ba91-0d468855d008",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71f87152-15fc-43b3-b79e-fe3578924839"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05443d31-89ae-4bb0-bd1a-c00d1fb269eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef0edfa6-2e7f-46ae-94cb-8606b8ad4f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78038eb8-1529-43bf-b65c-cbb035e8389f",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce18d066-be9e-4cd2-a578-dd0b0b734069",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5577b4eb-7ca1-495d-afa0-93d3e613003b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1bdfdef-9c80-40c7-8f7f-c7a075868d9b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "985c392a-fba1-47af-8983-eed82c652e2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1be408c5-528f-40ec-92c9-ce893995b6cc",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d48f2d3a-9143-4b89-8541-d356fe30ebb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aea9fe21-2c1b-4a94-9d27-5f7f8cd6453d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da86f7bd-9889-48df-9c12-a947bcf407f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e8de965-2546-4697-978b-659799732675"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c467a8-dcde-402a-b43c-417d386b1aa8",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f6f95d8-af7e-4562-af99-6a11acc04004",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78586ec1-72ee-467b-8ae3-7c073488f766"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "369ebdad-3df0-414d-88f2-3217403033d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff0f4042-c1ca-4dd6-b449-23fa19d05a7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "630e63cf-7a9d-4d42-a71a-19cbf0137233",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6680b1de-91d0-457c-a31e-ac1a09c030d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5737b36-d80a-411c-a917-84a25fb7d3d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff6fe5b2-b7d2-4bc2-ad7d-4196bb1be929",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71ad0785-53aa-4dc3-ba6e-1a7aaca4bc19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8e8a24c-82ee-4cef-aa64-b6f610a97a5c",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b487699a-e40e-4332-a25d-8870248b12e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "be4b324a-ce57-4425-9c74-0f1aed0e1ba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9b00f26-c38b-47f2-ac3c-3a7128dd88f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ce8b431-171c-4d86-8bc4-21156ebceae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee31bab-c2e0-4805-b086-eb1449e54a88",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46008426-401d-4752-a743-f018ee945ae4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "175781c3-6d0c-42b8-949b-d69b79746b36"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2d8c55-0530-4d22-ad6f-0b59d6a7ff5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1907559-3e6e-4e1c-9695-1ef61fee9213"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c83a684-9fed-4261-8698-30779bb665cb",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765d497f-cf78-494a-9379-f8f3b6409867",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c7a15109-1c6c-4bf7-897b-8b71bae2d78b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e850e9-f5bb-4031-bfa5-5e7b9d4ae747",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb282806-b50b-4704-9330-d45ab296bae1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a597f0c6-3a8c-463b-a9d2-0b550ad72139",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bb78b72-3bd1-4710-8dce-7c5e68109e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25a457ff-d563-49fe-91d6-59f4b735d35b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62204fe6-d133-4973-9ad3-a2e81196e4b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73fd7b9e-00ae-4269-bed3-935721c27f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c2ddd2-f4c9-47ba-9469-a09b93ba9b21",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5931fba3-9570-47aa-9806-e721a019a2c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7902253d-1b2d-4e69-abc9-d6e52061fec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4180759-a12b-46de-bef8-77116670f56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2252fa72-874c-4c6d-94d8-a85b8fa7683e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e3d4cdd-0037-4711-ab9d-90d90bd99f81",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5eb7f6ce-c65f-4aa6-9915-58ccbd38a753",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95b5bbbb-78ec-45d9-a698-dec56d1a00a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b7c40ef-9d18-4fda-9396-56ba3b429f50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90ea0848-ac83-4e88-9e8d-e789e23a523b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4caa4cc2-8c12-4cfd-af96-80747449535e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e402823e-b278-4336-a422-0eb41bb32041",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "155f1d1c-07be-4ef3-a976-7f959a69fadc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e104463-f998-4dd8-a154-306c359e140c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f610494f-7673-49d8-86e3-36247f98b474"
                        }
                      }
                    ]
                  },
                  {
                    "id": "264c3116-f3bb-455a-8c95-e1bcfbd73670",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f67708b-0f03-4760-89c4-d07e1a77a74b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "98bdf802-51a4-4110-bd6f-508cde4a84f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ff3dc29-40a4-4a43-a7c8-365a4049bc0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a10d749-c074-462a-ac1d-31a35ef38925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9158ae2-9f1c-4ea5-942e-d72b2c382b8d",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e68dc78b-b9a2-4fbb-bb38-8f39bc307715",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "706de766-f2ee-4405-b227-de7345898190"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c062d158-1532-44f1-acb2-6b0323c3b24c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7e9a4c9-42ef-4270-913c-e10066e36e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403f90ba-2ca7-4d86-90eb-e3fd9df27c33",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aac828e6-db57-4213-91e3-92d494d3c91d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcfce488-59f4-49df-9f5b-82688b8e10ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef2d7557-e708-435f-ba62-9ce605b8c359",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "59249fca-d334-4c76-8ccd-aa1e2d9739a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "260502c4-334c-4a2c-b0f7-b26065691874",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bdb333c-00f4-4ee1-ad26-03f0b03f078b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b0b549e9-9178-42fa-9288-c9e97c19edff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "845a6ff6-0f61-4619-bc43-809fdba71028",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "839a96a4-4c25-4e48-bc13-f0e92f33fc2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ac5924e-95b0-4894-bf3b-87c2551163f0",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7dc0960-f583-4be8-9c26-29c0e0326603",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdd9c16f-aa97-4de8-bf1e-6253ca644534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca6c22a3-0f70-4844-973e-92714cdb59eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0dc27889-477a-4a62-81b0-4324b19abc54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "253cedec-c697-4354-a211-5d856e0daf13",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb216b8d-20c6-475b-8446-2e6b7d6838f7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0448853-35b2-44f9-987d-79a19d970dad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1fdf90-8a7e-4161-9f4c-e9895b452383",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63405504-67da-4891-a25e-36dd7ca837df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d4481d1-8e56-4496-977a-5e3d48307100",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e008e68e-c770-49dc-84c7-f17aa77a43e5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4bfe958d-3543-417d-8930-e7147e2e6228"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec4e362d-e060-4408-8394-0d5bfe1cee03",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "162b73b3-4d3a-4184-99bf-f42766ee4022"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b139dd3-fbaf-4495-8bbc-c7e14709d9f3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6bc8fd5-cebc-47e5-98ca-6bfd86302033",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6eff4aa2-93ac-4813-b160-017fcd6587e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8bac8dc3-cc1e-4f1c-b60e-cf2e9ceac27b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ddaa546-14c1-4c1c-9edc-c1a8eba2247e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1d823f3-407f-42e8-b65f-c618fd34f677",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47967a53-80b1-4029-83ef-4c80c07edca5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2324edd1-c5e0-4a48-a39b-0552ef3dc27b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1205a346-7814-48a4-a048-6f8ee26c41c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9e91c77-ac0c-4395-917c-aeac4d631090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33dec3fc-b99c-4dbc-947b-20bf26eaca05",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6745bc7-97e3-4f5e-a69e-00e6854e9153",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "942e60df-09a3-41f0-baf9-883a2adaeb96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b574e507-a0bd-45c7-88f2-9d59e96a0256",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "235d8e6a-966b-4774-adeb-74a749cc54f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32d4f48-2c59-4ebc-825b-aaf2c2c2d6bd",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90633919-e684-4331-b43f-5017fdbdcb8e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f851eb73-6e06-48f0-bdab-934c842d578f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4021731a-7ad9-48cb-b5ba-f1bd68e9c302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ca55ef6-883e-461b-962a-f5ee9871852f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "271c5114-c187-465f-958c-7c041e3476d3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d4d18ee6-b2d8-41ed-aee9-49269907b98e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "fd19a7e0-a9f3-4261-b803-813b90e0ad60",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "92187af0-82dc-4bd0-a7b7-999043995b09"
                    }
                  }
                ]
              },
              {
                "id": "a61f0f0f-b932-46cf-a8b7-05de23ced610",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "09bafba1-b504-4277-891e-1baa6f4bf245",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "558a47da-340b-49f6-bbea-0eca2f836186",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "e73bac31-47fe-4914-817e-ba5188997733"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed52f56e-be09-4a86-b981-9fd87ac25d2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2932df81-3393-4097-9278-2a081a534797"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d4ce365c-fa3e-4315-bb8d-9a8f821822b4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b144b620-967c-4918-8b5d-c58a09468d7a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "51875faf-141a-439d-8364-0dfa2667c96e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "52510cca-3bdb-4300-9f99-8b01f2298769"
                    }
                  }
                ]
              },
              {
                "id": "4d5dba07-5ba8-47ce-8a34-c252d27afbfc",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4494202d-01ff-4398-b5fd-5ab238a72040",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3ca50b6-cedb-4d0b-81ab-7bcdba6c2c58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "55bec1f3-a9fd-4fb3-aae5-aba8eb2f12bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915e3cc4-13a1-4ad2-92e3-eb12171e39d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f83c1ce-4e49-4345-8904-f7cdcf621cd4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "ff28dfde-2d28-4a2c-9d2a-6124b93f2367",
            "name": "Positive Testing",
            "item": [
              {
                "id": "e27ed1eb-ff90-497f-872a-8c9fca7c6bb9",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ea38f033-f6c3-4db2-8da9-010c7576aab7",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "f8b4d377-5bc4-4640-9b74-4e3b74dec21b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2a7ca30-0ffa-476e-b57c-7ac0f5a6cedf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9664072c-1f69-4c69-a82d-9786e966be82"
                    }
                  }
                ]
              },
              {
                "id": "d6c7298a-8a02-403e-9fd8-e955ed15c64c",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e4b8d1a-43d9-4e2f-8240-b7c2e25aa6ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "a62936f3-6559-4127-90e3-9ea7dffac260"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "709fd0ff-d1a2-4dbe-9d9d-d4feef24f0f6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "50da773d-abe1-4ef5-8d57-1b3855dc5358"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6f20aabe-fb10-4d06-8ff6-384945ec865c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "7f4d5072-1afb-4a60-8c1e-2435eec0d534"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a0fa44c5-3dcf-4f30-88ca-e4013a7d62f1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c821858a-dfef-4580-a491-bcc135c40139"
            }
          }
        ]
      },
      {
        "id": "691e9ef5-08d9-4cc0-9e95-bddbf78312a8",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "4f925ee3-79c5-4b08-9ad8-9150bce3f532",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b9b1ce68-312c-406b-b57c-2d633ff61e57",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5393e9ef-0789-496f-87ea-edb2993a3a79",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf99a4a-8e24-4a08-a725-73b82a231919",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d0617add-41ea-4fae-9af7-cf1b9f162575"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "acaa09ce-ae66-411c-916a-5c988038072e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5f30c787-49ce-45c8-b29d-9a4aa11fb79c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1783f327-0fcb-41ad-b772-c7e0232135ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "98d8dd12-9db5-41f5-8e17-43327f534cf2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "d089a38e-777e-47f6-9c0d-191b41b03dcc",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dce33135-a4a2-4836-87ad-c03d08cf5dfe"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8c5f0e12-7ddb-4d6d-979b-1978a61f229c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "f7cadb0c-250e-4ab7-bf62-f09d390a1588"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4d329da8-1992-4074-a790-325967a9c5f7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d8f6fa2f-7dc3-4f56-a5ff-c2d34c03c73c"
            }
          }
        ]
      },
      {
        "id": "79c3e9bd-70c9-410a-a6c4-9d7c87d12d6c",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "028927af-1227-483f-a366-ac2bfea3301d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1dee0101-54cb-48bf-9da5-175cf2ffa498",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "3a43565b-6fdc-41e6-9d00-0ff3911aa605",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc64fe0-0eda-4ee4-b14d-e6f68a3592ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "787c5bb6-b190-43fd-8853-d1f67f09ce59"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d154ad04-5cad-4b60-b5c6-502a83cc5d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "54afb7b5-9174-480a-a8a9-a6fb786987de"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "14f660f9-33b5-4596-9e7c-ae432b0e9296",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a364251c-fddf-4ba0-a156-c1926c713335"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e4ca0447-279c-4226-a189-818260a2018d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1b558414-5d05-4ea9-adbf-e0c5e46dc5bf"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3881329-7301-4fbc-af9d-74764d069f6e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "779bdcbe-21b2-49f0-b1f0-a8cd0c5320e6"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "21d0b653-5290-45d0-ab1f-e0800935e407",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b7309a55-8336-449c-b854-500908d1139f"
            }
          }
        ]
      },
      {
        "id": "f2e8ab3e-1e88-42c5-9ace-6f4fde7ac7f0",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "589b37ab-1d71-404d-bc61-73c7cdf2abf0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2df7ea65-e7b6-4174-9027-7b1fdb8cab45",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "51879b17-9ace-48be-bceb-3a2822a3c556",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f02a46a6-1090-42da-8394-d5a019a7f3c5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "372c9cf4-3391-4c68-902a-12d0a098a707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fbe3f10-111d-4295-a860-55e5fcc80e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9407585c-9065-4d58-bdd3-e16065fc9a61"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "bc5d69a9-5dfc-445d-84d3-41c9037a9206",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "af929ef0-6a26-41b4-ad58-0f90a44029e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0e212ed0-b815-4f3c-a52b-443988813f56",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "21e9706d-284a-43ab-b6b4-8fb8a4b58d72"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d06bddf-69a7-45b9-91eb-b410ff83e76b",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "d17bd33b-f884-4a6d-b52a-6d8da3779934"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1bf6e030-e1ba-4704-b75a-d8700d45c6bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70ce421f-7ea6-46eb-a30f-e6db5d2ec931"
            }
          }
        ]
      },
      {
        "id": "31ddde76-ddb5-4017-a6fe-ab2727d27a47",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4d0ac865-37da-418b-bdc8-47b5014d6c66",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "28f9b36f-fdb9-4023-8524-a4bb9f089d93",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "8b2cf14a-9bf7-4153-a5ce-71366efbbed1",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a5c0cff0-ee1a-43c5-af2b-267bdf9cdea6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "767bb8d3-6f08-42ad-ad40-07638a5eeede",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 140.6561403508771,
      "responseMin": 5,
      "responseMax": 2711,
      "responseSd": 313.9994206149221,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701650190309,
      "completed": 1701650239572
    },
    "executions": [
      {
        "id": "66f37059-8a70-4b61-a4e7-e762a8a82970",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "1dfece51-dcfe-4b51-a86b-f10459aa0ad1",
          "httpRequestId": "9f8e081d-bd25-46bd-8354-4d392058be7d"
        },
        "item": {
          "id": "66f37059-8a70-4b61-a4e7-e762a8a82970",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "62d4b20c-8a63-4871-b6fc-446086911b19",
          "status": "OK",
          "code": 200,
          "responseTime": 47,
          "responseSize": 0
        }
      },
      {
        "id": "ed1f8b94-466d-4462-8014-244ee0ef4edf",
        "cursor": {
          "ref": "2df1de45-2016-45c7-8a58-4ab760e33d5e",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "6c65d15e-ea85-4339-a58e-1835d1dd2242"
        },
        "item": {
          "id": "ed1f8b94-466d-4462-8014-244ee0ef4edf",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "e38c74e7-95f7-47cc-8fd1-c2a2057bf6fb",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "6a0d807f-0951-4db1-9d69-d345c0f16e89",
        "cursor": {
          "ref": "114192aa-0e10-4d16-97c7-fc97556b0a00",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1cea5417-9a59-4415-a26d-a7d8954749dd"
        },
        "item": {
          "id": "6a0d807f-0951-4db1-9d69-d345c0f16e89",
          "name": "did_json"
        },
        "response": {
          "id": "f1c51e3e-bf34-4ddf-8e3b-2ec47add4ab1",
          "status": "OK",
          "code": 200,
          "responseTime": 732,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81faeb03-366f-4905-9941-2a8154e907b7",
        "cursor": {
          "ref": "9f38ffa9-5686-47bf-a9a5-f8eb66d8d035",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3cde5f7-5efa-4649-9a6b-927ac0caa2f5"
        },
        "item": {
          "id": "81faeb03-366f-4905-9941-2a8154e907b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "51001780-6c1c-4555-a0cc-a414cae65bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81faeb03-366f-4905-9941-2a8154e907b7",
        "cursor": {
          "ref": "9f38ffa9-5686-47bf-a9a5-f8eb66d8d035",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "f3cde5f7-5efa-4649-9a6b-927ac0caa2f5"
        },
        "item": {
          "id": "81faeb03-366f-4905-9941-2a8154e907b7",
          "name": "did:invalid"
        },
        "response": {
          "id": "51001780-6c1c-4555-a0cc-a414cae65bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1320dcdd-1a3c-4472-8612-d61d3ee2efa8",
        "cursor": {
          "ref": "b2597646-c0dc-4d61-b16a-d93645ca4cf9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b53b0be1-507d-423c-b8f4-81ba18753ace"
        },
        "item": {
          "id": "1320dcdd-1a3c-4472-8612-d61d3ee2efa8",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "0f0d5e96-a296-450b-bdcb-ddeccd949177",
          "status": "Not Found",
          "code": 404,
          "responseTime": 150,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f0221d-a5c2-4f0d-8b2d-3edb7449c771",
        "cursor": {
          "ref": "98da4a0b-28b6-4df0-8f95-f9f9779f02b2",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c3cbf779-8c42-4ddc-8acb-99c5ad670cf3"
        },
        "item": {
          "id": "14f0221d-a5c2-4f0d-8b2d-3edb7449c771",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "905f7cd7-47ff-42cf-8d9b-bd719a17a899",
          "status": "Not Found",
          "code": 404,
          "responseTime": 87,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a8ee78d-b763-45b4-91d3-2191418fddd8",
        "cursor": {
          "ref": "66afb710-8089-4b6e-b85c-3511dcc9b5ac",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "dfeffb11-3a46-4fac-a744-7f0128671d6f"
        },
        "item": {
          "id": "4a8ee78d-b763-45b4-91d3-2191418fddd8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "4c45509b-40ea-4c95-b6f3-4dbf116e5ce9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051b7fe0-c471-414a-ad95-99f406ab5519",
        "cursor": {
          "ref": "83541e84-5ec4-42bf-9064-a5639ae7e7d7",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "d7b2c82d-a35e-4a75-ae56-5990db143571"
        },
        "item": {
          "id": "051b7fe0-c471-414a-ad95-99f406ab5519",
          "name": "identifiers"
        },
        "response": {
          "id": "4f89f8bb-78ee-4a29-8686-1a7aa7b817c9",
          "status": "OK",
          "code": 200,
          "responseTime": 335,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce6dd4a5-5909-490a-9389-d273f6f95d44",
        "cursor": {
          "ref": "85b74db3-f11b-4039-8028-d6d592e33ea2",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "cc1bf9d8-409b-4254-aec2-ae5e7de39beb"
        },
        "item": {
          "id": "ce6dd4a5-5909-490a-9389-d273f6f95d44",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cd9d30b8-6273-417b-b346-9a16efa497da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bbe4a24-5f03-40fb-ab28-8974aca69e48",
        "cursor": {
          "ref": "c6a5cb06-ab9f-4065-b4de-fdcd359d1d1d",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "4b93f1bb-8d88-461d-8f45-f27b9e9575c1"
        },
        "item": {
          "id": "5bbe4a24-5f03-40fb-ab28-8974aca69e48",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "f7f27e1d-f3e4-48db-a7d3-dec4c1b36876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "977f1e0b-37f5-45a2-b1b8-5539c7f9be88",
        "cursor": {
          "ref": "1c2af86b-7751-46c5-baaf-e274f0d35235",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "48f7a851-eb1f-49c9-a2e4-e1efd0fcaff2"
        },
        "item": {
          "id": "977f1e0b-37f5-45a2-b1b8-5539c7f9be88",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "70e64180-7bc2-4aaf-94c0-771c2eeac18d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36de4e27-52ce-4642-90d1-3ef117c152a0",
        "cursor": {
          "ref": "19a73890-86ef-4859-8138-1681375d1bc0",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "3d848f71-3972-46c7-bcc2-302c745389e6"
        },
        "item": {
          "id": "36de4e27-52ce-4642-90d1-3ef117c152a0",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "4e67fbb6-822e-45e3-a9e4-f7c9472ea942",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d29ca4f0-6513-4666-b429-a6d0efac673d",
        "cursor": {
          "ref": "587e3c64-c8b4-44b1-9b95-702fcdc06819",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "b4dcd6b8-6c89-4e60-9bb1-80d90fd3974b"
        },
        "item": {
          "id": "d29ca4f0-6513-4666-b429-a6d0efac673d",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "a3bc9998-585f-4f74-8db6-5f264a70b22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a1e489-84d5-4e53-bb3b-9a6e5d45483a",
        "cursor": {
          "ref": "ed496a10-6a56-45e0-987d-f384d3dc3966",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "8160358b-163e-4bed-bc1f-221c408c2e0b"
        },
        "item": {
          "id": "29a1e489-84d5-4e53-bb3b-9a6e5d45483a",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "f4f832b0-c923-46fb-92e9-588f34469bc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "051e74c2-5cf5-40d7-96ab-4ea0e94cc22d",
        "cursor": {
          "ref": "f4ff3624-fa76-48d2-a57e-669fe2fef0e8",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "9c01c212-0682-4cb2-a8b2-db5483e84178"
        },
        "item": {
          "id": "051e74c2-5cf5-40d7-96ab-4ea0e94cc22d",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "6f05b9fc-e70a-4720-9cf6-cf8583ff8fd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 100,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d2be262-782e-414b-bcbd-21274a8bcf40",
        "cursor": {
          "ref": "10d10280-9d7d-4c76-9434-f98a7c9fe5a2",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "79101e55-04ae-4e9d-80ec-3418b3b3f330"
        },
        "item": {
          "id": "3d2be262-782e-414b-bcbd-21274a8bcf40",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "99bafaa6-08ae-4d26-8b60-15d3e41e1cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152dc33b-cd28-4a4c-829d-ebb7e2388a2f",
        "cursor": {
          "ref": "d459c047-ae1d-4a18-96bf-8a379c35445b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "fc21ecbe-b17c-4a7c-b0a7-a135a4343715"
        },
        "item": {
          "id": "152dc33b-cd28-4a4c-829d-ebb7e2388a2f",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dde08ffe-4efc-4cbe-8f93-b7a20dff8907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8636880-5f86-4bf8-9609-e41a20b847d1",
        "cursor": {
          "ref": "f71662a3-6653-431e-baa1-8fc55419bc4e",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "43e2cc2f-8cf4-4b5f-a443-7f966107534f"
        },
        "item": {
          "id": "e8636880-5f86-4bf8-9609-e41a20b847d1",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "22cabc74-6926-48dd-8938-bedec8540729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6febad-76ff-42b7-9ff9-84f4a452eb59",
        "cursor": {
          "ref": "4ed4f293-6226-4ce0-947b-a149a2b13865",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "1fe46193-9dcf-414e-87d7-de00f27ec50c"
        },
        "item": {
          "id": "ec6febad-76ff-42b7-9ff9-84f4a452eb59",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "1d8c791c-5208-4681-a750-dd13324ac9c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e1a5af4-3861-44de-8b88-68679c47a7d8",
        "cursor": {
          "ref": "8b31020e-730b-47a0-90f4-418a17d7604b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "253338e3-3c76-48fb-a83e-8d60226e4746"
        },
        "item": {
          "id": "0e1a5af4-3861-44de-8b88-68679c47a7d8",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "fb8ff46e-04cd-4fa9-9e66-ddd688b5af8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35190ab5-72cf-49aa-a642-b94b9aef93e7",
        "cursor": {
          "ref": "d584d782-d693-4d97-a70b-06ade8c20193",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3c1be3e0-f452-4ea8-805e-cac74e33f369"
        },
        "item": {
          "id": "35190ab5-72cf-49aa-a642-b94b9aef93e7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "cb0911fc-79b4-4f95-95af-54c12de69726",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215cc6d8-e8a5-4d7d-a1ac-6bf18aef048c",
        "cursor": {
          "ref": "08d63a24-9a22-41bc-9aea-5b3152faea74",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "ad3ed00f-8fdf-484b-988f-a1ec9bce0281"
        },
        "item": {
          "id": "215cc6d8-e8a5-4d7d-a1ac-6bf18aef048c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "adafda35-f96d-4cf4-95b6-fd5d3ea87695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55cf4f36-a0aa-4d38-9b09-d7d309648b03",
        "cursor": {
          "ref": "049f446e-7f10-4f93-8ff2-4d601e632190",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "5500a42e-11bf-435d-b001-125406aea73a"
        },
        "item": {
          "id": "55cf4f36-a0aa-4d38-9b09-d7d309648b03",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "344a7a14-9c62-4904-8e06-2557155a56dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8745578a-5911-427f-9233-075e67694207",
        "cursor": {
          "ref": "91f34e14-9021-4eaf-a1b8-c594ebd7c196",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "362c554a-4271-4b9c-a387-c68efed1c9c9"
        },
        "item": {
          "id": "8745578a-5911-427f-9233-075e67694207",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e1df1b6-1ca7-4a48-b681-54dfee9f4ff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e5679e1-a9c3-4053-86a2-95e548635f57",
        "cursor": {
          "ref": "0b52647d-975c-4465-a4f2-c6917476818d",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0435192f-91ce-4132-be19-d3c5dcf2c39c"
        },
        "item": {
          "id": "0e5679e1-a9c3-4053-86a2-95e548635f57",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "24ce5e73-584c-462b-8fe3-03ce102b4bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "499cd868-9b0c-4d27-9f2f-2e4bd336097c",
        "cursor": {
          "ref": "336ba766-2f13-4e7f-bfe2-d9e63d3db1df",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "4514c988-14ba-4c69-83fa-207abc101ab0"
        },
        "item": {
          "id": "499cd868-9b0c-4d27-9f2f-2e4bd336097c",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "a669458f-86a7-41eb-b785-81ef3d1f5a46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b8c1b3c-a683-4201-93c6-a83a910f6044",
        "cursor": {
          "ref": "0e5c730c-7cb1-4a56-b7f6-e29f9af3df10",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "dad29bf7-5727-4ba2-8666-9298eac290e8"
        },
        "item": {
          "id": "6b8c1b3c-a683-4201-93c6-a83a910f6044",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "2115e31a-a256-4bbc-a506-b7e20bfa14a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31995ecf-f0f1-44c5-bd01-9ea5965ef6c3",
        "cursor": {
          "ref": "bbbbe6f9-0e15-4958-b98c-019876fa1670",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "ab53ffe9-8fa6-4db0-9910-e48e8ee9cfbd"
        },
        "item": {
          "id": "31995ecf-f0f1-44c5-bd01-9ea5965ef6c3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "c023346b-1f79-4a3f-8f3b-9d8d831feae9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dee2a6d-836d-4a4b-8b05-bf869011b7d1",
        "cursor": {
          "ref": "489cfb99-e0c2-4f96-8670-981a63d132d3",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "76a3d4b4-7b36-4f01-8bd7-e652da8d2942"
        },
        "item": {
          "id": "8dee2a6d-836d-4a4b-8b05-bf869011b7d1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "c3283bdb-ec70-4c94-af80-eb3750899922",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73458ef6-db2f-4ea9-abb7-1f9a185d1622",
        "cursor": {
          "ref": "9cd28492-480e-4750-acbe-59086975e2bd",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "151bf566-b239-4301-be15-d01ad47be73a"
        },
        "item": {
          "id": "73458ef6-db2f-4ea9-abb7-1f9a185d1622",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "92bffcd1-933c-4b00-93c0-dd0f1046655c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2854490-e66c-42b4-a442-8ee9bbf40879",
        "cursor": {
          "ref": "73797f6e-4e41-41f8-8e74-4026d10f30bf",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "64fadf4e-878e-4aa3-9e3a-c597d4373a89"
        },
        "item": {
          "id": "a2854490-e66c-42b4-a442-8ee9bbf40879",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "4c09a4cd-a83f-4ec5-9e6c-f7270a243605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c3546b3-cc4e-4563-a82f-7de8d474716b",
        "cursor": {
          "ref": "4fa63ee8-b62f-4134-b216-c788434fe6ad",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "973b751d-ca4b-4309-92f6-ee66a21958f0"
        },
        "item": {
          "id": "8c3546b3-cc4e-4563-a82f-7de8d474716b",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "b8178faf-f528-42c3-b16f-75c585c9feea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d32b78a-5bb8-4bf5-aa66-d76ef289cdd4",
        "cursor": {
          "ref": "0d39fe06-ca81-40c6-8c0e-0f886b2149db",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "3b34ef2a-3b95-4a2f-9b92-1d056cc7816b"
        },
        "item": {
          "id": "8d32b78a-5bb8-4bf5-aa66-d76ef289cdd4",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "2ea6b9d8-82fe-4041-9216-738cdfc1e9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be5b7966-657b-41f5-99b0-310e033d46ba",
        "cursor": {
          "ref": "50596fa9-ce1f-423f-8948-29f0fa89e05d",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f336c234-2b5d-44e3-9c53-225e1c414566"
        },
        "item": {
          "id": "be5b7966-657b-41f5-99b0-310e033d46ba",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "19d31d09-7338-4705-80f1-b6d6d2a34405",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6484fde0-6f5c-4932-b4d7-c782fbdd67cf",
        "cursor": {
          "ref": "38c75828-cb83-42ba-b780-3656422ebdff",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "c79b555c-b18d-4e8c-9e41-93ae9d4d35eb"
        },
        "item": {
          "id": "6484fde0-6f5c-4932-b4d7-c782fbdd67cf",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "f9cc8ef9-816a-4f67-87b9-1ceec733fa3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de506f3e-6fb7-449e-97f6-914a07f08f9d",
        "cursor": {
          "ref": "cc5f6a05-282e-4844-afc2-e6628a18451a",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "02485624-d512-4828-bfd1-a10f12e94c4b"
        },
        "item": {
          "id": "de506f3e-6fb7-449e-97f6-914a07f08f9d",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "8e51600c-1715-4ead-b4a7-ff1d38844ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a6c056-dcdc-46b3-a49d-6252728493b8",
        "cursor": {
          "ref": "2d44cf37-b1de-4806-877f-68f1891b331c",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "320ac133-f26d-45ad-8ba4-f7116f915e4c"
        },
        "item": {
          "id": "73a6c056-dcdc-46b3-a49d-6252728493b8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "80c87e2d-be7e-4236-a659-305db1e98623",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 94,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89a02cf2-9e82-4cd6-a070-3d0f5b5eb392",
        "cursor": {
          "ref": "e5afbef3-131f-4749-9fb9-9c7a6aa5e306",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "625bc08d-bd23-489e-9fdf-621d2c5817e0"
        },
        "item": {
          "id": "89a02cf2-9e82-4cd6-a070-3d0f5b5eb392",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "32b5827a-a341-4fe6-b3f6-d7f43781e1cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e36899-b249-4585-93b8-0e3821b0dfdf",
        "cursor": {
          "ref": "dbc45cc9-9ceb-48e8-8b42-97641deabe7e",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "80a82957-2eb8-457f-80e8-8c0d28a6da64"
        },
        "item": {
          "id": "85e36899-b249-4585-93b8-0e3821b0dfdf",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "bb1f8a90-fb12-4aa8-a32f-dacebd830839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29e4d7c9-29f5-4581-bd4b-b2838b529fa3",
        "cursor": {
          "ref": "95fd5848-8cc1-4894-b67e-82d3c3722ad4",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "6fa72be1-2870-4726-bc64-caeb27ef6fd0"
        },
        "item": {
          "id": "29e4d7c9-29f5-4581-bd4b-b2838b529fa3",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3f580c74-56ae-47eb-8754-f3b191c2ed63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf34726f-3efe-41e3-809c-ce8aef6416ed",
        "cursor": {
          "ref": "0a776a66-1432-4e77-b45b-ad12614af3db",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "7fbcde5d-d31f-49c1-9377-8a9b0ab33a12"
        },
        "item": {
          "id": "bf34726f-3efe-41e3-809c-ce8aef6416ed",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "fe8a093b-1985-4c40-885e-bc7e917ad95d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6365503-6d39-4043-903f-a91db768c0ee",
        "cursor": {
          "ref": "e54ef993-9681-4b80-b51b-05f90b57c1dd",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "588ea1de-7da3-4333-ad17-f65e15e1049d"
        },
        "item": {
          "id": "b6365503-6d39-4043-903f-a91db768c0ee",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "03a9f1ec-7149-4461-bdbd-96b64da2c312",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8640a9e6-3352-4965-8111-6769c0e52b7a",
        "cursor": {
          "ref": "8bc5f146-9509-4987-a118-0472fbd962fb",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "1bfbdb5a-f94f-42ee-bd21-42e1fbe7af58"
        },
        "item": {
          "id": "8640a9e6-3352-4965-8111-6769c0e52b7a",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e8f9b5a8-6274-4a3c-97d1-221be92f1279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4ae6d4-d08f-4de2-ba67-31c18707a620",
        "cursor": {
          "ref": "94ac8678-68e6-42fb-932a-ca6a51b80932",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "90296b7e-7d31-4cd3-90d2-09dfdc6cb965"
        },
        "item": {
          "id": "5a4ae6d4-d08f-4de2-ba67-31c18707a620",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "79cd8297-77b7-472d-b56c-d411b43d2134",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 356,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50116881-78fb-4807-a185-4f206c5da591",
        "cursor": {
          "ref": "15de2d2d-a06d-4f80-b8ae-8e5fd7b1ef3e",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "daad41e0-e6dc-44da-bf3a-12dfb0949915"
        },
        "item": {
          "id": "50116881-78fb-4807-a185-4f206c5da591",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "34c253a4-617c-40c3-89e5-f1bef8f1fe16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d34c166f-c8af-49c3-9f90-c2c42fa4a6d8",
        "cursor": {
          "ref": "fbf3daa6-6e56-452f-856d-e652b5ba5faa",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "c66efc9a-7559-4a8f-8394-6a8ef88bd8ca"
        },
        "item": {
          "id": "d34c166f-c8af-49c3-9f90-c2c42fa4a6d8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "ec21b624-3cbc-4112-bd6a-e5398a3dc16d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a19d314-8746-42ab-ae1c-c84b139ab1fa",
        "cursor": {
          "ref": "4fcc3a00-7704-4ce3-af99-88c0f8ead191",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "eeb44eb0-6645-47f2-81e6-c0be9ca608da"
        },
        "item": {
          "id": "6a19d314-8746-42ab-ae1c-c84b139ab1fa",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "5fc0480a-86b9-4bd4-9769-8c25b55b56ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbfd1384-f86d-4612-81c1-4439714bd158",
        "cursor": {
          "ref": "482f732b-66e0-45af-b553-dc7695f9a4bc",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "235a388e-64c5-4674-a2c7-2411e594729c"
        },
        "item": {
          "id": "fbfd1384-f86d-4612-81c1-4439714bd158",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "9353e938-6b9f-4755-ba9e-cb6606e643c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 111,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c8d7545-98d9-4932-9369-0c859511b5df",
        "cursor": {
          "ref": "29409934-a6a2-4ccc-944f-3462c720302f",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "7d3c6c0a-ee3a-44d0-8cbe-767df115bb7a"
        },
        "item": {
          "id": "1c8d7545-98d9-4932-9369-0c859511b5df",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "85acf87c-8662-44ae-b40e-bfb88aa5f2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70fa2b74-1c0c-4275-831c-f8cb4206da8c",
        "cursor": {
          "ref": "5ddf6294-6501-4d65-8c2c-c94e3cce7aa6",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "45a7df87-94e3-4fb2-936a-a9b050ce4f77"
        },
        "item": {
          "id": "70fa2b74-1c0c-4275-831c-f8cb4206da8c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "63a94538-56d5-41df-ad7e-c694046d7526",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "560ecae4-2903-42dc-9734-d0fadf32d0af",
        "cursor": {
          "ref": "7bc04cf3-8552-45cd-9c87-eb4b28a62dd9",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "53b03683-0c3d-4f28-bda0-26e58f117d74"
        },
        "item": {
          "id": "560ecae4-2903-42dc-9734-d0fadf32d0af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6b406d7b-c99a-42ec-9a9e-b5eccff61ece",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 354,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68e2d177-19ca-4d9a-b5b6-9ea07b3850bb",
        "cursor": {
          "ref": "d95f7c38-b31e-49dc-812c-a095678f72d5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ea136af8-f4f4-4dad-8b0a-ce92c03d79ca"
        },
        "item": {
          "id": "68e2d177-19ca-4d9a-b5b6-9ea07b3850bb",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "8a86ab33-fbde-4420-b41b-e6479b9bcde8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a527df7-4031-4158-8fa9-a46bcfd98eba",
        "cursor": {
          "ref": "476fc026-3264-44ea-99c6-32e82b20f2eb",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "de8d8ee0-6921-4c59-8bcb-a29a66fa51ce"
        },
        "item": {
          "id": "8a527df7-4031-4158-8fa9-a46bcfd98eba",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "93f9126b-315e-4da1-893a-059e5d7fad4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4804be-4255-4e14-b80f-2f6f901c8f26",
        "cursor": {
          "ref": "03904ac1-d955-4444-a138-269161cf160c",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "35919c49-4bba-43ec-9fb3-f3be56e73bd7"
        },
        "item": {
          "id": "4d4804be-4255-4e14-b80f-2f6f901c8f26",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "540357b3-6563-45dd-97e3-1a5e5c6d872c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f8faac0-5d36-4d65-b00c-9d6ad8d07da8",
        "cursor": {
          "ref": "2efe0642-9c44-4bf6-a075-881070c56098",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4f57fe20-9320-4fd1-9b7b-8f45b846adf8"
        },
        "item": {
          "id": "3f8faac0-5d36-4d65-b00c-9d6ad8d07da8",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "ab4d970e-26ee-4b8a-80c8-64f7263d62b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59bc6be2-cd66-4a4d-9e88-8b30f2be9dbe",
        "cursor": {
          "ref": "a568433f-5320-4a11-9afa-ef2e98f7535d",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "c159332b-e2f1-427f-a160-dea0d1479b2c"
        },
        "item": {
          "id": "59bc6be2-cd66-4a4d-9e88-8b30f2be9dbe",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2b9e7b63-932c-4c81-a6e1-8fd3d161c26f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "254e8dfb-6ae6-4178-a2d8-ea86746bcf02",
        "cursor": {
          "ref": "f710f0d5-0eac-43fd-be0b-56440a35ce5a",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "8b2b3651-fd2c-4f40-bc36-5fe45994d538"
        },
        "item": {
          "id": "254e8dfb-6ae6-4178-a2d8-ea86746bcf02",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "49dbd825-bb12-4e66-af6e-34117c8cd7ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da13472b-cdc9-4bfc-abe3-66b22d2eaad7",
        "cursor": {
          "ref": "02b0d1aa-48d1-4e21-89cb-8f719e8acf0c",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "4de644b1-cc2a-4237-b448-4ea540793fa4"
        },
        "item": {
          "id": "da13472b-cdc9-4bfc-abe3-66b22d2eaad7",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "0d516581-4bee-4a82-afb9-690cd50bf0d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc749df5-59b0-49b2-a752-47c1febbefe7",
        "cursor": {
          "ref": "c64c411a-1d19-4486-bd88-417b96efc636",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "96f4c7ea-0b6a-44bc-bd5b-c315e2835100"
        },
        "item": {
          "id": "cc749df5-59b0-49b2-a752-47c1febbefe7",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "9cb1c071-8ac3-48e0-9e08-9894690dd828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db9e226-6414-4620-97db-b822bd5077d3",
        "cursor": {
          "ref": "10584ab2-df1e-46bb-a071-26290f4b4dc1",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "1aa1fcfd-055b-4602-9d42-6da1437ee0cf"
        },
        "item": {
          "id": "1db9e226-6414-4620-97db-b822bd5077d3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "75442d34-6c1c-477c-9141-6c14113f17fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece9758a-0f3d-4878-95c9-adb4701f6cb2",
        "cursor": {
          "ref": "b2e6b4d8-a48d-4d2d-89d4-9db4e0f6b8e8",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "3198ee91-0e41-4b45-8a9d-1370513e8bcc"
        },
        "item": {
          "id": "ece9758a-0f3d-4878-95c9-adb4701f6cb2",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "641095e4-35a8-4dc2-8201-2ba0cbb856af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "936cad47-79a0-4efe-8210-f3226dcaa9e3",
        "cursor": {
          "ref": "b75de6ec-cef0-430c-a17d-ac89896bfc31",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "9166d6d5-01a9-4ce3-8caf-f856fcfad308"
        },
        "item": {
          "id": "936cad47-79a0-4efe-8210-f3226dcaa9e3",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "5ec03520-0484-48a3-9bb2-3c7a6fa95fe8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f82298f8-d134-46c9-8f23-b55d3b4cfcc6",
        "cursor": {
          "ref": "39986afd-e66a-4f56-af7b-05e6c04f37c7",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "a93b0418-098c-43f0-9426-f288f50c8cd3"
        },
        "item": {
          "id": "f82298f8-d134-46c9-8f23-b55d3b4cfcc6",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "3b33fe4b-ba1b-4031-8f40-b3bb62f961de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a196b52-add3-495b-ae5d-13a0b558adec",
        "cursor": {
          "ref": "2e5d73a9-9483-4ca2-8c3b-5b7ae9fa9a2c",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bbeb655a-4d44-4dbb-9902-ed740caa0e16"
        },
        "item": {
          "id": "4a196b52-add3-495b-ae5d-13a0b558adec",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "b3a8b65c-ed9d-4b1e-a074-9f54db960046",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccbee6e0-fdf5-4020-a06e-ff9de761449a",
        "cursor": {
          "ref": "1ac535fc-73f4-4a77-9b42-cc783546a6d5",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7a1dcccf-db8d-495d-84aa-f3adad906a8b"
        },
        "item": {
          "id": "ccbee6e0-fdf5-4020-a06e-ff9de761449a",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "94a28603-36d7-42a0-bedb-05d5b184a328",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8149cd5e-1c15-4a04-b48e-a010f4b10d55",
        "cursor": {
          "ref": "72492116-7f07-47ef-b2f6-b63de26380e0",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "54145c2a-ac6b-4412-8ce8-76b3ea99e313"
        },
        "item": {
          "id": "8149cd5e-1c15-4a04-b48e-a010f4b10d55",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "3d272ba2-cc29-4f7e-8012-06f1b1abcc9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01342690-c316-4fa2-9010-40534107cd65",
        "cursor": {
          "ref": "aa3e719b-c4db-4403-b509-bd03afc3be0c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ec9bd80f-ca5e-4b10-a73a-78830e54c059"
        },
        "item": {
          "id": "01342690-c316-4fa2-9010-40534107cd65",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "b15f5949-da10-4e6b-b0b1-8991be511d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11a2921f-8fc5-48bc-98be-2e3b4315f30c",
        "cursor": {
          "ref": "7cd1ef03-74b4-408d-b2aa-96d4cb9f6963",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "4053733d-5880-4c00-9528-156b441a5cef"
        },
        "item": {
          "id": "11a2921f-8fc5-48bc-98be-2e3b4315f30c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "d74eab1d-a9a2-4f26-a881-fd1dca9fe00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6e69842-7530-4ea3-9ac4-f4163f2b458a",
        "cursor": {
          "ref": "53beb052-f234-410e-bee4-5e3a7c8e5855",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6b0eadfa-6c1b-4e01-a6b5-4a3f3954ac9b"
        },
        "item": {
          "id": "b6e69842-7530-4ea3-9ac4-f4163f2b458a",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "570a420f-2949-407d-8b0d-8330a3504082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4e2283b-96c3-4c49-97da-4e3675333aaa",
        "cursor": {
          "ref": "d2509529-365c-4bd7-a356-778c3bbfa857",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "b4bd5582-154f-46ba-8d91-4d87cbbd3621"
        },
        "item": {
          "id": "d4e2283b-96c3-4c49-97da-4e3675333aaa",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "7893ef37-250b-43a1-8a9c-1be2d5ab41f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c6838d2-a5ff-4849-ad2b-26f492270190",
        "cursor": {
          "ref": "67397891-1d86-4a50-8214-31f8f04232c0",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "b10bb307-c4e9-4511-bde2-1f1e9b8e15ad"
        },
        "item": {
          "id": "9c6838d2-a5ff-4849-ad2b-26f492270190",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "86abbf5d-a556-4be5-a026-601ffd7622e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10462c8a-f0d6-4a96-aeae-0ff0a5152a6c",
        "cursor": {
          "ref": "3333086d-2203-4742-bfce-d5e0ae005e5e",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "4ef2352b-e2cb-481f-bdf4-62b1d8ea31d2"
        },
        "item": {
          "id": "10462c8a-f0d6-4a96-aeae-0ff0a5152a6c",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "9add44c2-cc59-4271-a2d3-b9b05d48154d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54b437fc-efc5-4913-8b7b-cab9e493d29f",
        "cursor": {
          "ref": "09b5b580-26c3-47e7-8640-f79806465c92",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "579a5e7d-bce0-49c1-aa38-30a85c587a13"
        },
        "item": {
          "id": "54b437fc-efc5-4913-8b7b-cab9e493d29f",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "d925c0e1-1834-448f-a38f-fc4da8ae0bfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d72ce3b7-6d1c-4b8a-86d3-0431475d5862",
        "cursor": {
          "ref": "c523a113-96a5-4427-afb5-5cee379a7bc2",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d81f0ae7-b378-4b2c-8a52-3130d07eee65"
        },
        "item": {
          "id": "d72ce3b7-6d1c-4b8a-86d3-0431475d5862",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3419320f-6135-4710-b979-74a7373d0820",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4a082b0-760f-47b9-81f3-9dc7892f53ca",
        "cursor": {
          "ref": "2422bd4a-2a1a-46d8-bca8-8476d02adfff",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "1d3d9c8d-0d7a-49d1-ba70-f26fc8f771df"
        },
        "item": {
          "id": "c4a082b0-760f-47b9-81f3-9dc7892f53ca",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "22be1bda-54a2-483e-9de1-9b7fd2931e82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8b6ffa2-0f47-4e95-ac10-383f6be5612b",
        "cursor": {
          "ref": "9ddc0a4f-34d2-4d6e-bd8f-6fffc9a88fbc",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "8d0de793-5fcc-4a1c-b72b-69669bcaf582"
        },
        "item": {
          "id": "e8b6ffa2-0f47-4e95-ac10-383f6be5612b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "a4aea727-bf1b-4c92-bc0f-feb58656c6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d249606-c3d8-465d-91fe-12512e122576",
        "cursor": {
          "ref": "a2cd7d06-a141-4f4f-8696-1f165760dfe0",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "7ca1c6d2-dc0e-41f3-ae2b-0b9bf6f67550"
        },
        "item": {
          "id": "1d249606-c3d8-465d-91fe-12512e122576",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "1389532d-20e6-4393-aa6a-f1855ef6188a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9919577f-cdf5-42c1-ac34-110c055e6d19",
        "cursor": {
          "ref": "7751115e-51c5-4d95-ab8f-3c2608b247ce",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "e6f8b8ae-0399-432b-9927-2d11ccda38ea"
        },
        "item": {
          "id": "9919577f-cdf5-42c1-ac34-110c055e6d19",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "7f42261d-3e24-462f-bdd7-6b454cbab259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04462319-31d2-43e4-8844-ba8566eaac10",
        "cursor": {
          "ref": "6ba46bb3-ecc3-4c4b-80e8-0b4484562f5a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7db9b882-999e-4c20-b932-02a2409209e6"
        },
        "item": {
          "id": "04462319-31d2-43e4-8844-ba8566eaac10",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "a07fe528-5672-470f-bfd7-2ee8e7226cef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e517d91-5b8e-4e9c-bb70-137d6786f216",
        "cursor": {
          "ref": "5fe752f9-a66f-4b56-9a1c-3185110fe0f2",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "e36c95e9-d319-46bb-a0a1-6b1bea40a7ab"
        },
        "item": {
          "id": "5e517d91-5b8e-4e9c-bb70-137d6786f216",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "5b742988-747c-426c-b5d4-402e2a968aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f64f2e24-be4d-40f6-b587-1deace4ce68b",
        "cursor": {
          "ref": "7274620b-b894-4797-a203-bcad90cf1d8d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "aab906d6-a03e-4362-ac24-c3a827215250"
        },
        "item": {
          "id": "f64f2e24-be4d-40f6-b587-1deace4ce68b",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "7810b78c-3694-40ce-87e9-e23a07abda1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e49fde1d-91ce-4587-a049-e5302304cada",
        "cursor": {
          "ref": "e454ada6-276a-45ad-afeb-2905bccc5eed",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "765a9b3f-9870-4ff3-8e7d-79284dcb3cb9"
        },
        "item": {
          "id": "e49fde1d-91ce-4587-a049-e5302304cada",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "9d1e5980-165f-4c09-924c-6bc8119a6a1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "103538c1-6ecc-4437-b327-e29b7c29555b",
        "cursor": {
          "ref": "4f1c7ca9-7216-439b-a26d-d583ef1d9555",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "5dfe6dfa-1cd3-4324-bb6a-e5e477ea8964"
        },
        "item": {
          "id": "103538c1-6ecc-4437-b327-e29b7c29555b",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "811b00ad-d5b8-4895-b2d1-dea948a4d10d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d50f11b-a8f6-4411-af83-d420ce3261d2",
        "cursor": {
          "ref": "886d6110-1f4f-4305-83d9-4ffa30e81551",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "84ef1b28-c490-4b2d-8b1b-13824caaa926"
        },
        "item": {
          "id": "6d50f11b-a8f6-4411-af83-d420ce3261d2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "02e86e9a-9a12-4427-8745-12c7967bb971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a4a199-2dc4-4082-a9c3-9961a76a12f2",
        "cursor": {
          "ref": "e176854c-16ac-4f98-b75e-e51122540a6d",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "0725dab5-1537-4da0-be79-180893ca2b42"
        },
        "item": {
          "id": "d1a4a199-2dc4-4082-a9c3-9961a76a12f2",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "63c034c4-8db8-4c3e-ac67-dc7b53c308d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9a554ac-666a-4791-8fa1-965d43c0afd7",
        "cursor": {
          "ref": "bb78137a-3f70-43fa-bd99-3a6381689fdc",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "ed7a6afc-d131-49c3-8a5e-93537807ce29"
        },
        "item": {
          "id": "c9a554ac-666a-4791-8fa1-965d43c0afd7",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "031101af-829f-4c56-a46c-2fbd8125f76a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b9c3fe3-de8b-411a-bc84-48adf782971f",
        "cursor": {
          "ref": "1980c17a-3866-4024-bbc7-340de20c1e06",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "068c5c3d-4dc3-46c3-9485-bad2622b3e6e"
        },
        "item": {
          "id": "4b9c3fe3-de8b-411a-bc84-48adf782971f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "35ba9e82-53d7-416a-af2c-b7c69aad19f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deb8b5b7-f4ac-4afc-b8ed-e95694936b27",
        "cursor": {
          "ref": "741e32a8-7d89-4bd5-b014-20f50db8a760",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b69b1722-dbd5-4308-814a-9d2e9579b37a"
        },
        "item": {
          "id": "deb8b5b7-f4ac-4afc-b8ed-e95694936b27",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "f9e56efc-d724-4542-9226-cc0bea3f6601",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef4f9578-d506-4dff-9518-69e632df94a4",
        "cursor": {
          "ref": "9c4f692b-4a40-4301-a8a3-a4e6aba058d6",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "22d2df7c-0d9d-42e0-b0c2-1498672541d6"
        },
        "item": {
          "id": "ef4f9578-d506-4dff-9518-69e632df94a4",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "6a5e649d-c7c3-4f17-b22d-d162550a6db5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01205902-d7de-49fe-a847-01eb2a33e15c",
        "cursor": {
          "ref": "d686d940-70cd-4dfd-8528-78c594b4b414",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "2fdac6c1-8453-471b-81d9-50b4e503bf0c"
        },
        "item": {
          "id": "01205902-d7de-49fe-a847-01eb2a33e15c",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c289e955-23e0-45e4-b242-d959b402110f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb7bd86d-ee8f-407b-a8d7-cfdb44940b2a",
        "cursor": {
          "ref": "4f7c7ded-f7d3-4d60-8421-cf17229936c5",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "c4034783-b0dd-4677-a5be-b301ee00c25f"
        },
        "item": {
          "id": "fb7bd86d-ee8f-407b-a8d7-cfdb44940b2a",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "250c94cc-6e71-48fb-aefb-fd5f51b5f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "248f347d-ff3a-4579-bf73-a12fc9fa29b8",
        "cursor": {
          "ref": "a302130e-e807-4fcd-ba03-55edf9beecab",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "c57c1763-365e-4a19-a61e-a268a741e047"
        },
        "item": {
          "id": "248f347d-ff3a-4579-bf73-a12fc9fa29b8",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "0a7eb18c-3efa-4ecd-8e6b-23a4cf592239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff284296-5b81-4880-9a0c-5c8e638e6821",
        "cursor": {
          "ref": "b8a1b49a-b2b6-4851-a94f-407441f13850",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "7bb77fea-9659-49fc-9ac8-011c6571fa5d"
        },
        "item": {
          "id": "ff284296-5b81-4880-9a0c-5c8e638e6821",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "cb972316-0545-4e40-93e5-e84e7fea2176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8528292-56e4-4b79-ada0-104394dd3ac2",
        "cursor": {
          "ref": "24f6ab16-5cac-4739-954e-ca86c4323c8f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "c5369d93-4cfc-4ca8-a2cc-3eb0f0314497"
        },
        "item": {
          "id": "d8528292-56e4-4b79-ada0-104394dd3ac2",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "1a2d9d55-a371-4b44-a8b5-908ee299e0da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ab95936-1d2e-4d6f-8754-be2e78ace188",
        "cursor": {
          "ref": "a06f5b7b-25b2-4e87-bd6c-43882e5fc776",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8212b830-7325-4020-af63-d45f2199afe4"
        },
        "item": {
          "id": "4ab95936-1d2e-4d6f-8754-be2e78ace188",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "955eaabc-454c-4af0-b8a5-3c4bcd611919",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de6948fa-a4ae-4b69-b6ad-48bb09d345de",
        "cursor": {
          "ref": "75fafa52-90d9-4a6f-acb7-5e8f2d0ec987",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "cdf33b51-b567-4583-991c-428b01aa8cde"
        },
        "item": {
          "id": "de6948fa-a4ae-4b69-b6ad-48bb09d345de",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "315d9e52-59ca-4fe7-8fd1-b6f44d3c81b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46a78e38-4671-486f-9c1c-5047a869feaa",
        "cursor": {
          "ref": "3e6b27dd-108b-4bce-a211-b3d42c288add",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "467413db-9865-4382-8aab-f5af863c5439"
        },
        "item": {
          "id": "46a78e38-4671-486f-9c1c-5047a869feaa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "468c3a88-b909-49a8-80cb-8f77456780f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eaf595c-b5f3-45da-911c-ae172f64f3cc",
        "cursor": {
          "ref": "8d44776e-b70d-4ac6-900c-5c5d7005c7a6",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "3856961d-0371-41c4-b636-0a700bc6792d"
        },
        "item": {
          "id": "0eaf595c-b5f3-45da-911c-ae172f64f3cc",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "f0b2ccdd-a4f6-4245-9d7b-98881d237070",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b625efc-009f-4aae-8e3b-1257e41897cc",
        "cursor": {
          "ref": "14cab70e-3e26-44b2-b4ad-c17d9d1a90b3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "afdbfe02-ef6a-4b95-bf15-310dc6b76d11"
        },
        "item": {
          "id": "4b625efc-009f-4aae-8e3b-1257e41897cc",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "d48a0613-4e0a-4ccf-8642-b6a9c15e9fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae3088e2-ffab-48be-86ff-e883bb01cd35",
        "cursor": {
          "ref": "0c686d7a-7548-4b5f-b5b5-8f4f1ac26037",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4b6568a0-37b9-485b-8536-677aa9b9ed7a"
        },
        "item": {
          "id": "ae3088e2-ffab-48be-86ff-e883bb01cd35",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "95d91999-be4c-4b30-aff0-607b30e4b0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4e39815-94af-4371-883c-0c9b66a38450",
        "cursor": {
          "ref": "9c72da1e-8ed3-40ac-aaf6-c6eed6f61814",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "313cdc58-36ba-4eb0-954c-b5342a270db6"
        },
        "item": {
          "id": "e4e39815-94af-4371-883c-0c9b66a38450",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "fd6d3613-a7ae-4e5b-9c40-110fa1c9a5a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8396a8a2-de53-408f-9c46-fd40d641e9af",
        "cursor": {
          "ref": "d09e57be-431a-40f0-9674-93f3649be340",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "97cd2c3b-d24a-4b6c-ae4c-7b994bfd2954"
        },
        "item": {
          "id": "8396a8a2-de53-408f-9c46-fd40d641e9af",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "b49c65c9-3546-42e1-a7e3-8563978f6f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "8ed7bcdd-fd45-49bf-ab16-5872debfa54b",
        "cursor": {
          "ref": "f1dc217e-68c4-41f3-8637-af2d575d6341",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ed4be29e-226a-4802-8a1a-1963e8895668"
        },
        "item": {
          "id": "8ed7bcdd-fd45-49bf-ab16-5872debfa54b",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ffb7b5ee-bc59-423f-aede-3fcbde77d994",
          "status": "Created",
          "code": 201,
          "responseTime": 2711,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "25f229a7-3f13-48aa-91c2-818b374abc28",
        "cursor": {
          "ref": "631b2ec1-2494-4bb7-91a9-faf880a78d49",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "b50b3ed4-68d9-49f4-8b2d-f34797c4d436"
        },
        "item": {
          "id": "25f229a7-3f13-48aa-91c2-818b374abc28",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "ed764dad-e0be-43b2-b63b-f0b91fbe600c",
          "status": "Created",
          "code": 201,
          "responseTime": 2096,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c8f26d1-14d6-41de-8306-bcac1c175e5f",
        "cursor": {
          "ref": "311b8b25-0660-4106-8cfb-efdd2552ffcb",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "3e3e2553-2b17-4417-9a65-11129c91656b"
        },
        "item": {
          "id": "7c8f26d1-14d6-41de-8306-bcac1c175e5f",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b974df8c-8a95-45be-b0ae-5e6e019d3bbc",
          "status": "Created",
          "code": 201,
          "responseTime": 2121,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "09a0fbb3-60e6-4ebd-92fa-9f5743ad26b4",
        "cursor": {
          "ref": "b4e49aaf-5d0a-4546-a0d7-8804f1df349e",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "60ab0677-3ed1-4b1a-b83a-fdceea82f269"
        },
        "item": {
          "id": "09a0fbb3-60e6-4ebd-92fa-9f5743ad26b4",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "acb83335-d29f-4700-b6ff-3eb162d85f87",
          "status": "Created",
          "code": 201,
          "responseTime": 2157,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5da68a41-8016-4c48-b0de-87c9bbe02bc3",
        "cursor": {
          "ref": "e4e6133f-c7a9-4b6b-9274-ccf03a2c0de6",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "0b117826-ea70-4a7a-8c27-c0eaecd0aa7b"
        },
        "item": {
          "id": "5da68a41-8016-4c48-b0de-87c9bbe02bc3",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "ec962cef-9a60-4c92-8871-c1810b2296b1",
          "status": "Created",
          "code": 201,
          "responseTime": 2013,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "e303d983-7a93-4852-88a5-1d086902ee7c",
        "cursor": {
          "ref": "e676544b-b591-4a55-98ea-6fd781dbf893",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "503c2ed0-2611-4f34-b3cd-959192ed1133"
        },
        "item": {
          "id": "e303d983-7a93-4852-88a5-1d086902ee7c",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "3aa3464f-cc6c-4834-ba73-620146ea9b36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "7012342a-16a8-4e51-a9c4-38319db7c744",
        "cursor": {
          "ref": "6467b6e1-71d9-4457-934f-58e73549617f",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "2ec09788-81f4-4226-be1e-43fe46fd8d0d"
        },
        "item": {
          "id": "7012342a-16a8-4e51-a9c4-38319db7c744",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8cc5a142-e307-4472-b097-ebb34d562a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6530906-9b43-4314-997a-926d49e0a8f0",
        "cursor": {
          "ref": "f32b08cc-c72b-4da3-a998-e5262ef80318",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "138097d5-9ae4-43b2-9f3a-ac7e88181c1d"
        },
        "item": {
          "id": "b6530906-9b43-4314-997a-926d49e0a8f0",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1bcf815f-727d-48d8-9ef1-33c26ba5b649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0712e96a-3a82-4034-8731-65a145b24817",
        "cursor": {
          "ref": "b3a52ad5-1eee-4933-9dc8-fc06a21fb67d",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "1eb2bc4f-5ea0-48cd-be85-fa8b9c8b09fa"
        },
        "item": {
          "id": "0712e96a-3a82-4034-8731-65a145b24817",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "7f04ebb1-ecf6-4da2-8824-b72ed1f80696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87776019-fbc0-4398-aae8-b0fb790c7c8a",
        "cursor": {
          "ref": "6c2b68fb-2691-4dfa-bf78-dd1ca5c0e388",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ff7b815b-e78b-494a-abe2-3ea6823de70f"
        },
        "item": {
          "id": "87776019-fbc0-4398-aae8-b0fb790c7c8a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3fca9452-d96b-4369-bc82-cae215bcbc67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a167066-a6b7-4f87-b477-dea31c488b28",
        "cursor": {
          "ref": "c7dd9315-bb6f-47a1-8aea-ad320f4472a8",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "b6687579-5d24-4f2f-b21f-d33efebbd25e"
        },
        "item": {
          "id": "0a167066-a6b7-4f87-b477-dea31c488b28",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "f3213932-bec3-4a21-80d3-ea850b5686b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91efb27a-85ce-4960-954f-6612a0c51e77",
        "cursor": {
          "ref": "718108a4-8133-48bb-8044-ae87b68e671a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "31061af5-8962-4750-858f-4211526fe166"
        },
        "item": {
          "id": "91efb27a-85ce-4960-954f-6612a0c51e77",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "b32b8b65-0675-4ff4-9979-abcf29628978",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "393be25c-9f7c-4b74-9ef0-8e4250588e1a",
        "cursor": {
          "ref": "c63e46a1-3613-44d9-9d07-b607bf93a6ba",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8d78b3a2-1d33-47fd-86f2-2ba71401420a"
        },
        "item": {
          "id": "393be25c-9f7c-4b74-9ef0-8e4250588e1a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "b0098eeb-6cd6-4483-8fca-92c913e6dee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b793fa58-e456-48f1-b493-d182e9d2c0fa",
        "cursor": {
          "ref": "354927db-31b3-4a57-9f61-cc525ee1213b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "77548576-b6d9-47d9-a7f7-170f2ff70ecb"
        },
        "item": {
          "id": "b793fa58-e456-48f1-b493-d182e9d2c0fa",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "712c81c8-a2bf-4a65-870a-73c31ce400c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49857514-1af2-4f4c-9632-a92671d892a7",
        "cursor": {
          "ref": "6aab1e5e-0483-4e59-9da2-4303cf823755",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "8c1dadc4-a513-454e-bffe-5deadc907786"
        },
        "item": {
          "id": "49857514-1af2-4f4c-9632-a92671d892a7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "df50c305-622b-472c-a464-a1230356c04c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1fc7246-9284-4333-a521-ced4a15be05e",
        "cursor": {
          "ref": "30f63fa8-2455-4aa1-a6ce-ac791a309eec",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "7b64a05b-1906-42de-89eb-0e3e5c70a70f"
        },
        "item": {
          "id": "d1fc7246-9284-4333-a521-ced4a15be05e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "133da8d8-ea03-4490-b9f8-9c172d66a784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "085110e2-2f6c-45bd-8672-4b8965a0b8d9",
        "cursor": {
          "ref": "34418536-0d6e-412d-8cf8-2f4b760e61bf",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "d8aa5438-7b05-4d82-bc38-cb8847f7bef5"
        },
        "item": {
          "id": "085110e2-2f6c-45bd-8672-4b8965a0b8d9",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "6c188353-cac4-4547-94ce-7e6cd542084e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bef5f12d-7b06-435c-aa43-99e35342fff4",
        "cursor": {
          "ref": "a31da726-55d9-4d46-8007-1027b0b769a8",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "27b30da1-167f-478f-8afc-132e8cb2a801"
        },
        "item": {
          "id": "bef5f12d-7b06-435c-aa43-99e35342fff4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "db87529c-0184-40db-87ab-c033d6f1d329",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b7e7d2-3b18-4cbd-b34f-4212d9b70b7d",
        "cursor": {
          "ref": "0409c056-c604-48f2-99be-b391ef0a6c49",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7df15589-d616-4a99-8185-0174889e3463"
        },
        "item": {
          "id": "a4b7e7d2-3b18-4cbd-b34f-4212d9b70b7d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "bfe0866d-861b-4382-840d-63e077f214d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37f4ecf4-d0bc-423a-8ae3-7354c33dfb1c",
        "cursor": {
          "ref": "1295e521-794a-419f-bad7-8f6b8e82767d",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "e256c053-aa25-4fd9-b511-ee385ce4da05"
        },
        "item": {
          "id": "37f4ecf4-d0bc-423a-8ae3-7354c33dfb1c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0c19afc4-00ef-4f8a-8808-200c8e392507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb0219e7-5094-4957-9532-05eed4ed0166",
        "cursor": {
          "ref": "5c33569d-757c-40e8-a6a9-1e690fd06133",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8bd6e63a-d550-4211-acba-be11901ee188"
        },
        "item": {
          "id": "fb0219e7-5094-4957-9532-05eed4ed0166",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "3e63ded6-77bd-4692-b563-29a097593aa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec3cbe0f-f21f-452b-9639-cc314ac38ed1",
        "cursor": {
          "ref": "ce555cd2-f24b-4376-9d29-28e638fc1be9",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "0e4eb9dd-e63e-4f6b-bdd8-40f095125d21"
        },
        "item": {
          "id": "ec3cbe0f-f21f-452b-9639-cc314ac38ed1",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "20f1a4bc-62f5-4951-8fb4-18866600157b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c615a9-0cfe-4006-8fd7-58dde54a15f7",
        "cursor": {
          "ref": "a42fa0d4-26f7-49d2-b3cd-bcbef3fa5082",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1f765375-2fbb-47c1-893a-23201b66e683"
        },
        "item": {
          "id": "f0c615a9-0cfe-4006-8fd7-58dde54a15f7",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "8a05e9a8-c178-4d3b-aac1-cb7511461441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "effd894b-2368-4bec-b6e7-6d1bd47932ad",
        "cursor": {
          "ref": "3b0ff931-4186-445e-9cc5-121f430bedb6",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "f9249d04-5bc7-4c36-a899-fd575405f9a4"
        },
        "item": {
          "id": "effd894b-2368-4bec-b6e7-6d1bd47932ad",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "7dd938c4-d096-41aa-978b-3db9a65d7f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1311684-6ee6-48b9-8cee-0edce5d9970b",
        "cursor": {
          "ref": "e27c533f-e955-4853-b4d1-2246201ecfb8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "e5c71988-c496-448a-b273-3540155df6a2"
        },
        "item": {
          "id": "f1311684-6ee6-48b9-8cee-0edce5d9970b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "8760ad16-9577-45e5-8105-b89285185131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7769d65e-b439-4e53-98ab-da434dcdb096",
        "cursor": {
          "ref": "5f55f5c4-3eb9-4122-bb69-2412973f5b16",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "23c0936b-2d82-4349-8eb3-127c60f9c51a"
        },
        "item": {
          "id": "7769d65e-b439-4e53-98ab-da434dcdb096",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ca4fb0b4-6308-49d0-9507-82097d68d7bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff34df00-0b4f-4c4e-bcc3-66876e9f36be",
        "cursor": {
          "ref": "b7d92d41-85f2-463c-ac68-b7db38e2cfa7",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "fd00df6e-3046-485d-9f2a-e177f7dfad56"
        },
        "item": {
          "id": "ff34df00-0b4f-4c4e-bcc3-66876e9f36be",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d3ca1cc7-67a4-4fd8-8f62-c76e50cdb213",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f7f052-7c74-4e85-9546-d6f20f2c4a37",
        "cursor": {
          "ref": "3e550fca-fe8c-4bd8-a186-503fe7ffbe90",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "2e84b6a9-5dd9-45c7-9560-d8375fe2ea13"
        },
        "item": {
          "id": "c3f7f052-7c74-4e85-9546-d6f20f2c4a37",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "645f3128-d613-4e14-800f-2c69aeea6663",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "089c9ab0-2314-40eb-bb1a-2ca23a3fc1d7",
        "cursor": {
          "ref": "a76f1616-b201-4353-8c6c-eb7508deee52",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "56ee76a3-1ad6-4065-a880-79718539cbe0"
        },
        "item": {
          "id": "089c9ab0-2314-40eb-bb1a-2ca23a3fc1d7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "e0d5311b-628f-4d5d-8b87-fc70409907f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "959a60f5-7358-4cf5-8b3f-3831618bee51",
        "cursor": {
          "ref": "6c2e2bea-3e92-4577-a71d-5030a552180a",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "7e6639c5-8e93-4b24-88f8-2de762d17849"
        },
        "item": {
          "id": "959a60f5-7358-4cf5-8b3f-3831618bee51",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d3363fcc-77f3-4428-b084-658bf8d1d423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3f889a3-07bc-42e3-8adc-7ed770e7f8cc",
        "cursor": {
          "ref": "04981e8c-e292-4bab-870d-1ce6d255807b",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "26c4279e-b18f-4509-bc81-28487b69326d"
        },
        "item": {
          "id": "d3f889a3-07bc-42e3-8adc-7ed770e7f8cc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8555a476-4686-4b7e-90c1-53ac78fa87ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "373647e3-28ff-420e-971c-fcd617bfbe45",
        "cursor": {
          "ref": "99e600c8-c2c2-4487-b8fd-291a6430471a",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "b5782738-939a-437a-b7e6-e324eb44bd64"
        },
        "item": {
          "id": "373647e3-28ff-420e-971c-fcd617bfbe45",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "255601f4-7cf3-47d2-b3f8-6803f1bae107",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 92,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4283db9f-55bd-4a86-8f40-b098440d3e2d",
        "cursor": {
          "ref": "63803e69-a4f6-437c-8e5f-604a60e8263a",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6476c82c-c3df-4441-8ab6-49914aec6c22"
        },
        "item": {
          "id": "4283db9f-55bd-4a86-8f40-b098440d3e2d",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b54e2dd8-80d8-4ce6-97f3-fb9434bb37bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bcec01-0111-4a82-a562-192aca9aefbf",
        "cursor": {
          "ref": "8a966284-777e-4eef-b745-bf616e1bd66b",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d42007f5-7b49-45b7-85ad-c889bed0ada0"
        },
        "item": {
          "id": "02bcec01-0111-4a82-a562-192aca9aefbf",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b151da45-612d-43ab-b646-a3380be93518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc357af5-b5ac-499f-b0de-152cee251a79",
        "cursor": {
          "ref": "ecdcdc36-b601-4116-b203-ba6b8946c315",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "ecfbeefe-a291-49ce-b6b6-b5c39212e4ad"
        },
        "item": {
          "id": "cc357af5-b5ac-499f-b0de-152cee251a79",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "b55829fb-b927-4408-a652-17a53d7bc584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2154f97-0062-49b0-9732-20c1a2aeb82e",
        "cursor": {
          "ref": "eca70db9-52d2-47b6-afe5-ec62d5f6757d",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "93b651f3-3bff-4efd-b9d6-2c4c38836646"
        },
        "item": {
          "id": "e2154f97-0062-49b0-9732-20c1a2aeb82e",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "2f0da9dd-83f8-4328-a66f-c147f4a1e381",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 103,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7bbfc6f-6f35-46ed-aea5-035e37d76630",
        "cursor": {
          "ref": "39157269-36fd-45a6-99b3-e0ccd67274f1",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c642aea5-20a9-4ecb-8708-6c1baca73032"
        },
        "item": {
          "id": "b7bbfc6f-6f35-46ed-aea5-035e37d76630",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46dbaf76-1eb7-4a81-ba7b-b362089f27ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77551af2-e429-44c5-8173-6b43333be496",
        "cursor": {
          "ref": "7eb6b84b-7194-41ba-b309-196373a1d006",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "49af7bc5-c09a-466f-b156-05a2606fd03f"
        },
        "item": {
          "id": "77551af2-e429-44c5-8173-6b43333be496",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "52020da0-5e0b-4a60-848f-5c55e84f9b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25dc32f7-82b3-4a59-995e-7699d9cd83ca",
        "cursor": {
          "ref": "755b6eca-b30f-4d85-8ee7-047d9327bd68",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "122324bb-bd28-447d-b985-9c2d82f4e3c8"
        },
        "item": {
          "id": "25dc32f7-82b3-4a59-995e-7699d9cd83ca",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "88302dac-f440-44f8-bd73-fb4b72f35a33",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 77,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c776e279-457a-45c5-848d-e9d260244535",
        "cursor": {
          "ref": "2f0cdd64-92f7-4510-b112-7d681a1364b4",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "972c9458-1c36-4f4a-9e33-43741875ba78"
        },
        "item": {
          "id": "c776e279-457a-45c5-848d-e9d260244535",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "39fa1cad-9222-4288-8167-84014c6124f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8011053-9efb-47de-ba15-dedb5e953339",
        "cursor": {
          "ref": "cbe8c5dc-4e4a-49d8-a3d0-0fb297acd799",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "6b6917c9-3bf1-422c-b6ea-0db73039cacb"
        },
        "item": {
          "id": "e8011053-9efb-47de-ba15-dedb5e953339",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9c8a147a-c6cb-4b5e-afc9-6d179691269b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc22e73d-73ea-45d7-9325-1e17bb7d8060",
        "cursor": {
          "ref": "6f5f2a50-a89b-44f3-8d0b-6586e4e870dd",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "5c080389-18a3-4b6f-87ae-c05bc943ec27"
        },
        "item": {
          "id": "bc22e73d-73ea-45d7-9325-1e17bb7d8060",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "95aaf0c0-ae2a-474e-aa2e-c80bfb8f8748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c7acf2f-aeb0-4d6b-9537-6100d2c10e64",
        "cursor": {
          "ref": "36c78e69-8ee1-4fa5-a7f5-8815258cd83b",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "f42b8744-f2e9-4a09-8be6-ead9091499ac"
        },
        "item": {
          "id": "3c7acf2f-aeb0-4d6b-9537-6100d2c10e64",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "4c62169c-791a-499f-a92e-f8c96bcf084f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 98,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03661082-8f40-4c05-8312-19133230504b",
        "cursor": {
          "ref": "f428a532-3a49-4016-bc2b-88b576ae1615",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "527982fa-8628-4e16-ab6b-13b293d2e1a3"
        },
        "item": {
          "id": "03661082-8f40-4c05-8312-19133230504b",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2c90a210-c44d-40a0-b5a3-77f0e267d069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6d93044-2068-4323-88ee-3c3b32081228",
        "cursor": {
          "ref": "13303752-3971-4844-9c07-caa8dca9f7bb",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "d476dc70-d5b4-489a-a8ab-dee95480ccd5"
        },
        "item": {
          "id": "d6d93044-2068-4323-88ee-3c3b32081228",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "5c62ca88-c0eb-44c8-8d07-85b5399615ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21c7f65e-64ff-46e6-aa4f-265e2f12a4cc",
        "cursor": {
          "ref": "570841c5-65d7-4fe7-ae00-1393ca1a1b02",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "62c3dd29-3b84-400f-b7a3-5ced0743803c"
        },
        "item": {
          "id": "21c7f65e-64ff-46e6-aa4f-265e2f12a4cc",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "f9543106-cf9c-4706-9674-bc53cdf7b950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f13fe8c5-c7c8-4fee-8f7c-e8cd62aaac13",
        "cursor": {
          "ref": "4b72b262-a7cd-4cbc-a9fc-a62657935b20",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "098f12c0-97a3-4811-9f38-bf11d0c59d2c"
        },
        "item": {
          "id": "f13fe8c5-c7c8-4fee-8f7c-e8cd62aaac13",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "f9424427-4190-48ed-9afe-88da28291fdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21ce357-4f71-4572-a36d-da8ad7dc6406",
        "cursor": {
          "ref": "4e981944-0273-4ac1-abbb-c3137da4226b",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "c44f60d1-947d-44f4-ad24-2a04facd1ef1"
        },
        "item": {
          "id": "e21ce357-4f71-4572-a36d-da8ad7dc6406",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "11766a70-6469-457a-befe-49607c3f81b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e85159-fc68-4b0a-b493-ab9a2a7a678e",
        "cursor": {
          "ref": "4c39aec7-7f22-4865-831c-f935563b3b61",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "444c2ae8-bd52-47a0-9d64-3190a842b497"
        },
        "item": {
          "id": "66e85159-fc68-4b0a-b493-ab9a2a7a678e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "de281135-536a-42c4-a42c-d32d356db86c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68de219-179f-4935-9201-72ada79bad17",
        "cursor": {
          "ref": "e8caed36-3f7f-4b76-b6db-433681103694",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "3e377262-5457-4de9-af6c-b93ee314631f"
        },
        "item": {
          "id": "d68de219-179f-4935-9201-72ada79bad17",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "9107172c-658d-4e23-a644-8112478c5b4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb478490-2fe1-4403-afa2-b76e74adc749",
        "cursor": {
          "ref": "d96f67d8-d870-4fd2-8dce-744cb2206220",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "6984074b-f6b2-4aa3-b1aa-e2caa5e3c4a6"
        },
        "item": {
          "id": "fb478490-2fe1-4403-afa2-b76e74adc749",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "e3bba8cb-3c1c-46f2-b32e-edb6f0f4324b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53b869a9-86d9-47a4-a848-69d7ad093628",
        "cursor": {
          "ref": "4089823f-0da3-415c-a30c-68c3003e26ab",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "b4b93bb8-ff6f-48bc-a40b-b1b8ee565d7f"
        },
        "item": {
          "id": "53b869a9-86d9-47a4-a848-69d7ad093628",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "1f018b3a-7d8f-4b69-9cbd-3459908f57be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f83a00-dfd4-4362-a849-223682ea0581",
        "cursor": {
          "ref": "bb72db78-c00e-47ba-820d-dee4a8714c78",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "86db2b58-0829-4f78-828a-e1373807cbfa"
        },
        "item": {
          "id": "d7f83a00-dfd4-4362-a849-223682ea0581",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "adf030d6-ee09-4316-9dfe-a6c4dec944db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9736bcd1-5d13-451e-a3e6-f6a6fb45c190",
        "cursor": {
          "ref": "da775846-0ec8-4b78-a7e3-84a5c9b652ef",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b975b007-502c-474d-ab40-6edeb3e044c0"
        },
        "item": {
          "id": "9736bcd1-5d13-451e-a3e6-f6a6fb45c190",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "c189a229-b1f0-4529-a5ae-f9934350e262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "168f7721-1d37-40d5-8687-12315d8fcf8a",
        "cursor": {
          "ref": "2d305d70-8d09-4bde-8bd2-2b457a034934",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "44a72fe1-db49-462d-904f-bfc109d68663"
        },
        "item": {
          "id": "168f7721-1d37-40d5-8687-12315d8fcf8a",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4e0d5d8d-2ea5-4c36-9a94-f2d35f0768c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2f74963-5b18-472d-81ce-44d458408444",
        "cursor": {
          "ref": "a1df8756-84f9-477d-bb1d-272079b0668a",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "3e1b7388-f71f-4dc1-a970-58364f4ef24d"
        },
        "item": {
          "id": "a2f74963-5b18-472d-81ce-44d458408444",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "edaa46e0-d076-4bd0-8b4d-a6c5552e55d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69bf6536-e5c5-4092-9874-36fe1cd406a5",
        "cursor": {
          "ref": "eb02ecad-5e33-4401-a9a0-b2811b30cc5a",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8a9fbb59-3e7c-4655-b8d9-16e42300456c"
        },
        "item": {
          "id": "69bf6536-e5c5-4092-9874-36fe1cd406a5",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63513da5-104d-411f-9ff4-50bf36579097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4dbfec32-765f-4cf2-b8fa-e1bd3fd80c80",
        "cursor": {
          "ref": "9cf13888-b6c9-4f04-8f69-9685c9a3d4a3",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "39e1c7bc-f6bd-4753-ae9b-5f92b209f170"
        },
        "item": {
          "id": "4dbfec32-765f-4cf2-b8fa-e1bd3fd80c80",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "7d247b71-5fff-4a4f-96ad-397e75e43cd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c31902d-3c43-4fe4-9baf-1193c2af15bd",
        "cursor": {
          "ref": "372ee688-dce5-4381-bd27-03f5367a92f6",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "4d6ff670-c926-4949-9b9b-4e6e7a28f265"
        },
        "item": {
          "id": "8c31902d-3c43-4fe4-9baf-1193c2af15bd",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e31c397d-9161-4fba-a58c-80d8b1e3673a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da86b79-e942-4e38-af2a-5cd7c5cbaf94",
        "cursor": {
          "ref": "b6ebfb1b-a11c-4029-90bb-154f240507f7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "8c0c509b-aa49-463a-bb78-5251f100d01e"
        },
        "item": {
          "id": "9da86b79-e942-4e38-af2a-5cd7c5cbaf94",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "24e5725e-59ec-4e11-9412-b1ea769edd3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7707033-4302-4b69-a702-f84f4d893f34",
        "cursor": {
          "ref": "affbb302-8b76-4114-9c53-8495856e690a",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f2075314-5e09-44ed-88b2-7bde18a117f4"
        },
        "item": {
          "id": "d7707033-4302-4b69-a702-f84f4d893f34",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec6175b8-4387-4d30-9e76-52318b921fb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c27c909b-3525-4890-99a0-ae0ebee24458",
        "cursor": {
          "ref": "61122579-f5b2-4492-8c66-65ffabecc76c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fe6b6a0e-7e6a-45e6-90ea-03cc9c4c8b26"
        },
        "item": {
          "id": "c27c909b-3525-4890-99a0-ae0ebee24458",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "fab66610-32f5-4015-bb94-d49ca337c4c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "147d3e84-1795-4f69-9e0c-1350f9d2b937",
        "cursor": {
          "ref": "aa7c0739-f8f7-41d7-8931-7f35d6b54bfd",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2318e7a2-8bb4-42ba-b11e-3c19dedb524d"
        },
        "item": {
          "id": "147d3e84-1795-4f69-9e0c-1350f9d2b937",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "e0372b88-91fb-45f6-98a3-300cc6c7e8dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef9920c8-42b3-48b7-aa85-b7c36301535e",
        "cursor": {
          "ref": "1eeeba5b-88f1-4a69-af15-6a97dfac349d",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "83ff38b2-a450-42b9-bf17-7baf1b8fb1a4"
        },
        "item": {
          "id": "ef9920c8-42b3-48b7-aa85-b7c36301535e",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "189e118f-caa7-4a3d-aaa3-888389ef7787",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1028e646-ed5e-4a68-a6aa-233d5e59d236",
        "cursor": {
          "ref": "8517da0d-c4a7-42b0-bd8a-ab147709f450",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "ea971e78-445e-41c6-9f0f-ba1878400af4"
        },
        "item": {
          "id": "1028e646-ed5e-4a68-a6aa-233d5e59d236",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "c2f0b8d9-502a-4fa3-a4f9-87f4c0c5b7aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86e4345b-a274-45f4-9598-baf6275176d0",
        "cursor": {
          "ref": "c4baaa24-9753-4c70-8519-09fe70fa32f6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "8ab732df-103a-4449-9be9-06a8b2bed5dd"
        },
        "item": {
          "id": "86e4345b-a274-45f4-9598-baf6275176d0",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "5bbe2e30-c2e8-4956-bd82-47228b0a32a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32ac5e3b-85db-4eab-8594-0aeef14c3aec",
        "cursor": {
          "ref": "7382756b-c1de-4a83-89cc-0220f15c3ea6",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "04d4ce6b-96f4-4612-94d0-c10ff5f0a90e"
        },
        "item": {
          "id": "32ac5e3b-85db-4eab-8594-0aeef14c3aec",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9a871277-34d0-42d6-8d92-191ad7f422ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6a9ac19-cd8b-4e0e-8c05-f8c77d9d00a9",
        "cursor": {
          "ref": "8d9b3f40-2960-4c7b-835e-6eac201d5bdd",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f6c19159-1719-42ba-ab50-2d2af96e34d3"
        },
        "item": {
          "id": "e6a9ac19-cd8b-4e0e-8c05-f8c77d9d00a9",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "450e7403-7f0a-47a7-8347-dc4f3def558a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5786b9ca-cc38-4f5b-8f2c-9a51ac02237d",
        "cursor": {
          "ref": "62b2d348-3a87-4f19-8643-dd5f9a3a0c5b",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "5f457407-3f6c-4174-849f-d8b81e57a732"
        },
        "item": {
          "id": "5786b9ca-cc38-4f5b-8f2c-9a51ac02237d",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "bdbc2da3-8ce6-4b15-8803-9ed95543bd52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d61227-f863-4576-a2ce-24ee87ec8997",
        "cursor": {
          "ref": "cdf67d20-f90b-479f-925e-06eff3a7e285",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "17ac1b3a-b17c-4b82-823e-0488f7526196"
        },
        "item": {
          "id": "46d61227-f863-4576-a2ce-24ee87ec8997",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c7fe371b-5988-4a19-ac83-2ffe6118b036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a329f250-17b3-4ed8-a94f-99105782c5c5",
        "cursor": {
          "ref": "2a8aea76-1c3d-4532-ae50-5cb82c0b27cd",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "f1d78b6b-b311-4398-a0d1-807a84e65a51"
        },
        "item": {
          "id": "a329f250-17b3-4ed8-a94f-99105782c5c5",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "e8bf85e1-ad31-421f-8484-9b0a3a52c9e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d92bef-4f06-41a0-b6e8-50e3afdd1780",
        "cursor": {
          "ref": "6fe423e7-e5fe-42d7-92d6-3f484d728080",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "edc67af3-ade3-46bd-b2bd-ca2312d42a72"
        },
        "item": {
          "id": "17d92bef-4f06-41a0-b6e8-50e3afdd1780",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "14a84ff8-9c50-4e62-b71d-bceb2f26a59b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7269838a-691f-4841-9dc4-1ede02659904",
        "cursor": {
          "ref": "af712b7a-db7a-499f-a4a3-44377ace7db2",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "606e593a-4dfe-400f-8715-f1a56e037a22"
        },
        "item": {
          "id": "7269838a-691f-4841-9dc4-1ede02659904",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "c8f4376c-48cb-43f3-bf7c-1b529fdc50a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae287dae-6ee3-483b-a5b6-7a0c432fa9b1",
        "cursor": {
          "ref": "c27f0b70-7e5d-4d20-aaf2-5530895a7351",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "a510427b-efe3-459c-be72-a8b2dc5cc093"
        },
        "item": {
          "id": "ae287dae-6ee3-483b-a5b6-7a0c432fa9b1",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "7ad05ae5-4f73-43f5-83be-eb109a3d6d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66c8f564-6434-47b5-a5f9-57f96950faf4",
        "cursor": {
          "ref": "3367a19a-d36c-42bb-948d-534975920b71",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "9da87024-bc43-4fe0-81ef-2d9b9c99c040"
        },
        "item": {
          "id": "66c8f564-6434-47b5-a5f9-57f96950faf4",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5bee3519-fc86-48bd-8c9e-afdc1a9cefe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e451531-4b61-4e93-8bfd-965f2493ec19",
        "cursor": {
          "ref": "ccdd2566-617a-417a-b84f-745a3e28f237",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "3ba6e25b-d9f7-4bbc-a3ae-8a9b6fdf31ce"
        },
        "item": {
          "id": "6e451531-4b61-4e93-8bfd-965f2493ec19",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "292e27b7-8fa8-4960-a958-828883ee3424",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb9477-8b20-46f8-898f-a1202b79f13c",
        "cursor": {
          "ref": "d7ac473f-3542-4e61-a952-2fcbcf2a41f4",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "fe77d79f-b75a-434d-88eb-bd32dec3f583"
        },
        "item": {
          "id": "1bbb9477-8b20-46f8-898f-a1202b79f13c",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "df57708b-13d0-45c6-b13f-7f8951587685",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 80,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f92e5868-2466-4c3c-a0cb-39ebcfce20db",
        "cursor": {
          "ref": "0bf62c5d-24e9-42a9-8b92-f9315d63fe51",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "96066a3a-2f5f-4f1d-bac9-839a84789524"
        },
        "item": {
          "id": "f92e5868-2466-4c3c-a0cb-39ebcfce20db",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "a58b7f34-0562-417b-8c90-1abc181d618e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b42fe103-9b61-4a7f-b09f-50af23193bd4",
        "cursor": {
          "ref": "4556aefe-ac7e-479b-b5fd-bb10922ed970",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "7aa6487d-6972-482a-80d8-18b105c435eb"
        },
        "item": {
          "id": "b42fe103-9b61-4a7f-b09f-50af23193bd4",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "234fa29c-4de7-4130-be78-3ab75933245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1cc9c8-bf2b-4b7d-8983-9da591773837",
        "cursor": {
          "ref": "78dacda5-395a-45e7-bce5-80fdb5406581",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "30e58162-eb5e-4f3c-a272-2a7ceca8e8f5"
        },
        "item": {
          "id": "ed1cc9c8-bf2b-4b7d-8983-9da591773837",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "1261b48d-c388-455b-be88-119120fa887c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a76802cd-537a-4e4f-b2ba-bb8d21936419",
        "cursor": {
          "ref": "5d588927-1bb3-4b7e-8085-ee1f500aafb3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "c8015952-afd8-4249-b7c3-0a7c16256c69"
        },
        "item": {
          "id": "a76802cd-537a-4e4f-b2ba-bb8d21936419",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "f2925be7-1def-4e14-9cba-77fa3af7c17a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ece19f9d-54a8-4e48-a39a-48044cba58c6",
        "cursor": {
          "ref": "c2eeb19d-95df-4aea-b100-985a4eb7cd78",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "c2c207b4-0983-4c5b-a4bf-cd614abfcec1"
        },
        "item": {
          "id": "ece19f9d-54a8-4e48-a39a-48044cba58c6",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "c9e46b7d-a895-4c0a-aad2-1e167b2c288f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc76aa11-8fe0-4c93-abab-060bb25f081a",
        "cursor": {
          "ref": "c85746ab-8812-4a70-9d92-fa5ed7fb20f8",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "7e76c2ad-94f1-4e39-81a1-f1e20dbd92bd"
        },
        "item": {
          "id": "fc76aa11-8fe0-4c93-abab-060bb25f081a",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "905bedf6-8686-4e96-bfed-83a5dd8eafdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "824afbd9-b730-40e0-bc14-317f1ddbeed5",
        "cursor": {
          "ref": "4aab5f8a-e724-4081-a522-9183b9805657",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "bddeef1f-2943-4956-bcf5-994656355aa3"
        },
        "item": {
          "id": "824afbd9-b730-40e0-bc14-317f1ddbeed5",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "49357688-20a9-4c88-b741-f8b0162c1750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "554fa21c-7d23-436e-9195-3d926d9a3a50",
        "cursor": {
          "ref": "68c96cd9-3083-42cd-a1f5-d6e146802031",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "60aac4a6-cad1-4f00-9f3c-c343e0ae70bc"
        },
        "item": {
          "id": "554fa21c-7d23-436e-9195-3d926d9a3a50",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "968200fb-0d4d-4fc0-9cf6-0f2d10f68d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ebbe3c4-5e4b-442a-95db-488d4f48df2b",
        "cursor": {
          "ref": "e980c167-b2e3-43a5-ad7f-963159e7e897",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "9188f4d0-da2c-4263-b82d-8fcf42d4b925"
        },
        "item": {
          "id": "1ebbe3c4-5e4b-442a-95db-488d4f48df2b",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0d2f20d5-c04d-4f15-b659-a2238599fe60",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da19b9f7-597e-4679-86e3-da05ed8b05a3",
        "cursor": {
          "ref": "84772fa0-1ef2-44ee-aa90-042ed1790468",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "756acc8e-da4d-4261-888f-8a4c3a6f6887"
        },
        "item": {
          "id": "da19b9f7-597e-4679-86e3-da05ed8b05a3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "45277d0e-044f-4a0f-9b9e-293cbc5c20a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6ec95a3-3e10-4dc9-a820-87325fb8254f",
        "cursor": {
          "ref": "c5aba9e4-4d1b-4aec-8f24-160a82238915",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "f47d3a36-545f-46ea-83fb-1faaa1265190"
        },
        "item": {
          "id": "b6ec95a3-3e10-4dc9-a820-87325fb8254f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "8e39c823-cee8-44b2-ac6d-c379def2d1b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb1fc224-c4d2-404e-893a-8239ae884d62",
        "cursor": {
          "ref": "1f172307-010d-42fb-bd23-63974e85ccdf",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "b6b8092d-be99-4d58-bb07-45897401d2f4"
        },
        "item": {
          "id": "fb1fc224-c4d2-404e-893a-8239ae884d62",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9fb17151-3feb-4b51-abd1-e41fd683e699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d26883-5d49-4d61-9abb-fb1e657183a9",
        "cursor": {
          "ref": "f93daada-54fc-4ca3-bd9b-89339e35dc5f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "b99e634a-7e8d-45f1-a7ae-a342c15f2e3b"
        },
        "item": {
          "id": "c6d26883-5d49-4d61-9abb-fb1e657183a9",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1eea1d81-7008-4f19-ab63-a0004f03ff11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6982423-b027-4f47-97aa-a8eb65dcbdc3",
        "cursor": {
          "ref": "2d0a1d0b-8672-4d0a-98b1-490dfa84fce7",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "692dbbce-03f5-463d-a90a-39e4c20bc0be"
        },
        "item": {
          "id": "c6982423-b027-4f47-97aa-a8eb65dcbdc3",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "56b9a727-572d-4aaa-9ee5-0160c58a2a17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00cfb9d1-22b0-42f7-8547-d953cf970250",
        "cursor": {
          "ref": "7017d8f6-1478-4d47-806f-f0a80afd9328",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "40989d75-78dc-44ca-864b-86529b777261"
        },
        "item": {
          "id": "00cfb9d1-22b0-42f7-8547-d953cf970250",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "9121b5ac-32ea-4c70-bdd3-73366d12501b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68cd003e-4b4e-442c-b26f-fbf126bc2074",
        "cursor": {
          "ref": "df116b27-b86b-4719-b030-328ae07ee6cc",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a827eb0b-fa98-412c-abb5-7fc6771afa13"
        },
        "item": {
          "id": "68cd003e-4b4e-442c-b26f-fbf126bc2074",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "0f806e70-71c7-462d-b812-37778fce5953",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e15979-26f6-4502-bcb0-4304390baae5",
        "cursor": {
          "ref": "69fc9cc5-1cbf-4711-86ab-4ebcd2a1086e",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "d79da3c7-ed53-49f8-8f22-46fc70493046"
        },
        "item": {
          "id": "05e15979-26f6-4502-bcb0-4304390baae5",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "9a61cf5d-0760-4412-9705-fda1e4492d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0dc17ec-5d3a-4ac4-ba8f-58474f5bb10d",
        "cursor": {
          "ref": "cd8f3706-417d-480d-a386-a50b47b38687",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "f18185d1-9da0-4026-9059-a15760ae7add"
        },
        "item": {
          "id": "f0dc17ec-5d3a-4ac4-ba8f-58474f5bb10d",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6711a84f-031f-475b-a65f-2b408323bdb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bb50a16-9632-4a07-83ad-9b1d8394821a",
        "cursor": {
          "ref": "05eaf45b-385f-4690-8a6c-fca6a79da61d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "77356113-ee71-4c74-b6c5-314987d3de2f"
        },
        "item": {
          "id": "9bb50a16-9632-4a07-83ad-9b1d8394821a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "bf27372d-0c96-47cb-93ee-4b6142724a3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d775bf-1542-4d5e-b5fc-8ec3b9efd422",
        "cursor": {
          "ref": "71ff7746-7987-4392-af55-f3d4d2b0d4e1",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "38b5db2d-8839-4236-9fad-c56e139cc15e"
        },
        "item": {
          "id": "10d775bf-1542-4d5e-b5fc-8ec3b9efd422",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "a06bfc8f-70b4-4dda-88a3-41db6867c1fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0146bd5-a3cb-4481-8ccf-d1b0cf08a8b9",
        "cursor": {
          "ref": "15e7ac3c-61f4-4586-b0de-38630d9ac285",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "18c20f1d-ecb0-44f1-8108-10a623cf419c"
        },
        "item": {
          "id": "c0146bd5-a3cb-4481-8ccf-d1b0cf08a8b9",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "8246d340-9225-4ca7-9920-af63c31bb2ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc8a294-6c6f-4d48-9a04-8e1966fd1187",
        "cursor": {
          "ref": "9e74a5fa-66f5-4ad8-a6fb-f3fd9f0eb6e4",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "b783dd44-e6ea-4993-bc2b-6f7fd16574f5"
        },
        "item": {
          "id": "8fc8a294-6c6f-4d48-9a04-8e1966fd1187",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "4a9defcb-3df0-49b0-945d-0218a71b63b2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23020638-aaf8-4a69-bd9e-5822245c88a3",
        "cursor": {
          "ref": "285444ff-aa33-4074-b160-bfa5b650e10b",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "8cdab3a3-c887-4dc2-b6d9-38ce700cb035"
        },
        "item": {
          "id": "23020638-aaf8-4a69-bd9e-5822245c88a3",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0d08072e-6805-462b-bbf1-a07584df96e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a867940-407e-4332-a312-18df04b567bd",
        "cursor": {
          "ref": "15e14313-a338-4b29-a7ba-31e21a973a14",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ef50c4cb-82f6-496b-bff8-0d6b9e6c4e50"
        },
        "item": {
          "id": "9a867940-407e-4332-a312-18df04b567bd",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "a00c8a56-ee77-418e-b683-67f5230a5863",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c37c95b7-5333-4d86-88b0-6cf34e04bc69",
        "cursor": {
          "ref": "462e37f7-d4df-4408-93f0-2590c7ac82e2",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "97dcba71-bd3e-484b-a00e-57364358866d"
        },
        "item": {
          "id": "c37c95b7-5333-4d86-88b0-6cf34e04bc69",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "3171b777-8769-445e-8e3d-bfce296adb50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2096c2b3-798d-49cf-b7d5-1f9cbc7258bc",
        "cursor": {
          "ref": "7b4ea6c8-f836-4433-a077-7f98cd65f492",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "bec64c18-98d2-4f60-84ce-3b676c5edaa5"
        },
        "item": {
          "id": "2096c2b3-798d-49cf-b7d5-1f9cbc7258bc",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "fd79c37d-d1f6-4540-a88b-9e985c5eca52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75fb3b71-2572-4902-adfd-70365e984510",
        "cursor": {
          "ref": "92193bec-f51b-449b-926a-7994ad649148",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "c5568f60-2bb4-449d-9e9e-a94580344a2e"
        },
        "item": {
          "id": "75fb3b71-2572-4902-adfd-70365e984510",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "bf606ee3-c332-46e8-97cf-f34e81ba7fa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "875fd9ed-8134-4fe7-a9a6-a417a56a169e",
        "cursor": {
          "ref": "f5126cae-134e-46eb-8338-985d83c28fac",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "14735bf9-c066-4c8d-afa8-8fc34da2aa88"
        },
        "item": {
          "id": "875fd9ed-8134-4fe7-a9a6-a417a56a169e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "7aef2c13-8b0e-4bf0-a4d7-e5dc7d2a6951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e6095f-6c61-4129-ab11-28815c43ea45",
        "cursor": {
          "ref": "d6dcb3ab-d6d5-4184-91ca-d29130c4bed8",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "b3a51090-b3bb-40e6-91fe-c71c650081ec"
        },
        "item": {
          "id": "05e6095f-6c61-4129-ab11-28815c43ea45",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "63a83c4c-e717-43d3-9bc6-3fdb800b1dce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8d8e2b3-0319-47c2-97bb-17736174ad97",
        "cursor": {
          "ref": "ab7a8280-29dc-47f0-adec-34c14e2527b8",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b90585ed-fb4a-4060-b3e4-9d6b28a27b77"
        },
        "item": {
          "id": "e8d8e2b3-0319-47c2-97bb-17736174ad97",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "5bde1c24-d053-4a86-9c68-7ecb89c9d3ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c18d84d-89bb-4a04-8e25-b3fb0f85b600",
        "cursor": {
          "ref": "cb682ea9-f2bb-4fa7-a2fe-e206c4f82e55",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "7a80e575-053b-46e5-8331-f65976d0f317"
        },
        "item": {
          "id": "9c18d84d-89bb-4a04-8e25-b3fb0f85b600",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "4789ff05-bd46-4e89-89f2-855b1d53f1a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5562b657-5c16-4eb1-9c1f-ba54b13c2d1d",
        "cursor": {
          "ref": "11064c2e-0eb2-497b-83c6-fa9fd59913f2",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6b3ab3d1-b7ec-4875-951a-ed688866bfe1"
        },
        "item": {
          "id": "5562b657-5c16-4eb1-9c1f-ba54b13c2d1d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "7afe002c-710a-4a43-a308-acfd373394aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f29fa-213c-4afb-a9bb-41631406528c",
        "cursor": {
          "ref": "a1063748-3e9a-4543-a36c-806324b1cac4",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "2c73e34c-7475-41d4-bb56-22c4e2449add"
        },
        "item": {
          "id": "747f29fa-213c-4afb-a9bb-41631406528c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "0f11e0d1-c7df-461b-a8d3-207cdfcd78fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0c5f032-1745-46bf-8d50-8f8dae76911c",
        "cursor": {
          "ref": "3a1487bd-47f9-4116-8045-0eafb31bea59",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "863ddfe9-3865-40b3-bb88-a27aec298117"
        },
        "item": {
          "id": "f0c5f032-1745-46bf-8d50-8f8dae76911c",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "50ba21cd-e2a7-4c85-8f87-01270339c478",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cb70011-a1b0-42f1-a2cf-8cc2dc6a161c",
        "cursor": {
          "ref": "71eaa016-1c59-488c-9fba-3090be473cb2",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "9b99fef3-deea-4509-9a33-1ec62b11b1c0"
        },
        "item": {
          "id": "5cb70011-a1b0-42f1-a2cf-8cc2dc6a161c",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "77b05558-8045-4d03-91a0-a7ee737687a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc2ca05-2486-46ab-aecd-ebed6ec791db",
        "cursor": {
          "ref": "625f436b-19ce-4e18-bc7f-a22c49372e14",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "e5f5847c-2959-405c-a937-50361b8ab4b0"
        },
        "item": {
          "id": "acc2ca05-2486-46ab-aecd-ebed6ec791db",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3a4889a6-38b1-4857-8919-ad622c354ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27cd825d-1a5b-45f9-9c2c-6f6ebf183759",
        "cursor": {
          "ref": "034fb2f8-856e-421a-bcde-3e5d2996bc94",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7bb9f6ac-a1b9-465a-a8a5-0dd1415ed4da"
        },
        "item": {
          "id": "27cd825d-1a5b-45f9-9c2c-6f6ebf183759",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "0b3d5ea2-5d60-405b-a42b-d4250581ce11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a733c9cd-f8e9-408d-9521-b15fb330f907",
        "cursor": {
          "ref": "51a6b5e1-c0f5-4f07-b5df-b0dc63049b4a",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "fd4c00a6-1aae-42fd-a2e5-902017fd4b9e"
        },
        "item": {
          "id": "a733c9cd-f8e9-408d-9521-b15fb330f907",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "e6b98dcc-cc35-4eb7-9b07-a7e439595761",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "256572f2-4de0-48d7-a7f5-e9583c69e3d5",
        "cursor": {
          "ref": "51318ab1-dff9-42b0-960c-b5dec9cde168",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e1b4d778-d001-495a-8c2e-921cd537fa85"
        },
        "item": {
          "id": "256572f2-4de0-48d7-a7f5-e9583c69e3d5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c8adeb2b-b1fc-4bf2-b2e3-ff6c98ba6763",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b567d01-015c-452e-97ab-41f204506997",
        "cursor": {
          "ref": "4a0d638f-0706-4130-83ab-68c870ad68a2",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "dfb6cce0-c33f-43b6-b3fc-5e1ba694f945"
        },
        "item": {
          "id": "1b567d01-015c-452e-97ab-41f204506997",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "fd36f481-4ac8-42d3-ab29-4fef530d2fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d430135-f409-482e-9b70-51e00221e17f",
        "cursor": {
          "ref": "1f0d489e-e776-4c61-b22f-b1023a51551b",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8d2700bc-bc62-4a4f-a090-0ce2ef393c82"
        },
        "item": {
          "id": "5d430135-f409-482e-9b70-51e00221e17f",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "6fce6ddc-8445-4739-a848-463423b75af0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24227967-eb50-413e-b1b8-adecf5e63326",
        "cursor": {
          "ref": "2f7497f7-6997-4733-b7da-efb2f546d335",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "c58b0434-5311-4abe-94a4-51c01082a23d"
        },
        "item": {
          "id": "24227967-eb50-413e-b1b8-adecf5e63326",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "f0d7c6bf-1b92-4970-b984-4d0a10298af5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a97c2952-cae9-401f-b703-900b929a2b87",
        "cursor": {
          "ref": "f7665d27-1cea-40fb-8e63-396ff271b9ac",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "3fe628b9-9aa2-4391-a6c8-42d036cbcee9"
        },
        "item": {
          "id": "a97c2952-cae9-401f-b703-900b929a2b87",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "34f9c5c6-7417-4c01-bbd7-f7921dc46859",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d18609c3-8914-4ab8-bafb-3e339f5953a1",
        "cursor": {
          "ref": "9c86ea53-f274-41f8-8fa0-c2b792582ef9",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "4e18cdd4-3a13-4e3b-a65f-92fd7984829f"
        },
        "item": {
          "id": "d18609c3-8914-4ab8-bafb-3e339f5953a1",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e9944903-3718-4b49-9494-073c09ef63a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f9121fe-f625-4e2a-b281-8ad107b282a9",
        "cursor": {
          "ref": "9e1a488b-c215-411d-88ce-85370103f521",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "84d507f8-36bf-47e2-be97-2bfdeb1526ce"
        },
        "item": {
          "id": "5f9121fe-f625-4e2a-b281-8ad107b282a9",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f83a7a0b-ea96-4f12-8109-005e6c22530a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 93,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52252f9a-c2cc-4751-abd3-5d42ffcbbcf0",
        "cursor": {
          "ref": "23acd221-bcb3-432f-a362-29776efc17f7",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "035721df-2e29-4c37-8d80-82a3aa908a34"
        },
        "item": {
          "id": "52252f9a-c2cc-4751-abd3-5d42ffcbbcf0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a6bfe687-1e87-4217-b240-d4e65bbcbd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e84fb5c-d168-4573-b825-ef1181a2b141",
        "cursor": {
          "ref": "8b01f506-ff97-4870-b210-8e7b713ec3ff",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1760d74d-4607-4ce2-82b0-4ba2853b67cb"
        },
        "item": {
          "id": "7e84fb5c-d168-4573-b825-ef1181a2b141",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1632225c-91df-4519-bec4-eaee488bf6e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2316a7e7-5ab0-42dc-9087-a263109397b6",
        "cursor": {
          "ref": "7b67d957-277a-465f-a245-55a47b086755",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "a7744ab0-e694-4052-b7b2-81a72e247c4e"
        },
        "item": {
          "id": "2316a7e7-5ab0-42dc-9087-a263109397b6",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "4d60606a-2fef-4c8d-9266-04a75c61e3af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acbf13a4-620e-4b65-9074-f84597b9560b",
        "cursor": {
          "ref": "7b529a3a-0d65-47be-a9e0-1283a2cc20a1",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "33dfaf5d-e3ce-4f17-924c-1393b7687f03"
        },
        "item": {
          "id": "acbf13a4-620e-4b65-9074-f84597b9560b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "c1801ac5-9dc6-44a1-96f0-59b9b3997005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ca87cc4-f4b2-4da0-83b8-47f2e8190d02",
        "cursor": {
          "ref": "5d49dd99-870c-4faf-a619-e5360f1d4b09",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "b1c478e0-8b61-44c2-b21f-4fe1f973e910"
        },
        "item": {
          "id": "5ca87cc4-f4b2-4da0-83b8-47f2e8190d02",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f670e3e2-d01d-45cd-8034-ee14576fd093",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d71ba-5726-4439-98bf-3e31eb7762f4",
        "cursor": {
          "ref": "09581e5d-f929-48a1-9f4d-d04f3f12d45e",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0ce49e76-6ac0-4b76-8197-dd4c4174803a"
        },
        "item": {
          "id": "767d71ba-5726-4439-98bf-3e31eb7762f4",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "54afe47c-0d8c-46ae-af02-be329d8f9289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191a5e88-5dec-411c-a96b-4f236008551e",
        "cursor": {
          "ref": "814a2713-c4fa-42b5-ba2e-3670f8d4b21f",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "8a1f099d-3921-4965-b8d5-1e84366c31b9"
        },
        "item": {
          "id": "191a5e88-5dec-411c-a96b-4f236008551e",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "48a38140-0aef-446c-906c-0d765e70a106",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0622e440-637b-4b38-b070-6012d7c31829",
        "cursor": {
          "ref": "f32e2ab2-f336-4cfe-ada7-60ef9d33bcd9",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "09f709c9-5390-430c-944d-e713ab375b1e"
        },
        "item": {
          "id": "0622e440-637b-4b38-b070-6012d7c31829",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "a2144f40-ecf1-4de9-9db7-3d7539b18d57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "669ed97e-c961-49e1-9558-5a567e3be7e9",
        "cursor": {
          "ref": "d87a5c67-273b-4139-8762-6efe4b6165a6",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f83abdf5-b4b5-400c-8f30-ee49ef4a0ab1"
        },
        "item": {
          "id": "669ed97e-c961-49e1-9558-5a567e3be7e9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "886e3850-fbdc-4957-8c72-f2d4b96fcc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89e7cb71-0bb6-44ef-a9e2-95ca7297e636",
        "cursor": {
          "ref": "15d9596f-dc71-499b-ba90-8215a3328190",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "47def195-a095-4509-a8b5-dc54568b19f9"
        },
        "item": {
          "id": "89e7cb71-0bb6-44ef-a9e2-95ca7297e636",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f92dc38a-e30e-4f79-bf4d-5f4140d292cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd0c8fd9-bfd7-4139-85bc-b6ebb8478b9f",
        "cursor": {
          "ref": "b4628841-0251-4afb-832f-ea2d3f465149",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "decb3186-f35e-47fc-bd82-4923284ba24f"
        },
        "item": {
          "id": "dd0c8fd9-bfd7-4139-85bc-b6ebb8478b9f",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "fe09ebb5-02c2-46ea-b172-24f9fcfd4366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac3ac64-7d3b-4ca6-a28b-e7e694c86d64",
        "cursor": {
          "ref": "4286e708-25b8-4c65-a0dc-c7fe416f6155",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "0a917751-a306-4f50-81fa-f7fe9e9f9948"
        },
        "item": {
          "id": "6ac3ac64-7d3b-4ca6-a28b-e7e694c86d64",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "f5079ec3-0255-4a31-8bed-2a5e78748f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc2086c-44f2-4c79-91f3-7d468eb10e8e",
        "cursor": {
          "ref": "a6720d20-30f9-4e82-8f30-e320bb4aa6ab",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "221c1958-9342-4697-8728-3f217c61d84c"
        },
        "item": {
          "id": "dfc2086c-44f2-4c79-91f3-7d468eb10e8e",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "4aa4ab46-b373-4e52-86e0-8867b0787860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5376214-cf74-4ce3-b64b-2424d2926246",
        "cursor": {
          "ref": "3e273ba2-805d-4d76-8f83-d5139b38bdeb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "69da30dc-6d66-446d-a062-467fe80d8401"
        },
        "item": {
          "id": "d5376214-cf74-4ce3-b64b-2424d2926246",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "b93b82c5-8e5a-4434-902e-a534ac4161c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51753039-5bea-4998-b844-5efc45bcdaf6",
        "cursor": {
          "ref": "c082807d-8436-4ee9-bab6-fec553edcdd4",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "c17fb302-98fd-48bc-a7d7-d444010450a8"
        },
        "item": {
          "id": "51753039-5bea-4998-b844-5efc45bcdaf6",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "99dd3634-00ab-4386-a946-66c579db7095",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9569d59a-7f3a-4121-b357-6a34bffb6f4e",
        "cursor": {
          "ref": "e4fe93d1-8bfd-4081-86a2-c2b77cc97694",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7d130e6f-d364-4e5c-8d35-55d2bd362d9e"
        },
        "item": {
          "id": "9569d59a-7f3a-4121-b357-6a34bffb6f4e",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "ada39df4-4715-4d2e-a467-f97417fb0907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237fcfbe-f8d8-42f9-91f3-0b462027fcec",
        "cursor": {
          "ref": "69a57872-b58b-4efa-bb3b-84ff599bdbe6",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6fe67232-4589-442c-8b68-323ed18e3559"
        },
        "item": {
          "id": "237fcfbe-f8d8-42f9-91f3-0b462027fcec",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "070b362f-ee23-4510-9b85-eb1e2b52af23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c94e608-9901-4aed-85c6-c4e63e6ff10f",
        "cursor": {
          "ref": "2612a20f-0460-4e13-9a4b-0be2b881c3bb",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "15d3ca44-d000-4cb3-8ad4-f6accd1c1beb"
        },
        "item": {
          "id": "5c94e608-9901-4aed-85c6-c4e63e6ff10f",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "00203944-a4da-4956-90a4-d2ac91340391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ddfc4ff-c48f-4661-a8f6-a76f5ec7f579",
        "cursor": {
          "ref": "735a9c82-13bf-478d-b094-8e4b49356daa",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "01a7c96d-0093-43c6-8598-441ea3006836"
        },
        "item": {
          "id": "7ddfc4ff-c48f-4661-a8f6-a76f5ec7f579",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "76c0debb-bf25-44e3-873c-0cca7587638c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7632020-8cb6-4818-8000-7d2a97406a59",
        "cursor": {
          "ref": "c2a8db7e-a951-4b17-bd71-78b668d5c35c",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "5e37ca06-0906-47cd-991b-086aab0785dc"
        },
        "item": {
          "id": "c7632020-8cb6-4818-8000-7d2a97406a59",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "d40a84a3-f604-47b6-8b11-1421844a5c71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae81dca8-68ae-4308-9916-0ba63ec81994",
        "cursor": {
          "ref": "020771f9-bfe3-4836-b13a-792c7354113e",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "af33559d-62f3-4bdd-b1be-b2ea4a424cb9"
        },
        "item": {
          "id": "ae81dca8-68ae-4308-9916-0ba63ec81994",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "13febb65-8b8e-47fa-aa61-16ef3ef3c8f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a3a08f-324f-48ad-ad94-aaac2eae11cd",
        "cursor": {
          "ref": "ebdc05b4-9f93-4499-803d-0dd2f53d7d54",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "08a01900-7f5d-422e-8af6-81569c8c28d5"
        },
        "item": {
          "id": "23a3a08f-324f-48ad-ad94-aaac2eae11cd",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "c87c8e0c-8a5d-4150-9f41-684e62018223",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 89,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d070eb2-8b4e-4adc-881c-6487580376cb",
        "cursor": {
          "ref": "72f0b958-f1ec-49b3-9aa0-b13fa880368b",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "769994ca-abc6-4b25-9196-bdfe991d3caf"
        },
        "item": {
          "id": "4d070eb2-8b4e-4adc-881c-6487580376cb",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "029588ce-a9cd-422e-be4c-5ad461272858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c662e00-5cb3-4403-b367-12495e8e14a2",
        "cursor": {
          "ref": "57d34720-6c29-4cc1-b585-77cf83b7c1d2",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "e7ab0902-c856-4efd-89a3-a0244c8c4ce3"
        },
        "item": {
          "id": "6c662e00-5cb3-4403-b367-12495e8e14a2",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "a1357fad-8d78-4d8e-b854-c00aa022b7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0503ebf-b9dc-4f97-b952-99e556615930",
        "cursor": {
          "ref": "393c0539-10c8-49c3-984c-c93ea260235c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "9735252f-ffba-4a37-8b7d-1fb91f0196f7"
        },
        "item": {
          "id": "f0503ebf-b9dc-4f97-b952-99e556615930",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "608be288-9d0a-4b27-b89e-6ebafa2d2dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab87571-da31-4d48-945d-dde3e5c26931",
        "cursor": {
          "ref": "a79d2dea-f745-4b9a-862f-045b182259dd",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "b09fb6ce-9774-4c35-abfe-4f3571def87e"
        },
        "item": {
          "id": "cab87571-da31-4d48-945d-dde3e5c26931",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "9f87305d-0ce1-4139-9462-beda5a1cd2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a5ae102-e8e5-438a-9284-de15cef6b11c",
        "cursor": {
          "ref": "2b0d7e12-cf4e-4203-bd34-f6f17c07b8a6",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "8c930929-56b4-4dce-b18c-5786e107111b"
        },
        "item": {
          "id": "2a5ae102-e8e5-438a-9284-de15cef6b11c",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "5156f00b-ed0b-468b-a2ca-4a1da169ba56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f661ad1a-a086-4fd6-ab64-18209d3f0f4c",
        "cursor": {
          "ref": "b545e17d-8dad-4783-aa4d-38d20204d7c3",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "c59c6c8c-cd09-4930-b8d7-396919eaea39"
        },
        "item": {
          "id": "f661ad1a-a086-4fd6-ab64-18209d3f0f4c",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "e22a12a0-8a9b-4cec-a65a-6494460025a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2860a466-6d0c-420e-b922-83a9499d002b",
        "cursor": {
          "ref": "5a2b4c81-14c6-40b7-98a3-3c348332ef7f",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "f8f6e62e-a788-4ed7-a58f-0eb6a089dfed"
        },
        "item": {
          "id": "2860a466-6d0c-420e-b922-83a9499d002b",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "4577c35b-e218-47f7-95cf-f32191c914d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40966c3-f98b-444c-9c1a-ca9b43b3569e",
        "cursor": {
          "ref": "ec16140a-7741-43ab-9e2a-2cde0604b5c0",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "7068c1e8-a426-40e3-a7af-d01a7a23effa"
        },
        "item": {
          "id": "b40966c3-f98b-444c-9c1a-ca9b43b3569e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "49ece95c-5c93-4287-a932-a0093aea88ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78038eb8-1529-43bf-b65c-cbb035e8389f",
        "cursor": {
          "ref": "9abeaef8-cc4b-459e-9589-7207dc20e93e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "3ac7b2ed-82c7-4815-915f-0bb8f33c62ab"
        },
        "item": {
          "id": "78038eb8-1529-43bf-b65c-cbb035e8389f",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0e2cbc16-cd2b-4f64-889a-db8ec02837ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1be408c5-528f-40ec-92c9-ce893995b6cc",
        "cursor": {
          "ref": "15598cb3-0749-4510-a7bc-14a01584e0d1",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "bf5db922-6404-4f1a-ab50-a070ef024001"
        },
        "item": {
          "id": "1be408c5-528f-40ec-92c9-ce893995b6cc",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "20eb8cdd-bc5b-4b14-aa95-dbb9681ccfce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c467a8-dcde-402a-b43c-417d386b1aa8",
        "cursor": {
          "ref": "2006a244-b0bc-4636-ad5e-1f80d2398bea",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "36c79f7e-e36c-4fa0-833c-5afa0d7a5144"
        },
        "item": {
          "id": "33c467a8-dcde-402a-b43c-417d386b1aa8",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "c0286692-8022-49fc-b13e-62b454a557fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "630e63cf-7a9d-4d42-a71a-19cbf0137233",
        "cursor": {
          "ref": "3c70826a-13e7-43bb-96e0-e5bcd1b5bd04",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "070d69c6-9131-44d8-b78e-24b4ce432e62"
        },
        "item": {
          "id": "630e63cf-7a9d-4d42-a71a-19cbf0137233",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f5265060-8de8-4845-967d-6fc30c4e4399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8e8a24c-82ee-4cef-aa64-b6f610a97a5c",
        "cursor": {
          "ref": "27778140-1a57-43b5-98d1-1c67d45523c3",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "06eca296-a13f-4835-9006-b16a6f0c6829"
        },
        "item": {
          "id": "f8e8a24c-82ee-4cef-aa64-b6f610a97a5c",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e9372a53-1c6e-48d7-b40e-ad65ec66d756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee31bab-c2e0-4805-b086-eb1449e54a88",
        "cursor": {
          "ref": "37c3d73d-91c1-41ef-bd2d-dac3a1d05352",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "64b450f2-7227-43ca-a348-3483036a9c1a"
        },
        "item": {
          "id": "3ee31bab-c2e0-4805-b086-eb1449e54a88",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "7ec2927b-63b4-41d1-9487-331a94811fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c83a684-9fed-4261-8698-30779bb665cb",
        "cursor": {
          "ref": "008d1c03-42c8-46c6-9178-b02352ab7381",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "985d37f1-5203-4fdb-9e18-cb2cf0289e57"
        },
        "item": {
          "id": "3c83a684-9fed-4261-8698-30779bb665cb",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "a40ec61c-8509-4526-b2a6-0465b408c5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a597f0c6-3a8c-463b-a9d2-0b550ad72139",
        "cursor": {
          "ref": "68b7bd2b-aec6-4354-9d5f-dbe1b854152b",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "8995a038-9bd5-483b-90f8-120424ea4193"
        },
        "item": {
          "id": "a597f0c6-3a8c-463b-a9d2-0b550ad72139",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "03b40af6-7d1d-40b6-95ad-6a679c9f1f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c2ddd2-f4c9-47ba-9469-a09b93ba9b21",
        "cursor": {
          "ref": "0142149c-1d83-4704-8be9-cd61a120ec4c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "66bec085-0ef6-4336-a13a-151453e646cd"
        },
        "item": {
          "id": "a8c2ddd2-f4c9-47ba-9469-a09b93ba9b21",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5dc796fd-3368-4724-81eb-8f583483a298",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e3d4cdd-0037-4711-ab9d-90d90bd99f81",
        "cursor": {
          "ref": "ba7998ff-850c-4d62-94d9-c502e201a1b6",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2617fbf4-a8e8-459f-a248-4f17bf84adbe"
        },
        "item": {
          "id": "8e3d4cdd-0037-4711-ab9d-90d90bd99f81",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "32847b49-4989-4a1d-9119-88dd15bcc4b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4caa4cc2-8c12-4cfd-af96-80747449535e",
        "cursor": {
          "ref": "e5310798-3ca3-42e0-9b92-bd622c92a436",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "b69d2005-5f29-4927-9e96-cd067c2b8b4e"
        },
        "item": {
          "id": "4caa4cc2-8c12-4cfd-af96-80747449535e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b8541b57-71f4-459d-a854-b63f7c7d3745",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "264c3116-f3bb-455a-8c95-e1bcfbd73670",
        "cursor": {
          "ref": "5324aa4a-2fe5-4404-a0ee-2e5b4cf089ba",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "4f3ac3ef-6cf6-43e4-839c-f357ebc636e3"
        },
        "item": {
          "id": "264c3116-f3bb-455a-8c95-e1bcfbd73670",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "718e588c-8bad-443e-aae4-a88e44379479",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9158ae2-9f1c-4ea5-942e-d72b2c382b8d",
        "cursor": {
          "ref": "ef664e2f-5214-4872-b35e-5173988ffffa",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "f46daf44-e92c-414c-8cc9-a0b840fc7ba8"
        },
        "item": {
          "id": "d9158ae2-9f1c-4ea5-942e-d72b2c382b8d",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "5abeba72-b4c6-48e7-b8a5-516e97205561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403f90ba-2ca7-4d86-90eb-e3fd9df27c33",
        "cursor": {
          "ref": "c950fa5c-38c0-499b-bd97-7c8de129b066",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ed47f30c-078e-42ef-9e69-e52d66bc36c5"
        },
        "item": {
          "id": "403f90ba-2ca7-4d86-90eb-e3fd9df27c33",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "bcf342d2-88a8-4599-a998-295b85d85a22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "260502c4-334c-4a2c-b0f7-b26065691874",
        "cursor": {
          "ref": "c5a86e04-7cc5-4ac6-b053-4fd3684c2a04",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "7c12a385-3271-4db0-811e-13b8f87d3407"
        },
        "item": {
          "id": "260502c4-334c-4a2c-b0f7-b26065691874",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e65e59c7-3999-46c2-89ee-2cd056771e0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ac5924e-95b0-4894-bf3b-87c2551163f0",
        "cursor": {
          "ref": "260612e1-a259-47f7-b8ae-af6dd7e97728",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "13ad757b-c002-4763-b776-6a83087b4cce"
        },
        "item": {
          "id": "3ac5924e-95b0-4894-bf3b-87c2551163f0",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "56b7faa9-02db-47cd-a1c8-4153d1241a9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "253cedec-c697-4354-a211-5d856e0daf13",
        "cursor": {
          "ref": "ebb0fd88-5e60-4f1b-8bc6-b07683e68021",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c7083496-937a-4f78-a4d4-57c9ea2217be"
        },
        "item": {
          "id": "253cedec-c697-4354-a211-5d856e0daf13",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b429006f-b98b-44f5-9a2e-564f850f6403",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d4481d1-8e56-4496-977a-5e3d48307100",
        "cursor": {
          "ref": "039ca396-fa8c-4601-bac4-4331d25dde61",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "e6ddc8a6-46cf-42be-9ac9-62253b9732fb"
        },
        "item": {
          "id": "0d4481d1-8e56-4496-977a-5e3d48307100",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "0d13957d-0c64-42b2-a73c-ce74f455f582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b139dd3-fbaf-4495-8bbc-c7e14709d9f3",
        "cursor": {
          "ref": "94671da4-7730-487f-b3d8-630d08ade7a2",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "416b1fdf-8cc2-44cf-9951-ff5e89be708f"
        },
        "item": {
          "id": "4b139dd3-fbaf-4495-8bbc-c7e14709d9f3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "60da8619-d73c-444f-8bc1-ea478f467ff8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1d823f3-407f-42e8-b65f-c618fd34f677",
        "cursor": {
          "ref": "7efdb59c-d7cd-4fd1-9a4e-864f461ff735",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c50a29bd-5a07-49cd-8ead-3f6335e98951"
        },
        "item": {
          "id": "d1d823f3-407f-42e8-b65f-c618fd34f677",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "de4861cd-35cc-439a-9318-e325a5613f85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 113,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33dec3fc-b99c-4dbc-947b-20bf26eaca05",
        "cursor": {
          "ref": "4db5b4c3-b5eb-4ca7-91b1-0b64283fa683",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "dc3b7694-4158-4f8c-8329-2a162234ef2e"
        },
        "item": {
          "id": "33dec3fc-b99c-4dbc-947b-20bf26eaca05",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "df3a1058-b424-4e3d-92df-03406d19e349",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32d4f48-2c59-4ebc-825b-aaf2c2c2d6bd",
        "cursor": {
          "ref": "1ac4bc6d-6e6e-4a10-a4c8-fb69517f7450",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "b9d3dfe6-3ca2-4515-a603-1af6a1222f8f"
        },
        "item": {
          "id": "a32d4f48-2c59-4ebc-825b-aaf2c2c2d6bd",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "dd542951-184c-44ee-bcfa-abea4f6cff4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09bafba1-b504-4277-891e-1baa6f4bf245",
        "cursor": {
          "ref": "da89dd15-f524-4af6-a0a3-ad310f6f1322",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4f2a32cd-d244-4a70-a2be-b85303e9dbe7"
        },
        "item": {
          "id": "09bafba1-b504-4277-891e-1baa6f4bf245",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "88ef4015-b66a-44c5-a625-1bff560ad842",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 81,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4494202d-01ff-4398-b5fd-5ab238a72040",
        "cursor": {
          "ref": "6defe021-7ebc-4a15-91c1-1d07ebd698ef",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "7d639a0a-2e47-4b4f-a985-2d0d33de00ba"
        },
        "item": {
          "id": "4494202d-01ff-4398-b5fd-5ab238a72040",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "63e24ec5-55fa-4805-b411-4ddfcd13b81b",
          "status": "OK",
          "code": 200,
          "responseTime": 140,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27ed1eb-ff90-497f-872a-8c9fca7c6bb9",
        "cursor": {
          "ref": "d6c36e1a-dbd2-4979-b807-d28407a33a7e",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "200bc8ee-087d-4a9d-8d5d-6de19feb78af"
        },
        "item": {
          "id": "e27ed1eb-ff90-497f-872a-8c9fca7c6bb9",
          "name": "credentials_verify"
        },
        "response": {
          "id": "0e8ca9e6-8592-466d-af48-afce7287e068",
          "status": "OK",
          "code": 200,
          "responseTime": 1826,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6c7298a-8a02-403e-9fd8-e955ed15c64c",
        "cursor": {
          "ref": "f6045810-46f0-46bc-9947-93bba6da44ce",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "e89b5cf2-bd52-4776-a886-68fba64f494e"
        },
        "item": {
          "id": "d6c7298a-8a02-403e-9fd8-e955ed15c64c",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "4e53c1da-de27-4d62-9927-d33adbe7236f",
          "status": "OK",
          "code": 200,
          "responseTime": 1492,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "5393e9ef-0789-496f-87ea-edb2993a3a79",
        "cursor": {
          "ref": "715d342e-19e9-4e94-82ab-45bcc81b8dbd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bda8d13b-1ddf-46f3-baf2-eaa4314f6b62"
        },
        "item": {
          "id": "5393e9ef-0789-496f-87ea-edb2993a3a79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da11a98a-b11a-4e60-80ad-bbf6c2a50e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5393e9ef-0789-496f-87ea-edb2993a3a79",
        "cursor": {
          "ref": "715d342e-19e9-4e94-82ab-45bcc81b8dbd",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "bda8d13b-1ddf-46f3-baf2-eaa4314f6b62"
        },
        "item": {
          "id": "5393e9ef-0789-496f-87ea-edb2993a3a79",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "da11a98a-b11a-4e60-80ad-bbf6c2a50e67",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 79,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a43565b-6fdc-41e6-9d00-0ff3911aa605",
        "cursor": {
          "ref": "878176b2-eb2b-44aa-baaa-952eb9ae9c61",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "3bfbbbd1-7ba0-4a5e-9c74-6d14b822a818"
        },
        "item": {
          "id": "3a43565b-6fdc-41e6-9d00-0ff3911aa605",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "532e3f4a-c671-4cc5-97c1-1aadd9581494",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51879b17-9ace-48be-bceb-3a2822a3c556",
        "cursor": {
          "ref": "52eeb025-3c44-4804-8aee-aa52f600e343",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "ca8f190d-b99d-443e-8f37-41ef7683048f"
        },
        "item": {
          "id": "51879b17-9ace-48be-bceb-3a2822a3c556",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "a601fa75-ba7d-4cb8-b5bf-f8b2a5a63a04",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 76,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}