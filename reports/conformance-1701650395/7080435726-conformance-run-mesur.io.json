{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "cbdb5cb2-09af-4204-9048-98b7ad53d22d",
        "name": "Clear Cache",
        "item": [
          {
            "id": "d020f505-c189-41a8-8088-0e7fc08b2b86",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "bfbb3195-55eb-4de5-9366-c310bbc2bb03",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "bc3ff9c8-243a-4b48-9783-20e52e1b8380"
                }
              }
            ]
          },
          {
            "id": "fffa4029-fd06-4b27-92b7-5a5bcc5c409c",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8498d753-d2db-4a0f-a88e-34a3957379b2",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "e33bd732-6f80-44d9-89e7-ba7c203d39b0"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "594f4fe3-8499-4b27-8bd8-92453f7f1093",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "cb0e4443-3def-4f77-9e08-c18943737c2c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "36220f28-500b-4b80-9f97-584ca7531d80",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "a666ed02-43c1-49e7-8675-40a27f9f6196",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed2c499a-b795-40f7-877a-c7b9e78f1927"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "070894ca-d692-4e74-b2fd-2fc3ad528b4b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6bf511cd-ae72-4dc3-82fa-7c7178536377"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "81c81e0a-d5b6-41de-a743-9f45c1121c39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "36df9598-5e88-4f72-82e7-663a54fc4292"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "572d0b04-5308-45b9-b213-dda4ba5748ec",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "3e4a7e91-6e26-4883-96e1-3a2cd17b1566"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bbbb316f-3d2b-4347-8850-117c56e09935",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb5c8ae3-ea70-4ac7-a828-3817a00e03d9"
            }
          }
        ]
      },
      {
        "id": "82807082-3127-4768-bbee-a0b6dff6c0f2",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "a60becca-9545-4cd8-bf47-09e6aa097b99",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f0818bd2-e803-4309-927d-95b9215d4014",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4ce3e41f-d8f6-4030-894f-4e32a1fb58dd",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e207ca-edc7-4448-9b0f-45a75062610c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eb128fca-59fd-4e71-aded-13326a0ee293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "175ce2fe-8941-400b-8e0c-f927ea82c324",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92c07a1a-d3c7-4370-8ad9-3070b720b825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a5d1bcd-2897-4d9e-a0f4-035cecc68a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcd46e7-2bda-4330-b054-0bd4e5b7302d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546a289e-07e2-479f-b701-83dc55ebee52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "002e132e-ee97-47e1-a352-12e6f17ff4cf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "906f92bb-6e02-4337-9525-4323bd36e2a3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c22435c9-16c8-481f-b2d6-f5be67b17f76",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "045a3926-b0b4-432b-85ba-06b0684031d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5248bbda-7d27-4b64-a899-dbb3f2bfb420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c09a55-c039-4386-9a38-d50f04cac1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a753f34a-b18b-4f16-aa24-96375c0f8e42"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "eccda150-1bc6-4018-b0db-d5064594aba3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "ce4107fe-251e-4ba4-9dad-3130ea51a33d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "200a15d5-a864-45f7-a161-98643b91295b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "8227ce1b-d1eb-4eb5-89ab-35c59fbb5484"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a783b45b-dcc1-4dc2-8583-319b73a489ab",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "5932f10b-fdbd-4dd5-8db2-d2d82ead7538"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "dde982d3-3fc2-4d28-aad6-73b185b8d679",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9ff5c09e-a5db-4418-9bc0-d531c1ee8cc2"
            }
          }
        ]
      },
      {
        "id": "93c82f6e-50d1-476a-b699-4da6d72f11c3",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "2dfab97d-0d78-4f00-ae04-ac1a9bb93ba0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "02344e9e-cd62-4960-aba2-94745f7b58bd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "4361a3f0-3a29-4256-8466-79fc993667d4",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4efb5e07-f428-4602-84c8-95474a205207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a7c95f3-bda3-4f24-9b3c-949d34c33f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e3dfe06-4aef-4faa-aaf5-ed929d41bc96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "07911a3c-d25d-44cf-a7fa-7f653ee926f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1762bbc0-c679-4294-a1e8-68496c661610",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdb5a6d-321c-4a7b-a36a-5a6c0f464c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a59a4c4-1649-4366-a4c5-b9fcf331c0b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12f32e63-6629-4111-a54a-b40231ff946d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58947bce-fca3-4d87-bc0d-fc5b888c09d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b90794b9-e5e9-468a-854d-ac6b38212011",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b04a6e-9a90-42fd-adc8-c3841a767c18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66c964b-5978-4a38-a9f2-e0c894a8ff74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "431e7b98-2668-4284-acfc-103bc4f22cbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7aedf05f-deaf-4334-9c9e-31061462e237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61f8cfb8-220f-43c6-b4e6-331480d81826",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd936520-a04a-4fc6-b558-4cba9b8dc9a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9e11b92-858b-4675-90c9-6ea766766714"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "874b7d21-94a7-45dd-886f-ad76c6a22ad3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a145c96-be4f-4229-a1e8-d728755b8536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85e1a1ad-3f42-45ec-b769-d66f29115cba",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db8bf509-2ebf-42ff-8495-fe540b16a8c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6260c6ea-ba6d-49c4-b14d-0e3106b3cba4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a949866d-5a1f-41bd-8ac7-63669d912e10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "71b23f58-af53-45fb-b828-3333c28ed72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc794407-d074-4d2c-9135-ae85f11e117b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d3e3dac-bc2e-4de0-9ddd-d530c4f1fd65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2a26008-345d-4d11-a39d-0d4b1e7633f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bec38b3-3938-42d3-bc7f-e7dc75f0e697",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f3ee885-d85d-4e9c-b707-3d12f11111c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68455320-8661-4e85-8dae-426e940a4b03",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a74382b5-b480-4249-a9eb-9c66ef9dc272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b80b5c9-444b-48c3-8ba8-f0ef2f538932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08b37b9b-d1ba-4546-9615-a8b0524f384c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "02be81d2-b6aa-4394-875c-e54d32e22ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc15518-b46b-4dd2-aef2-792b42a3aac2",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c892206-5c77-40ff-adf3-ee1e2ee8c2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19bd8726-abdc-415d-b17e-bfcf80041d26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a35bee9f-4da9-439a-9c14-11cd1c51f604",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2a7d9f87-bc77-4e56-9073-e77bd6a3e70f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b9dab43-241c-43e0-8c19-f0762fadd957",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1a7b036-b3aa-47e5-8987-10702aa06f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8be173e-aa81-4428-b7e8-2a14771eb992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83299f18-5d3a-4ad4-b434-8fbad45a9f69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "50378d23-c41d-4b40-8777-9b8878a4dd44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80ed03a5-4cec-4e73-b222-d86c8cb2dff2",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52944195-3de6-4ae2-9628-f7cbf30a48e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "115c894c-c1b8-43d5-97f8-93c59286f420"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e264ae5-d8fd-44fb-b1f8-10084a00710c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3bd7e37c-8703-49b9-889f-531bff3c4f32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "157a7ae8-d90c-43ec-9e97-fe6e6285582e",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70968715-6c5d-46d7-a040-3fd8d7ed7bc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "753134b2-0d9f-485a-99da-014bcf08971e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b36b433f-880f-4c53-b9e1-ab63ebfd3a54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b3a3f94e-ceb1-4dd5-aa17-a24a73e9202c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e2c13e1-2acc-4be2-ad50-20c667988e69",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d7acf61-4155-410e-bf05-37806cb96ebd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06339d03-99ed-46d9-b346-ab26a082b8b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4456ab27-a051-432a-9aac-e30affca7334",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c880826e-cdec-4b62-8ca8-3721eda28e92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "847568da-8aac-4bb9-8ed1-03533173b5d7",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1fa592-2fdd-451f-b16d-c24b5e66aedd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea466788-ee09-43a3-882d-3a483513fd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7d496f7-a6a6-4fbb-9025-633af22952a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "75390550-f1b0-436f-a743-e57fd223b5d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de08c4e9-0b16-40c1-97d7-1ccf829ffc72",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2a90940-5272-44f5-9cc5-fa58545a8f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9398d98-7f9e-470d-8a41-42f9b297e871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f73079a1-43a8-48f3-b160-f68608f80993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b92373e-94b2-4ae1-aa81-98fadd0e15c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaadcf1-180f-48a5-8156-51a1593572d7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b6525d-deb1-42e1-87e7-e4a053fc3006",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa828ee0-c29f-46d8-821e-736cf6fab5d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd08de8-9902-449e-a526-8d4cff072d46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1c8df60-b4fe-45c0-aa5d-767070e8bb9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03a3c426-f4fc-4ec2-8192-f1f96cbc3bc3",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa1997b0-1b8c-46a9-a13f-9ebc40eee100",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0146c299-1874-4749-b575-64a5a105780c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3782a809-611c-4d62-870d-154dbb8da3f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "53e9e14f-4646-4760-93c1-96dd672943fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dca950d-964f-4ff2-aebb-0ca78c25d15a",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31ee08cb-8dd0-450c-83ea-61b37461b870",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a32eed20-1cd4-45e1-b9c7-472308b21d9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "129bf922-951f-43df-8914-3c8e944b9f1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "992c8190-6ced-4dab-9407-a5fac9369960"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28b3b371-c9a5-4bd2-b063-67c9a9061371",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0768664b-fa90-4ac1-8797-952183dd9905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6765c628-b879-409f-9b80-d5500caee0fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f77456ff-d0c9-4442-95f6-ded02e37f93a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6068cbc5-ec93-443a-8a6a-dae2b627e5a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e38b9eb-bc97-404e-afee-42bdd9ca49ad",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8be3bd2-81e1-4ac2-aaae-ceec9506a160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c4656c6-53f5-467f-a7a1-163947382af2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a95ddcf-eb39-4b07-921e-47ba770934e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c5a344f-c554-41d2-b2ea-c876a6694bb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b653744f-b19c-4a94-8e3d-276d73f7e6ac",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef801721-52c0-4958-b699-962bfc43e2d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a82f0ed-12c7-4978-81aa-a8f7e8664d62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16cd45ca-c3fb-4ffe-9a06-2a2b3c1e649c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7b3472ff-7a16-4250-a44d-4e55ac550ad0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4851a569-4306-465e-b04d-d02011d6ab24",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ba545e9-91d7-4657-bec0-b1c6cc5e31f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70722a5f-7bb6-4266-92bd-d67d5fba3038"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "763af4da-c04a-492f-aba6-22172beecd43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "000a1a2b-19ed-4db2-9788-4ff52e5baa3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c45b21-393c-4ace-b6ef-8d01d054301b",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997662b1-091a-4dfc-bce4-47d3610b1afa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc17b919-a6e1-47ed-8b0c-0c736976fb6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ad304ae-870a-49dd-b72e-4085b0fb25a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "bb155aa8-acb2-4138-9171-9dc0cc756116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4727a00-93e4-4444-b24c-d1238eb61fde",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba5a9d9-f0b5-46ce-a1a4-5fe23520c46c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "244b7258-a75b-4241-81af-08cfbf9d0e78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c60403ce-ec5a-4e42-a3a5-960f388eca52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a99efcae-4d99-4704-b3ae-383142203327"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d069396-ee47-49bf-991e-83afa764315f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e33a69-265f-4f8d-a9c3-936448f5d003",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c09a7771-fff9-4d79-b4af-77a009070bdd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c393fd79-08aa-483d-983c-49543b303159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66215f5b-6346-4b9c-bcc2-f9c2f3615ae0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d312b709-95cc-451b-a194-8679a5350940",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2108d5b-dc82-48c5-b34a-79c88b15ebee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f85e0333-4a9f-4162-89be-768f81e01c8e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f04fae5-c6e5-47e7-b3b3-6a79c3f3788e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "87827210-19b4-4241-bacf-ef2c0ae9b40c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be236fb3-9be0-4dd1-994d-f976fd103d0e",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225b1c63-95b0-40cd-9967-461e60c26119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9046215a-ec60-49c9-a785-6b53e671d7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2f2ebd0-0622-43a9-9ae9-69f9bc0c3399",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "14d2e7a8-c4ef-4ec5-9412-d695f316c5b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976d93fb-39b2-4da4-9f8b-39ab74a53257",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d69b2bb-94e9-47b7-a4f9-157e43e0a965",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2390c9f-c324-4826-8819-15d57cf79d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac9d3674-7606-44f5-bd9e-2e88e7b48387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80714cbf-f090-4d66-873a-1953705c083a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f262c6f-4192-4662-93dd-1b846bdf3b13",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5841120d-6131-4c90-854c-5e245485a069",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6421d0c8-66cb-4ec4-b9e7-30bdbb09a9c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f89bd17-6c5d-48d6-95b7-f6321c75e9be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "db434c4b-1841-4f5b-b662-9643d3c24074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d13e439-5ebb-4bd0-9729-e8d5f086e59d",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddec6a9-d52c-4a5e-8741-7e85da6b681c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc57ac73-ad5f-4eb8-8f30-5a88ca95b554"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f01dd274-7c51-46b1-ad76-f17f98bcac9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "065dee35-0846-441a-a71a-dd4221950282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0fed92-ce4f-40d7-a8c9-f6e044eddda5",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ebfb675-f072-4610-80bf-d7165607aa81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc0953cd-955c-46ce-b627-4f391e28d9f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2887110e-d737-4a0b-bf56-f0551eb24e1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d01d8afb-238d-43f4-b7c2-5c1c8c5f0953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfc7df3e-dd19-4f5d-9d77-fabe14f8da46",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26b8e906-3582-4ccd-9543-4d6850a3ecea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcca4db1-5005-40d3-ba09-207a090e5bf5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92a9fc0b-01a4-42a6-aaef-26e467ff40a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d8b114f9-fa53-4fe8-9e87-32361e82dc7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe9d7b41-fcc3-4bbb-a6fa-099d6c689d75",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1646f5de-57c8-4add-a9d0-fe24848d7f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b613a7b-8f29-4c3c-8f13-8bb37a4a4895"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60ec0d72-19a9-4dd4-b385-f6cc621d289c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aeab953e-1ce5-474d-b795-8dcf43836d0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57a2e88b-fa44-463c-96bb-245451d32138",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1e73ce0-1180-4166-9b44-d9468bf22d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42e2183d-0bbf-43cb-8c2f-960f55171003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49c1486e-44e3-4fba-bd33-6ff79c72d42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13ee4e88-2154-4853-a345-6458f53d6b4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0378f5-4043-466d-8c74-d654b4f79061",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c648b550-02c4-4e9a-8c99-e74e8dd673ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab3f9300-318c-416d-a140-933336aad6ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dab55b1-69b1-4324-8197-506f61497511",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1dae2d3-abdf-40db-bdff-5d491f664ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b42bfa-a7b4-488b-b638-cae291c7a71c",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b2b206-e7f6-414c-8771-1905c930038d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "377887fd-68d3-4d0f-8cd7-e5117f69d215"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b84fa8-7334-40d9-95e9-f8ceba5d5c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "d49b4863-4779-4889-9ece-72cb4c61c782"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d12494c-8595-4f56-bc92-2348da79d910",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a6eb365-4990-4356-87c5-dc7964c7cbc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e985035-3818-42b1-b028-6a5738618a95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "313f3f6f-a982-4fb6-9028-7e7540542130",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41030f02-6f01-4678-bb7a-ddaf6f17a6e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cf8feca-4fa1-44bc-b654-8300f857c290",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f260fb9-804e-4f98-bedf-b1ccdbbd3e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b4c3ea7-456c-44d0-9cce-65d89562d726"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "757edeea-43de-47f5-b763-2dde655b78d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cec96732-df4c-4eb8-8691-de5a6478fb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9a698ef-7fdb-4057-9abf-2ed36415042f",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdaa768b-0b85-4106-8888-b000cefcfb9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8634500c-848d-4530-a20b-1eb812da56e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26f789bf-b966-4fcd-b199-5df1cce671b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "31f95667-7ad4-43da-af5d-a7e3e8aff40d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5665ab2-ab2e-4b3a-be02-5fdaa8ba88a0",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24018d31-89c1-472d-9f49-1f6b145026bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1a0a39-1200-42d4-8589-803b0f6d4605"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "880493cb-9c11-4dd9-88b9-520e99c0f117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "0811baeb-3edc-4274-8cbf-a500f455ca65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d63c1c69-28be-4550-a779-70e179c38eb7",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09163093-bda2-40e8-a4d5-170bcd1bc3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dce4f444-e471-4f18-9754-ec5d21e3da5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6db36a3c-d4ad-4c96-b647-d38aadf6b6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9717a3e-e956-4758-a9f6-6cbc6680c1da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7cd980f-9862-4206-9d80-e8fc8422aa98",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47f164a0-f259-4419-a2f9-cc354d9f1966",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "975395f8-1d90-4c14-839c-4448a3efe93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b1f0030-ff64-4784-8eaf-f42a40908f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e011af14-e72e-4359-8003-996d0ebebf50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f9d0db-6f6f-4d59-aebd-b93b70ff44c3",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5bc7a73-e09c-4b83-942c-562e4cfe944c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8191a664-3d51-411f-a19a-217abbee0866"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "122def8f-2be3-421e-907f-01184c6a974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "2376fae8-b654-407f-ae3d-7fa59cc657b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad378921-eaec-4c6a-b18e-e364feb89f81",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fdb88a-3473-43aa-a4d2-dbc09a99bc1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65f4fe5e-03be-4325-a793-039ea7320eb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cda90e2-9229-44b1-bbb3-c78af210824d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "105b0960-8b3d-4690-8884-374d38760bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ee39762-b24d-48a6-a22a-c5bd10d8ba8a",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d066473-fed6-4b9a-8a60-325ae885c8e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "108ec89a-2117-41f9-8cd6-8543e5e099a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce8d497b-773e-4f7a-abda-cf3004746c4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "e397bcc6-777b-4729-9cb1-52cb5a625820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7cb21d8a-6b92-4a7d-ae08-7890785598d1",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae01deee-9cc9-4153-bf3a-1419de0d3e01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3461172c-b655-4b52-b037-fe4c0e24a558"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a930247a-fa4b-4e6b-a40f-97602d015d77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f5ca461-7522-4a3b-a8c9-96fc22fadf7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "748faf37-6b62-4321-a28c-9ebebadd82a4",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f73b381e-fb05-4456-bc19-cdabb0f83c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee8f47ba-15f6-428f-8fb6-c6a0e49abc3a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96993b29-4924-4345-8b65-dd57709db349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6746e506-b8cc-4e72-903f-bab7f259fe36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47a701d1-ce6d-4df7-96f7-b194b0bea8b3",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80abbd49-8b50-4786-bdec-8bc32cf420e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78c1b0dd-baec-4781-bfcc-a06a9e57c180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c9bb7d4-b228-4ff6-a1bb-6408025f8905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1ce01ab5-bf67-410a-8b9c-c49c0e580c30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd6da6a-2c58-44a5-b4c6-83ddb227fc9e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c6fb5d4-3c53-4668-97b9-57c7b34446bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f643af42-1ba0-44ae-912b-fee421cbcd77"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c18a61-ec57-4f7a-a22f-eb3d7a9b5dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20137e5c-7189-400d-8019-66dab7bfcc13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bc91562-f17f-4643-b9cf-d6c72078fa6a",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da583fa2-6a1d-4454-b386-08e306ef9f32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d9896cc-b92d-4334-9825-00363e40c3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "875ac871-2039-4f7e-94d0-058f6ddb766a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a6e5c9b0-87f7-41cd-aff1-09f10b36752c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c517e146-3fcc-4079-98f1-a60196deabf9",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43f19e97-dc9a-4bf5-8a52-37047043288c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "299da5f4-46f8-4c14-8474-2e13531f038f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a544a928-c47a-4f38-96bf-97f052fcb4d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90bbbef7-9c46-4e1d-a425-63c8398ba0db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4fa035-39b0-4a46-8f10-dd86fb44a3d3",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b46c8c2e-906b-4466-a942-71f7fcafc408",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6db3f449-74bc-4948-914f-8153c913edcb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d65bd85-f009-4399-a94b-7daa8e760c35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7adcd40-9182-4b4b-8b63-7bf5595470b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc295b56-7792-4a6f-94e2-89a4f491783e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f862b606-95c6-4cb6-8821-7d06ef44986d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7735cdd-2e1d-4221-a8ba-e79db58ea054"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3440a76f-b69b-4d0a-927d-a168bd10be52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc1fd45-95d6-450e-b764-81593d53e834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b496bc1-4f69-488a-ac9b-7e0bc02f36fd",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60483a32-342e-4c1c-9f12-d91abf1dd1bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c2a6961-83e8-4b3a-9129-50865b10155e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5461e49b-2ef3-4a7e-8516-c64776070fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c83f300-d79e-444d-8ad6-f9e46cd88ae2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcc0c439-5cb0-4ded-bf37-6f49037688cb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e53c6cd3-caab-46d7-bed7-b1c4955806a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06a1d19c-472b-4898-9440-344dbd72fa47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f85ce93b-813e-4cb5-b92b-ce0c7374ac0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "effa4850-6029-450d-bf14-7cb31861db82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fb5cd75-2df8-45f0-8de9-9b1ec9ac42b8",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2501d1e-2200-48c1-bdf5-a8eaebeceadd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf2e31ae-dd4c-47a8-9b0c-120ea18844ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce7f6881-2dea-4a92-9192-30b249afc4fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6abc98d-82cc-49c6-988b-798b8437d065"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b80a2438-49ca-47f3-8935-be34aeddf3b8",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e451bfff-cf7a-4ce2-8142-afacb8dba944",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525d5bd4-d5a4-43e5-be59-6d8110543c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2c954f-c6f8-438c-8521-9941a7c6fcfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "0a0d6488-1557-4316-bac6-579dce05bcb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0d55be-b904-4974-abdc-bd6c6358a0c7",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96dc6e1-9383-4b92-a709-7ccc7ae9a5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7b94adb9-577d-481a-ae0b-0078e951e482"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc4e8aa-567e-4fb0-aa3d-29adc60fac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "39f8071a-c2bb-4611-b480-cfd4660b2f20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "505d5d4c-0dad-4f7a-a196-c2c431778d49",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8d157f3-41f8-47d8-a636-edd47d1f94d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d89902-8e4c-4b62-b8cd-2eb7b8d3627c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee5e675e-a768-408f-a9b9-98ebdf6fe641",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b77c95f-42f5-4c06-be27-1d90e04bfb8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "244447c6-09f6-4529-b1a2-b5d6a5349972",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3104c418-3643-4027-a7d4-ba991df7e155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2f0c51b-11f4-4e9d-86f4-c961d5a72acb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0787aaa-8f79-4caa-bdc9-285f017cafe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "865e9015-3684-4f25-b53a-40a12f9c1aa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2391582-09d7-4ac4-89c2-5e8fc55b4f8f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b07aeaf8-0266-40a3-b786-cbca89808969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07d20ee1-ccaf-4f52-ba6a-03b9815a4e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af455023-579b-416d-b389-73e71677013f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1b0bc3f4-faac-4d6e-93db-18ceee616136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bbc29e4-4720-47dc-a3b5-82f0175bbc64",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dcc9baa-d203-46f8-baee-1749baf93bb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5bc5911-65a8-46d8-9cfe-ce236b47f531"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5547122e-f4a3-4684-9aec-c9cd30d5c1a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3dbf9fbd-4348-440b-afb6-ea0a87f7a91e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdbe2f0c-6b1a-4dac-8fa0-ee1729c7b61b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "145847d4-abe5-49cb-8277-fc5c05e0b4ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c070909-d0f6-411e-be88-1f3e118a4c97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaeb8622-90c2-452d-9d15-672f7c006193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d9ca482-11ee-4256-81a2-54f956fe41b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bbdbc86-4016-4625-9087-bd54b419fd79",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d75acc93-710e-4a80-89c6-aaba51f94fa6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5cc715c4-3d27-4d83-8718-8ca86185480c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b6821c8-cde9-4973-8efc-5d9a8742ad97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b3b847-d0d3-42f4-928c-c99924ab3c60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaff3bb8-0333-49d9-9fd9-246ba9867ff3",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d488ecaf-83c8-477a-b412-3b8279c3c121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7a61022-a98d-449e-b1c4-2bbdd5258bc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311b3248-29f8-44e2-90f8-8801b559d6c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "95a511c3-80b4-4c2f-b9bc-924ca157ff3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fffb76-d24c-4036-bb9d-6d48f163a294",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df293998-d3c1-44b9-a774-677d61177a8b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d353479d-075d-4070-a7a2-179832b3636c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef75164c-a38a-40ce-a1bd-eced0bce1e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f2bc1ce-aa2b-4155-a8f5-6b705d98e352"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220e1927-2ffd-4ce4-97b3-ea9559d1ae4a",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cbe708b-fc10-46d2-8420-99360869d8a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b2e5a22-51bf-475e-8aee-0d6adc31cc0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f2025a9-50c5-4b67-9fbe-313253a63b34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "535856e8-8563-4741-b8dd-860bf94a48ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f78d8446-40a8-405a-82ba-18e297182364",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c3507ca-db33-423f-995e-eaf5ad5740d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d1033e1-9e36-47b3-aa3a-26034e60a162"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe229f3-4f3e-40da-be81-f3d9faf18ac2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e44b79bb-65cd-4cb1-a85f-7259055bc532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe14da5a-9a23-4792-b9b2-b12c5a43f0e1",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90e93742-8454-4dc0-8f57-7a9f6c74e9f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec19fb8-fcff-46ed-be31-99d2bd8afb8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b35bf29f-0df3-4270-90ef-b6df32c9abd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c53ed93-bae6-4f57-a3b4-90fc456033c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6aa5bbf-d956-4d78-af85-0d4073316c88",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074750b-0456-4173-b46a-264c9c1950f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dfa1176-d40b-4642-9692-06e5ae647c8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af47c570-efa0-4015-8989-d623acf8fbd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4989b1fb-6373-4b20-be48-8a98fe0bfbbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c85bb067-c6a7-4a50-9b6d-f429172ffbaf",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b84f1699-e90d-4711-a33b-b169ebb86754",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c511873-1425-4ba9-8686-34301ee5c652"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b71f8b23-6df7-4cdb-b5ae-0cca7b4b7ef9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7573f05f-0ef7-488d-a5bf-f1f7ed85c790"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37458e01-b4b0-497b-83e6-c93d27e6dfab",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ac20da-1433-43ec-9db3-d31572ee2c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23064bea-4aca-495e-85cd-0a944de596fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90163de4-1d6d-4810-bb13-b35f0084759d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ef1a555-30cd-4b86-9ad8-70efd3704670"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d44281-19fe-4b82-9da9-38576d0b434c",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16b8b573-30cb-45c4-a734-a785f0027ec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994e9373-666a-4821-9c92-e7fbc6b74935"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00bbadd6-c6d4-4318-bc6e-32bba8f3cff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "635c8b98-3058-42c2-8acb-d7a084e6d073"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc0f9904-80cb-4107-ab9e-e103b95e6157",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92979f7a-8e87-470e-82d2-c4abc1b4ef2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bec44cc3-c874-41d0-97bb-8987c06269f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a65c8ab0-2fc8-42a5-a281-89b1fd61f114",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "74059d8e-0ffd-4669-b5ac-623896dca287"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3d04f0a-b400-4d9e-ad63-fdc57e2cab32",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b41fd8e-cacc-40d6-825e-f7effcca40f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45457cf0-dacf-4c59-9c93-e435ec14a530"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddcddee-560c-47ed-ae7a-44e37490642b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fe672a7a-4a94-4fc3-8f16-0e4d7d875207"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14faea0e-e559-47dd-9791-431682ce2f8a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a7a57b4-224c-4179-8c5e-43b5d7bcf979",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e6be072-e604-44cc-8162-48d2e9c24bfa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215b3f5c-1b1f-461f-ab04-742a618df6ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "de42e629-5203-4fb6-afa4-d8840c410d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "325e3590-3931-4fcf-af6c-eee15d5ee832",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83051729-4e15-4b48-b385-5deeeb6a182f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f20494d-3c37-4490-80b5-45a449b8cea6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed6fceaa-5dae-4076-971a-73c95ed9e9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "43dcab7c-ffed-40f4-b345-efc85a4db79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc47c748-a448-4f31-a538-d43dff730781",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a06d07c1-cdea-4eb4-9bdd-7d0119ae9106",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e7e5c92-a439-486d-85bf-970dd77a1f8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27e0da8-530d-4e91-b407-7ac2b7612227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ea66a1f8-35ee-4c02-87d0-83eb7b6debe8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e21cc1b5-cbd2-4b75-b951-7d5e50757175",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10fba965-4f72-426b-a3f8-10b994bb994a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994b4fe7-2bde-426b-bc08-96677875ee6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8bbdde1-7625-4961-bf1b-c1a023990e0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1920960f-9a0d-4b90-aaaa-cc3dd60452fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35706bd1-5598-4466-82af-1eff83697499",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a774f22-0618-42e9-b654-c62f1fe3feac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a34c83f-0696-49ee-95b6-a1ec51d62602"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddd11735-7e44-4965-9fab-b5c408535909",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "826dcd1e-cb30-4eae-9fe2-3a6b1c740e87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd94856-04e8-455d-9a73-9433170d3ad7",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83ecb7bb-025a-46e1-a018-807914162677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b2d40e74-dcf0-4f5f-9021-8f45d89d40df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99b7ec2-848c-48b9-bb60-8120d24a860f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d41c9668-cb95-4188-928a-9c226e837aee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cb72caa-4c81-44c7-a088-d73be85432fd",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2038310-f864-4a42-aff8-83dbafc65682",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b397b6b-f534-4c26-b2d0-d098bcb94182"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c2c280d-1cf6-4f12-91f7-66ac748fe657",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e9d12ee-9d9c-4950-886c-9312cc088b55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0ab186fb-3fbe-4832-95b3-d97b3f2ffed8",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512e0e36-095e-444f-9f02-b45beebacdd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc626e9c-5c23-48dc-98a9-3fe9b7f71c16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681f6b4e-eb21-40d9-b740-3cd10c9eadb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0ae13685-2697-4d75-b550-55a77840c97f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16afd213-3109-4899-a989-e43751e5b9ae",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0fcc5e6-5647-4df7-82d4-cef29300db17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e256d91-ae16-405a-9ba9-b4fe43eb54d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f27f91d-3527-491e-ad3f-d9febc8369b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "66a0e25f-ea98-49fb-a5b1-0b80cc3ef9c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4d27704-7a9c-49e4-a319-1aeebc9d8b76",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66054502-a5d8-44b2-ae27-3e82f93b7013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9f950d5-d862-4e9e-944a-ea5841525789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0294a167-68de-4121-a2cc-028054f017e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eca1814d-e2f8-4a08-8373-569182552484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "094eea53-feaf-4688-9180-d92cc0f6e381",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ea7fad3-5d47-4edb-8ac3-976f8279027f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07582fa2-bf93-4eb6-9532-9452a78df93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdbce16-5895-41e3-a5f3-cb81d3782da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9b59ee-0e3b-4d2c-881e-14ac4bb95fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca3bdc80-fbc1-4133-93d8-345e2b38b61b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4aaad1c-8fe5-41d1-a67d-2498185af304",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb96de0-ed3b-4d63-8a6d-70db064988e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eed5d6ad-c97f-423e-8b26-18a5073e8c0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2cb298ec-c263-4346-b82b-64ff08820aec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29ea1585-8139-4b64-a7a0-c4158964b589",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a37cb8-a1ed-4415-80d8-9794dcb4d0f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb69f020-ab1f-400d-a9bb-260a27170cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29da620b-62d5-4957-9961-7e99c0786104",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "021555cc-8f45-485b-814a-0f39111b021e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a70b8e9d-16be-4ce0-a42f-2fcb63eea8ed",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc390fd6-44af-43d9-8b02-fdb9fba95e18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a26d5fc2-da71-4e10-bcad-56b85de06ab8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1a6707e-432f-424d-b946-977286b05c76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "85aecc7d-e1db-47f5-8a4c-235af1c7fe90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f399d6a4-2623-419e-bcfe-c000548dc21a",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5fb010e9-05f8-4b26-a04f-41811aa77ce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ca9f7f1-282e-42f0-937f-82d7f41b071b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e96ab0-8803-41e6-b4ca-9189ccac598b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "af5df454-1fb9-4942-b485-49d0a89d5ad7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8043af72-c3bd-4cd3-b921-763586493f1d",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c43babf-20a9-460e-86ad-420de0ff4b61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "842e80ff-9b81-4b47-9dbd-a569d7f8f4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297e1235-32de-4edb-8dbe-ef8c940329aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "57c62423-6f58-4637-8c7a-903987a4bfa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ee2b7-eb88-47ca-9747-21ffa058aa14",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c925b0c-3ae2-4fb3-8ac1-077a8e8af8f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a67effb-e682-400a-991f-4d5784633185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c3b2b76-a93a-4356-ae09-e45bdb28aec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "64466700-9b59-434e-92a9-74a60c603f05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e4d2f3d-59f9-41d8-9640-778446a94fcc",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec71b1c-da12-4fdc-9b2b-bdb3db8d107a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9ca683d2-8260-4f72-b4fe-f91872e7fbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bfe9da7-2bac-412b-8867-b584a7e99600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "e6c17f46-886a-4639-9387-4d10b8c12b06"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9b5a2eea-0441-4a93-bd26-bef335bfcc77",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fceefa12-0ccf-4624-8899-c6babfb89b5c",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25efdf59-f38a-470b-a8df-426a43db7ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "648d1368-4090-44b6-ac19-1d7d4719dc70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "769c3ceb-b08f-406e-8363-cea1ddbb4946",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "725f5048-c3cc-48df-a056-f2c6b659355c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "293c7433-6707-436d-a80e-ae588daebb7b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9bc1a60a-ef60-49f1-a1b6-d2045f2c51d2"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8b61165-3a43-4cc3-8e76-6d701336886d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c2318f-e8c1-4f7b-b373-400e1f237803"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4abb1e75-34ba-47ae-bea7-1d466fb0f7f7",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "78b3dfd2-13d7-4ec5-aed6-6d8a0fd531e1"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "969330bd-c327-43ba-8b26-eeb78dff8d2f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9f28aeda-26c3-4d50-9831-7159f2a63bc2"
                }
              }
            ]
          },
          {
            "id": "d2448f92-ae75-4553-921c-b4583328ba43",
            "name": "Positive Testing",
            "item": [
              {
                "id": "84c79dc0-0a1f-404a-8a72-b4f2c3a0e0c8",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "bba93994-fe23-4ccb-adc2-7174f967fd02",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "707b587e-c262-4df1-ab0e-138652f676a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1f2c301-9d7a-4da9-9407-9d7a24ca6c4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d0d3015-2383-4a2b-a913-a4f068b9c781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a904a5c8-e10e-4d76-92a3-70ad1762e3c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f1568b04-e480-4de9-96d7-ed9d1d547a61",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8a20064-7a3e-42d5-b789-b12f274634be",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dd1676d2-9fe6-4109-b426-edeab7f0f441"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ec4237d-0b54-4f75-838f-242474f16ac2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "bbbb0c95-ba5d-4d55-b82e-7d896b94137a"
                    }
                  }
                ]
              },
              {
                "id": "3b25f228-6fb9-4355-b2b8-7681536bc784",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "482600e7-3140-418f-a128-a055400591b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d7d72ad5-b5e2-4af9-b6bb-a0cc53d9763d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "19f07b1b-4494-4e3a-9a91-25920cb4315f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7cb33112-2253-47c0-a64c-f62fc9c8a2e6"
                    }
                  }
                ]
              },
              {
                "id": "d7cfc41b-d2a3-404c-a847-d848cded5d1e",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c06770b-d8a2-4c69-b9ac-a2c4cafb646b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "928687fd-96b6-427d-96ec-b754d168904a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31b476cf-aedb-48fc-ab6d-5069f7e07ba2",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "2ad66fc8-1733-409e-8d1a-dc39c1d25169"
                    }
                  }
                ]
              },
              {
                "id": "5235844a-2dbf-48c4-8926-951e27a36f0b",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1af0159f-200f-450c-b5b5-33aa3385f652",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "789e7db5-a468-437d-b3e4-098558aaeba7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "989882f0-6195-47d1-9566-65cee1aef2eb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d9e5ae57-57ac-47f0-b263-44d3155bf8e3"
                    }
                  }
                ]
              },
              {
                "id": "54fb54c8-3960-49ae-8fae-1554fb4c7b84",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "248552d0-87d0-4c80-8035-2b4ac0d173dd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "cdb72890-7e2f-4398-97dc-cf951855e7c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "aa3a6eb1-7714-4e67-80d9-9dc4b563a1ae",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "23731d8b-05a5-48bb-b285-38bc5a70cc4f"
                    }
                  }
                ]
              },
              {
                "id": "fd240aa0-9c9b-44a6-83a1-4f4749c5e9d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "574d6515-94fc-4bad-8d9b-2dac40cd93e0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "12145f6e-c876-482b-b690-071ed23001e1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f956ade6-3202-4e08-8a6f-8408504fd9f4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "55b8d75f-b642-45fb-a93a-71ae25d353c8"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "852e373c-c220-43c3-be05-c2050a547ad4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b6dad39-590c-4e55-8b56-819985bd328b"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ad040683-c976-4603-883c-03ac37489f39",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "04bf799a-da4b-4d17-96f8-b4ddbdf29fe9"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a974b763-ed0b-4c95-8ab0-0e79e5aeac56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "58628ded-9ce8-490e-855d-67a92546b42f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1acddc2a-4834-4dcb-9d0b-d9f268042fce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "64fdc479-7485-4f45-b53a-eef4c132577d"
            }
          }
        ]
      },
      {
        "id": "64f138d3-fae1-4bc2-86f6-4831178a93da",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "c80e32cb-9858-4af2-9bac-badb25de300f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "84559056-9c79-45e0-a220-78bf81b5eedf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e4bc6ff2-f2cd-4e90-a85f-2fec3658df71",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9433c9d-dbc3-4f77-a380-d2f9c8fe7ec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac152451-a67f-45d7-ba0e-c569e759a973"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204ffc8f-66fc-473d-b53c-6c0522ce68b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "3d488d86-073a-4546-ad36-798dfb36d9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edbf2845-9afa-4adf-9470-c27880ebf262",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822803f6-c811-4a2b-a67d-161d121e155f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fd3d96b-3bde-42b6-aa00-497c7882e7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f9ff57-b683-4da4-9c36-a20e260d20cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "579d8f54-54c8-4f99-a6a2-7182a18f75a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030f8ece-f5e2-4c08-adb7-1d01622d3d3e",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec5e219b-2cd8-41ef-ba36-07b5dfea99db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1dff703e-b638-4348-ad5f-cdb761bbfcbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "838f619b-503d-4063-8568-891021cf32f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6d16199-7dce-4d8b-8b61-77f4ff740e1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "655e5129-7a26-43c8-af01-3b266056132d",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "806fe77a-e509-43f6-a1fd-2fde12acc0a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4eb8c661-2ed2-4689-8be4-fe5b3ff7aeb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93dfcda3-4791-4adc-975e-5538c896f11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "745904e6-7255-464e-a614-38c0447103cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0336b61-207e-49d7-b370-773b0cdd1e1a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93551a0b-ba59-4006-9182-292e2c9e8c30",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "43386639-ea14-44aa-bbbb-6804b4799a42"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8050bc59-854d-4f98-936c-97bcad3a35f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7eaccbe-76d2-45af-ae81-4168e5d96952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f502dfb3-1ade-4e17-aa03-eddec8dc35c5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f33de516-fa4c-4eda-b7f6-04bb87650706",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17dba488-04eb-400c-b5db-43236c5d9b4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76db7b94-ff27-43b5-9de1-877f06e64226",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4c961910-e8c4-41ac-888f-543f2e2501f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e64232d-4f28-4be8-b6c7-fb5c52ca005a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee977fd2-1744-400b-a66c-b79fa2f09df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "671acb18-9a99-493c-8bde-8e9fce3e7a44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac75600b-e36b-47fe-b5ac-34007cbb9e6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9cea766-d455-4a98-9c51-d6cb26c16ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fbafd1-bcca-4450-8b3c-4b13b06f0590",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48d1dbfb-26a6-4939-a5c5-b6cf78b12791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c270b3d4-3cf9-4ecf-b4f2-793771818b0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3267d2f2-99c8-4e52-a50f-f44c540a458e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "2f7165de-63ea-4ddc-81d6-20b3c2370de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85900db7-38f8-42f5-ad27-81c32ce94ff4",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51fae29-cc74-4f1e-ad2c-8566c32367e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "89c74266-aa6b-4435-a011-d691b79ed4f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cca73e89-04f9-4574-80a1-62b12c80c755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "97b5725e-bf1b-4308-a4b8-50dd96f5f4ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "272324f8-3d72-41d5-8e11-64f14f43ca00",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cf307cb-ad83-4ec3-aac1-43bda927064c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a6fa478-3453-4d0b-8217-9846a6c96277"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "408f18ee-c20f-4495-9d49-27d290f2a0e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce5ac514-989f-43c2-b8aa-b63167e21d8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67393ed2-5616-4317-b1f9-2524005d10e4",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "998b056f-a359-4359-918d-c4456eed1907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b59e2d91-0d2f-4189-ac25-27f4bfa9526a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "593d0dff-9d7e-4d44-ab47-882fa86fa7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f20dfad1-2a8c-48bf-a9d9-f922b7f69184"
                        }
                      }
                    ]
                  },
                  {
                    "id": "037275a6-a26d-4540-96ce-20c19e83a7b7",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de067c6d-44de-4a53-953c-8c3b6c586572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "310cdf4d-dd61-429d-b4f1-50cc72e47e8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ac86eab-1179-4f38-86ab-3e9165dd0b88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dbb105d8-750c-4b55-9dfc-889452ec52f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bff8d0b-522c-401f-9757-fc92004fe254",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f70b9b7-59a9-493a-a875-5e583e28c8c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05fb1c07-3175-4f32-877c-5e0506ebf337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11f895bc-fcb3-4136-b90f-f974cc1c96a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b889d28-a5a8-4146-9877-53d86d03d404"
                        }
                      }
                    ]
                  },
                  {
                    "id": "115f6a25-750c-432e-afe8-63fea71be4b3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e496d2d3-c80f-4c27-99a3-fbe2dada5d70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e2973e-3710-4868-8e73-17bf1990f25c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb17aa5d-5c2a-41bd-8913-c58b1fad05e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa94ab35-50fc-43e7-b8fb-dc5c7079913c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d30a06ca-4133-4587-86a9-46ab0fa8c172",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ef72b2-449d-47a8-a3a6-86b4d5f188a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0678d1f0-79d3-4fe2-86e1-b8435e561f72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "901a281f-bb75-483e-860c-bb688a8f4086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fc53246-91a4-4e8e-8aca-775cec67ab4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91b9d2db-622b-4c45-9d05-9063cbde459b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f41aeb7f-f4c5-4c29-b812-982af00a38c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caff2273-d0f1-4210-bb0a-53155f1cfeba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a4deed9-7cb0-418a-922a-3563cfdca9f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0706324f-3785-43ca-b582-12008c85f1f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a60ab2b-bc0d-48bf-8586-c1fd26c5cf7d",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4155ad49-695a-403e-98bd-5cb79d452517",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e47e0000-0679-4f4e-87c9-2a5d70945e25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97980fdd-884b-4b1e-ae99-c0758986a3c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad051823-c042-473a-b6cc-981dd6357b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22ba0aa9-83aa-40bc-afb1-68eb7210977c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "348701c1-1075-4f6b-90e4-e24f8f2e09d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c1998a9-29ef-4c9b-b4e9-104d762cfc32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aff72eb-d46f-491a-b37c-ab8d6ea4cb26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b580b40-56ed-435e-ba57-13f12087f6d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0331488d-00ad-4f51-8efa-a5fa855d6cff",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f575c52b-5a3f-4d75-b904-02782e513e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fedb8762-74d3-4f10-92cd-2176d9e3d44f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ebbf9b-8423-4577-887d-71d5497989b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "327283f2-8b0a-4d1f-93de-7511cdc2efc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f10dffa-6dce-4e1b-a7e0-d9547a6c2818",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d98a9c10-bb71-4de6-ab53-6294369be858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a12e7de-db23-414a-9c45-ba80b16f66c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0b03727-559a-4533-82cd-e8ab7228fa5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9546663-9566-4cad-bb8d-40d9919b6ca0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286639c1-6b9e-419c-95dd-51432e063045",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf6e852c-dd40-431f-adef-e6fa92e59124",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f129de8-34fb-43b2-ae42-4f195efcbfb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ab0996-600c-47a1-be9c-f5142d04223b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2f1e27a6-3bc1-4520-a747-3d6f2961d351"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613359d1-780a-4e99-821c-f66f4facaf2e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37efce66-2154-416f-95f3-4a6b56c3e52c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "338fffd1-eb6b-41a9-9a94-3f177e6aa572"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2a85ca3-fafd-4029-b49f-6b75af385d7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc49110a-d50f-45ad-8774-da411bdd1d3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b1fe63-ff0e-4795-9c9e-0c8930e5c815",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1adb617-271e-4179-9ffb-260f07c7a881",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0aef81bb-b7d1-4370-bc4f-57f9f6b86f1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5336637-4b47-4e3e-b01c-f27d1b38c03a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "69ed78e3-b7b4-4ec3-b2f5-3fc4a70d6507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e596c76b-0e02-49f1-b892-662c48cd0566",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab64d7cb-6770-4a00-807e-437a0424a7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb6c0837-8bf1-4568-9649-2625ef645483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "986a7a99-5b3a-48e4-9615-e905091fc026",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e76bcf83-90e4-48db-8d9f-58042044c235"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7d1bb7-5de1-48dc-904a-b9077e43deff",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a0a2a4-2428-4ac7-a2f6-c9609f64d778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "869853b0-02d0-4813-8226-fac4772263ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fd30c56-d24e-442e-90d1-09107b8430f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "572a7ed6-8f38-4b15-8a36-5b18fe571bb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6d27992-179e-4e23-952c-949bff7324d6",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10b61008-683e-40a3-8863-ae8e89edd890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a16b995-0c2c-4d62-aa49-93cad43c85a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbccc278-5bad-4f8e-9e00-cb03ae54b3d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b3e46016-b96e-4a17-9313-0ba39bde63cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba5a2314-ed50-43ab-b142-4430467e0dfc",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c6752a-54fc-408a-bf44-1636ea81d77e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a45e9267-d6d4-4bf3-9071-2519f3e5ef8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beab03a5-b952-4b2e-9b2e-5e3149882a39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58094076-485e-4215-843b-1e8e73e7eb60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c8c1907-189d-4eda-8585-d43b0e283ee5",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "59fe2d15-ff7b-4357-9c62-4e2abbfc157c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "64fec7ba-eba5-4bd9-9cf0-a744a5b6e78a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "134b962e-9706-4a6d-82f2-490edfe1fd8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2ae3a57-7697-438c-8632-961652227dec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d28edf5b-a663-407d-a2b2-a35b6e949cb8",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "347b2bbd-7473-4469-9e69-dee0d2c0fba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30089e6e-7f03-4ee1-a7c3-70553c1ac5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d502f0-11fd-4cb9-b7b0-b68a8a7cd57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea280955-5193-4f56-84fc-9a7822f3cfb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cf1fc3e-9ca4-41c5-9166-745df8273a57",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e94db19-b197-4a91-bb4c-aea5814fff14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e97eb696-a928-484c-a419-9fbf4a9ec958"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630f45e7-2bd0-467c-adc8-4b753a42f7d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "36a21ee2-926d-4cbe-8b69-cf34e284fe8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014212bb-b74e-4d62-bb94-bdbcc702b5ec",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69210a97-1268-43b4-9d14-99f55e45da2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e17ecea-9132-418a-83de-b6ff50ce8f1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d6da539-df26-4f43-b86c-8f8499657ce3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e91f372a-b3c8-4047-be50-ce950cc8521c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3df55d38-8201-41b7-8024-7246fd116b25",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1769a3d-a6af-4050-aa7a-b553ba4fdb7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83de488d-cf68-4f7f-a4e6-ab68ce34595b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00db7dd3-8403-4831-a68a-caf6615d9eff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "49837ec4-52f8-4ade-bec7-e1af87078adb"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "867c5a28-b9ad-4dbe-b53a-11cce8dda221",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ebf662f9-4d55-45f3-b5b2-fe5b4ba7e731",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2397166a-8642-4389-a4d5-07b5f069f52d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "836b48a6-ad8d-42c1-89f9-fca265d08f5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1610ecc8-58fc-4f02-949a-c1a2490b1fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "04236055-4995-413b-b928-dac22a030b7d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b5d820d-5311-4661-9993-c1914712b25f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "16d5618a-9417-4197-b556-28eebe8ffd9c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3e5352f7-e409-4e04-aaff-5eed4f7e7a10",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1a9cc8f7-b159-407a-919b-6725a6364b67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "120385ed-0351-47e6-8f61-a7b4d6c439ec",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7e2fc3fd-7085-4e00-be4b-7787bfec5a23"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "19193ec7-106a-4ad4-9e90-46610ff9169d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "da3e4e85-c531-4b69-8d66-986f20c3e8a3"
            }
          }
        ]
      },
      {
        "id": "e2be909a-0c18-4183-bd29-2677384af980",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "c9825a28-eb35-43e8-8d9f-890a8700ce51",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8759c0d3-8ef3-4635-a718-6b1ba0ab74f4",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b0663b3c-08d9-4f32-aa0f-72dec33178c0",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1ef70c3-74d0-4ddf-b558-3c6c2b90a715",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a399b1b4-ffdc-4d22-8de9-7dc3416dfc55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3643f271-c0df-42e7-8f17-80ce767fc6e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "20fcfbbc-0100-4a4e-95d3-a6593fdb3262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c31cf2e-df5a-485b-9145-896a62f3c7aa",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42115835-f9fb-4ce1-b737-8f033e0fc33c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d27559e4-9d27-49cf-8d99-d8cbee3ff83a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e7363f-8fdc-40d9-a7a5-1665484afb5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "9fd5a8ad-333a-4563-939a-0e4afd0b034b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9c360af-5dc9-4a55-a132-799568987899",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0382d9f-62ff-4491-bc81-67627c25d08e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c27c2d6-76bd-4235-8a13-8d3979ee93cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1448b30-84ed-40ed-8e56-22a5e76dcc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5be17f4-be20-45f5-8ddd-7b9ebb4e87f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c39b6e4e-afe0-4665-b715-ba72c591b40a",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4d86ddf-be40-4436-870e-78e7f2849a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4aebc3d-2015-41fe-b086-980ba242f1d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1a2f7f2-ccaa-49f9-bb5c-4c560756033d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "43ba957f-fe23-439b-9695-5fdd2b3f0778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b78b69a1-e52b-4754-b123-444cf3e359de",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8494725-1f3f-4568-8e9f-55d3c205d67e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90aa0449-8ad3-4454-a47f-be449c2cde2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d57945d-1f85-4f2c-a86f-534b4b34a778",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c28a3b02-2bc7-4dc3-9ae9-a742cf60dd3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba4bdea-9d4a-40b7-83ed-2bc011d72e26",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4dec4c4-9d1e-47c4-9a5e-7cb44d0f3281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d0c6307-a589-4f69-8408-c5e3d25eb493"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4381a6e7-e2a3-4be7-b25f-dd538c1ec97c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "df18f760-98a8-4687-9bd0-879783da3fdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9100a095-18cd-4d1e-80de-bbc94496ae7d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1da2fca-dc7b-4044-bc1c-ec15505725f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b8f055a-d080-425b-a6d8-472e1458e9ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcff493-b8cb-47fc-852a-c12f96e9b9ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8812ff47-4c17-47ea-baee-b64f50f381b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6bbbd4a5-d0dd-418f-b86f-0f3a697f96b0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df1da8df-dd9e-494a-83e9-79e4b0520505",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75a36386-82b7-4fce-a3ad-9d21d60daec0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53be8070-7c6f-4cd4-b5e0-3783bb67a7b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af52cf5d-12f2-43aa-8c57-9e38eebf2818"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d20065d-91ab-4ddd-994c-dffb935c14a9",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e4d1444-f696-4235-ae0d-311c58e95cec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8ca4a80-6384-4ab2-ab53-d59e148f0239"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36f7ca82-4168-4367-b3b2-edb4e967c7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd978702-4925-435b-a4b2-a237ddbfbe47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57c6f6d2-c864-4694-9e87-da23f1f26052",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb1e9e54-777a-4da0-9331-663fcecd4aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80fa5930-e250-42ba-a9a5-23e439b467b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9249057d-c5d1-40b1-9930-c880b6966d8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "33d4e7f5-183f-42bd-8bc7-24e125926896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf256666-82e3-46a1-9d04-9c1e90eb3227",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f664fd-c10b-435f-a1e9-ddca34bbd925",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f3b1b0b-ec15-4fd2-bfba-733fbef88868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6234c8c2-c406-4abf-a19f-e0a95e09b07d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "5827e49e-a2c8-457d-be72-9ccab623126c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c25f6d-540d-46c5-96af-60f1766bed0a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf2d1494-9076-4214-94dd-d8d389d5f1ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "408c96d5-d3a6-41b3-8a92-e1b48d4db09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9433578-2120-4053-946f-795b2813e08b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "44b7b561-16c0-412b-8b54-3192ea24ddd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2331bc07-24a8-4ab4-91d3-33b3db2ff96c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f937ecb6-0f3a-4a52-99cc-9d950eda7577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ca4939-e3c1-4691-9809-38f777fb9f83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba14894-52db-4b2e-87af-cd5a1a56bfac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "dc8c1356-3722-4364-96c0-d75a6d9ccc50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da5c268e-3816-4bb5-a617-73cc609520f2",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44361cd6-bd3a-489b-a8d6-2d43e3cb35f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b07c4f2-e763-4e9e-9e08-bdf767a9d139"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbdd381d-ed5a-4dbb-b18a-679d8f39b8f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f98c951-5821-466e-bc81-8956ad44698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef099087-30fa-42c2-bf57-cb20203d92f6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b34e378-4a42-4d27-9cc2-59bbeed90a08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "be39b5f0-5dd7-4983-bf06-d19836875b32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac2f7d6f-9e27-4963-aabb-14f40f6e9a05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfd146df-32f7-44d6-8bdb-5c184c88fe46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7322df-def6-4579-a78b-2c6077f32209",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df283600-83e4-4c77-b042-da9d6b03f25d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49843e29-78d5-444d-8116-b52204ad861c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61565185-8ddc-486c-b992-0ad2013dc488",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "0fe6b4da-42e6-4bca-b291-ee8a477bf8c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f988f8b2-f82e-4f78-8741-63718d04f8b3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88398539-63bc-48ec-b5d0-6aa7afd799bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90350292-b7e6-4f51-b109-12c8b93c61ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a1cff1-279e-4d10-9e05-0e4d18338ee0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f3b5a11-1b58-4b4a-a6f6-99bee98fe2cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3253219c-d0d3-4adc-ba30-c65d735c1b9a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "029d87bc-c6a1-4b92-9385-9c3fa6295401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ec778b4-6a2f-4720-ba57-4c9e011d42b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e80f0d3-ab0d-4e49-9af7-dae5b298fe5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "22db6441-db2f-4344-bfe2-071f98497d35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f1925c7-4ff1-420c-b6b6-57fc7409410b",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11eaf030-8b89-4bf6-9b70-06e8bc503459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2dcaad40-128e-422e-be51-76de27c73c7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa618eb-c416-4007-9cd5-be7d1946d085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f8f76328-83bc-4a94-9a3c-a9f807941a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63b9a3fb-a4be-4299-8e91-9d7e2e5f1428",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c0ca3bb-a433-46a3-b78b-c5f53911b665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8877ad6-2bc2-4b4e-9c92-7c7a97997802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2610193a-8ab6-4e73-91a6-656e8a51b6f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ea109d0-2e98-4d43-ac86-1b76ddeb4052"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82f0dba0-966b-46be-8593-213c47f08a20",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "829851e3-9af2-466f-8565-8e64aabaf55b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61864b01-3d58-42b1-b921-9559e45940a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df739747-b6d5-4448-9269-dd4bd27bc5ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "045301c2-4466-4118-ac65-9e547801d2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57e28b1f-6b33-4040-b46f-ffa49e4778ad",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1402c34d-db31-4ef9-bc24-015c0eb13056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e446024e-bad7-40f2-a933-53687e50839c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7519483c-7ed0-46eb-8666-ff931c35b628",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d5ab840b-7647-4070-bb1b-389323318dbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6455dedd-635d-4728-af62-cfbbee7b5539",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "814df44f-9c98-478e-b1c4-c24e51f6246a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8d300a1-82b0-40bb-b227-d20fff8d568a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b536e4-09a3-479c-8608-35372d7e48d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d58dada1-8b9c-448e-aecf-a36ed9692af5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae5f70d-c231-4fa5-931f-342e3ae6372f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f4ae2e3-e6b0-43a5-9859-5decbbe5503d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52b64ba-0f85-413d-91c6-4cf265c57ccb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea387231-fb2c-427d-a6da-d4ad730a18d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f5801dc4-bf23-48ea-a53e-353022a412b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49321ac2-2bd6-4281-9a6a-0e4723c09f3b",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "189e0088-894c-473e-b584-42f7ea0c53da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ae5534f-2336-40ca-8673-68b011b3dfbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a46bab8-ae0f-4862-943f-40fb968091d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4df02008-fdaf-48e2-bd78-88074e6dfed6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf0c9219-80d7-4834-b14f-c17bb9ff02a8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "358500bb-e331-49ef-b806-4c671eac625f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b894e63-ef87-4e6e-9ee8-299077230ee5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f06e066-667d-4e69-bc69-0de03206231b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1c121278-01a7-4ce1-98bc-cf449f8df82b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ce70188-64ad-4ad0-af31-1e626e321e2b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a0c1998-c135-4dbb-8999-62bfefeaa489",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cf181a-da3a-4bcb-a7c4-5f6d8d84de4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd69748c-2460-441c-920b-7ec619fb6c02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "60d64dd4-730c-4f83-9e62-5e172da7a74a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4cf18d9-0ac5-4e8e-9bab-2d7e226dff7a",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30864073-8837-4223-b66e-1bd90a9cb414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c7501f9-849c-4c3d-aa58-574e6123ba2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce67347-0476-4e4a-8ce9-22795ca090e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e1a246c-d417-4878-b638-544f102286be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1bbce8c-dff3-40d2-a6a7-b607dd64fd86",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1594a8e4-c743-4eee-9ed2-e662539e753e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "116a6c16-aff9-46f5-a881-698cf77b5a8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "162e0f06-5b0e-4278-91f9-d977f30c1e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "53026f8e-8165-44dd-916c-ae0ffdf52c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39eb2cab-ca38-4884-bd16-4848ac22ccbb",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c0dfafe-8ed9-4d87-b763-bece595f9463",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "517fa83b-dcb5-4eb1-b1d3-517e76f13746"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "947cd3ce-42eb-437d-9367-d7c5cdb12fe6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1968c8e8-2a70-4c63-a2c9-8e8afbf3ca98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f64e53c-4794-4c1b-9159-ee22df51b5ac",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ffa4898-cb40-41ed-9330-c05ba9e4a7c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29d56b2e-5dbc-411f-86ef-c777b7359c70"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c7ab644-fbc9-4c6e-803c-979af26c23be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc8bb479-f59b-4137-b3f0-4c46ad57e0f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e00ad81e-82e5-4b1a-8a7a-5e7794fbde63",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "82818426-f5be-43a7-a23a-2a3af51bc73c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "095c65e0-7688-4e9e-af7f-dc09a6dd5430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3499a702-ecb5-4b1a-bd11-f92f824513c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "58441cae-848b-476b-81f5-95b83fbd5ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "458f3bac-914b-4415-9a90-4d030aff2592",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b18e9b50-46e4-40a4-8b45-59b7fd50d470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "019d9fde-9576-4878-b3c2-6a7d123b6e02"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c31e88bc-2074-4cc6-9ddf-6de6bd82af01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dbfe10a7-5143-44a3-9095-13359046abdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4303e199-891a-490f-bfe8-2aa73815bc15",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6762a599-8569-4a9f-9e1d-095f1413c6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c5de692-a285-4fb5-940e-ca099f2bf744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f8c9102-92bc-42d5-8cd3-eb9ad1967134",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cf1a238c-6e82-4b2d-923c-96b7fff89a60"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7605ee2-0a1d-4dc5-995c-28642f2eb318",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a157fb7c-b06d-469b-920d-61c37258a35d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "463a9330-6a59-44ee-9633-d5ca69944afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2064384-5542-411f-b2d3-ac8c544532de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "876c109d-ea0b-428b-abb4-a369cfe7eed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46dd4767-4c65-4764-a396-7bb18ffc769f",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c757c5d9-afc4-4a44-82b1-dd86116ec22d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3e55b1c-3498-4779-ab9b-0fb96184b5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2655fbd5-f8c9-436d-9ae4-d9ba346fecff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c9d1ce33-9074-40c5-928a-edd2eb651069"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e3f699-0d8d-4462-bdb1-348085a6a2fd",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2390e003-bb05-439c-b03d-186051fa0c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "058afbbc-0d37-45eb-87e8-37d70b6f4ad7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e087c-a56f-40c0-8809-594713da0a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9471ac26-b3c0-4084-bd20-6e042e67605f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c699db55-0fa2-4ad2-b89b-75032a10b123",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8b2ca73f-3077-46da-9c69-2232d1beeef0",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d20fa62a-c1a9-4cd1-9a80-51e8e54f1551",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "23f5023b-42a8-4dad-939a-6a937d3b7d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ee99e65-f3b9-4b13-b70d-c0161cd3ba06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4456a79b-086c-487b-881e-8cb460be8849"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab590eff-90a8-4eec-8ecc-299461b2aa4f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ab0225de-1145-4e64-9dd4-4ea519757fad"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f927deb6-f3bb-48d3-91f1-346951ed4ab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca7a3e41-e661-4dae-9f7b-cf6d838261a4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c04f8c5e-d54b-4b1b-a61c-2748111383de",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "5fefe049-7b76-4bf4-91d0-24016dc2af3f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "df7e3cb7-3081-4bc1-aaf4-a620b9acec4b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "86a1ab22-6c78-4e23-8a55-e869cc23b2b5"
            }
          }
        ]
      },
      {
        "id": "82e7a888-b9ef-4f68-8781-34c14c3e43be",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8e01a732-3590-4d3f-a500-e2e805b50f67",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7e628c0f-0a34-45b9-9675-4cdc2021b2a3",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d2b7c4ae-38a4-49fa-a719-7a1de6ef50b5",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c5c5f5-f33b-4daa-9f5d-1bbb6b6dcd46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c723d2e-888c-4e98-acf2-f8f706005357"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7379f5ca-d7c9-46cc-967c-fd0d1a1e096a",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b70bd04c-50c5-4ff2-9016-d1227b786f05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b1e6505-f7ab-46a7-93f4-e9c4553fc536"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abf0b493-0351-4197-95ae-e3dab550e344",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a25eef75-a8ed-446c-bde8-8e41cf313953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f06e6e-891d-46cd-b226-a89105cbbd96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d9ffa0-9f83-4739-b8dc-fb2d7ed945a3",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88618df1-811b-41b5-a576-06d2f5c1e360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f20af336-5693-4046-a0aa-a43214f50f41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed2d1678-57df-4f3d-960e-b22af9e4b988",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed11091f-b091-4928-a019-0761c54063d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac93ffe-063d-46b3-a5d8-8399fef747bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdda4836-6747-40c3-9fa3-3a20a19558c9",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1f67d0e-d7b9-4671-9368-f8d1dd591050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12d86b2b-64fa-41e1-a1c3-26ee37faf666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "caefa055-2857-4fe2-8fdd-10cd9b86031c",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4d2cee2-832e-4a79-88f4-a6615b68317e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0be74f1a-728e-44a3-8920-c7f2145f7b23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f80fa656-7712-4086-ad06-a76c33528448",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5202e8da-4ebc-4772-9ce2-a69a9bc84507"
                        }
                      }
                    ]
                  },
                  {
                    "id": "add4408b-b2c8-42d5-b6df-c7edf4cf67bb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac32b57-0aff-42ea-be26-b2fa514bdd2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8f98cc9e-04ef-4810-b759-d9bee9074f34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "70b26650-5b7b-4f16-9f4c-95b92a3285c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dca4125b-ef83-4796-9117-b1f0bc08346f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a274128-6ad3-4f03-a36f-d9ba999dc569",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ab61243-c480-47e0-999e-536069a4568b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24326580-3a2b-4ee4-9942-be9d2612cb3e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8665b717-faab-4cdf-aee9-29fbb93f0883",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21aebf27-ad1a-4b9a-992e-2909a46173ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e12439b-ac50-4324-9fd4-b4be0ab63f01",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37394f9f-6b50-414a-be16-69166dc007bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7900bad-5c36-46d3-a3c9-a64527ffa10d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b26b57-518c-47de-8e17-de93b1b86c67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a1f166-c5bf-4711-84b0-f588abb2e206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56437b7-294e-4500-b39a-d21aa85d5e5f",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe0c931c-bdad-4c68-b28d-0ea687b1a056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9293106c-a789-4e77-80a6-6e34ed27fe1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4068f31-0613-467c-9542-400048e54825",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "896a78ed-cda5-45f6-8cfd-f96b58bee840"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d43fc2a6-4906-4e3d-8706-889a98121c94",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d7a7c73-7cee-4b85-a9ed-1de64fbc60f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34c7f027-abae-4e5c-9747-c3787643866d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bcd61b0-a672-4814-8eea-4c34d3c74280",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57176af8-80f0-431d-8825-3ff2befe1daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f3cad0-cc13-4d62-a7b4-0a440966ce3c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb89368c-ec3a-406c-9018-c8d78974c7ef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "124cd5ef-e53f-4593-bfe2-bc2af353cba0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f3a7ca0-faa4-44f4-8615-1fe3a1e9ab62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "68f9a9e7-86d0-49b4-8e9e-ca47de67e27d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "486224cb-9c6e-4960-8b02-296778005939",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "386f8347-ae6e-4c1f-9b48-b97ff9f4bd05",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "29a97b5b-75ec-4de6-83ff-8fcfdb697abf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "efe08cf1-658a-44e1-bbc2-c44a1bb0e97a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb0c36fa-339a-49cc-a25b-45383bb11ca9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21ee24c3-9667-49a1-b237-6f9d1a2e4d08",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c84ead3-59cc-4e76-8971-9699791cddd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d498f004-ccc9-4571-ac17-bec86ba396e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0fa1e09-f452-4fbe-aa3f-82c7d58dbc2b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcc9fae9-f3cf-4e4f-806c-4a211eb7c884"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30805e87-2558-4e68-a046-ff007ee685b1",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e40388f-3b80-4150-9fb0-ac05975996b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3cd230e0-397b-4313-b84a-3097b2f68afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf2c88ee-5d3e-4e03-a0cc-7d793c14d533",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52057675-a18e-42ba-b9ff-a5be6e41eb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "612316b5-7af4-4235-862a-e9264d771e9c",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea8389f-6de4-4791-9ea6-f23048bfef0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d81d6e52-5e75-4feb-b28d-c648ae61cd89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0060ed29-2179-41c8-924b-765d572cc1e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2635dcc2-4dea-47b9-bef1-28093a509cd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27080e3-56e7-42dd-9e8e-2d17841a39c2",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1b0d0c8-32f3-453a-973f-ccf08c957d36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee22f887-4fa5-4bd3-ab39-f8c2ca8cbebc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e73bbe4-79a6-4c9c-bab1-e59c8c0781d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f0286b-9e0e-42ab-baf1-8d8493af3ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed53dc9e-e3eb-4133-b47d-d736baa72ae3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d03fcdda-3d9f-405d-9fc5-5d60e658264a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b00b3c1f-d9c6-44ad-bebc-c08c5644a468"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5122f0-50d1-4b7a-a032-491e403a538a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6bc2ff4-a786-4e22-8f8c-b956800827e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "177087a6-c936-42ee-8105-693c22a56e62",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53724085-ab70-4df1-9bb6-c6c3a677b612",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2059063b-0b84-4658-ac1c-5d4dfacbbf43"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15f0f030-3b3d-4309-8a63-0dbec31fc3e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ecacc389-9cb7-456d-98f2-c22503b74caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be56f20a-0efa-4e83-9ea7-4c367eb08d6f",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee41d64d-532c-41de-8583-2bbc15864b95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fdb12b7-5952-4db7-8547-272308c6915c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aa76a96b-6ed5-4ffc-ac4f-c0d295bfa638",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ff4d222-e84d-4f66-a3a3-ff3b6b6f1e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb797ab0-0339-4cd3-b0ac-c9f3b633fecc",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04123bc1-dfc1-40c7-a2b0-f1b05f7f16ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77e07372-ced6-4d3f-b84e-ad4e5360507e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e4f082-5210-4bcd-829c-8c0c8d7b6e4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "620eebf8-5ac4-4c90-aea2-6674e8351608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46aa8b81-660c-4d46-8498-2383374dd0f5",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bcbfeb0-994a-4223-a0ad-93b90eee44d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b6bb125-e552-4f77-b7d2-b48666cfe9c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8a5e3f-ceef-4768-9221-1fae02c610d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e99011-844e-4478-899d-7dd60002a3b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cff5ec9e-31cb-4d7b-98c9-de863b9a4625",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bae06d80-5e0d-4394-82a3-b49b5ad3b2d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a79b0cb-3d4a-4d66-9c96-cb4a55296f28"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc42be31-557f-4c94-9a22-4d2932bf85be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e0083b-de08-4eda-b254-cffdff4f3f65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9df6f0c-07e8-4cf9-b49c-dcce7b87e694",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af15b3a2-c72e-43d4-adfe-d98244fbf027",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea109147-43bc-47d1-9101-1c6fc4e6b6fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34df21f-adb9-457e-882f-a6e069355c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6dfc77a-317c-4319-be8f-a83fa09fbb22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b18deed-d8e1-447d-8f78-ce0b3dc43f2e",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e429e0b3-3149-45a5-8e6f-35bf49cd0df1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e374e38-1940-4cd5-808c-66f30b24cd58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad989df2-341c-430a-862d-3e9127bbdf5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e168f58f-adcd-4e0e-94de-7a6ca03b98f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6711d84-3e46-479f-b888-bcfdfe466855",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34ba28ef-a341-4d03-84f2-1de17ceebcab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b2d83f6e-54b5-4109-8bac-e374bd9a6d62"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb18643-82f6-415e-8684-12f2a7e95452",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48d9b5ff-216e-436e-9f6e-59e979f618ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "916e44e9-2249-474e-a6fc-1c41b194765c",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "107ba1a4-fda2-4018-ae80-b3d945b24357",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c5646b-9c38-45df-a44a-9016b6aa6f37"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deed92fc-2323-4e62-8050-b93188286c74",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7dd3011-87c1-41a0-b127-90fa71fdabd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e43b6f1-2408-4c32-b77b-40bb7c6031e8",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbf413de-436c-4537-9b75-3d26f0d063f3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "21db1948-766d-481a-8e24-b75791802eb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebece35e-f54d-4b37-b395-9c30dbb21628",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e484c0e9-9ea0-42f9-a799-79e3aee2eff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfd7c07b-92d1-43e5-ab2f-c94df705ae4b",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0b3b02-fa3c-4eab-9fda-0f9ee8a6f91b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "27f63010-0af4-4677-9ed9-5782bf753a6b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5dd26db-5944-4009-bfaa-ee501005a885",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7981227-7107-4d0a-ae16-471e05366bea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6299fbdf-a56b-4667-9703-8b36ba4957e0",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "066641ab-c452-4508-85ab-7251fcb75e9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bba0adb-afde-448e-8750-d20a48cffa18"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bf2ca61-4a7e-4bae-bd04-ea989ff00322",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4b28a8c-23ba-4e88-8ba2-eaac38936b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c59a4c-bb1c-4eba-aef8-681db85b6c3c",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548cc480-8e85-4884-b4f2-6f82d1a9d557",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79333a70-e125-4a9a-bef6-c2e0fed9c812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdef76cb-d3ec-49a4-b9bc-2d35291f0049",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21fd68f5-dc03-452b-9dfd-918be3a33bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f19dc2fa-324b-461f-8740-3b88ac8fff27",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09477829-a8c7-4614-8527-4dc8ad210547",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1fecd0a2-82c5-445f-b5b7-4b3f6a74215b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774bd9e6-7a17-4723-8141-d9acc2f78b80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bcebd7de-e91c-481d-bed3-8ab6306fedba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecb6af09-91b8-4357-8ac9-7e0c67f88762",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbe4b788-a0c6-4287-bc68-ce0bf3e8e45d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "33925278-5f96-4287-ba7e-457e482818dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f176566b-9db8-4dbf-82cb-d286bf42d729",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc18a86-7f55-4c1f-a88d-27e82f455e26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489bedfc-a63c-4a57-82a9-5d386c9c67dd",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85b65e07-065f-4c50-a2ca-92f42112a1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d10e390e-966b-4116-9a37-92ff05859acf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "73f8c8f8-6a05-4ac2-ba53-ae827d28d7a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "402b4879-5c56-461a-a365-b6e1d5ec4423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24f82948-0f97-450b-ad9e-70435ae573ef",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61a0030a-2cb0-48ee-8499-594808d0af96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c50a867-58af-4215-9ff3-0b45b116e5c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97ec8fd9-8a56-41a2-a08c-714da594c89b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "265d1349-d209-436e-bf9b-a7fbef5ce29a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3096deba-40a5-4448-be64-d8a203a0740f",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e641398-c38b-48e9-8100-55b8b31bcb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1a42692-61ef-49ab-8bc0-7a883b397cbe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5743ccc-0e78-426e-a5cc-3b0241cee835",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d283e18d-9b8f-4c6d-80ad-b00fe019b2f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d99bab1-beff-437d-80e5-cfaa1399a63c",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36aa5a97-85d6-4391-83b9-281e3fa25ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a29438f5-59c0-4111-bb9a-8074a9b60748"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebf2ae53-461c-4ce2-8c3a-50b4efa1bdeb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7bd47cbd-0320-4445-9a83-f2893a10e39b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ac28f9-f31b-4361-be70-8091f07a11ac",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ddad28-0c25-4e26-aaf9-75fed8fa0d1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d4b07f0f-f1cd-476d-89e0-1324e75466e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23b4a8d8-3be8-4f59-9402-0fc2bd781f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d966661-819b-4a11-8fed-745cef636b9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3636b57-efb6-45b3-9269-b92995c4baa9",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9452c0b3-f1a7-46e7-afa8-81b53106c5b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1124416-392a-40cf-827f-653377abff79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bafa6913-39b4-47a6-a3b7-b107ff3af23a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "458cf430-747c-49ff-b5bf-efd5657f34b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aba4c9d-7422-4ec3-a422-bb19bf2734fd",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ecfc02-9532-4fd5-8898-1b6af7ed06e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e04119a-b387-4b57-937a-8ffe6e1884e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3d984f-50ad-4ebc-90e9-8f7b72511bd9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef8dac37-4099-499a-8476-b76f417258a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84792d47-be60-428f-926f-017d0a9c56a8",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61bf3204-0f6e-4e8a-9a89-7fae66d76470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21e2144e-82e8-4494-8df9-ce97f00ddeb6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0fab33e-f4e6-498f-b9d3-7cb4dfe7b7a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66d7baf8-30a5-4401-b4f4-c2e76aa45348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f17bca-6ddd-439f-935c-2088d5c7604e",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f9ce31-343b-4108-8e94-bf4eeddf47c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d0ad412d-29af-49fb-99f5-ed191d6abbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63d44043-bcfa-45d0-a498-951e3ffbeab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb212312-3e73-460e-88be-b7ab6415ef0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84bcf08a-0aa9-43eb-a48a-e654b82098f8",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5319f9-c0a0-412d-9afc-74ba4bad8fe8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ded1522-b306-442e-b1e4-431b25304d21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6a2fbc2-49e8-46dd-af79-1e289307f3b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef4c1f40-4bc4-4499-a1c2-ba87f09d1076"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fc43717-bcfd-4c3a-aa6c-a9ae6b92b516",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "658759e6-960f-4f02-a905-de51132138fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "023539c4-6146-41f0-93a4-8cafefce155b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5487db3-4196-4063-b0b8-903cdf82413f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79d03404-36d3-4d83-af8c-62ace6318594"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ee4c4fc-ef15-40df-89f4-fd7f091ad4cd",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b976890e-888e-4a06-b24d-3d8930e3ba54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "158961d0-536b-4675-8dc0-cbe332951669"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e719076d-df05-4757-be1d-dca43bd118a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbd64a07-878b-4197-9828-94bf3eb508a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4b56473-8671-4470-b63a-e39477a86b77",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb7bf91c-e24f-41bb-b393-2d0d2bfb1012",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8daedb40-75f8-4e41-bd2b-dfbec2220ccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "665b9c4d-97fc-4b13-82ea-de55a5424c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c3ac65-1757-4566-9bf4-b52e4b559271"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3996968-e05a-4406-ab00-21ad6b88dc0b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "939037f5-9445-4a9d-8570-29fed581b939",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d8ac043-b4f7-4a98-a167-165d3cdcdbe3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e4360e2-bdaf-459d-9d6c-0d417e45eff6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a47aa4c-0c5b-47d4-b908-b579f03b5c58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e2c5444-8df2-4a0a-80a8-d44ea354270e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c19cebc-c3af-4719-920f-aedb6e86ca66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34044e77-f406-4b19-ad40-abf7eaa2f55e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb26825-b8f5-4976-a1b8-e29667ae4267",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a19c9f4-4e7c-4dfe-8404-aca7abfec720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cb7df66-fb70-4622-a880-24fd424487ca",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63eefda6-63e6-4f9e-848c-dd906635c623",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e49a19d4-c9e4-4a33-b6b5-ca74b85a00e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a92f680c-2444-40a9-af73-5d0292385786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ad6f1f4-1388-414c-b1f8-431a3f43b858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acc7cdbf-d5ca-40fe-a4ca-80782ea0185e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38baef16-5cc7-45e1-b1eb-72617c6ce233",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca123c04-adb6-4de7-9f15-1f4ebcedebb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ab6ebd2-6b14-45ec-bbcd-abd6f1908552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8accf067-837e-44bf-bd48-af7109e3828c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a529fffb-f85f-48a1-861a-e466a0f2e663",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae24fa05-d56d-45e7-a9d0-7b110f63c689",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c321da31-0c2d-4dda-847d-e068ae871cfa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df978ff0-2730-4d12-ab0d-21119cf05bc6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "292384f6-90bd-416d-b4ee-570235637718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "707b0e58-b2fa-46ac-bf50-2034b3796f20",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f381210-8d2b-47fb-a804-833268a830d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c689126-aebb-465c-b57a-20ee67779452"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97be63a1-e57f-4339-b1b8-eb9a29ae4fea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "394fd2d0-a8a1-4389-a53a-b3680bed548f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "747f72cc-0910-43ed-9ddb-f568cd7db10a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54dd01c5-212b-4161-ab34-78a265c49817",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63015efa-51a7-4a88-bb45-484f292d2efa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97f0dcdd-0dd5-4c34-adf6-0875196860aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11430290-962d-4b15-bdf8-ea18b94db371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8800b4a4-7bc6-4633-a9c6-a34077409e9e",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eaf04fd8-5d36-41ae-8a7e-a6e38499f8ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "19f3e16f-4894-4f4d-bb82-efd9f5dcdfe1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d62c9dd-93ab-477b-95d6-c971cf25a583",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "adf94a8e-a4f3-4bb0-8596-9834e7790d5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b481abb-85ec-4228-ab67-2d1a3441edfa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ad3970f-5f3d-4512-868f-4a2d41643dc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b275e6f-f883-4f42-a2d0-4f0c0f94bf31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb6d9141-594d-465d-9b7c-0578dcc63d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "778979fa-ae1a-4ca3-bd65-e79e98ca7762"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97166b1c-ea4b-4f8e-b3e2-5a3628c53b8f",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2421a08d-c2b8-4990-9998-cc5d1a9898aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "102c0cad-d8a4-4873-8a44-ef0edf355249"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "205c6f6b-a957-45d8-aff0-07b2d224dfd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "397a5ea9-65f7-43b3-a50b-0847c759d722"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b8e63d-fdc5-438f-bebe-3814ec5f7a70",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9f3169e-b5e9-4f0b-b0fb-ab7faec4d63e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f82f74-fad4-47a4-8c9c-61e08a63acac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63844c57-d3bf-4013-a2a3-dd720d40dfbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "424c88bc-06bc-400f-bd72-fee35ecd219c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a99636c-eb9a-49f5-8f48-1229979f3124",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9963afcd-ce35-4f8e-92fd-338c89a148ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "138c0bfe-998f-4553-9fa0-130c5e5f3817"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90ab00a8-4903-4bf7-b3ec-67d4d3547d4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0acb77-7a20-44d6-acf5-0ea820628af7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df95b09-6011-4356-a3c6-1eb6aa79fac0",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0906dc1-0695-40a7-8867-9a8759659f3b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81f773d4-1250-4e75-8d41-dfe8e764d3bf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "894eda59-9e98-4f5a-8234-9afc895ea6a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b5ed10c4-125e-4657-b650-25f39315e203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e801a59-56c6-4760-8982-6fa12b1dd879",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53b20364-cf5d-462f-910e-8d73e2e93a2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57edbf0c-3d3d-4b18-bca8-99afcf4a01c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ecc7ae0-b09f-4bf4-840d-134cbc370ec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d93c44a-b59e-4282-9a34-7fe8a8dbdeca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bffe215-0cfe-4ba9-97f1-d4bf1564bb45",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4433ee10-4104-47fe-aded-85450d804709",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe74bc1-ef64-4d68-ae83-820da0434b81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d81fed9-addd-4ce7-9a5d-4446a4a27fc5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "645fc60e-0069-449e-8b53-875fd83164ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ea8621-4731-48c7-8926-67a25597d940",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52f7a270-71bf-4088-b97b-8829034833c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57055c4b-a1d2-4c59-982e-a6d0a98616e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e40965-a6ee-4754-87c1-0ce9e15beafe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2a35c40-a823-4d43-bce8-dc0470dc4c98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb9358ba-62fe-4534-9c0c-ade433e64bf1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ddfcac-b71b-4a77-bea7-a04331e696d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b360e3e-d093-48db-aa6e-3f03c12b5013"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fc0b475-a70f-4771-82cb-cd20894dc0b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ed2997c-5f73-40f4-b897-34e0c5997a4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d582f5e-0b1a-4614-80f2-2b9297422f44",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58eacb8f-713a-48c0-9714-f16bdf7d139a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eac753b0-4bb2-49f0-bba4-582073510a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f039b2-b4c0-4357-9e53-46cbfa330ff2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d77fabae-5812-46cd-b1ee-baec1bcea251"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27390773-3fb9-404c-9c21-f0cdc1deab18",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ec681a7-86be-4516-881a-4ab1c6ac058e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7acf6fc1-1066-4244-beae-7606b5b27788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18957d3-2df0-4b4d-97d8-8fbd48f0097d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce3fce6e-346b-414c-85b3-b73e8745e12f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86f0a836-5ee0-486a-9e76-3b15b4cb75ee",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0c5069-016c-4777-ae47-6cfe24e239f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4c76e239-5152-403b-9702-851f72818d60"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f13d7f5-a46b-40bd-b6b9-802ac26ed3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ced3637b-ec2e-4515-8cd8-34690ff2cb4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e1b404f-4781-4206-b0e7-053ae7e899c5",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32fde401-fd63-409c-9e06-069a4e87454c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69566ba0-7c68-4500-bff4-dfb19b467ac7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee80a30-07d0-46d0-82ca-14f6a66b115e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ede189f-51eb-49dc-985d-c9c09d17cc52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1538cb4a-1e5f-4f2c-a49c-42cf5fb0497c",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26392a58-4e4b-42ef-8c67-a8040150e84f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4e6de48f-ab2e-411a-b89a-c24540bb081a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8331cf48-9bb2-4d5a-997b-989a3f73722f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b533cb4-c885-4d40-bfd7-263c86db63e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab3ced4-f8b9-4f2f-bf70-6fcddfd48cf7",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bdbc2ff-c4ee-43a0-a5c2-ff1748b9520a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb2d1877-3630-4a81-ba22-cd253c5eb10b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c48efdf-0da0-460b-8dd9-47a752e15a6a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e05c8cde-6e06-4522-8334-864e9c242c45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "107acfc1-bdf1-486b-a8a8-ebce83795906",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69665dd4-97d8-4151-aae1-54db81c704b3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c19f0c2-8c65-4db1-82a8-f9580627975b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5614aec-75a8-4f12-8d9d-f13eff212030",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d152d91-a2d6-4821-a229-d521fe8e6ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b26e4f26-72d4-4778-8ddf-af85d8632532",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2924ff2-2218-44d1-87d9-af884f31113f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eb271181-e403-4487-acc1-66e9875b7f1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "160348fa-7f48-42cb-80d5-93d10940d177",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74837c2e-e48b-49df-8fa3-1bb0683a7e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc764420-64d4-483f-8d4b-3f9bd7f8c64b",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ec073d0-df87-40d4-85cf-0bb946ffbd16",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ffd4b2f-ff15-4546-b2dc-eadd3678708f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a6674d-0ae2-4f83-adae-54010021d696",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb938743-0f86-44f1-be64-420bec7129b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "414de84d-1d8d-4495-a49e-d688a457a85f",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e3569df-d7bc-408c-9266-74d14f753acb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "178b475e-9d52-4c42-a5e6-5dc51a2b8f3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d0c5a1-1912-432c-ab44-cba17e448c33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40faf407-4836-4b38-bec2-e0080963e822"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e27d49f2-4c6f-4d6f-8062-31816dbfeadf",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "baacdf25-d253-4d04-9c0f-56d225bff4fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c4f8fed-416b-4986-a571-fa47a118da92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c9ca31d-299d-4fe2-ae43-20a3d4096db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2bbaa6-95a6-4400-aa26-36d0bad4d0f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d31903b-6628-46aa-a140-dea38d66b146",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cd624b1-e3f8-4570-89e5-4263bc43502d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5a94f3a6-44cb-4c59-a134-30b6409013d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84f2503e-ca26-4579-9ab5-ba2a153e0b5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7204e3e-0664-410b-a988-8d8325c1bda4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ec30ce-0528-466a-b00e-3928f1fe94e2",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bc1d372-a5b0-432d-ab32-6cb469d949c1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ede610b-c0df-4f1f-90d9-d2fa272b41e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d549b4e4-d12f-49a9-a945-ac063fc71ffe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d378fb84-2f51-4b53-994a-546d59c0e89c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaa84916-8948-4344-b00c-303a01481f77",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05204a00-ed18-4443-895d-d011e4a97eb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c011d47f-8035-4d24-a64c-8eb4ab0d3d3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5d226fc-297b-40cd-b8a9-3055e757db2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8df4ddc-ec0c-4031-b8f8-2c10e30f3203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e7d6a5-f623-4251-a385-bf830c465e47",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a3ccb7f-6cda-47a2-9ecf-7c23bb26d1ab",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "25688a57-6bd3-4e6d-83ce-323f8ed4927a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8082d0f5-d43d-4899-9a61-a4b6bd86ed6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fc7bf84-4b08-4ef6-9376-bbb2e08beeed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae161592-789e-435d-91ee-de98818ad625",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85f38a7-2a36-480f-9f75-e08953e5d3d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12efc86b-5608-48d5-a402-fa2cbd2756ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "35eec536-1bea-458d-b52d-ee5bd96560d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec211465-395e-42c2-bfc5-202671a3ec65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d11288d-606c-4bce-a164-49df3148f39e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9fed6ec-e611-4051-9c86-fcc2044722f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "463306f4-6f4e-4602-b55a-f15c014d8613"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0375f20-7478-4194-b871-fff9d27123db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1925b9-0499-4096-929b-ac5c3e909c97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9934a653-efcc-4427-b7ae-67cba0eac203",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c9a34d4-ecb6-4ce8-802a-9a4649b14b1a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a6dea0ee-739c-4e24-bc3e-0bc80b70ce66"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7131fa-cfb3-463d-b0a3-2f5d3839ea66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054e67bb-be2b-456a-9ab1-988da35937b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5afd1ad3-a88d-4f3c-ac61-00d540a7eeb5",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b46b1cf-dd6b-452f-b054-43f37ec6a21a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f8aec12-a86c-411c-997d-97eed59b0c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13562989-293a-4507-ad82-4208cc140e2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e551a513-3841-40cd-b575-2610730de847"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cab1a19f-6709-4963-b096-f26c7f719d43",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3558e182-4478-4b06-96c3-4e15471dc663",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72888c1b-13d8-46e6-a105-491246bf1823"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb8b06d3-c3cd-4383-85d0-60aa8a3f2707",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f96a7ac5-1744-4dd4-ac23-62ecf5e3d6a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2003a2f0-247c-4e47-82f0-1fec03082a4d",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "944e616d-6831-4b6d-b820-96afc465dccf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "927a2081-5b37-455a-9f7c-d5958e09d3e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21d0cfb6-19c4-47e0-b3ed-8a2a3707854c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f45c97c1-e42e-407d-81df-eabe069606e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1052ffc6-46d3-4a43-9d1e-5a6bc024c745",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0262b60-497b-4f72-ac59-6fda05ac72f2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dac56151-c8da-4cfe-bfc5-35bb73c88ca3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd797147-46f6-4e7c-88cd-3bd7fc5120f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9654443-13bf-43d7-9eee-a7fa3a51c2c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a557616e-3d85-4049-8547-0ee1845d827c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11d2567-6798-4084-9f6a-19b4dee3cf43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "053604aa-6a79-4f3b-8b2f-f827ebfce062"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0edfd9e0-5d9e-4f9f-90b5-400e110bc127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "137fd7eb-a9a9-497e-8ac4-5262f92d47cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20f5d60-ebe1-4922-88a3-cf507bf6b765",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14884e48-b0d9-4733-8d3b-9a17acbb1f89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7958d74b-7045-493b-9def-514e92da50ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52744a73-2899-4618-a530-670fb1e2f3c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d9ca82e-6db1-4e4e-8dc0-caa7ee6c5540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc8cf650-4bb1-4e7c-983b-88f464f8f3fc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5448ea7e-bc09-49eb-8396-fb5a6ed5537e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48626028-075c-4f97-979b-675a9137e9e5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3f650e1-031c-4be7-a325-2578eed0ef6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "309c1036-232b-4dc5-8c67-ec9307ee1bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd6dffc-9f5c-419d-a510-2d43c96238da",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e4a875-9ca1-45ab-9aca-4a82ca05d2fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e75b6260-3d1e-438b-a1f6-d73b26884f19"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68eb8932-ef19-4217-b2dc-eab567bb32ab",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f459e427-d897-459d-99e8-bc30e42f0ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dfcefb9-2d5a-44d5-9c52-9d39c0ea4d70",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55d81458-4ed7-4dab-b98f-6adeac40acae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ea02245b-2566-4934-8f78-dc9637ef1d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d43262-5175-4677-a028-481cee428692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d490a2cc-db8f-4285-86f0-1e23270f4cf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f2f061-6397-4760-bf0c-73521264f2d1",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9c6081e-0834-4a6b-868e-1980bcf5fbc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "259a00e5-9bcc-4d59-a2eb-3395d793baa2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "356c4ec9-8699-492d-87b2-a4e04c33fe17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b66ef434-7607-4adb-904a-b9e61232b695"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030c72cd-9dad-4754-8bbb-b491020e8708",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60b84cb7-3e5e-487d-8a2a-c43512f5ed84",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f15d6ba8-9a2f-4e18-a5af-5c99b5040042"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e877dbb-3c53-4e12-8849-09c67c1511c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00c1ab40-0e9a-43cc-98d5-c00f1f140d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba50af50-6b5e-461c-b886-4a660056edf3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bcbae61-57b4-499d-9cbd-edc9c0313946",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b096b4df-a47b-4a03-b124-65b51a160c5f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "795517d1-5c16-4f3a-b85a-1685f94ce960",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd4b321-fbbb-4b98-8898-7a29772ce075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e779402b-31ea-43cc-8107-fd473b255626",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7eb809c4-87ca-4aa3-a633-f7d3cb217728",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc1d7abb-f029-444b-a8f1-c7496b2426dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2269d474-6f8a-4b99-8750-369656bb6201",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91ab6cc9-a1ec-4c19-b499-c3f2c83f887f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5ed8d98-1680-46ae-b67d-da908fd443f3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9a3797-06e6-42ea-8091-038be029deac",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a9eb6a3-f5bf-4dc8-9b44-7e28f824a567"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29cc6ff5-0186-4eb8-81be-77422692d6f9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a746b0b9-6945-404b-af00-9bc8cf920957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc446f0e-ad17-4097-9b91-2b697d69b89f",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e153548-bf65-4eb5-9091-40b78df21f82",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0fa1daa6-00e6-460e-9eed-2a65c40cc496"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d63112ed-981d-4936-b545-3e2c675ff17d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef616916-db41-42e3-aa8d-c9865171b3e0"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c9cc6bee-b976-4b46-88c8-635dd07916e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c068e06-1a3e-473e-af10-3a736cce6115"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b7e81a9-e149-421f-8305-915b9e144e4d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0cec6c98-479d-44e4-9e05-ab57f3991c0a"
                    }
                  }
                ]
              },
              {
                "id": "d32983a6-1d86-4c90-a828-842fd533a069",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d941675a-1bd7-4c35-b0de-194cb8ce23a0",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf893274-9e3f-4b10-bc43-0935d67665d1",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "f6e182bd-1529-47f6-ad03-bb829babf4ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d375928-35ad-48a5-bb4c-75605d1c736c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "395224af-c04c-4b99-80b4-3c0befa3881b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5308b616-29bc-4b44-a809-b43e0868b681",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4eb988ae-b152-4f47-9dab-7024cc230e8e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "568a4e21-816b-4474-b661-84db1f1acd9d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cface95d-35ed-4499-85a4-daf0624d2519"
                    }
                  }
                ]
              },
              {
                "id": "e93eab5f-8a09-40c0-98ab-f97007c6390a",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "974ab368-bef5-499e-971c-d6fd942120f3",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c9d2352-babc-4f10-9ae4-f4da711edf23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "84bddeb9-e4c3-4a68-955f-c992106920ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fb13cd3-8c9f-4186-b205-5a9b8bf11f8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b921f98-1cef-48db-b470-7e0353bfadaf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "2fab25a4-3efb-40c7-9b84-a2d32d9cd55c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1b8cfbd4-c814-4f32-bc36-4749757c3b0d",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "20f82cd0-7a1b-4320-b5ee-979f47f83498",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "ee2db4f6-d7e7-4e0f-b445-cc922317c7ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7e49eaf3-957e-4cbc-8bc4-7bb5991aa391",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "651c2c56-e6e8-4d5f-b3b8-4c8e9fe21883"
                    }
                  }
                ]
              },
              {
                "id": "79aca123-4f36-4383-a356-9ee339003a87",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "dd1a970c-8f31-46a8-a6f3-f2b1916c8e83",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "97c09900-1768-49d1-987f-74ccced13873"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1390ff5f-08df-4a23-a461-b7eba2422ad6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0f56b11b-3582-4d8b-a24c-a7c11b96f927"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "015a5cc9-c43f-4ea2-a64b-6e154313fe2e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "002f4027-8724-4385-8c3d-c32b050da58d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5988a6bf-e1a0-4c47-97a0-f041bd1fdb85",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c4278e6e-58b2-46c3-8923-77ffad17482b"
            }
          }
        ]
      },
      {
        "id": "7d491ac3-644d-4df2-b768-f782ffc1cf89",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "bbc87d5c-725f-4bfb-b51b-5fec65b38e2c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1194aa9d-f71f-4270-956b-aaea53b55080",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ba9c3dfa-9e26-4334-9a62-0430a5b94d53",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67985e4c-3a1b-422c-a1d7-47c76d010890",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "00b89e41-cbdf-4a7f-831c-c5e5b1633b04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751040c8-3d08-4044-b060-9e922cb116d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "37b08198-6b2c-4a98-a205-d9966b5162e5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2c8ac452-4a4a-4ee5-a10c-a890e40e694e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d193598-81b8-46bf-9a02-e789920d9848"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "14768682-b453-48af-aa81-157ce692ce6b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "486a1e3b-5d26-4af8-9674-5d40a282981b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3fb2a4e4-60fb-42fc-a43c-40cd87285371",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "2bbda921-4049-42a2-8154-61df62398ce1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9e4f00f4-aa16-4c13-bde1-cd7742bdec5a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "119711b3-dd60-4eb4-8cde-b7c890e5e45f"
            }
          }
        ]
      },
      {
        "id": "d40915eb-9e5c-4072-9217-b1891d71a0c6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "ac15844e-df1b-4ae0-a690-8f229c4d34e5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "dcc6c3bd-5975-4263-85d0-cbdf9c6248a9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "fdf7c308-5632-4b82-830d-04b9bed75512",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd3164d2-622b-46a6-beb4-7e5317cf247c",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aaabf1bc-8a4a-49b6-8e22-8aa6db597332"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2add9829-707b-4d1e-9613-34d930f35fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c01e0a4e-9799-40f3-af33-2fd3cae4c692"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "db2a5d92-02ef-4a4c-bc5d-16f710000752",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c967c48c-2afb-450e-ab8f-f1368f2308fb"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "57e4cef2-66a2-4b46-a4dc-e6fbc44baa3f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a66e56f1-4614-410d-bfe8-f18ec9d86007"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "2746fc33-5a44-407f-b6c5-e69aa19875ad",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "404e865a-aae1-4595-828b-59640318c24c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "efec54a7-ddaf-4f84-b5ec-d7edc0f70df8",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7cbf6c55-3304-4c88-bec0-88426759dc5d"
            }
          }
        ]
      },
      {
        "id": "fdbe8dfc-d4ca-4d8d-9985-c04c2563215d",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6ed37a54-65cf-4475-a67f-28e9422613fa",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8048d493-4cf5-4a08-9f05-ab3f9aba320c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6a0bc988-051b-4e49-9075-5d16cfcbc804",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec8011de-7b59-4d2d-a757-eac0cd373b55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7621db04-29f2-4575-a3dc-cbfcc725a538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40ef5f06-749f-4aaf-b5f9-d59d159ad70c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "dbb687c1-92b9-40f5-ae2b-fd6f8b6ace4a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "52523501-b896-4be4-96ae-17c3caf2dde1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "84c68d92-96cc-4d5a-ba64-07fcfcf78349"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6fa89e8b-bfa7-4529-87d6-18a853b1a1e8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b90a7aae-dc27-480f-900c-e22e72e21a65"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9ebefce6-71fa-430c-bd62-94c51426c656",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "b6c738b7-7482-4972-ab87-ea6bedc461b2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2370ce8f-02ff-408e-84db-70d8b74e72cc",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "89ed8c91-b16f-4cc9-8763-ca42ed8fa802"
            }
          }
        ]
      },
      {
        "id": "43ae12d8-b1af-47de-9695-e411507df67e",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3f9dbe48-aae6-453e-aedb-37c3fff9b184",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0a401c6-41c5-4761-a2eb-f5229d2336a6",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "62de9db5-77f7-4882-a9cc-3f6590e6293e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d5f2e9e4-bc46-44a6-ab68-36192a37825f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "25b64503-ad55-40dd-87dc-11cf6d3a232d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 7.108771929824563,
      "responseMin": 2,
      "responseMax": 275,
      "responseSd": 20.04237861624978,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1701650187976,
      "completed": 1701650198990
    },
    "executions": [
      {
        "id": "d020f505-c189-41a8-8088-0e7fc08b2b86",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2924d881-dd05-4eff-af1b-9bd429255faf",
          "httpRequestId": "a2d932d1-d40c-441f-af19-60eaed8ab02d"
        },
        "item": {
          "id": "d020f505-c189-41a8-8088-0e7fc08b2b86",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "cbd9e9ee-3a96-4141-b4cc-fdbdd05a80c0",
          "status": "OK",
          "code": 200,
          "responseTime": 56,
          "responseSize": 0
        }
      },
      {
        "id": "fffa4029-fd06-4b27-92b7-5a5bcc5c409c",
        "cursor": {
          "ref": "9fd1378b-2b9f-4a74-93d9-fbc347fa58b6",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "9f96a933-a95b-4d7f-a3f5-15c41d835cb8"
        },
        "item": {
          "id": "fffa4029-fd06-4b27-92b7-5a5bcc5c409c",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "1e7153c3-cc30-43b7-aba0-cd41b703740a",
          "status": "OK",
          "code": 200,
          "responseTime": 9,
          "responseSize": 0
        }
      },
      {
        "id": "36220f28-500b-4b80-9f97-584ca7531d80",
        "cursor": {
          "ref": "81e69fc9-7eea-400d-bc5e-5b0d9aee7bda",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "575c5562-04a4-4b7c-b2b4-3e07b58783cd"
        },
        "item": {
          "id": "36220f28-500b-4b80-9f97-584ca7531d80",
          "name": "did_json"
        },
        "response": {
          "id": "a0647f49-e56c-4098-8073-a4196c5c9f4d",
          "status": "OK",
          "code": 200,
          "responseTime": 42,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce3e41f-d8f6-4030-894f-4e32a1fb58dd",
        "cursor": {
          "ref": "544e211e-8320-49d1-9888-fc015bca9201",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a343976-2874-429a-b11e-8f9e0af1b15b"
        },
        "item": {
          "id": "4ce3e41f-d8f6-4030-894f-4e32a1fb58dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "bf013d5c-3280-44e4-975d-ae92ba9ea906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ce3e41f-d8f6-4030-894f-4e32a1fb58dd",
        "cursor": {
          "ref": "544e211e-8320-49d1-9888-fc015bca9201",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2a343976-2874-429a-b11e-8f9e0af1b15b"
        },
        "item": {
          "id": "4ce3e41f-d8f6-4030-894f-4e32a1fb58dd",
          "name": "did:invalid"
        },
        "response": {
          "id": "bf013d5c-3280-44e4-975d-ae92ba9ea906",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "175ce2fe-8941-400b-8e0c-f927ea82c324",
        "cursor": {
          "ref": "7c4961f1-ff5a-49e8-8179-0f0811f5a24f",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "e7e14c00-7e15-488f-98ce-7b54fcdeee1d"
        },
        "item": {
          "id": "175ce2fe-8941-400b-8e0c-f927ea82c324",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6c8e36ad-1563-49ee-abab-051892b6b564",
          "status": "Not Found",
          "code": 404,
          "responseTime": 67,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcd46e7-2bda-4330-b054-0bd4e5b7302d",
        "cursor": {
          "ref": "9a6e6452-32b0-4088-9c33-abbbb13698d0",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "cf94e369-60f4-4429-98a6-fffea7204ac3"
        },
        "item": {
          "id": "2fcd46e7-2bda-4330-b054-0bd4e5b7302d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "34b63df4-d07f-40c3-8a8d-c91f82b065f4",
          "status": "Not Found",
          "code": 404,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c22435c9-16c8-481f-b2d6-f5be67b17f76",
        "cursor": {
          "ref": "c5a9a551-f83e-4f1a-b5c6-9fede37efa5d",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8a9ac03b-f2ee-44ac-a611-0a8a1d0f0bac"
        },
        "item": {
          "id": "c22435c9-16c8-481f-b2d6-f5be67b17f76",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "91fb524b-a098-48e9-ba04-1ae7deb809fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce4107fe-251e-4ba4-9dad-3130ea51a33d",
        "cursor": {
          "ref": "0dc01427-90a6-405c-8bc4-f926026afb5c",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "94a9b5cf-220a-4c3b-88c2-a02a406da500"
        },
        "item": {
          "id": "ce4107fe-251e-4ba4-9dad-3130ea51a33d",
          "name": "identifiers"
        },
        "response": {
          "id": "7141bbc3-a7eb-40b5-b155-ecc768469712",
          "status": "OK",
          "code": 200,
          "responseTime": 86,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4361a3f0-3a29-4256-8466-79fc993667d4",
        "cursor": {
          "ref": "20a80120-8f86-45de-86d1-42038903ffb4",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "3d99c045-9a07-49af-a479-d30dcf579685"
        },
        "item": {
          "id": "4361a3f0-3a29-4256-8466-79fc993667d4",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "f25d21c7-a311-4717-a77c-b5ab1b51b366",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1762bbc0-c679-4294-a1e8-68496c661610",
        "cursor": {
          "ref": "f3d819b7-2dcd-4993-97e6-ab65c088be50",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "24339e99-35c2-47e3-938a-a49e2b32c892"
        },
        "item": {
          "id": "1762bbc0-c679-4294-a1e8-68496c661610",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "9b1ed899-cda8-47bc-b553-3c3adaf57ae0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b90794b9-e5e9-468a-854d-ac6b38212011",
        "cursor": {
          "ref": "e12c5160-c7b7-4985-b16f-9097341c5d58",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1677f6ee-d640-45d6-9721-1fd2ae441678"
        },
        "item": {
          "id": "b90794b9-e5e9-468a-854d-ac6b38212011",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "18f689c3-c612-4a26-8769-402807538ee2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61f8cfb8-220f-43c6-b4e6-331480d81826",
        "cursor": {
          "ref": "4c4f3521-8cbf-4007-8737-84820f128394",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "1042235f-e31a-43e7-a4cb-242cdd979be1"
        },
        "item": {
          "id": "61f8cfb8-220f-43c6-b4e6-331480d81826",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5a765028-fde0-4253-b7bd-c9f4bf04ef5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85e1a1ad-3f42-45ec-b769-d66f29115cba",
        "cursor": {
          "ref": "c57d654b-7246-411d-9b40-39debe761a12",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "8e8525f2-79f8-4e49-ae87-3bbaf6efe6d9"
        },
        "item": {
          "id": "85e1a1ad-3f42-45ec-b769-d66f29115cba",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "1bc2fcfa-8289-4614-9600-d65aadde0682",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc794407-d074-4d2c-9135-ae85f11e117b",
        "cursor": {
          "ref": "46d4cc69-1076-4867-a823-1c8fda83f12d",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ae97d0cb-791f-4edc-844a-04c60b3e4cfc"
        },
        "item": {
          "id": "fc794407-d074-4d2c-9135-ae85f11e117b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "2ba231cd-4200-4593-99cb-2e7b991b4e70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68455320-8661-4e85-8dae-426e940a4b03",
        "cursor": {
          "ref": "51508327-3417-4a8b-97da-10a480a401e7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "92017065-2a9e-47a6-a5da-dfaf1fa8cca5"
        },
        "item": {
          "id": "68455320-8661-4e85-8dae-426e940a4b03",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "0260f253-5df7-45ce-8278-c2a1d9aef68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc15518-b46b-4dd2-aef2-792b42a3aac2",
        "cursor": {
          "ref": "329fea5a-feb6-4235-a13a-f355c20294bb",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "756dfd6b-711c-4d59-a276-ed3780413856"
        },
        "item": {
          "id": "2dc15518-b46b-4dd2-aef2-792b42a3aac2",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "11faa729-dccd-4bb3-b22a-4d58bbd41ca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b9dab43-241c-43e0-8c19-f0762fadd957",
        "cursor": {
          "ref": "3b9128bc-68dd-4e9c-8533-6fb42a271008",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "4e4b51f4-2db1-443a-9f57-bde03ee23e69"
        },
        "item": {
          "id": "8b9dab43-241c-43e0-8c19-f0762fadd957",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "1f5f09a7-ca38-4b85-a06a-b846eb67d13d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80ed03a5-4cec-4e73-b222-d86c8cb2dff2",
        "cursor": {
          "ref": "ed0a019f-f9e8-4151-8626-907e3dffb278",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5ef53563-fc6a-4a8a-9600-814326194a12"
        },
        "item": {
          "id": "80ed03a5-4cec-4e73-b222-d86c8cb2dff2",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "25fca8ba-cb53-414c-a383-410b9c29792b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "157a7ae8-d90c-43ec-9e97-fe6e6285582e",
        "cursor": {
          "ref": "2571e2f0-edf6-49f0-9294-f35c772e936d",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "966d236b-e4a1-4f8f-8f48-bf7667c4cf6d"
        },
        "item": {
          "id": "157a7ae8-d90c-43ec-9e97-fe6e6285582e",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "43ff7b7f-4508-43ab-8f34-368baa32d630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e2c13e1-2acc-4be2-ad50-20c667988e69",
        "cursor": {
          "ref": "ed82cb8a-169b-4b2f-9028-ba70309566f5",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "76d3ab3e-75a1-4452-a416-6c341ea7b80d"
        },
        "item": {
          "id": "3e2c13e1-2acc-4be2-ad50-20c667988e69",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "f89e4f37-02aa-40a6-85fa-b6cae16bb644",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "847568da-8aac-4bb9-8ed1-03533173b5d7",
        "cursor": {
          "ref": "439a6727-d84e-4d94-b97d-694889c1750c",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "a480d5c9-4b53-4eec-973b-8d49dd774bc2"
        },
        "item": {
          "id": "847568da-8aac-4bb9-8ed1-03533173b5d7",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "76bdb00f-9a77-479e-8355-be82c6eeebd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de08c4e9-0b16-40c1-97d7-1ccf829ffc72",
        "cursor": {
          "ref": "0e969e1a-a345-41b6-a109-e7981ad1b2fb",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "7f697a51-7487-4c15-a4d1-062e8b29e1cc"
        },
        "item": {
          "id": "de08c4e9-0b16-40c1-97d7-1ccf829ffc72",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "e85a8637-b963-49a4-9ac3-2057ac2523cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaadcf1-180f-48a5-8156-51a1593572d7",
        "cursor": {
          "ref": "e6122610-529f-4075-8b78-a3bb20af8b47",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "baa74605-a4cc-4b9b-be4f-5f852a56fca1"
        },
        "item": {
          "id": "eaaadcf1-180f-48a5-8156-51a1593572d7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "3d52fac8-22af-417a-b41b-6a23ded0f411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03a3c426-f4fc-4ec2-8192-f1f96cbc3bc3",
        "cursor": {
          "ref": "4b7055ad-b157-4872-80da-c852b6434a24",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "5e0440de-f5a3-4ba2-9461-8dfadbffc7e5"
        },
        "item": {
          "id": "03a3c426-f4fc-4ec2-8192-f1f96cbc3bc3",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "a3b3aac6-f20d-4ec8-bd61-91b6ab6d07ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dca950d-964f-4ff2-aebb-0ca78c25d15a",
        "cursor": {
          "ref": "dac3a1c1-cf98-4380-a6db-721f8fdb8b38",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "c519f138-9e24-44cb-a9cb-591a59c5f6e7"
        },
        "item": {
          "id": "5dca950d-964f-4ff2-aebb-0ca78c25d15a",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "486a9ba9-eb3b-4907-870f-8838e44f72ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28b3b371-c9a5-4bd2-b063-67c9a9061371",
        "cursor": {
          "ref": "3de404fe-f807-40ac-b9fa-a4bde09dc71d",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2a75eabb-8add-444d-856e-eff13a2bba85"
        },
        "item": {
          "id": "28b3b371-c9a5-4bd2-b063-67c9a9061371",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "60a81abc-58f9-41a7-8be9-3e2800b0eeff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e38b9eb-bc97-404e-afee-42bdd9ca49ad",
        "cursor": {
          "ref": "f6990269-d0ae-4c14-9d75-e6307bf4579a",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "37a87431-2ffe-4cee-aee3-12fde542d6fd"
        },
        "item": {
          "id": "3e38b9eb-bc97-404e-afee-42bdd9ca49ad",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "ed92db63-3b55-445c-b478-7487558c9780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b653744f-b19c-4a94-8e3d-276d73f7e6ac",
        "cursor": {
          "ref": "cdad276f-8b51-404e-b85b-9794dc4311d5",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "2b853df8-1a27-4224-b9b7-bdd4b60f8467"
        },
        "item": {
          "id": "b653744f-b19c-4a94-8e3d-276d73f7e6ac",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8a05259a-53ba-412d-a300-b032a11eee3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4851a569-4306-465e-b04d-d02011d6ab24",
        "cursor": {
          "ref": "b8c3ea10-38fe-4a20-94bd-1fe05a638863",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "6aa347d7-5248-4859-b233-e7882c09cc42"
        },
        "item": {
          "id": "4851a569-4306-465e-b04d-d02011d6ab24",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "a5d69149-43d5-454f-a5b7-7f48ffdff5ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c45b21-393c-4ace-b6ef-8d01d054301b",
        "cursor": {
          "ref": "96b9d06c-9fee-440c-9ac7-8ec37efb73e8",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8de24ff4-49fb-40f9-9687-f382e8ae8d00"
        },
        "item": {
          "id": "d2c45b21-393c-4ace-b6ef-8d01d054301b",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "3eb84177-29e6-4cef-9634-2a22071e6507",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4727a00-93e4-4444-b24c-d1238eb61fde",
        "cursor": {
          "ref": "93cd8f42-a487-42f2-9cf2-a5e089e57333",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "30642b86-42ae-4df7-b86c-6f247c7c5dae"
        },
        "item": {
          "id": "e4727a00-93e4-4444-b24c-d1238eb61fde",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "f6580964-7bc5-435a-9cf7-7c76a1ad3727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d069396-ee47-49bf-991e-83afa764315f",
        "cursor": {
          "ref": "34c62559-dcb1-4706-828a-fefde000e64a",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "f54a4c43-bea5-45ec-9629-70ac7914c767"
        },
        "item": {
          "id": "4d069396-ee47-49bf-991e-83afa764315f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "e68baf8c-4296-45f2-8b3f-b50193d9d62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d312b709-95cc-451b-a194-8679a5350940",
        "cursor": {
          "ref": "e40f2bd9-6e74-4f55-902a-4730945e3046",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "7a3022e3-8683-4f9c-8e37-138d8b68345b"
        },
        "item": {
          "id": "d312b709-95cc-451b-a194-8679a5350940",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "02907a15-8f7c-49a0-a865-e925fa91a3f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be236fb3-9be0-4dd1-994d-f976fd103d0e",
        "cursor": {
          "ref": "ca1d4354-09ee-471c-b186-b06def12db8f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "2cdda99f-63a3-4038-9fe4-5de9732eb103"
        },
        "item": {
          "id": "be236fb3-9be0-4dd1-994d-f976fd103d0e",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "c02af40a-d912-4e0f-9ebe-f67b4a4363b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976d93fb-39b2-4da4-9f8b-39ab74a53257",
        "cursor": {
          "ref": "e9b25f48-b1b1-4630-825b-933826da054b",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "05f792e3-ad5b-410b-8ffa-0fb55572787a"
        },
        "item": {
          "id": "976d93fb-39b2-4da4-9f8b-39ab74a53257",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "bce3934d-a914-4680-847c-93c31152ee92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f262c6f-4192-4662-93dd-1b846bdf3b13",
        "cursor": {
          "ref": "27944f2c-3357-4e32-b8f3-7d77c93134f7",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "6032e9fa-d244-4db5-af8b-710b61e0acb2"
        },
        "item": {
          "id": "8f262c6f-4192-4662-93dd-1b846bdf3b13",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "c216ca4b-2f5f-4c51-847c-deb9146c6edf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d13e439-5ebb-4bd0-9729-e8d5f086e59d",
        "cursor": {
          "ref": "f863ed63-b9cc-4230-9b17-d434af63be69",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "ea7d3fd6-a36a-4920-85fc-5f059e4a276d"
        },
        "item": {
          "id": "7d13e439-5ebb-4bd0-9729-e8d5f086e59d",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "13052428-55f3-40a4-8058-f3eff71bb01c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0fed92-ce4f-40d7-a8c9-f6e044eddda5",
        "cursor": {
          "ref": "131bceff-db2c-4734-be43-bb94cb4cf253",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "36e8a8ed-ffa8-4b34-b42a-45a78a5be960"
        },
        "item": {
          "id": "be0fed92-ce4f-40d7-a8c9-f6e044eddda5",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "42095487-50ef-49ab-ad49-6fb4d06253f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfc7df3e-dd19-4f5d-9d77-fabe14f8da46",
        "cursor": {
          "ref": "d9f1f254-035f-4ccd-9df7-11efeaf2acd8",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "10f19b64-a252-48ad-b785-aff85b3669eb"
        },
        "item": {
          "id": "dfc7df3e-dd19-4f5d-9d77-fabe14f8da46",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "b5d3b210-e399-4b91-9705-8ef2999857df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe9d7b41-fcc3-4bbb-a6fa-099d6c689d75",
        "cursor": {
          "ref": "31c33d0c-2cef-4abe-99f1-5ecb25c5a421",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "bc42c15b-0524-4bcd-ac85-eabaf188f327"
        },
        "item": {
          "id": "fe9d7b41-fcc3-4bbb-a6fa-099d6c689d75",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "92b0a8b8-46bc-4282-b193-3d816fcd078b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57a2e88b-fa44-463c-96bb-245451d32138",
        "cursor": {
          "ref": "3239c411-9091-466a-85c2-50baa5639efd",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9741d070-3c7d-4520-a709-49a72af018dd"
        },
        "item": {
          "id": "57a2e88b-fa44-463c-96bb-245451d32138",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "48627f8c-f9b6-43b7-97e1-a7b51417baf8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0378f5-4043-466d-8c74-d654b4f79061",
        "cursor": {
          "ref": "afe90eff-2f15-4308-bd45-b7bf025323a2",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "a06011f7-5d75-4df0-9106-bcc36951bc95"
        },
        "item": {
          "id": "fc0378f5-4043-466d-8c74-d654b4f79061",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2e828941-dbeb-4817-9530-392f02d9b3b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b42bfa-a7b4-488b-b638-cae291c7a71c",
        "cursor": {
          "ref": "7baff16a-71ae-473f-bc71-202a3251f23b",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "5d80c485-cbe7-44f0-bf55-7eb6c12c4816"
        },
        "item": {
          "id": "14b42bfa-a7b4-488b-b638-cae291c7a71c",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cf5e5836-5c35-4f01-9d43-938e1d9476c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d12494c-8595-4f56-bc92-2348da79d910",
        "cursor": {
          "ref": "f2becb8c-6c81-43ca-abde-aa805afd35b3",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "53dda354-b181-4b68-a56f-f34b0996183b"
        },
        "item": {
          "id": "6d12494c-8595-4f56-bc92-2348da79d910",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6e83806d-7a77-4ead-a38a-aafde0504ebf",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 30,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf8feca-4fa1-44bc-b654-8300f857c290",
        "cursor": {
          "ref": "67728daf-10ff-4c6f-ba11-a56577e1e395",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "e08e714b-22f5-41bb-ba55-1a8c53c591cb"
        },
        "item": {
          "id": "5cf8feca-4fa1-44bc-b654-8300f857c290",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "ea6f0fbb-3db6-4351-b044-22786b08750f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9a698ef-7fdb-4057-9abf-2ed36415042f",
        "cursor": {
          "ref": "f31e017d-d4f1-4618-85fd-bdb51b55969f",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "d895c72a-e7e1-4185-84ff-623cefa91544"
        },
        "item": {
          "id": "f9a698ef-7fdb-4057-9abf-2ed36415042f",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "215b696b-04a4-49fa-9758-a2c09386effa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5665ab2-ab2e-4b3a-be02-5fdaa8ba88a0",
        "cursor": {
          "ref": "7773891b-c058-499f-8765-c0cc1b6fe015",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "1bcd8e75-8006-4bea-8c9e-aaa7ce061c6a"
        },
        "item": {
          "id": "b5665ab2-ab2e-4b3a-be02-5fdaa8ba88a0",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "cf8df7de-7b80-45c2-88d4-7b7a85dcde96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d63c1c69-28be-4550-a779-70e179c38eb7",
        "cursor": {
          "ref": "b03c76c5-2d33-490e-93c5-ba996a463aac",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "8fb85ae7-de10-4a09-ac8c-19faf6473f48"
        },
        "item": {
          "id": "d63c1c69-28be-4550-a779-70e179c38eb7",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "815a8e5c-0f57-4376-8b5c-92b765cdf170",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7cd980f-9862-4206-9d80-e8fc8422aa98",
        "cursor": {
          "ref": "7e39ae6b-24b5-48d7-8cb3-820986ac4e04",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "6503eae2-c4a6-413e-a114-f07440af08bd"
        },
        "item": {
          "id": "f7cd980f-9862-4206-9d80-e8fc8422aa98",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "b69a4787-2252-4078-9002-877f2ea10dbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f9d0db-6f6f-4d59-aebd-b93b70ff44c3",
        "cursor": {
          "ref": "07549709-2cce-448d-b162-82e0f85601eb",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "950655d3-8cee-453c-9b76-c83c254ef9f7"
        },
        "item": {
          "id": "52f9d0db-6f6f-4d59-aebd-b93b70ff44c3",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "450e4171-6a08-4aca-84b5-f601f1df3454",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad378921-eaec-4c6a-b18e-e364feb89f81",
        "cursor": {
          "ref": "6dfde567-2f08-49a4-a9ec-5703b3453ee1",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "f9999bce-cfac-48dd-a704-c61a3eadb92a"
        },
        "item": {
          "id": "ad378921-eaec-4c6a-b18e-e364feb89f81",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "75fc048b-ac11-4a75-95a5-93b62090a825",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 20,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ee39762-b24d-48a6-a22a-c5bd10d8ba8a",
        "cursor": {
          "ref": "e7cf2293-b63e-4796-894c-9b90422a8248",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2280e654-2095-4b1f-b70e-d92cf9c0b0ec"
        },
        "item": {
          "id": "3ee39762-b24d-48a6-a22a-c5bd10d8ba8a",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "9fbc5326-dd30-490d-ae7c-3cac8d3fb8c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7cb21d8a-6b92-4a7d-ae08-7890785598d1",
        "cursor": {
          "ref": "38484594-f7a4-47ec-beb7-5844089ac1cf",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "daafbcff-604f-45dc-a872-40d59045abe2"
        },
        "item": {
          "id": "7cb21d8a-6b92-4a7d-ae08-7890785598d1",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "b39e1257-4bec-44ed-8472-a47bf4c78a03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "748faf37-6b62-4321-a28c-9ebebadd82a4",
        "cursor": {
          "ref": "c0cea3ef-94b1-46c6-a313-8796b8cdd433",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "2a3b820c-b1be-4fd1-ae85-a2fafd817f4a"
        },
        "item": {
          "id": "748faf37-6b62-4321-a28c-9ebebadd82a4",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8ad1a75e-ebc3-462e-8339-f64c9ac38759",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47a701d1-ce6d-4df7-96f7-b194b0bea8b3",
        "cursor": {
          "ref": "14e7b0fe-997a-4237-aca6-7ff91628fdfb",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "bf3c2dd0-d88e-43eb-b38c-ce6563270a00"
        },
        "item": {
          "id": "47a701d1-ce6d-4df7-96f7-b194b0bea8b3",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "4f602776-738b-4eca-8ab9-834dd12ca767",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd6da6a-2c58-44a5-b4c6-83ddb227fc9e",
        "cursor": {
          "ref": "e953e676-a159-465e-b71a-9683192d25b4",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "b73ce8e8-5dff-4306-809f-e2382dbcca4f"
        },
        "item": {
          "id": "acd6da6a-2c58-44a5-b4c6-83ddb227fc9e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "8cb131dd-75f3-4c66-9bd4-19db5f99d066",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bc91562-f17f-4643-b9cf-d6c72078fa6a",
        "cursor": {
          "ref": "2d8036e7-9716-41a5-96e8-b0e9f4ee284b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e5d5d57f-bd47-4b12-affd-5d9fcd3c518f"
        },
        "item": {
          "id": "6bc91562-f17f-4643-b9cf-d6c72078fa6a",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a262ef70-dda2-4635-854d-606ad71c2a52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c517e146-3fcc-4079-98f1-a60196deabf9",
        "cursor": {
          "ref": "edf93de6-b6e3-436e-a5a2-ac980012ef20",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e5986785-a4de-449d-9c37-18a1d41d9938"
        },
        "item": {
          "id": "c517e146-3fcc-4079-98f1-a60196deabf9",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "29b0f538-1c8a-4445-acc3-ced777838f26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4fa035-39b0-4a46-8f10-dd86fb44a3d3",
        "cursor": {
          "ref": "df037602-7ced-4616-9750-3ef38bf18d10",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe59641c-1db6-4268-9c52-dec4039c1395"
        },
        "item": {
          "id": "9b4fa035-39b0-4a46-8f10-dd86fb44a3d3",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "1720b469-a883-4a27-bc32-b5e91253b6df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc295b56-7792-4a6f-94e2-89a4f491783e",
        "cursor": {
          "ref": "de2dbbef-2614-43b9-a06a-d10d3155d16f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "d5ec5883-5d45-46ef-a72a-c01eccc9bf78"
        },
        "item": {
          "id": "cc295b56-7792-4a6f-94e2-89a4f491783e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "abbeee8d-2ba4-453b-8aca-5f77ad2807c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b496bc1-4f69-488a-ac9b-7e0bc02f36fd",
        "cursor": {
          "ref": "3344c72f-c34c-4911-bfb9-68854a50e90e",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2ef59821-80b7-45e8-90ef-686c06ee9d1b"
        },
        "item": {
          "id": "1b496bc1-4f69-488a-ac9b-7e0bc02f36fd",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "444535a7-d629-49dc-8a41-489fb0fa6a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcc0c439-5cb0-4ded-bf37-6f49037688cb",
        "cursor": {
          "ref": "5ef5b08a-bc7f-4c39-8aaf-1af6a23f1906",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "a75e0833-9006-4e16-92c8-684c1ed4c8ce"
        },
        "item": {
          "id": "bcc0c439-5cb0-4ded-bf37-6f49037688cb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f58d1e76-3173-4761-ac3c-e5088ea537f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fb5cd75-2df8-45f0-8de9-9b1ec9ac42b8",
        "cursor": {
          "ref": "545999e5-cf61-4d85-ac8c-fb2ac5e6f31c",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ac9bbd85-738f-4032-a774-6e60067681f7"
        },
        "item": {
          "id": "4fb5cd75-2df8-45f0-8de9-9b1ec9ac42b8",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "a6a11945-f4fc-418e-b7a3-87a3176f1399",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b80a2438-49ca-47f3-8935-be34aeddf3b8",
        "cursor": {
          "ref": "2242cb56-096e-4f33-8fa1-bad86cb23cda",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "0dfda62d-b97a-4346-9c04-88a065f465d9"
        },
        "item": {
          "id": "b80a2438-49ca-47f3-8935-be34aeddf3b8",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "dd0f01af-0816-4395-bf13-ff2d9a0cd3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0d55be-b904-4974-abdc-bd6c6358a0c7",
        "cursor": {
          "ref": "f2f0a692-580a-4474-b41a-e4e33515165f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "0c9f74ca-6810-42be-a454-e42ce3ba5001"
        },
        "item": {
          "id": "0f0d55be-b904-4974-abdc-bd6c6358a0c7",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "46d99068-b9a8-4e98-8377-51e07082e36b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "505d5d4c-0dad-4f7a-a196-c2c431778d49",
        "cursor": {
          "ref": "e189a596-bac1-460c-ab9b-efbc13074223",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "5f1943e1-9700-4871-9c4b-069cb1e9cae6"
        },
        "item": {
          "id": "505d5d4c-0dad-4f7a-a196-c2c431778d49",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "1d22375a-95af-4efb-a57d-4a024e1f1d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "244447c6-09f6-4529-b1a2-b5d6a5349972",
        "cursor": {
          "ref": "3503c12f-e3b7-44a3-85cf-c22c0c09a74d",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "ef6ef50c-4c49-41bc-b547-68a664084e36"
        },
        "item": {
          "id": "244447c6-09f6-4529-b1a2-b5d6a5349972",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a933d6e5-b3a0-44af-85f6-2125b770cc36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2391582-09d7-4ac4-89c2-5e8fc55b4f8f",
        "cursor": {
          "ref": "5d1edff4-2d8e-4a7c-a1cf-c1563ed832cb",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "5d4a9635-54a8-4414-8c82-bcf4ebe58f7e"
        },
        "item": {
          "id": "f2391582-09d7-4ac4-89c2-5e8fc55b4f8f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "5d64272f-5477-4f67-a5df-be42d19fcb77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bbc29e4-4720-47dc-a3b5-82f0175bbc64",
        "cursor": {
          "ref": "3cff1378-4bb9-4c45-83a8-690a2458e3c7",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6bb26915-2c8d-4a05-b26c-ff614470e765"
        },
        "item": {
          "id": "8bbc29e4-4720-47dc-a3b5-82f0175bbc64",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "5fc12478-d563-45a0-90a8-3624bac956db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbe2f0c-6b1a-4dac-8fa0-ee1729c7b61b",
        "cursor": {
          "ref": "049e75bc-c86b-4b89-a92b-ee0805042556",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "06c946f0-b5de-4871-ac7a-2587e29e4da7"
        },
        "item": {
          "id": "fdbe2f0c-6b1a-4dac-8fa0-ee1729c7b61b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "61ce3c2e-b315-4712-8a11-be1fae69e736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bbdbc86-4016-4625-9087-bd54b419fd79",
        "cursor": {
          "ref": "e621fd4e-9d46-40f9-89b1-9d09aa770f9a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "dc9e1629-24c7-4512-8343-e0e3a529f56d"
        },
        "item": {
          "id": "0bbdbc86-4016-4625-9087-bd54b419fd79",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e6f03ac5-2ad9-4b43-a76a-e4c983fce3e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaff3bb8-0333-49d9-9fd9-246ba9867ff3",
        "cursor": {
          "ref": "4d4e9cdf-9485-4361-a2bd-b0002ff6ede0",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "95162cc2-5268-4439-9b29-3e920a4bd7f5"
        },
        "item": {
          "id": "aaff3bb8-0333-49d9-9fd9-246ba9867ff3",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "47ad904f-cfff-4867-9abf-e480866945d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fffb76-d24c-4036-bb9d-6d48f163a294",
        "cursor": {
          "ref": "6563ebbc-2e58-48b1-93ac-dd58cc024b16",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "b3aff4c2-d5fa-4941-b729-b89d99befd13"
        },
        "item": {
          "id": "b8fffb76-d24c-4036-bb9d-6d48f163a294",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49c244b0-2baa-440e-914d-93457178bef6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220e1927-2ffd-4ce4-97b3-ea9559d1ae4a",
        "cursor": {
          "ref": "0eeb7ac8-6b73-4707-9a24-006a6bd42d8d",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "522a0ccf-c056-4390-a3ff-3cc432f36fe0"
        },
        "item": {
          "id": "220e1927-2ffd-4ce4-97b3-ea9559d1ae4a",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "476b3f89-7715-4f83-8cd2-7d45b50e1172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f78d8446-40a8-405a-82ba-18e297182364",
        "cursor": {
          "ref": "0739db9d-5e27-440a-b70b-08c5bb239727",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c108e2cb-93be-4db7-8917-fb6b6638267c"
        },
        "item": {
          "id": "f78d8446-40a8-405a-82ba-18e297182364",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "43c0697e-be3d-4374-accf-f42b29276dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe14da5a-9a23-4792-b9b2-b12c5a43f0e1",
        "cursor": {
          "ref": "75929fb6-7ade-4370-9a9a-40b9c49fef4b",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "e560701d-0a11-4cce-a8f3-1e0ded9396a0"
        },
        "item": {
          "id": "fe14da5a-9a23-4792-b9b2-b12c5a43f0e1",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "33493b85-a888-4c2b-b37a-ddee879e976c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6aa5bbf-d956-4d78-af85-0d4073316c88",
        "cursor": {
          "ref": "f8b0900b-eda6-4676-a891-f3e50af891ca",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ade2090b-2f59-48c2-99fc-4ef8dc687a85"
        },
        "item": {
          "id": "e6aa5bbf-d956-4d78-af85-0d4073316c88",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "8553a044-7263-4324-86d3-54c1aa782f94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c85bb067-c6a7-4a50-9b6d-f429172ffbaf",
        "cursor": {
          "ref": "9fa4597a-4797-4d43-a3b4-6f226ecf89e3",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "07ff8c13-8656-4e3d-9510-edf51b5575ae"
        },
        "item": {
          "id": "c85bb067-c6a7-4a50-9b6d-f429172ffbaf",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "3d2daf5e-f599-4017-ad05-1c0161d6e534",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37458e01-b4b0-497b-83e6-c93d27e6dfab",
        "cursor": {
          "ref": "e7dd0fd0-e282-4fb7-8581-67d7e02bb888",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "659c257a-fbc2-4d20-bd32-1311dbddba96"
        },
        "item": {
          "id": "37458e01-b4b0-497b-83e6-c93d27e6dfab",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e81432ec-ff16-46b3-8c2e-6e48758122b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d44281-19fe-4b82-9da9-38576d0b434c",
        "cursor": {
          "ref": "13106c53-e5a4-4e9f-ac3e-e8c3fc41de11",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "5bb7860c-7384-44cb-a758-8aad8bc7589f"
        },
        "item": {
          "id": "55d44281-19fe-4b82-9da9-38576d0b434c",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "06c62f2e-b24b-442e-93ef-8f9ad28d1535",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc0f9904-80cb-4107-ab9e-e103b95e6157",
        "cursor": {
          "ref": "5044f081-2eef-4922-8768-d1ea85f662ea",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "218093df-9d8a-4bd6-b7e8-1733a93e9b5e"
        },
        "item": {
          "id": "cc0f9904-80cb-4107-ab9e-e103b95e6157",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9afefc06-b3c8-4ff7-b2b5-fd2b766325e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3d04f0a-b400-4d9e-ad63-fdc57e2cab32",
        "cursor": {
          "ref": "742cc4cb-ed19-420d-8717-68a78073096c",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "be968a06-cfcd-45ed-9cac-db1ae84ce36d"
        },
        "item": {
          "id": "f3d04f0a-b400-4d9e-ad63-fdc57e2cab32",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "23c48a3a-434f-454a-9062-ff680002b17d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14faea0e-e559-47dd-9791-431682ce2f8a",
        "cursor": {
          "ref": "3ced5d07-efda-4b32-baf2-acde022f8284",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "3923412d-1910-4dae-acfb-69098cc7abb4"
        },
        "item": {
          "id": "14faea0e-e559-47dd-9791-431682ce2f8a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "ab63caba-7ae3-4305-ac3a-01bd01cddd29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "325e3590-3931-4fcf-af6c-eee15d5ee832",
        "cursor": {
          "ref": "d10be6d0-c553-4107-87ef-4f1750688ae8",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "553e3383-9e7e-41a8-b558-0f5cf7703674"
        },
        "item": {
          "id": "325e3590-3931-4fcf-af6c-eee15d5ee832",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "cfa0dbfa-6c59-4443-a6c2-d8a20464e496",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc47c748-a448-4f31-a538-d43dff730781",
        "cursor": {
          "ref": "6a176e7c-d1e4-4e81-9a5d-e90710c40385",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4be521c4-1d07-4d4f-bdb6-604ed137b2cf"
        },
        "item": {
          "id": "dc47c748-a448-4f31-a538-d43dff730781",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "278661ae-bef9-4754-8e3d-d4fd8ea3a878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e21cc1b5-cbd2-4b75-b951-7d5e50757175",
        "cursor": {
          "ref": "c4e31a2e-80c4-402c-89d5-23d3460e6b00",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "83feaa06-99e2-4ce3-ae00-dfb8e659881e"
        },
        "item": {
          "id": "e21cc1b5-cbd2-4b75-b951-7d5e50757175",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "410d4376-f1ac-4e6e-955c-e62d98d1c0f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35706bd1-5598-4466-82af-1eff83697499",
        "cursor": {
          "ref": "2d61c200-c994-4ff1-b64b-fc52db971883",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "40a5316b-97ab-430a-a053-a152bd6748a1"
        },
        "item": {
          "id": "35706bd1-5598-4466-82af-1eff83697499",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7318265a-20a7-46a5-8ca1-ad214a61a03b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd94856-04e8-455d-9a73-9433170d3ad7",
        "cursor": {
          "ref": "e97f80f9-bedc-48fb-9cf6-ade6ebb5f980",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "5abcaee4-ec29-4a7c-b93b-dd52fa95b717"
        },
        "item": {
          "id": "8fd94856-04e8-455d-9a73-9433170d3ad7",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "a618769e-8327-4900-bc39-7a49969a4934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cb72caa-4c81-44c7-a088-d73be85432fd",
        "cursor": {
          "ref": "7121d449-13d0-4635-b3c8-5e32c93a50b8",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "c1b851bb-f7ce-439a-947e-a01562d65c3b"
        },
        "item": {
          "id": "4cb72caa-4c81-44c7-a088-d73be85432fd",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "65ff33ef-4452-4e2a-b741-d4f7ab20cd27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0ab186fb-3fbe-4832-95b3-d97b3f2ffed8",
        "cursor": {
          "ref": "ff18b92f-5cc9-4856-8633-82f91ea15f19",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "6127557c-a4f1-47f1-9272-7e9a6edf7d59"
        },
        "item": {
          "id": "0ab186fb-3fbe-4832-95b3-d97b3f2ffed8",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "f58e1c5d-5bb7-4291-8082-87cf8a712f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16afd213-3109-4899-a989-e43751e5b9ae",
        "cursor": {
          "ref": "be36ffb7-55ca-4c98-a645-3e8487110ac3",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "2b8ef687-6e0f-4bf8-9917-c33afd85dd9f"
        },
        "item": {
          "id": "16afd213-3109-4899-a989-e43751e5b9ae",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "21736f8c-bd15-4ae0-9fe6-243a46d9c7fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4d27704-7a9c-49e4-a319-1aeebc9d8b76",
        "cursor": {
          "ref": "494e08ed-4583-42a0-ad18-4c2875e1d182",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "d9635f58-8333-4c68-a460-ae7735389117"
        },
        "item": {
          "id": "b4d27704-7a9c-49e4-a319-1aeebc9d8b76",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "4960f70f-a6dd-4aaa-a023-472038037365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "094eea53-feaf-4688-9180-d92cc0f6e381",
        "cursor": {
          "ref": "8af165b9-2730-456a-94d2-44cb7c2fe7dc",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "03580eb9-0ef0-4b59-b96e-c10fed30de9b"
        },
        "item": {
          "id": "094eea53-feaf-4688-9180-d92cc0f6e381",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "9c8a2adf-b45b-49ea-a096-7dc610e26b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca3bdc80-fbc1-4133-93d8-345e2b38b61b",
        "cursor": {
          "ref": "1929add9-17e1-4021-8a50-337576076350",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "6d44bf1e-0504-48c9-9231-e7ef5396e425"
        },
        "item": {
          "id": "ca3bdc80-fbc1-4133-93d8-345e2b38b61b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "0ce20c5b-966f-4b74-ba72-46bb8bc1ea7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29ea1585-8139-4b64-a7a0-c4158964b589",
        "cursor": {
          "ref": "c7e5f5fe-d8ee-45b9-bdb8-8b2fe14f5a1c",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "f8d0c3c7-65b9-4092-be5a-6c9390c4847c"
        },
        "item": {
          "id": "29ea1585-8139-4b64-a7a0-c4158964b589",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "080469d3-adb2-491b-ae74-22ba58b8e10b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a70b8e9d-16be-4ce0-a42f-2fcb63eea8ed",
        "cursor": {
          "ref": "52f459ca-c518-448b-bef0-c7b3e1c70b6f",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "b9c72cb5-93ea-4ef7-b2a7-517da53b45a4"
        },
        "item": {
          "id": "a70b8e9d-16be-4ce0-a42f-2fcb63eea8ed",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "d4ddb2b7-b514-45ba-a7f8-d45ea772ab7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f399d6a4-2623-419e-bcfe-c000548dc21a",
        "cursor": {
          "ref": "58c11ddf-7d32-456e-a285-10686fe9a00d",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "d65e798f-aae1-4093-ab07-4e85d50cb1fa"
        },
        "item": {
          "id": "f399d6a4-2623-419e-bcfe-c000548dc21a",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "d3cb16aa-16b4-4c16-ab6e-d906f6a530f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8043af72-c3bd-4cd3-b921-763586493f1d",
        "cursor": {
          "ref": "a378b5a7-597b-4a58-8916-c937ae7586e8",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "a838237a-d1eb-4806-8a33-fabe2fe4f18e"
        },
        "item": {
          "id": "8043af72-c3bd-4cd3-b921-763586493f1d",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "65ce2e17-f318-46fb-a38b-17064eca5371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ee2b7-eb88-47ca-9747-21ffa058aa14",
        "cursor": {
          "ref": "b14e91f4-d8b2-41e0-9275-d77cc745fde3",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "342609ad-9848-43cd-8ac2-f08ec3cc378b"
        },
        "item": {
          "id": "350ee2b7-eb88-47ca-9747-21ffa058aa14",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b90f4028-9f7b-4b30-b35f-2b96f13e4c79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e4d2f3d-59f9-41d8-9640-778446a94fcc",
        "cursor": {
          "ref": "52f056a2-900e-48a8-a52d-bb275703ada2",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "4538f68f-85cd-42f4-ba99-a92ac9c8d369"
        },
        "item": {
          "id": "5e4d2f3d-59f9-41d8-9640-778446a94fcc",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "965430f1-6841-4390-abee-92a8a79b9476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceefa12-0ccf-4624-8899-c6babfb89b5c",
        "cursor": {
          "ref": "2df072e8-ff17-45e3-ba0a-17f3235a450e",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6663b4bc-6a74-47bb-8819-465e8c35f02b"
        },
        "item": {
          "id": "fceefa12-0ccf-4624-8899-c6babfb89b5c",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "d77ed657-bb35-4e9b-9726-2a7bf4e823d9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba93994-fe23-4ccb-adc2-7174f967fd02",
        "cursor": {
          "ref": "841dcfcd-4ac3-4359-8995-0bbfdec84a85",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "01775120-907a-4726-858e-82e7bc9961d4"
        },
        "item": {
          "id": "bba93994-fe23-4ccb-adc2-7174f967fd02",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "dc5039d4-14ec-4ee2-965b-cf6e5edd3f45",
          "status": "Created",
          "code": 201,
          "responseTime": 46,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1568b04-e480-4de9-96d7-ed9d1d547a61",
        "cursor": {
          "ref": "4dea2c8b-b46b-4a39-9f3a-f374b4056ab1",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ebec5863-9e63-4d63-9ab0-980d5e4a7648"
        },
        "item": {
          "id": "f1568b04-e480-4de9-96d7-ed9d1d547a61",
          "name": "credentials_issue"
        },
        "response": {
          "id": "55437e94-0ace-43ff-9b6e-eb5cd2af26b7",
          "status": "Created",
          "code": 201,
          "responseTime": 149,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b25f228-6fb9-4355-b2b8-7681536bc784",
        "cursor": {
          "ref": "44ef2c80-b6e2-4126-bc1e-fea6fcfa5e36",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "068703fe-631a-4490-a6c2-0290df1356f8"
        },
        "item": {
          "id": "3b25f228-6fb9-4355-b2b8-7681536bc784",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "d56f7114-fdd6-4cc8-82ae-45ae0207832d",
          "status": "Created",
          "code": 201,
          "responseTime": 30,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7cfc41b-d2a3-404c-a847-d848cded5d1e",
        "cursor": {
          "ref": "34d0891f-6b77-49c0-8096-3461606df36b",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "7a0dfea8-0cb6-425a-9d0e-b640af9b09c2"
        },
        "item": {
          "id": "d7cfc41b-d2a3-404c-a847-d848cded5d1e",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "88bfbf33-e5d8-4741-964c-65bf1d49c63f",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "5235844a-2dbf-48c4-8926-951e27a36f0b",
        "cursor": {
          "ref": "f3eb3413-463b-40b0-a61d-b2411a8ebdd4",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "85006027-44ff-4023-bb2c-b894e7f941df"
        },
        "item": {
          "id": "5235844a-2dbf-48c4-8926-951e27a36f0b",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "c2caf0f2-1f01-46fd-b987-04af74261031",
          "status": "Created",
          "code": 201,
          "responseTime": 29,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "54fb54c8-3960-49ae-8fae-1554fb4c7b84",
        "cursor": {
          "ref": "20c1a916-0dad-4dba-a850-01b3469df205",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "a96108ed-27f7-47d9-bcee-45e90d1fa22a"
        },
        "item": {
          "id": "54fb54c8-3960-49ae-8fae-1554fb4c7b84",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "6104eca2-f327-4694-94bf-2b2793aefcd0",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd240aa0-9c9b-44a6-83a1-4f4749c5e9d8",
        "cursor": {
          "ref": "ecae8dd9-4e46-4512-8606-eec15addb647",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "c52b9820-3564-4cbb-93cf-170b75ed6f26"
        },
        "item": {
          "id": "fd240aa0-9c9b-44a6-83a1-4f4749c5e9d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "0e81e907-cc33-489a-849b-2da44c88ab2d",
          "status": "Created",
          "code": 201,
          "responseTime": 27,
          "responseSize": 918
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4bc6ff2-f2cd-4e90-a85f-2fec3658df71",
        "cursor": {
          "ref": "6a9abbb2-c46c-4d97-9e2c-b4c78628d23c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "9408b3fd-2adf-40b4-8751-4f8c49fd2dec"
        },
        "item": {
          "id": "e4bc6ff2-f2cd-4e90-a85f-2fec3658df71",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "d7af56f2-894a-448e-a8a9-33afd2cc87f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edbf2845-9afa-4adf-9470-c27880ebf262",
        "cursor": {
          "ref": "0cd42831-d228-4099-8cc5-5fa063d46bcc",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "bfef7c83-0747-4277-bc86-05e69287f70b"
        },
        "item": {
          "id": "edbf2845-9afa-4adf-9470-c27880ebf262",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "426da218-19af-452b-9705-1b0c1515de9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030f8ece-f5e2-4c08-adb7-1d01622d3d3e",
        "cursor": {
          "ref": "a4042d92-feef-4dc9-a158-993d56259e4a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "89c2772c-b120-409d-a894-b716e7ae3bd7"
        },
        "item": {
          "id": "030f8ece-f5e2-4c08-adb7-1d01622d3d3e",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "d861920f-608e-418f-be51-a3a1df999fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "655e5129-7a26-43c8-af01-3b266056132d",
        "cursor": {
          "ref": "b6571e8c-191b-43c5-af05-dec335071cc8",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f1f610b3-2e3b-4c8c-9919-67886bda29fa"
        },
        "item": {
          "id": "655e5129-7a26-43c8-af01-3b266056132d",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2da6877b-c615-4221-8b3d-1b382ee441ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0336b61-207e-49d7-b370-773b0cdd1e1a",
        "cursor": {
          "ref": "43f6a8ed-8b76-4c97-bc6c-c6686c5b84eb",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "915b0a32-f2fa-4f22-bb84-1d16b3d77d80"
        },
        "item": {
          "id": "c0336b61-207e-49d7-b370-773b0cdd1e1a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "dd662654-1d2e-44cf-bb81-f6dc8a7f6f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f502dfb3-1ade-4e17-aa03-eddec8dc35c5",
        "cursor": {
          "ref": "c66f96fe-b664-4bb1-9f77-4935c436b131",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "80ad6ed1-3f81-4e57-bda1-b582191da3ee"
        },
        "item": {
          "id": "f502dfb3-1ade-4e17-aa03-eddec8dc35c5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "d93dde30-dee9-4da7-8b7b-313ce74f79cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e64232d-4f28-4be8-b6c7-fb5c52ca005a",
        "cursor": {
          "ref": "074e9e53-e09e-42fa-a363-10e867ec83c5",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "6896ddc5-a3f9-409f-9d9a-9214588e9c3a"
        },
        "item": {
          "id": "9e64232d-4f28-4be8-b6c7-fb5c52ca005a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "1c92e932-35c4-4570-8ea7-d49c27a956c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fbafd1-bcca-4450-8b3c-4b13b06f0590",
        "cursor": {
          "ref": "49b287ac-cea6-4e12-9d6a-ecc12a30930b",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4670b021-649e-4bd0-ad9f-20d22839fdf1"
        },
        "item": {
          "id": "53fbafd1-bcca-4450-8b3c-4b13b06f0590",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "9aebd9bc-58b2-4527-8f01-5a9145e061d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85900db7-38f8-42f5-ad27-81c32ce94ff4",
        "cursor": {
          "ref": "448ebf3f-c8fb-4e97-a51b-20cc36eab131",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "44ad6bfc-bea5-40ec-a3b2-121ac98382b4"
        },
        "item": {
          "id": "85900db7-38f8-42f5-ad27-81c32ce94ff4",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "eea4c86e-fb47-4338-a5ad-ad9792f8136f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "272324f8-3d72-41d5-8e11-64f14f43ca00",
        "cursor": {
          "ref": "e205004b-2562-4be9-8f08-379e3b717aa1",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "45d3f2f8-c6bf-4e57-a1a7-1a62f21bb1df"
        },
        "item": {
          "id": "272324f8-3d72-41d5-8e11-64f14f43ca00",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d299a8c8-0993-4323-a986-5f28a6651f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67393ed2-5616-4317-b1f9-2524005d10e4",
        "cursor": {
          "ref": "d6146547-eb1b-4914-92e1-9caaa3302aed",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "b0699ac2-d7aa-4fc8-995e-777f30f6c90f"
        },
        "item": {
          "id": "67393ed2-5616-4317-b1f9-2524005d10e4",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "43a5611d-5cad-474b-9d11-e424a2fa8d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "037275a6-a26d-4540-96ce-20c19e83a7b7",
        "cursor": {
          "ref": "2f3108e5-5fe3-4b73-a2ae-27e1cc0abb55",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "95001e48-6b14-4497-a150-0e2f6180b00d"
        },
        "item": {
          "id": "037275a6-a26d-4540-96ce-20c19e83a7b7",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c3caedb7-a75a-404a-b7a5-93571ebb75d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bff8d0b-522c-401f-9757-fc92004fe254",
        "cursor": {
          "ref": "afdf9b8b-98a0-42d1-92c7-7b8b4168bbdb",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "92d178f0-268e-43f4-abb2-232fe05349d8"
        },
        "item": {
          "id": "9bff8d0b-522c-401f-9757-fc92004fe254",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "85034694-7e8a-479a-817b-530e7f490979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "115f6a25-750c-432e-afe8-63fea71be4b3",
        "cursor": {
          "ref": "5c2e046f-e5be-49ce-8bfa-bbc7c543d4ea",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d83b7082-adb4-4256-83ca-a8514fd53d83"
        },
        "item": {
          "id": "115f6a25-750c-432e-afe8-63fea71be4b3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "0f91a925-0e62-44cf-bf5e-ae79ec241c74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d30a06ca-4133-4587-86a9-46ab0fa8c172",
        "cursor": {
          "ref": "65f4b972-0c8b-407b-a625-8d869b715035",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "f6ac8598-87fe-4a43-b416-cb84f0de1e94"
        },
        "item": {
          "id": "d30a06ca-4133-4587-86a9-46ab0fa8c172",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5dc1c286-e32e-4bce-85cc-c917a3da96e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91b9d2db-622b-4c45-9d05-9063cbde459b",
        "cursor": {
          "ref": "b7117c1a-001b-4555-92ce-9901c39b38cc",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "45b08919-18ce-4c06-92b1-52a17eb9bc20"
        },
        "item": {
          "id": "91b9d2db-622b-4c45-9d05-9063cbde459b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "2b8ea63e-591a-4fc5-8661-f8d664d74e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a60ab2b-bc0d-48bf-8586-c1fd26c5cf7d",
        "cursor": {
          "ref": "6b69a67b-a96b-46fa-a1bc-e3219caf51c0",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "17188dbc-76e1-4dbf-bbfa-fa51257dfa2c"
        },
        "item": {
          "id": "9a60ab2b-bc0d-48bf-8586-c1fd26c5cf7d",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "58525042-b736-454b-ad15-df6e7d99b8de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22ba0aa9-83aa-40bc-afb1-68eb7210977c",
        "cursor": {
          "ref": "82c35364-4167-41b9-9991-c059b37c7868",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "cbd67e2a-3bcb-49be-bede-1ac53eebc912"
        },
        "item": {
          "id": "22ba0aa9-83aa-40bc-afb1-68eb7210977c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2d00757c-93c8-4506-9a18-f29d1c8585b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0331488d-00ad-4f51-8efa-a5fa855d6cff",
        "cursor": {
          "ref": "d3d989bc-2a75-4dbc-bddb-924ba110b031",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "930287b5-fd52-4b11-9449-e5a78bef6132"
        },
        "item": {
          "id": "0331488d-00ad-4f51-8efa-a5fa855d6cff",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "1258d21b-b28b-4ee6-ac74-ad97f4c5728e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f10dffa-6dce-4e1b-a7e0-d9547a6c2818",
        "cursor": {
          "ref": "4b475ebb-e8e7-49b1-9935-84cd9c21d6b3",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e1a9fc6f-2090-4ceb-9bcc-72c23e9bfbcf"
        },
        "item": {
          "id": "0f10dffa-6dce-4e1b-a7e0-d9547a6c2818",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "d9574797-c2cb-4d93-84c0-1e22a7aa2a94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286639c1-6b9e-419c-95dd-51432e063045",
        "cursor": {
          "ref": "c7f0a303-51e2-4030-9711-d6144f2d9d32",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "5353b467-351c-4782-8ed4-53d6e2ad06b9"
        },
        "item": {
          "id": "286639c1-6b9e-419c-95dd-51432e063045",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0d14ec78-4d42-4f70-9539-b92a28e2ffe0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613359d1-780a-4e99-821c-f66f4facaf2e",
        "cursor": {
          "ref": "c5e70f66-822a-460b-b477-9d41dd153d23",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "41cdbedd-b12a-4edd-98a0-d5e5718943d6"
        },
        "item": {
          "id": "613359d1-780a-4e99-821c-f66f4facaf2e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d20eebcb-ea64-4723-b647-c82c255aebae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b1fe63-ff0e-4795-9c9e-0c8930e5c815",
        "cursor": {
          "ref": "3808b909-8755-4bdc-9b62-82909ce676c4",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8d0588b2-04be-4845-a582-59108cafebee"
        },
        "item": {
          "id": "74b1fe63-ff0e-4795-9c9e-0c8930e5c815",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "db73dd9c-7581-49fc-8003-a796ad596ef1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e596c76b-0e02-49f1-b892-662c48cd0566",
        "cursor": {
          "ref": "fd8c20a4-7534-4851-882f-2be49a679e2c",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "459780b0-9c16-445f-9317-d0f5663488c4"
        },
        "item": {
          "id": "e596c76b-0e02-49f1-b892-662c48cd0566",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "81920e34-0a3d-4354-aa65-36b7f99687a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7d1bb7-5de1-48dc-904a-b9077e43deff",
        "cursor": {
          "ref": "6e265f39-cee7-4e0c-ba99-b1c99d5652f4",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "566f3246-e120-4705-99cb-f13d6282ec6f"
        },
        "item": {
          "id": "7c7d1bb7-5de1-48dc-904a-b9077e43deff",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "07f0beff-2cae-4a02-9b41-2b317562c2fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6d27992-179e-4e23-952c-949bff7324d6",
        "cursor": {
          "ref": "edc8df08-fe87-470f-a122-985a8b8011c2",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "2c6abcb7-ab49-45de-9f04-bdd1652ea0ee"
        },
        "item": {
          "id": "c6d27992-179e-4e23-952c-949bff7324d6",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "4d3a1455-94e8-464e-a806-0a8d7cf540bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5a2314-ed50-43ab-b142-4430467e0dfc",
        "cursor": {
          "ref": "164ea42b-aaa4-4404-8070-12802a2c73df",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "7394729b-8695-464f-9aaa-877ef209efc2"
        },
        "item": {
          "id": "ba5a2314-ed50-43ab-b142-4430467e0dfc",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "990d7dda-5c0a-4ad0-97c5-375e51fccaf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c8c1907-189d-4eda-8585-d43b0e283ee5",
        "cursor": {
          "ref": "8fdab617-c3d0-4341-9337-9f601de84cbd",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "2dc2eb37-7c97-4270-8d3b-c3da66f39abd"
        },
        "item": {
          "id": "3c8c1907-189d-4eda-8585-d43b0e283ee5",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "35bfcf0b-7733-4c9d-9e43-32834a2e89ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d28edf5b-a663-407d-a2b2-a35b6e949cb8",
        "cursor": {
          "ref": "b9090fa1-5b8f-4dd3-90f1-102733bba78b",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "a2b845b5-fcd4-45a0-9456-9d5d632a42c6"
        },
        "item": {
          "id": "d28edf5b-a663-407d-a2b2-a35b6e949cb8",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "de768b91-2568-4717-bdc8-3e07d92a514b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cf1fc3e-9ca4-41c5-9166-745df8273a57",
        "cursor": {
          "ref": "80c52353-a615-4bf3-a982-ea55721be9e2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "69635eec-028f-4ad5-a763-b65362757837"
        },
        "item": {
          "id": "9cf1fc3e-9ca4-41c5-9166-745df8273a57",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "00193275-a54c-4425-9378-7c57854a3ca4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014212bb-b74e-4d62-bb94-bdbcc702b5ec",
        "cursor": {
          "ref": "49b64621-bd46-46fd-9dde-0d18a0df5f4d",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "280c521e-b45a-44e3-99c6-237c7c7d1fb2"
        },
        "item": {
          "id": "014212bb-b74e-4d62-bb94-bdbcc702b5ec",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "6adea886-8e6c-4227-9db9-8cca79096004",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3df55d38-8201-41b7-8024-7246fd116b25",
        "cursor": {
          "ref": "ee59c9f7-4a07-4652-b12a-706d4f7db2bf",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "b6580bf6-5f25-44ac-8db1-3ef5fdaca813"
        },
        "item": {
          "id": "3df55d38-8201-41b7-8024-7246fd116b25",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b67e2203-5370-4bae-9383-e89f8ea49b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebf662f9-4d55-45f3-b5b2-fe5b4ba7e731",
        "cursor": {
          "ref": "20258e95-a320-49fd-8a47-72372eda4002",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "80ee0c98-b957-4f56-952b-96f406f7d57e"
        },
        "item": {
          "id": "ebf662f9-4d55-45f3-b5b2-fe5b4ba7e731",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "8e90edd7-2463-4245-b950-fc9eac7fff62",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0663b3c-08d9-4f32-aa0f-72dec33178c0",
        "cursor": {
          "ref": "801f27bf-cf05-4ab3-850a-2bfdafa91b74",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "0747b1d7-06af-4c04-840a-667d78fce4e8"
        },
        "item": {
          "id": "b0663b3c-08d9-4f32-aa0f-72dec33178c0",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "8e11e59a-8933-433f-9222-21b6ed3c9ed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c31cf2e-df5a-485b-9145-896a62f3c7aa",
        "cursor": {
          "ref": "18d64066-8f0d-42a6-b94e-06a5204f34a9",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "7d5008f6-3347-4749-96e8-2c0e162ad36d"
        },
        "item": {
          "id": "8c31cf2e-df5a-485b-9145-896a62f3c7aa",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "5f991a5d-bb3b-49c7-9692-99dbf3ef8f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9c360af-5dc9-4a55-a132-799568987899",
        "cursor": {
          "ref": "f48397db-740e-4dca-ad3b-a57bcc31302c",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "a60fc6f2-fbce-416f-990b-4bf92706beca"
        },
        "item": {
          "id": "a9c360af-5dc9-4a55-a132-799568987899",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "c6349e1f-026f-4461-8f02-e2657005ed67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c39b6e4e-afe0-4665-b715-ba72c591b40a",
        "cursor": {
          "ref": "281954e6-a984-4278-a543-7f2bcde12a8a",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "03de71b0-784e-4c9d-8ff5-cc2ccb1c0053"
        },
        "item": {
          "id": "c39b6e4e-afe0-4665-b715-ba72c591b40a",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "0e24039b-e30e-4727-8bf4-c325da594bff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b78b69a1-e52b-4754-b123-444cf3e359de",
        "cursor": {
          "ref": "a69e1a18-507d-4f03-9d15-8cf3dc7114ff",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "31d37d81-2cad-4cbe-8bfd-fb74456185a2"
        },
        "item": {
          "id": "b78b69a1-e52b-4754-b123-444cf3e359de",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ce2648b9-f251-4112-b118-c3cb528b2cf1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba4bdea-9d4a-40b7-83ed-2bc011d72e26",
        "cursor": {
          "ref": "39d7e9a9-c876-431c-854e-c0b379ef44fe",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b42fc3cc-c957-4a54-920a-a47fac490d69"
        },
        "item": {
          "id": "7ba4bdea-9d4a-40b7-83ed-2bc011d72e26",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "fa4bdf2f-9b82-4c61-9474-26e09bee4ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9100a095-18cd-4d1e-80de-bbc94496ae7d",
        "cursor": {
          "ref": "9da6ac46-3621-4d9f-addc-746949d9221f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "b636f16e-fe47-4fd6-ae62-bd674e675b49"
        },
        "item": {
          "id": "9100a095-18cd-4d1e-80de-bbc94496ae7d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "d0c6a39a-9114-424d-946e-510cc81f42c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6bbbd4a5-d0dd-418f-b86f-0f3a697f96b0",
        "cursor": {
          "ref": "0dcf9eda-99d9-4cc8-b675-ed03fccfd6fc",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "980de1d0-79d3-4db7-bc6c-c1adc132ab3a"
        },
        "item": {
          "id": "6bbbd4a5-d0dd-418f-b86f-0f3a697f96b0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "62e62e9d-a303-42c5-bcac-6857fe0c60d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d20065d-91ab-4ddd-994c-dffb935c14a9",
        "cursor": {
          "ref": "283aa641-43e9-4072-a57f-5b3164a85162",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "367cd644-c671-4b45-b65d-143ab07d708c"
        },
        "item": {
          "id": "7d20065d-91ab-4ddd-994c-dffb935c14a9",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7b5c451c-a571-41a0-9be3-6401d2767e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57c6f6d2-c864-4694-9e87-da23f1f26052",
        "cursor": {
          "ref": "22b98feb-ec29-4ec8-b08d-72cd1d344cb8",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "20e08a9e-ace7-44ed-9e0d-059d459475cf"
        },
        "item": {
          "id": "57c6f6d2-c864-4694-9e87-da23f1f26052",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "8ce51485-c64f-401b-b38b-d64ed9327b4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf256666-82e3-46a1-9d04-9c1e90eb3227",
        "cursor": {
          "ref": "dce13ea4-d3bc-4c95-9808-722849bf057d",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "7a79ff75-5451-4c39-bf7d-6a6ba07f6ecd"
        },
        "item": {
          "id": "bf256666-82e3-46a1-9d04-9c1e90eb3227",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "eeb455e6-8797-4160-b1dd-ab3fce519192",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c25f6d-540d-46c5-96af-60f1766bed0a",
        "cursor": {
          "ref": "cbe27612-07a9-4577-ab86-86c947cbe6e8",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "4a7aa76a-fb57-4f16-9bf7-c28d83c85cb5"
        },
        "item": {
          "id": "34c25f6d-540d-46c5-96af-60f1766bed0a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "a760783e-1b0f-4072-bb06-85a28b0e9701",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2331bc07-24a8-4ab4-91d3-33b3db2ff96c",
        "cursor": {
          "ref": "462946d9-2c03-4027-a3c6-bd56092cbf2b",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e240281d-a420-402f-8893-ed0d7a7cf83e"
        },
        "item": {
          "id": "2331bc07-24a8-4ab4-91d3-33b3db2ff96c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "39f780ed-bc1a-464c-936e-50e87d40abb0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da5c268e-3816-4bb5-a617-73cc609520f2",
        "cursor": {
          "ref": "dc66163e-ae48-4426-ad3a-d49501041dd8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "7913e2ab-93fd-4c9a-8854-862a849d5374"
        },
        "item": {
          "id": "da5c268e-3816-4bb5-a617-73cc609520f2",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "608f5b43-b605-45da-9b3a-11ccf540908c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef099087-30fa-42c2-bf57-cb20203d92f6",
        "cursor": {
          "ref": "0e588969-4dab-4bc2-9679-e6b3c89e63ff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "dd275e42-d585-4474-99ad-823cb48be3c1"
        },
        "item": {
          "id": "ef099087-30fa-42c2-bf57-cb20203d92f6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "b7d7bfda-e4d6-4f05-83f2-088277614f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7322df-def6-4579-a78b-2c6077f32209",
        "cursor": {
          "ref": "8f877c80-ef4b-4012-a96c-580a70dc6492",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "768ab94f-c8d3-45d8-873b-7ce150aea9a0"
        },
        "item": {
          "id": "cc7322df-def6-4579-a78b-2c6077f32209",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "4d8804ad-4ea4-44c0-a127-f46f3e470294",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f988f8b2-f82e-4f78-8741-63718d04f8b3",
        "cursor": {
          "ref": "bb83539c-35dd-4451-a717-883696a92487",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "45246865-62e4-4c87-8bdd-632a2a7a08a5"
        },
        "item": {
          "id": "f988f8b2-f82e-4f78-8741-63718d04f8b3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4364a1e0-f063-4bc4-875c-eba920bbdd83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3253219c-d0d3-4adc-ba30-c65d735c1b9a",
        "cursor": {
          "ref": "de462c5e-5b7c-4318-ba64-f17eaa646f76",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "d1ba2dd9-6433-4096-8ba5-553aa7cdd971"
        },
        "item": {
          "id": "3253219c-d0d3-4adc-ba30-c65d735c1b9a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "43c3bbb0-9373-4cbc-94c9-c643156c58af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f1925c7-4ff1-420c-b6b6-57fc7409410b",
        "cursor": {
          "ref": "c90c2b9b-1b90-41dd-8f3b-cf1d651288dd",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f6f5ac58-5cbe-4935-80cb-ae9e4bc61e9d"
        },
        "item": {
          "id": "4f1925c7-4ff1-420c-b6b6-57fc7409410b",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "3bc1267b-705b-46a8-b5b3-a6f8604822f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63b9a3fb-a4be-4299-8e91-9d7e2e5f1428",
        "cursor": {
          "ref": "431b5c77-e0f0-41d1-a71e-6914961e0be0",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "b233e797-2daa-4280-9347-51001c39bd96"
        },
        "item": {
          "id": "63b9a3fb-a4be-4299-8e91-9d7e2e5f1428",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "a0ccde78-f3a7-4891-b185-f30ec6106872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82f0dba0-966b-46be-8593-213c47f08a20",
        "cursor": {
          "ref": "de6e94dd-5e5f-4391-814c-a2148763eaba",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "eab43393-4843-4d95-9724-1a0d13da6a3f"
        },
        "item": {
          "id": "82f0dba0-966b-46be-8593-213c47f08a20",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "d9cb31e1-a74b-4b00-b7d9-d0b5bdd557a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57e28b1f-6b33-4040-b46f-ffa49e4778ad",
        "cursor": {
          "ref": "61d1fa86-35ce-48e6-a680-5c0ebfd47400",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "f391b3a2-9768-4566-bccf-9f76d3cc997d"
        },
        "item": {
          "id": "57e28b1f-6b33-4040-b46f-ffa49e4778ad",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "177a0da6-3c4c-41b0-86bc-203367d8185d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6455dedd-635d-4728-af62-cfbbee7b5539",
        "cursor": {
          "ref": "7b64c123-7de3-4b4a-886f-00a00c19929b",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "fa931e5f-bb1e-4b12-af0e-89579bef3ab4"
        },
        "item": {
          "id": "6455dedd-635d-4728-af62-cfbbee7b5539",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "4142368e-78c7-4e16-a0de-505a8b9ada06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae5f70d-c231-4fa5-931f-342e3ae6372f",
        "cursor": {
          "ref": "5aa1cb8c-a4d5-4b2b-9434-8c1867409b8e",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e2140fe2-0054-4375-944a-263cc520a040"
        },
        "item": {
          "id": "5ae5f70d-c231-4fa5-931f-342e3ae6372f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "4aa0badb-6356-473a-b6fb-c21aa4ee0ed6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49321ac2-2bd6-4281-9a6a-0e4723c09f3b",
        "cursor": {
          "ref": "509ecd8a-587d-401e-a3ba-587d035fc663",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "e33f6b0a-c0c6-420b-b6e3-6e5d65ec0c1b"
        },
        "item": {
          "id": "49321ac2-2bd6-4281-9a6a-0e4723c09f3b",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "69e6984f-01f6-4b3e-bd6a-844a497a6c27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf0c9219-80d7-4834-b14f-c17bb9ff02a8",
        "cursor": {
          "ref": "516b0263-c5b1-4e4f-be5e-e31f4b4861e8",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "036f2a92-d0ae-4837-b0b4-0b640ab45a2d"
        },
        "item": {
          "id": "cf0c9219-80d7-4834-b14f-c17bb9ff02a8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d38f7c69-5805-4298-ab2d-8b6951aa80d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ce70188-64ad-4ad0-af31-1e626e321e2b",
        "cursor": {
          "ref": "c6e6612d-754b-4a1c-b7b7-c21c5758f7b0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "6dbeb889-4161-4fca-85d3-73347fa9d1db"
        },
        "item": {
          "id": "8ce70188-64ad-4ad0-af31-1e626e321e2b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "1f885bbf-7ffd-4355-95fe-ad5f14121010",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4cf18d9-0ac5-4e8e-9bab-2d7e226dff7a",
        "cursor": {
          "ref": "209ac002-3ec9-4940-9e02-e697f81ad2fb",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6da4b811-22a8-42a7-a328-ff073672a319"
        },
        "item": {
          "id": "b4cf18d9-0ac5-4e8e-9bab-2d7e226dff7a",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "5f82929e-5004-4b0a-937b-b0ec7870fb42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1bbce8c-dff3-40d2-a6a7-b607dd64fd86",
        "cursor": {
          "ref": "4ec2d301-2125-40cb-b91d-0f801babb9b0",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "d502c8d8-2ab9-46b9-a9c7-35f6c8224515"
        },
        "item": {
          "id": "b1bbce8c-dff3-40d2-a6a7-b607dd64fd86",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "0a7903c6-af42-4f04-acd9-abceb2491638",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39eb2cab-ca38-4884-bd16-4848ac22ccbb",
        "cursor": {
          "ref": "f24aaf49-2a4c-4c8b-a17c-3d4a62744d54",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7f16ce30-a438-4749-a7e1-3173d33feea4"
        },
        "item": {
          "id": "39eb2cab-ca38-4884-bd16-4848ac22ccbb",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d08dfd3d-52c4-45ab-a360-c17576f193bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f64e53c-4794-4c1b-9159-ee22df51b5ac",
        "cursor": {
          "ref": "d6803740-1a28-47dc-9cd8-e98e7e01b77a",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "39caa1ac-3caf-4b8e-82e4-db09e72b8b3e"
        },
        "item": {
          "id": "1f64e53c-4794-4c1b-9159-ee22df51b5ac",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "462362e4-011c-40f1-93f8-af335e0c5aa7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e00ad81e-82e5-4b1a-8a7a-5e7794fbde63",
        "cursor": {
          "ref": "8dc58ddf-837d-444b-9162-299c23504d7d",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4f0bf12f-f1e1-45e6-841e-1688820ebe34"
        },
        "item": {
          "id": "e00ad81e-82e5-4b1a-8a7a-5e7794fbde63",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "509973e9-3af6-40eb-8fee-b6a189f83adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "458f3bac-914b-4415-9a90-4d030aff2592",
        "cursor": {
          "ref": "7ea687a3-ebb8-4377-9f4f-8df1f42c47e4",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "a179eb81-0668-451f-a610-5131db3787f5"
        },
        "item": {
          "id": "458f3bac-914b-4415-9a90-4d030aff2592",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "8e1d8e61-acce-4434-a7c4-8949a7f672d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4303e199-891a-490f-bfe8-2aa73815bc15",
        "cursor": {
          "ref": "caa7ee88-f623-4607-8ba2-d3ee7e9f63e9",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "84310f7c-d546-493e-88db-8477b78faf85"
        },
        "item": {
          "id": "4303e199-891a-490f-bfe8-2aa73815bc15",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e2aa46b5-1a99-4576-ad3f-259453ab7dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7605ee2-0a1d-4dc5-995c-28642f2eb318",
        "cursor": {
          "ref": "287ec97a-34d6-424e-8ab9-9240271beb6f",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ea59c1ce-ff3b-4ce0-9264-6679b923bbf0"
        },
        "item": {
          "id": "f7605ee2-0a1d-4dc5-995c-28642f2eb318",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "c6778e75-3722-4689-bd07-baa551527b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46dd4767-4c65-4764-a396-7bb18ffc769f",
        "cursor": {
          "ref": "6faec237-1cba-4366-8684-640cd70decc9",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "a2e17023-77ea-4aeb-93da-fa958b969ae9"
        },
        "item": {
          "id": "46dd4767-4c65-4764-a396-7bb18ffc769f",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "894a5b77-4202-4edf-89a3-c023e60e009a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e3f699-0d8d-4462-bdb1-348085a6a2fd",
        "cursor": {
          "ref": "c3aeb521-459a-497c-a05f-7171b2e18a4a",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "cb8ca63e-01db-4486-9b7f-ac5555f4ef1a"
        },
        "item": {
          "id": "94e3f699-0d8d-4462-bdb1-348085a6a2fd",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "fb60ea8a-af00-4ea5-957b-0ad0a79a312e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b2ca73f-3077-46da-9c69-2232d1beeef0",
        "cursor": {
          "ref": "b5f1ec62-f95e-4698-9b3c-387b986405f3",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "2c23504c-6cab-44b2-8e65-48ab7b46d6c2"
        },
        "item": {
          "id": "8b2ca73f-3077-46da-9c69-2232d1beeef0",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "15ba6dff-c97b-4927-a72b-c96e589ef5a4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b7c4ae-38a4-49fa-a719-7a1de6ef50b5",
        "cursor": {
          "ref": "407da103-4258-4333-b040-b58cf0058664",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "93afb4be-add7-4d0a-9812-75267f792b89"
        },
        "item": {
          "id": "d2b7c4ae-38a4-49fa-a719-7a1de6ef50b5",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "efcdb4a7-768b-49f6-a306-ddb0d2d6777e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7379f5ca-d7c9-46cc-967c-fd0d1a1e096a",
        "cursor": {
          "ref": "3cf39300-b091-49fd-a338-96793746c61e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "87fab918-2b8f-4d3b-a3bc-dd1c2bb114f8"
        },
        "item": {
          "id": "7379f5ca-d7c9-46cc-967c-fd0d1a1e096a",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "33ca0bbd-9d35-428d-9a96-2f3ec68788af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abf0b493-0351-4197-95ae-e3dab550e344",
        "cursor": {
          "ref": "12967cc4-712e-4982-a767-b7134846c399",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "493e7204-1c10-46f4-a98c-bfbbfbcdf228"
        },
        "item": {
          "id": "abf0b493-0351-4197-95ae-e3dab550e344",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "5dd9d612-26bb-4981-992e-3d740de7e82d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d9ffa0-9f83-4739-b8dc-fb2d7ed945a3",
        "cursor": {
          "ref": "e7d3dbc9-d680-4194-816d-4115ab937514",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "e95d6d82-7e12-43d3-89e5-78fc22d0210a"
        },
        "item": {
          "id": "43d9ffa0-9f83-4739-b8dc-fb2d7ed945a3",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "31b1c741-5b47-4d3a-99d2-76a151af2432",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed2d1678-57df-4f3d-960e-b22af9e4b988",
        "cursor": {
          "ref": "5dc4756a-28f5-4c29-a5ce-9eb9928cc7f0",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a338bbdc-b32c-4613-89a9-6779664fc46e"
        },
        "item": {
          "id": "ed2d1678-57df-4f3d-960e-b22af9e4b988",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "70d847b9-3d1e-4066-a390-5d606ccb1425",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdda4836-6747-40c3-9fa3-3a20a19558c9",
        "cursor": {
          "ref": "7ff726c6-519c-4afb-93cc-5822ed6a3771",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "90138847-1b4f-4fb7-9c73-86a70dd8d624"
        },
        "item": {
          "id": "bdda4836-6747-40c3-9fa3-3a20a19558c9",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "089a0efd-02f2-4ff2-ae82-dbc5882da1b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "caefa055-2857-4fe2-8fdd-10cd9b86031c",
        "cursor": {
          "ref": "89754c00-dd52-4cbf-be82-e757ff9c2e3c",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "cb7e3723-aef2-423d-989e-ed9aaee8b6cf"
        },
        "item": {
          "id": "caefa055-2857-4fe2-8fdd-10cd9b86031c",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "405ab224-1f4f-47e9-b929-3b92a37a3a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "add4408b-b2c8-42d5-b6df-c7edf4cf67bb",
        "cursor": {
          "ref": "eb56b88d-0693-4986-b5bf-0f0ea57160c8",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b9091dea-64a1-4faf-aa96-bc1e4f21a592"
        },
        "item": {
          "id": "add4408b-b2c8-42d5-b6df-c7edf4cf67bb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "052a8150-ad99-464a-afbb-d00b3c0f0800",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a274128-6ad3-4f03-a36f-d9ba999dc569",
        "cursor": {
          "ref": "91a266fb-990b-4a40-abd4-44eb858bb6cb",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "07a257e7-30f1-477d-8027-180885077128"
        },
        "item": {
          "id": "2a274128-6ad3-4f03-a36f-d9ba999dc569",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b674fbf3-6424-4eed-8cc1-ca51887d2998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e12439b-ac50-4324-9fd4-b4be0ab63f01",
        "cursor": {
          "ref": "d78174bc-9263-41fe-b703-ce98e5ae76eb",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "757f4efd-ed16-4fdc-af3a-af950bf078ae"
        },
        "item": {
          "id": "9e12439b-ac50-4324-9fd4-b4be0ab63f01",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "e8c73273-0725-4cd6-812f-6dae52724f6f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56437b7-294e-4500-b39a-d21aa85d5e5f",
        "cursor": {
          "ref": "300ea856-404f-4a92-a3e2-2eae431e7e04",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "ad9fdd59-7957-47f5-854c-f86ff397e655"
        },
        "item": {
          "id": "f56437b7-294e-4500-b39a-d21aa85d5e5f",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "c26d351e-7060-440d-9273-40f3fc9996ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d43fc2a6-4906-4e3d-8706-889a98121c94",
        "cursor": {
          "ref": "d340708e-684b-4637-ae59-32b7b2f8bcf5",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "29341730-d9a7-48ad-8742-3718dcc737f0"
        },
        "item": {
          "id": "d43fc2a6-4906-4e3d-8706-889a98121c94",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "9b303a99-35cf-4101-9275-4aef076dae92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f3cad0-cc13-4d62-a7b4-0a440966ce3c",
        "cursor": {
          "ref": "74224b52-ceec-439c-917c-e29e0a7d314e",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "1cd24d35-4a82-4de5-8825-61537d09fd4a"
        },
        "item": {
          "id": "c7f3cad0-cc13-4d62-a7b4-0a440966ce3c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "5a3cbe26-487d-45f3-9459-df535e19c34c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "486224cb-9c6e-4960-8b02-296778005939",
        "cursor": {
          "ref": "7149d03b-26b7-44bb-8956-485e32909f33",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "e7fcb4f7-02cc-4a5f-bf1c-2344d184238a"
        },
        "item": {
          "id": "486224cb-9c6e-4960-8b02-296778005939",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "98645296-c193-4666-95bc-d1174bde0a16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21ee24c3-9667-49a1-b237-6f9d1a2e4d08",
        "cursor": {
          "ref": "8cb330cb-8b67-4c00-a32e-3522cd687416",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "ea228c10-5d08-4fa3-9da2-ef1365b745f1"
        },
        "item": {
          "id": "21ee24c3-9667-49a1-b237-6f9d1a2e4d08",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "b8b27a27-ad5e-49c5-982e-3d5f5e1b6280",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30805e87-2558-4e68-a046-ff007ee685b1",
        "cursor": {
          "ref": "4dbb8f4c-4192-4238-a014-3a1d78e46616",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ec8d5083-c0c0-4fcf-9bba-982a010157be"
        },
        "item": {
          "id": "30805e87-2558-4e68-a046-ff007ee685b1",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "a0625302-14c9-4985-ba6a-c9704329e714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "612316b5-7af4-4235-862a-e9264d771e9c",
        "cursor": {
          "ref": "5c0bcf59-9211-4aee-b7bb-c7f6b0dabe94",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "155b2e8e-af99-4ce4-847b-fd1be116e834"
        },
        "item": {
          "id": "612316b5-7af4-4235-862a-e9264d771e9c",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "55e1f2d2-8ab6-4c78-bea9-b271488171dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27080e3-56e7-42dd-9e8e-2d17841a39c2",
        "cursor": {
          "ref": "7b90f972-c82b-4f5c-820e-8f6ddca63394",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "51f3e037-f6f1-41ca-b7b0-a74eef5c12d6"
        },
        "item": {
          "id": "d27080e3-56e7-42dd-9e8e-2d17841a39c2",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "152d657d-666e-48fb-94bd-8a7d1a0c1b56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed53dc9e-e3eb-4133-b47d-d736baa72ae3",
        "cursor": {
          "ref": "101e8c42-e72f-4bd4-a385-a39f4ba93841",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1d3df4be-10c4-4ae9-9f2a-ab9f385308d8"
        },
        "item": {
          "id": "ed53dc9e-e3eb-4133-b47d-d736baa72ae3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "b8c64f1d-cb46-4ac4-8bd0-3e209a37b7dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "177087a6-c936-42ee-8105-693c22a56e62",
        "cursor": {
          "ref": "b0959fcb-5af6-4cfd-9732-97224ca4b9b8",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0a63ca5c-05be-499c-83c2-5a90c646d3f1"
        },
        "item": {
          "id": "177087a6-c936-42ee-8105-693c22a56e62",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "e4a98415-fa60-42c9-b18b-49e15bdde3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be56f20a-0efa-4e83-9ea7-4c367eb08d6f",
        "cursor": {
          "ref": "3888312c-9be8-41c0-8155-ee453b979d8d",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ee4d968a-a32b-4033-8531-91cb7eabc48c"
        },
        "item": {
          "id": "be56f20a-0efa-4e83-9ea7-4c367eb08d6f",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "941e30e2-51de-4311-9610-09ca7638a1a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb797ab0-0339-4cd3-b0ac-c9f3b633fecc",
        "cursor": {
          "ref": "59196b61-31bf-4b5e-bbee-80fc02df5ad9",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "cc8278d3-ae77-45b6-9c48-4c0b243c1a20"
        },
        "item": {
          "id": "bb797ab0-0339-4cd3-b0ac-c9f3b633fecc",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "f1dad79a-81cf-448d-be0f-22a5920bb7cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46aa8b81-660c-4d46-8498-2383374dd0f5",
        "cursor": {
          "ref": "dc1a1df2-9a0e-4369-8c72-21a37cecc7db",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "b6b901c6-89ad-4ecc-a409-b81d661978aa"
        },
        "item": {
          "id": "46aa8b81-660c-4d46-8498-2383374dd0f5",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "1f92bf24-c656-4e66-9386-8a7915d65d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cff5ec9e-31cb-4d7b-98c9-de863b9a4625",
        "cursor": {
          "ref": "d57eaad3-bcd8-4f90-b160-677c4deb02ae",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "059377eb-3633-4042-89c5-344b8e550fc8"
        },
        "item": {
          "id": "cff5ec9e-31cb-4d7b-98c9-de863b9a4625",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2ac7b1bd-2a10-46db-b1b3-1e9f0198a7b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 32,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9df6f0c-07e8-4cf9-b49c-dcce7b87e694",
        "cursor": {
          "ref": "3583081e-ee60-4d95-9309-9dbb262bd5c6",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "106632fd-d50c-429b-9f4a-294652fdbe63"
        },
        "item": {
          "id": "d9df6f0c-07e8-4cf9-b49c-dcce7b87e694",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "35fe1f03-e8c6-4b18-b009-b4ba1f4a0813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 6,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b18deed-d8e1-447d-8f78-ce0b3dc43f2e",
        "cursor": {
          "ref": "73e01c59-120c-4810-8379-33e227df1db6",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "7372cb61-1ac7-4091-afb4-f6b503c325e0"
        },
        "item": {
          "id": "2b18deed-d8e1-447d-8f78-ce0b3dc43f2e",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "6c7249e2-1084-4922-9ef0-755747d14e9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6711d84-3e46-479f-b888-bcfdfe466855",
        "cursor": {
          "ref": "68ed4899-c081-4eb0-816d-5e0b929e314c",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "2f068f2f-29f9-4c8a-99c7-a56b1c74e705"
        },
        "item": {
          "id": "c6711d84-3e46-479f-b888-bcfdfe466855",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "f154bee9-b0ec-4ce3-8344-8af200621998",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "916e44e9-2249-474e-a6fc-1c41b194765c",
        "cursor": {
          "ref": "5bfc3575-42d0-46e1-bf6f-3497fc4898e3",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "60316aed-b6ff-47da-b834-165ab8d8d644"
        },
        "item": {
          "id": "916e44e9-2249-474e-a6fc-1c41b194765c",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "a2fd6b66-600d-4f99-a88b-9aabeb4b47b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e43b6f1-2408-4c32-b77b-40bb7c6031e8",
        "cursor": {
          "ref": "d41351cc-ed20-461e-8766-a90d3eb9f1c7",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "7451ac64-797f-4bd4-a5b2-ceb6feba6a86"
        },
        "item": {
          "id": "9e43b6f1-2408-4c32-b77b-40bb7c6031e8",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "3e91d066-a011-43e5-a5d6-cd7399a5553a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfd7c07b-92d1-43e5-ab2f-c94df705ae4b",
        "cursor": {
          "ref": "4dfd35e1-2892-4faa-b30a-f08647d948ea",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "931e1a06-3110-4cad-875d-07b74ded849d"
        },
        "item": {
          "id": "bfd7c07b-92d1-43e5-ab2f-c94df705ae4b",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "7ce2d4c3-d899-4c32-ba40-d7da1825910d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6299fbdf-a56b-4667-9703-8b36ba4957e0",
        "cursor": {
          "ref": "ed70d118-f0df-4c2e-a3cf-1b4eff5f851a",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "d3548eba-367e-42ec-a94b-836dc10c3776"
        },
        "item": {
          "id": "6299fbdf-a56b-4667-9703-8b36ba4957e0",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a3437188-3fd7-4ccd-a9c7-d43a2b3edaa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c59a4c-bb1c-4eba-aef8-681db85b6c3c",
        "cursor": {
          "ref": "7e8eb7ea-d95c-4c57-8e94-29758fa5dd9a",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "9707ac9c-8d2b-4400-bdda-b9481cebc072"
        },
        "item": {
          "id": "91c59a4c-bb1c-4eba-aef8-681db85b6c3c",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "d0740553-cbfd-459a-b6eb-7499e367cf08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f19dc2fa-324b-461f-8740-3b88ac8fff27",
        "cursor": {
          "ref": "5e067724-697a-4c1e-a898-7885d46f4f69",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "6f6ec2d0-ed46-4444-baaf-9122af69c59e"
        },
        "item": {
          "id": "f19dc2fa-324b-461f-8740-3b88ac8fff27",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "5b7aedd2-5f62-48f5-84d1-6f50c4cb5ca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecb6af09-91b8-4357-8ac9-7e0c67f88762",
        "cursor": {
          "ref": "c29bbaba-0a38-4729-84c5-da8ef8fc2381",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "569be896-dd07-41f6-a056-5af7815cd525"
        },
        "item": {
          "id": "ecb6af09-91b8-4357-8ac9-7e0c67f88762",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a77d1269-3f48-4a57-aba7-b12f52fc6a6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489bedfc-a63c-4a57-82a9-5d386c9c67dd",
        "cursor": {
          "ref": "cd5783e7-6961-4af0-ae61-a9d7ae3a2526",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "110fab4e-1254-4b0d-8941-33672a97c048"
        },
        "item": {
          "id": "489bedfc-a63c-4a57-82a9-5d386c9c67dd",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "1a68f53d-a61f-4c3a-83b3-7a4b3f69a7b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24f82948-0f97-450b-ad9e-70435ae573ef",
        "cursor": {
          "ref": "51eaf827-2bdd-4297-8fe9-1f09e9cd3791",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "a0272741-3f36-428c-951a-2ce617ab7783"
        },
        "item": {
          "id": "24f82948-0f97-450b-ad9e-70435ae573ef",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "6ec41dc9-ed33-462e-9d1e-c34d3cddc82c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3096deba-40a5-4448-be64-d8a203a0740f",
        "cursor": {
          "ref": "f1a020ba-d9ea-4706-8ab6-8e24e21d33bb",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4803005c-1213-4d5d-b243-4247e77d0872"
        },
        "item": {
          "id": "3096deba-40a5-4448-be64-d8a203a0740f",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "28d5cdcc-1a91-45e2-91fb-61d2b0700e93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d99bab1-beff-437d-80e5-cfaa1399a63c",
        "cursor": {
          "ref": "7e423d98-0911-4658-a3c1-d9e5496b49f0",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "ef90bdd6-9365-4c31-8aa4-3e40aadfd119"
        },
        "item": {
          "id": "6d99bab1-beff-437d-80e5-cfaa1399a63c",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "7aa40608-a148-4fee-9fee-008482c5c7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ac28f9-f31b-4361-be70-8091f07a11ac",
        "cursor": {
          "ref": "314a7e3b-8f4f-404c-ae08-8830b6a01060",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "671e8cc8-b8c4-4614-b617-576626dd2b32"
        },
        "item": {
          "id": "d5ac28f9-f31b-4361-be70-8091f07a11ac",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "ff948a7f-e5a0-439e-89a1-82762e59022f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3636b57-efb6-45b3-9269-b92995c4baa9",
        "cursor": {
          "ref": "0700cb8f-0510-46d9-8638-eb8bfe3796e3",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "41131bd8-2a5c-40fa-ab88-84a8f2cc8d8a"
        },
        "item": {
          "id": "b3636b57-efb6-45b3-9269-b92995c4baa9",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "60fe1d4f-edcf-4ac2-a833-18248f697f9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aba4c9d-7422-4ec3-a422-bb19bf2734fd",
        "cursor": {
          "ref": "4587aac9-5a69-408b-b63b-b7dfd43c7a6d",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b34c0f55-e81c-4b64-9d0c-9066699e28ee"
        },
        "item": {
          "id": "7aba4c9d-7422-4ec3-a422-bb19bf2734fd",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "efd1ef49-5100-4a29-8263-253852b8a1eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84792d47-be60-428f-926f-017d0a9c56a8",
        "cursor": {
          "ref": "cb12090b-1dda-4803-98a4-8c5166d859b5",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "132e05fe-8b53-4d09-a128-cdd92837a7c1"
        },
        "item": {
          "id": "84792d47-be60-428f-926f-017d0a9c56a8",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "2dd3f0da-0e30-4790-86b8-07bb8734832a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f17bca-6ddd-439f-935c-2088d5c7604e",
        "cursor": {
          "ref": "e15dc8b7-4aec-49fd-9ca0-aeddc31e0a1c",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "84d32ab1-e1b5-439b-953f-353ff645b4d2"
        },
        "item": {
          "id": "b1f17bca-6ddd-439f-935c-2088d5c7604e",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "381763ac-cc5b-45cd-b1bf-473f52b70190",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84bcf08a-0aa9-43eb-a48a-e654b82098f8",
        "cursor": {
          "ref": "97d5b2ec-977e-4306-be56-60e71da919b4",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "7a9755fc-955a-4290-82f1-d6b076056035"
        },
        "item": {
          "id": "84bcf08a-0aa9-43eb-a48a-e654b82098f8",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "e3e2316f-9c0f-4b58-89d4-78232f3f302a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fc43717-bcfd-4c3a-aa6c-a9ae6b92b516",
        "cursor": {
          "ref": "f5478bdc-de3a-430d-8d85-cdb60f68e5b9",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "8d8dcff1-b15f-42e4-b9fb-b88cff66a4ae"
        },
        "item": {
          "id": "0fc43717-bcfd-4c3a-aa6c-a9ae6b92b516",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "83191878-7b16-4aeb-87a5-92ee51c950fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ee4c4fc-ef15-40df-89f4-fd7f091ad4cd",
        "cursor": {
          "ref": "00168909-287b-4b44-87b8-3b90ee991a9b",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "58684ad7-242a-4a10-90b6-70fca0113c87"
        },
        "item": {
          "id": "1ee4c4fc-ef15-40df-89f4-fd7f091ad4cd",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0dfc843b-6610-4bba-be14-ef292e60ee13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4b56473-8671-4470-b63a-e39477a86b77",
        "cursor": {
          "ref": "595ff05f-0178-463b-9212-f2d5320b67dd",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e604bcec-e23a-41e2-a8ce-b09413b8a0d5"
        },
        "item": {
          "id": "b4b56473-8671-4470-b63a-e39477a86b77",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "d787a069-5436-4b96-8b0d-1749d6b9388e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3996968-e05a-4406-ab00-21ad6b88dc0b",
        "cursor": {
          "ref": "99fb3f40-a343-4b93-8e2b-e27e6386622e",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dbb9de66-6049-4165-9de4-dd6cccde18c1"
        },
        "item": {
          "id": "d3996968-e05a-4406-ab00-21ad6b88dc0b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "dc26a41a-8e33-485f-9b60-17212b3f1757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e2c5444-8df2-4a0a-80a8-d44ea354270e",
        "cursor": {
          "ref": "3484e1fa-39b8-4dd8-a766-1919c285d0c3",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "10556fba-170b-413e-97cd-a225d6ed5f55"
        },
        "item": {
          "id": "4e2c5444-8df2-4a0a-80a8-d44ea354270e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "df4088bf-3f3a-4c1d-8ed5-f79146058e67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cb7df66-fb70-4622-a880-24fd424487ca",
        "cursor": {
          "ref": "a8ba1f3a-ccec-4c0f-8a51-a948411bd673",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6fb08c4e-e8ba-4b56-8007-e533a9798118"
        },
        "item": {
          "id": "6cb7df66-fb70-4622-a880-24fd424487ca",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "38ad1e33-d125-41cf-b642-b388b0beb934",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acc7cdbf-d5ca-40fe-a4ca-80782ea0185e",
        "cursor": {
          "ref": "fbbc07d3-cddf-46b5-9c0f-eac4fe0bc39a",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "d7d010fb-fa8e-41b7-8208-dee761201965"
        },
        "item": {
          "id": "acc7cdbf-d5ca-40fe-a4ca-80782ea0185e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "bde041db-500a-4645-9817-1ab9b805fb9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a529fffb-f85f-48a1-861a-e466a0f2e663",
        "cursor": {
          "ref": "7a262dfe-bc7c-4ad0-a52c-8c953d3326f3",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "26282720-dec6-42e0-bb0f-0d36eba56f61"
        },
        "item": {
          "id": "a529fffb-f85f-48a1-861a-e466a0f2e663",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "820e5260-7d4e-4fcd-a960-229972b2f938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "707b0e58-b2fa-46ac-bf50-2034b3796f20",
        "cursor": {
          "ref": "f40797c1-73f8-4234-af0e-ce03f3f044dd",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7d45e96b-c7e1-4ce3-aaf9-1f7eea1d2f16"
        },
        "item": {
          "id": "707b0e58-b2fa-46ac-bf50-2034b3796f20",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "b8fafb55-9f77-4c4a-bc53-eb6721a39d88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "747f72cc-0910-43ed-9ddb-f568cd7db10a",
        "cursor": {
          "ref": "1251a471-e407-473b-8f09-439310f597e0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "fecd8073-98d8-419b-acb1-e138222370b0"
        },
        "item": {
          "id": "747f72cc-0910-43ed-9ddb-f568cd7db10a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "1f94f2ba-7fa5-4920-98bd-6bb0f61b615f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8800b4a4-7bc6-4633-a9c6-a34077409e9e",
        "cursor": {
          "ref": "6e27d6bb-b9a4-4650-a901-1602108693f3",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "5cf460ad-c4b5-4523-a6d2-fe19b48a23ef"
        },
        "item": {
          "id": "8800b4a4-7bc6-4633-a9c6-a34077409e9e",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "8152a0eb-8919-46de-bb44-0c1138777f16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b481abb-85ec-4228-ab67-2d1a3441edfa",
        "cursor": {
          "ref": "3617a4f4-0b95-4432-b0d8-2ef6d397f8a7",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "268fcf0b-108d-4da5-ae6f-dfc6be023e31"
        },
        "item": {
          "id": "0b481abb-85ec-4228-ab67-2d1a3441edfa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "af25427f-2542-4489-8b2b-75853964ff6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97166b1c-ea4b-4f8e-b3e2-5a3628c53b8f",
        "cursor": {
          "ref": "8143cb18-1fe6-4a2a-9b22-174982eb3bb6",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e84fdc6d-a53a-433f-b27b-70405f395c88"
        },
        "item": {
          "id": "97166b1c-ea4b-4f8e-b3e2-5a3628c53b8f",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "b8065547-1126-4654-b099-08218d86c04e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 8,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b8e63d-fdc5-438f-bebe-3814ec5f7a70",
        "cursor": {
          "ref": "e8a43c16-2582-4bbd-a85e-27480cc8d96a",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9be6e4e9-5853-486a-9a96-b52641164cfd"
        },
        "item": {
          "id": "21b8e63d-fdc5-438f-bebe-3814ec5f7a70",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c70fc475-ec46-488d-a3b3-71cf3475e93f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a99636c-eb9a-49f5-8f48-1229979f3124",
        "cursor": {
          "ref": "34f5840e-44d4-41c1-a985-9071834e1dda",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "63d49be7-e406-497b-8df8-49a19bdc5adc"
        },
        "item": {
          "id": "1a99636c-eb9a-49f5-8f48-1229979f3124",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "5f7947ee-6bad-4fb5-8810-f577933da37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df95b09-6011-4356-a3c6-1eb6aa79fac0",
        "cursor": {
          "ref": "23959a5d-45f0-4e8a-a06f-874c8c540cf0",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "36c60500-030c-429f-96b0-1f6c30dd7371"
        },
        "item": {
          "id": "6df95b09-6011-4356-a3c6-1eb6aa79fac0",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "8de6ff0f-38e0-49c2-b15b-a2c609b858a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e801a59-56c6-4760-8982-6fa12b1dd879",
        "cursor": {
          "ref": "42b13953-377a-4031-9e2c-afe0c459c5e0",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "68872a5a-f726-4c00-a596-860f6debbc39"
        },
        "item": {
          "id": "8e801a59-56c6-4760-8982-6fa12b1dd879",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f90ffadb-f41f-4a9b-9486-19ed911cdbdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bffe215-0cfe-4ba9-97f1-d4bf1564bb45",
        "cursor": {
          "ref": "c5139967-ff82-49b8-bf9b-9f946fc3838e",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "2aa863a2-42ac-48d4-bd3f-e106b47644aa"
        },
        "item": {
          "id": "9bffe215-0cfe-4ba9-97f1-d4bf1564bb45",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b85e0e9b-9f28-4850-becd-5c9d1b80be21",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 7,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ea8621-4731-48c7-8926-67a25597d940",
        "cursor": {
          "ref": "8a723563-0166-45de-918b-4f240de966d4",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "538bcd46-f43f-4db3-9a60-6628e8e4b55e"
        },
        "item": {
          "id": "e9ea8621-4731-48c7-8926-67a25597d940",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5d8d4c99-8353-4112-8582-ebe03b268578",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb9358ba-62fe-4534-9c0c-ade433e64bf1",
        "cursor": {
          "ref": "a8d6a714-3428-4647-92ca-6adccca728a7",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "f591fd97-78d1-43a1-aa52-e487536d28f7"
        },
        "item": {
          "id": "eb9358ba-62fe-4534-9c0c-ade433e64bf1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "b1820d60-f0cd-4b5d-bd97-8780415930b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d582f5e-0b1a-4614-80f2-2b9297422f44",
        "cursor": {
          "ref": "cc631be6-d1e4-4e5b-8287-16a6bfae797f",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "02cf971b-ea55-46f4-a7fd-02162e0af1e7"
        },
        "item": {
          "id": "3d582f5e-0b1a-4614-80f2-2b9297422f44",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "77f59706-1722-44c3-855a-f45e30fc887b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27390773-3fb9-404c-9c21-f0cdc1deab18",
        "cursor": {
          "ref": "a6e344aa-5a20-4bc4-be07-9286d31a1c91",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "234c9b37-2f34-4892-aec9-0f7e2c85d41b"
        },
        "item": {
          "id": "27390773-3fb9-404c-9c21-f0cdc1deab18",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "2458360d-a4f0-486a-8bbf-91159f25bca8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 5,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86f0a836-5ee0-486a-9e76-3b15b4cb75ee",
        "cursor": {
          "ref": "4a85ed8e-e04f-4c9b-99f0-ea98ea9fd958",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "fe2cb305-5cb7-4213-abd9-5d597cd768c4"
        },
        "item": {
          "id": "86f0a836-5ee0-486a-9e76-3b15b4cb75ee",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "cc1f1812-7523-4de6-b037-608b40d2abfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e1b404f-4781-4206-b0e7-053ae7e899c5",
        "cursor": {
          "ref": "94e467cc-702e-4830-b2c3-2ce45a8559d2",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "411c6150-5da7-4f19-947c-9993dfdcbbfd"
        },
        "item": {
          "id": "9e1b404f-4781-4206-b0e7-053ae7e899c5",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "883e2209-e5fa-482d-8bef-deb5929a6a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1538cb4a-1e5f-4f2c-a49c-42cf5fb0497c",
        "cursor": {
          "ref": "f7b3ff25-f7f5-49c5-ac6b-4954da4925e5",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "2dcc17d4-c69c-40ce-adca-b7fc66cc4987"
        },
        "item": {
          "id": "1538cb4a-1e5f-4f2c-a49c-42cf5fb0497c",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "c705b113-c241-4498-99e7-65aaa67550cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab3ced4-f8b9-4f2f-bf70-6fcddfd48cf7",
        "cursor": {
          "ref": "3864de2f-741e-47b1-b3b1-c334ae61204c",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "e09bbafc-13be-4998-aacc-a1e60e8a282b"
        },
        "item": {
          "id": "cab3ced4-f8b9-4f2f-bf70-6fcddfd48cf7",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "3be48edd-759d-4854-8c45-4207baa87f02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "107acfc1-bdf1-486b-a8a8-ebce83795906",
        "cursor": {
          "ref": "46b6b520-2b90-47da-b2ef-da3ae778f512",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f41ada72-db69-4d4b-aa3b-0b4fe90db7d9"
        },
        "item": {
          "id": "107acfc1-bdf1-486b-a8a8-ebce83795906",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "df96864d-01c9-432a-92d7-72b5acd81740",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b26e4f26-72d4-4778-8ddf-af85d8632532",
        "cursor": {
          "ref": "fbaee995-afed-4e69-ac04-c9cfaf4d80e4",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "a461db70-cfc4-409c-bc02-120b19eb1a36"
        },
        "item": {
          "id": "b26e4f26-72d4-4778-8ddf-af85d8632532",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "efd56e15-98ac-414c-81a5-b8b844236a02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc764420-64d4-483f-8d4b-3f9bd7f8c64b",
        "cursor": {
          "ref": "578b6c74-ee11-4e1f-8e5e-4b5197b43760",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "ed54f0c4-0965-47ef-b2ef-1a1b5fb190b4"
        },
        "item": {
          "id": "dc764420-64d4-483f-8d4b-3f9bd7f8c64b",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "220f7cf2-6996-4e74-a2bc-45d644417f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "414de84d-1d8d-4495-a49e-d688a457a85f",
        "cursor": {
          "ref": "7d6e7e54-3341-4ab1-a850-397d943723b5",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "38093ff6-ac1a-4feb-8954-1737f6e76030"
        },
        "item": {
          "id": "414de84d-1d8d-4495-a49e-d688a457a85f",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "a82bc4b5-191f-4701-918d-d84a18e508d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e27d49f2-4c6f-4d6f-8062-31816dbfeadf",
        "cursor": {
          "ref": "6d59a704-1100-4182-a457-7710c8317cd2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "37a17bbb-09f3-4b53-bd9e-7d572bb41e78"
        },
        "item": {
          "id": "e27d49f2-4c6f-4d6f-8062-31816dbfeadf",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "080d18f2-0ff1-4168-af97-6f8e0476341e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d31903b-6628-46aa-a140-dea38d66b146",
        "cursor": {
          "ref": "bd8a7463-e209-4ef8-9aa1-405bb96dc5c0",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "5dd322a8-5d86-4ba8-beb8-84e359b54cfc"
        },
        "item": {
          "id": "5d31903b-6628-46aa-a140-dea38d66b146",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "98074a45-2e74-40eb-b792-6b0192da0c6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ec30ce-0528-466a-b00e-3928f1fe94e2",
        "cursor": {
          "ref": "ab4a3289-1789-4e0a-b2ca-006d2e4310ea",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "51a719fc-6b12-4203-a4d8-a72d59b47e71"
        },
        "item": {
          "id": "c3ec30ce-0528-466a-b00e-3928f1fe94e2",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "b759848d-58d6-4db7-a1cc-28bc362078c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaa84916-8948-4344-b00c-303a01481f77",
        "cursor": {
          "ref": "3cae4ffa-81c3-40ca-9edd-7b9c329fc9b3",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "c11215ca-1875-4ed6-9ec8-1cebb1836f43"
        },
        "item": {
          "id": "aaa84916-8948-4344-b00c-303a01481f77",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "e98b8fa4-12e0-4f51-a25b-f278fdf017aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e7d6a5-f623-4251-a385-bf830c465e47",
        "cursor": {
          "ref": "34bfbe9f-a4be-4474-a8ee-d9343aa8d2a8",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "e96eb60b-69b0-4800-8ac5-162ffdd82027"
        },
        "item": {
          "id": "80e7d6a5-f623-4251-a385-bf830c465e47",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "983c2edd-b450-433f-a995-d6f08be6b2e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae161592-789e-435d-91ee-de98818ad625",
        "cursor": {
          "ref": "4978d80f-5b93-423b-a722-85b729030e30",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "289599c2-9c32-47d8-94be-d759cbcea1a1"
        },
        "item": {
          "id": "ae161592-789e-435d-91ee-de98818ad625",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "d0c6e88d-0cc4-4695-b37e-fc6592609b72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d11288d-606c-4bce-a164-49df3148f39e",
        "cursor": {
          "ref": "f9a009ad-d537-4215-8729-2959e9f9c18a",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "cc4a3d74-e817-465f-9ff6-d2b976401f01"
        },
        "item": {
          "id": "1d11288d-606c-4bce-a164-49df3148f39e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "e6e20a54-4fb6-4650-b85a-acc66789dbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9934a653-efcc-4427-b7ae-67cba0eac203",
        "cursor": {
          "ref": "08969bd3-5e4a-4f83-a093-a3d4beb656a4",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "a74c42d2-bb68-4afb-bc39-ee475aae45c1"
        },
        "item": {
          "id": "9934a653-efcc-4427-b7ae-67cba0eac203",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "bf1343de-d229-4e50-9690-6c12e0cf4742",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5afd1ad3-a88d-4f3c-ac61-00d540a7eeb5",
        "cursor": {
          "ref": "7d416249-8194-42f6-ab5e-80d0d317e244",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "9af39e7c-1887-43e8-a754-94002618540a"
        },
        "item": {
          "id": "5afd1ad3-a88d-4f3c-ac61-00d540a7eeb5",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "9d9dfd3b-85a6-45f2-933e-2ea188455334",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cab1a19f-6709-4963-b096-f26c7f719d43",
        "cursor": {
          "ref": "05431206-350b-4598-a917-6e4c4cb1f48c",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "f29ad541-81a9-4517-ac49-2cbedebdfbf6"
        },
        "item": {
          "id": "cab1a19f-6709-4963-b096-f26c7f719d43",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "02c37a61-de75-43ee-b978-987d4c4a7177",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2003a2f0-247c-4e47-82f0-1fec03082a4d",
        "cursor": {
          "ref": "0cd520b3-9ace-4a84-bd3e-7b09ae8379ac",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "5ae10d31-22b8-422b-9c37-7291320aad3d"
        },
        "item": {
          "id": "2003a2f0-247c-4e47-82f0-1fec03082a4d",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c76adaa5-bb19-4209-881f-920ee2aef97f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1052ffc6-46d3-4a43-9d1e-5a6bc024c745",
        "cursor": {
          "ref": "1e34543e-7363-4252-b2ba-c267532c12d4",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "85f4189e-3b14-4d7c-898d-65717b9da3e1"
        },
        "item": {
          "id": "1052ffc6-46d3-4a43-9d1e-5a6bc024c745",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "b225df57-7cb6-4737-8765-15358100ce8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a557616e-3d85-4049-8547-0ee1845d827c",
        "cursor": {
          "ref": "012dfa75-8803-4cad-89af-b1b30540e2d3",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "cba089cf-5500-4884-a161-ce1d0380c530"
        },
        "item": {
          "id": "a557616e-3d85-4049-8547-0ee1845d827c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "8d17cf18-2263-4901-896c-351452a95972",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20f5d60-ebe1-4922-88a3-cf507bf6b765",
        "cursor": {
          "ref": "1b0f2572-6bc7-4ca0-92d6-fb8206efa925",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "ca468077-a9e7-4ae3-9cad-ce5d47d5178e"
        },
        "item": {
          "id": "b20f5d60-ebe1-4922-88a3-cf507bf6b765",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "17438633-ecba-41cc-8c39-778f434b5c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc8cf650-4bb1-4e7c-983b-88f464f8f3fc",
        "cursor": {
          "ref": "851952fa-42c8-4979-adca-08d833a6bd5d",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ff835136-34c2-4a57-9842-1a0ea5191dca"
        },
        "item": {
          "id": "fc8cf650-4bb1-4e7c-983b-88f464f8f3fc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b488e40c-dc86-4bd3-9f3a-38cdbb49d167",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd6dffc-9f5c-419d-a510-2d43c96238da",
        "cursor": {
          "ref": "0c215e5a-c3b3-483d-8f5b-3e8107910c30",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "89e52e0a-093d-4918-bc45-4a5ac739268c"
        },
        "item": {
          "id": "5cd6dffc-9f5c-419d-a510-2d43c96238da",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bc80f712-73f6-43b4-b02d-2c2cab07cf00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dfcefb9-2d5a-44d5-9c52-9d39c0ea4d70",
        "cursor": {
          "ref": "1566622a-2c90-46b2-8b43-049b5b13b133",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "de7fbea2-7399-4c03-96a2-33f42fd22c78"
        },
        "item": {
          "id": "2dfcefb9-2d5a-44d5-9c52-9d39c0ea4d70",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "e7a4e125-e35b-4bab-a1b9-a809f97a0374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f2f061-6397-4760-bf0c-73521264f2d1",
        "cursor": {
          "ref": "34aaca13-e2ec-4e7f-950e-df5723f2ad64",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2ddd38b7-216d-46fc-8598-5520e717143d"
        },
        "item": {
          "id": "70f2f061-6397-4760-bf0c-73521264f2d1",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "a385408f-9f87-4401-9700-369ec718aa31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030c72cd-9dad-4754-8bbb-b491020e8708",
        "cursor": {
          "ref": "40f613ce-dc9e-4017-a702-10489e2816ac",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "0db660df-d711-4c06-bdd4-5f0e3dacd8c1"
        },
        "item": {
          "id": "030c72cd-9dad-4754-8bbb-b491020e8708",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "74f6f888-f3d6-423b-a148-be931e4f1fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba50af50-6b5e-461c-b886-4a660056edf3",
        "cursor": {
          "ref": "afb4ef66-da5d-460a-b7bf-d94f4ee9f30b",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "f52ebd7e-7d3f-45c1-b56e-2adb9c6572b5"
        },
        "item": {
          "id": "ba50af50-6b5e-461c-b886-4a660056edf3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "01585a34-bdb0-4fa3-83ce-b3cae838e00a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 2,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e779402b-31ea-43cc-8107-fd473b255626",
        "cursor": {
          "ref": "bedf7cd8-3b7a-4137-9022-f3f0cc316fb1",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "3c6f96b8-e2b8-44a9-81be-3c0dd48a1161"
        },
        "item": {
          "id": "e779402b-31ea-43cc-8107-fd473b255626",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "71ea4831-a9d8-40ac-b428-0f080101fed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5ed8d98-1680-46ae-b67d-da908fd443f3",
        "cursor": {
          "ref": "56ae0d5e-72f7-4c3d-8bcc-2fb38a988073",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "255b0fc3-9db1-4b22-ba5a-e85a36608562"
        },
        "item": {
          "id": "f5ed8d98-1680-46ae-b67d-da908fd443f3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "922d2d82-5baf-4361-bbf1-fd6dd13a5444",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 4,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc446f0e-ad17-4097-9b91-2b697d69b89f",
        "cursor": {
          "ref": "bf44d97e-769d-4343-99db-0ee8557f53ff",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "0cefe2da-d77e-4854-921d-bf9b4f35ca0c"
        },
        "item": {
          "id": "fc446f0e-ad17-4097-9b91-2b697d69b89f",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "866a2b6e-eb0c-42e2-be11-c38f33a2626b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 3,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d941675a-1bd7-4c35-b0de-194cb8ce23a0",
        "cursor": {
          "ref": "8f4afbbf-f4df-41f9-aedc-648c993dd3df",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "40db428b-d72c-4b6a-9799-f49833cfcbed"
        },
        "item": {
          "id": "d941675a-1bd7-4c35-b0de-194cb8ce23a0",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "93779b13-a44b-460a-8c17-bd7cbc3bbdf8",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 4,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "974ab368-bef5-499e-971c-d6fd942120f3",
        "cursor": {
          "ref": "a8f8c9c1-8362-49a1-806d-224fbfdd76aa",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "f04b8e83-b62b-4dfc-8d0b-a35d2ebefeeb"
        },
        "item": {
          "id": "974ab368-bef5-499e-971c-d6fd942120f3",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "d5dc644c-d8c1-4113-9f40-57adfa570ed9",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b8cfbd4-c814-4f32-bc36-4749757c3b0d",
        "cursor": {
          "ref": "4ad026f8-e2a1-4ab4-9d20-198b4f27a3e8",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "c6fcbc55-3809-4427-be6f-ce93eea3fe3d"
        },
        "item": {
          "id": "1b8cfbd4-c814-4f32-bc36-4749757c3b0d",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a7400e08-a0d3-4324-82fc-f7be26323c6e",
          "status": "OK",
          "code": 200,
          "responseTime": 19,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "79aca123-4f36-4383-a356-9ee339003a87",
        "cursor": {
          "ref": "eeeec10c-fedf-4dc9-bcba-16c52fb43d4d",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "955f0373-c7c4-4f94-801b-d37c07f5d61e"
        },
        "item": {
          "id": "79aca123-4f36-4383-a356-9ee339003a87",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "f8dd057a-7094-4cf5-9f61-f26111ab0795",
          "status": "OK",
          "code": 200,
          "responseTime": 18,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c3dfa-9e26-4334-9a62-0430a5b94d53",
        "cursor": {
          "ref": "788da6da-4959-435e-a03b-6b05e445b302",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0ff2ab17-a744-4230-9f1a-4f0a40e199c4"
        },
        "item": {
          "id": "ba9c3dfa-9e26-4334-9a62-0430a5b94d53",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98f24759-9dfd-4783-8f50-e5a6ca148d65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba9c3dfa-9e26-4334-9a62-0430a5b94d53",
        "cursor": {
          "ref": "788da6da-4959-435e-a03b-6b05e445b302",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "0ff2ab17-a744-4230-9f1a-4f0a40e199c4"
        },
        "item": {
          "id": "ba9c3dfa-9e26-4334-9a62-0430a5b94d53",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "98f24759-9dfd-4783-8f50-e5a6ca148d65",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 2,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdf7c308-5632-4b82-830d-04b9bed75512",
        "cursor": {
          "ref": "ddc93f43-66b3-4bbf-8196-3a6883983654",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "bd5009f8-147e-4d34-aeb5-ec34e6b6e055"
        },
        "item": {
          "id": "fdf7c308-5632-4b82-830d-04b9bed75512",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7e617df5-7557-41d4-b472-6b0bf0bd9cc9",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a0bc988-051b-4e49-9075-5d16cfcbc804",
        "cursor": {
          "ref": "17bfa61b-21a3-429f-8981-208ff756af30",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "9f9ccc69-e437-4bf3-9400-5255f05af2bd"
        },
        "item": {
          "id": "6a0bc988-051b-4e49-9075-5d16cfcbc804",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0ce43f1c-b5fc-4f63-ab89-b881f3cfd40a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 3,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}